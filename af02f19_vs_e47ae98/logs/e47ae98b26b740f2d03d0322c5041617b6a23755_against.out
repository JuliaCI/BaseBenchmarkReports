cset: moving following pidspec: 9934
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.998338619 seconds)
loading group "string"... done (took 0.513477801 seconds)
loading group "linalg"... done (took 9.487849607 seconds)
loading group "parallel"... done (took 0.172164897 seconds)
loading group "find"... done (took 4.117510792 seconds)
loading group "tuple"... done (took 2.102454734 seconds)
loading group "dates"... done (took 1.417662169 seconds)
loading group "micro"... done (took 0.200503099 seconds)
loading group "io"... done (took 0.52302183 seconds)
loading group "scalar"... done (took 58.46076509 seconds)
loading group "sparse"... done (took 14.150144685 seconds)
loading group "broadcast"... done (took 1.337217244 seconds)
loading group "union"... done (took 11.107469391 seconds)
loading group "simd"... done (took 3.843380634 seconds)
loading group "random"... done (took 14.465952593 seconds)
loading group "problem"... done (took 2.223778864 seconds)
loading group "array"... done (took 24.945540886 seconds)
loading group "misc"... done (took 1.163621631 seconds)
loading group "sort"... done (took 3.863065524 seconds)
loading group "collection"... done (took 22.840981018 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.7007483 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.147363266 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.206485672 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.207240745 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.27995719 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.168997046 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.156912087 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.170418825 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.687153699 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.208729176 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.139479607 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.419729247 seconds)
done (took 6.244806169 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.387013938 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.061085706 seconds)
    (2/2) benchmarking "String"...
    done (took 0.174274328 seconds)
  done (took 0.930487838 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.096329632 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.161185111 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.109997304 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.096077032 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.096291425 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.171705366 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.095639693 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.109697463 seconds)
  done (took 1.538148304 seconds)
done (took 3.653233234 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.504885609 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.949751533 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.514069321 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.181010314 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.312849143 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.314328903 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.271976585 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.2234028 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.094188599 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.089214814 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.178006202 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.427805282 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.402476829 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.964129173 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.069748564 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.111896539 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.139080087 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.784110246 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.081370695 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.112872172 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.551636805 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.214210918 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.116928368 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.107902597 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.189034268 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.136172396 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.141032027 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.102796891 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.663532582 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.134131145 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.218131567 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.084414415 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.141713871 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.16678157 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.225498203 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.113759553 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.66650418 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.20227009 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100086051 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.101501927 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.678557635 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.118715613 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.207224423 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.106315133 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.069179854 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.165462923 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.103070851 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.094848122 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.094546523 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.086114148 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.166282834 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.440333867 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.10814662 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.19238957 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.094723661 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.698708282 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.097355492 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.271913716 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.127721407 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.097389014 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.090822305 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.090997483 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.15844018 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.096096665 seconds)
  done (took 20.29285687 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.17411872 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.192603706 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.078525009 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.166035618 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.12995151 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.102634021 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.091871126 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.079684571 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.133472346 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.184144093 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.150839951 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.199775077 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.077928239 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.092556044 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.172703213 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.238256955 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.126176724 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.105015809 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.08979688 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.112431566 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.127311388 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.116770995 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.097136892 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.100128975 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.172777518 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.203303664 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.108160938 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.122567898 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.091676398 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.100440688 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.141831784 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.153115009 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.094837635 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.091526119 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.179031038 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.12682026 seconds)
  done (took 5.443717121 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.238343542 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.104173186 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.251130977 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.199820046 seconds)
    (5/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.200699537 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.134544145 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.203683236 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.178236947 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.306234994 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.266231209 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.164475762 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130616492 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.096370701 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080723063 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.08023976 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.096153941 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.823904795 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.171953785 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.165964058 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.16654875 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115088931 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.09785892 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.365410495 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101209578 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.086737842 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098003028 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.083290397 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.230983489 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098614709 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.492246719 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.083220318 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.1174092 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114661176 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.211298801 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.125827215 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.121598189 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.112515476 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.085632979 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.21741375 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.118624261 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.079045741 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.080333798 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132236178 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.117406123 seconds)
    (45/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.086586817 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.113562696 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.138239914 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.109753995 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.085233332 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.12872734 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.053732059 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.194716732 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.163228858 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.086851609 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.294959257 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.128448637 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102346942 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.111397346 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.779188197 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.136556828 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.086242333 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.102238279 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099838281 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.08102402 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.475583781 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.107389822 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.71634293 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.081668689 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.160207623 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096876905 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.118738875 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086205462 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100363345 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.111883276 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.08700522 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.094608627 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.087007472 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.080014945 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.106096581 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.113947852 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.085770896 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.100797005 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.080442003 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.146249266 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.11343228 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.110055039 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.123826209 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.090596546 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.085894057 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128287059 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083256856 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.105124828 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.168817449 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.116493824 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.113715882 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114278109 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142636551 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.088251478 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.083309009 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.263073525 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.083973342 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.127346178 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.104007201 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128363705 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.101926367 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083527539 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100117954 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.079019212 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.081391593 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.160476654 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.090235766 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.083892889 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.108286831 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.097108031 seconds)
  done (took 27.865897475 seconds)
done (took 54.29866897 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.415182317 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.083356452 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.081561828 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.104205476 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.082067145 seconds)
  done (took 1.538384232 seconds)
done (took 2.285538119 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.305302826 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.20409045 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088249403 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.191688811 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.08758142 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.196515311 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.183714435 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.101420599 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.207842282 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.085784642 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.193641396 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084703777 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.105366982 seconds)
  done (took 2.806977732 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.105260169 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.10621351 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.104809814 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.120920578 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086031303 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101372862 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.119261261 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108189104 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100383246 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.112522863 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.08538421 seconds)
  done (took 1.896191968 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.099829162 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.104663477 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.091585723 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.116672196 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085705738 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099599115 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.115738614 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107201637 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.099455943 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.114181179 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.0860509 seconds)
  done (took 1.868982677 seconds)
done (took 7.316834918 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.234111661 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.910025925 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.164981001 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.244905895 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.34380157 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.298639439 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.611061505 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.200840474 seconds)
  done (took 15.88781853 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.191284341 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.112099979 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.092845727 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.094873309 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.108807102 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.097264046 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.097347505 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.114361389 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.09209857 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.090812552 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.096056974 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.111718614 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.090764429 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.091759521 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.112165303 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.096258057 seconds)
  done (took 2.510213082 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.13563013 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.115522317 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.116207467 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.09831718 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.093783452 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.117835666 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.102065433 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.09753793 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.113247342 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.095499503 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.101886756 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.115246738 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.097725924 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.094080493 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.116739217 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.118403846 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.092773155 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.115386497 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.11670983 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.116514266 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.100134365 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096560134 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.114427049 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.10006865 seconds)
  done (took 3.421876605 seconds)
done (took 22.570890099 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.149178114 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.101416058 seconds)
  done (took 1.011069581 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.163736564 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.181712802 seconds)
  done (took 1.108176172 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.112406659 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.089039815 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.138173371 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.105139101 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.090666912 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.107167056 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.117295801 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.107224768 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.091717987 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.091923059 seconds)
  done (took 1.820797549 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.094301641 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.0942365 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.122426498 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.168535212 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.117416548 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.095019809 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.094533998 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.111844832 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.096753142 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.089980628 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.115910058 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.113657902 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.098214606 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.128084307 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.095588798 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.09543804 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.116999867 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.094323234 seconds)
  done (took 2.71230434 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.091620293 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.09227896 seconds)
  done (took 0.954474497 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.093673881 seconds)
    (2/7) benchmarking "second"...
    done (took 0.090190898 seconds)
    (3/7) benchmarking "month"...
    done (took 0.092468194 seconds)
    (4/7) benchmarking "year"...
    done (took 0.109278327 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.090542841 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.08892233 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.107778664 seconds)
  done (took 1.442864872 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.528970106 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.239253049 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.373776154 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.074906293 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.124645841 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.323119678 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.108067858 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072900599 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.092184192 seconds)
  done (took 2.742457902 seconds)
done (took 12.559797165 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.091432007 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.440662419 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.625528546 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.13250875 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.090295392 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.147134394 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.337026652 seconds)
done (took 2.636254224 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.351822496 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.164727714 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.084010667 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.091581443 seconds)
  done (took 1.464497458 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.082406158 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099875036 seconds)
  done (took 0.958863433 seconds)
done (took 3.202065908 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090355951 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.088360485 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.129177422 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.089132269 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.089612626 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.089044114 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.108018034 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.090696903 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.088800946 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.089640355 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.108413188 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.089063452 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088439662 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105915244 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089728149 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.207046451 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.088013802 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.106371491 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.089305107 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087751208 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.105967733 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.088791 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.087723157 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.087777715 seconds)
  done (took 3.191907665 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.11189041 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.091697754 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.110522147 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.094545763 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.092871092 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.110628266 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.094344749 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.091695221 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.111182264 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.092361544 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.094787113 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.109983684 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.092037909 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.094733542 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091709004 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.111396294 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.094025198 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091227093 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108627658 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.09473313 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.094014398 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10881475 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.094555756 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094356339 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.112591611 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097605023 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.091297192 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.1093182 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094964692 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.094891789 seconds)
  done (took 3.755281117 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.097571776 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.088342105 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.091178001 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.11509909 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.087644874 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.089528128 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.104697729 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.090658594 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.09299355 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.089016223 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.109494579 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.090823947 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.089664646 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.107776156 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.091664361 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.095240209 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.115733529 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.090458194 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.090181469 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.091737604 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.110163556 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.09004471 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.089845172 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.107741776 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.090315107 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.086881878 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.089531006 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.108647519 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.091354995 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.089884572 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.109568892 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.095801364 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.089980806 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.098713576 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.111658379 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.090539622 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.098056014 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.105899834 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.091934381 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.086426348 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.086422825 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.106664857 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.090551346 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.097052268 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.108569754 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.091451911 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.089284647 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.108338475 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.091507111 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.092797875 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.086746194 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.107078933 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.092326337 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.092548746 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.110404324 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.087631886 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.090903971 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.087293529 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.109801992 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.090751157 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.086865939 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.104007783 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.096243463 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.09200879 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.123331748 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.097213247 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.089487854 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.091174104 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.109060435 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.096803474 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.093066778 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.116532623 seconds)
  done (took 7.752231372 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.114828953 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.097810554 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.109762213 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.091094347 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090659667 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.089305429 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.114223106 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092074202 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090324126 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.115190207 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091307333 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.090759263 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109025461 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.092453682 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091673439 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.090918093 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.114463911 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091184412 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.08969298 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.109751894 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.095998378 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.098669351 seconds)
  done (took 2.955003167 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.240974633 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098429941 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.139654779 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.121091123 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109687654 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.123270358 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.095865333 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.095775659 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111681314 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100944102 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100524783 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112411382 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109981734 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09965824 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.117454147 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.101332861 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112157871 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.101003988 seconds)
  done (took 2.878849797 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.10481157 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.092035804 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.153654939 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.093170219 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.092399733 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.112322328 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099509835 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.111638532 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.111913765 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.093076513 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.099348985 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.109648493 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.095067954 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09229486 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110492936 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.0941859 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.093024719 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091503986 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.117941954 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100000354 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.11510428 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.100254246 seconds)
  done (took 3.07238694 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106709003 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.093077074 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.128739636 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.095551986 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.092469057 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.092240758 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.11565505 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.093689376 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.097854817 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.111291997 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092821455 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.091883113 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.125141783 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093193437 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.097170353 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.11161224 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.093771396 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.093080663 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113214941 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.092946185 seconds)
  done (took 2.823368935 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.194108307 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.130014998 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.112849467 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119597489 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.129904519 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.108208567 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.134403491 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.109449192 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109914589 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.137286936 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.108379448 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108019558 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.136029542 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114309531 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126061018 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118459847 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.116954541 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.135323591 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.108402802 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.12610032 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12274337 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10835049 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.135238107 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.108194062 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.106917258 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.127125131 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109224575 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.13099374 seconds)
  done (took 4.22721964 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091905106 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.090989388 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.090658693 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.108601377 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.091410809 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.090557939 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.089214529 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.108965237 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.092155179 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.090015454 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.109586443 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.092214161 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.090579775 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.090431786 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.109851442 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.091657098 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091759815 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.108227427 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091407314 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091224465 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.090376177 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108371273 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.091080951 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090551223 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108924587 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.091893018 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091425898 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.091056993 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110788982 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.092684711 seconds)
  done (took 3.672580406 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.104179513 seconds)
    (2/2) benchmarking "in"...
    done (took 0.101576654 seconds)
  done (took 1.003667288 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.100393566 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105878149 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.09146857 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.110240187 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.100103914 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.091517182 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.116952683 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098721631 seconds)
  done (took 1.614385913 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.166186131 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.189028074 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.096645638 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.122212804 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.169481762 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.180229923 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.130473298 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.116618569 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.091824749 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.085019819 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.183696433 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.082712008 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.11155786 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.091178081 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.092135415 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.118790202 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.094454806 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.101625965 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.117864715 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.096234577 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.096690927 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115672069 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.095306637 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.10185702 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.104820191 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.096078064 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.09595009 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.122754403 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091502791 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.094386866 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.107507627 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.093696537 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.09446908 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.095698199 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.112447617 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.169951188 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118857401 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089093188 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.09181368 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.117510233 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.125663018 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.093322063 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.114974497 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.09151915 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09515373 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.115176292 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.097858855 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.091216913 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.103779523 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.088248186 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.092517529 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.10577281 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.09283447 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092371968 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.110636269 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.101466036 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.093752432 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.108381666 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.089703303 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.089655968 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.091604694 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.107599167 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095155454 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.096230116 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.111831322 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.093655929 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091541205 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.111729997 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.096426875 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.09396316 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.110233283 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109521945 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.09346765 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.115805162 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.09916291 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.0953119 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.109430503 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.099287674 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09065863 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.113420875 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.098367976 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.120760249 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.113607544 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.089302052 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.089285945 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.116529543 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.096399456 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.096283221 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.085235624 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119589019 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.095326793 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.095383506 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.109471908 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.092541511 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088323742 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.113763893 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.087313116 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093211442 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.109686552 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.099196876 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.098406869 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.108858599 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.095709381 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.097140261 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.098436448 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.110911543 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.1563008 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.109534218 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.089347807 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.095189405 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.117993038 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.088257931 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.092041024 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.110552235 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091803714 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.089599482 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.115490599 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.094511083 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.093296102 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.096889137 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.113382233 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.095532257 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.094297803 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.110443878 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.090615057 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.097116531 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.120732907 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.09628495 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.094625368 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.112614887 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.095442677 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.093899557 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.115411981 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.093494219 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.098754493 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.08988945 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.112074827 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.094676286 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.097350326 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.11245216 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.08955239 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.091963561 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.113555168 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.094503651 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.095442842 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.112936366 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.090320254 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.085229388 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.112229886 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.089931698 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.093238749 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.120763169 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.089854208 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.095097387 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.088113883 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.119458741 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.090835864 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.098230068 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.115016035 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.100219849 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.097740221 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.104403814 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091172017 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.09552003 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.113381551 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.091715279 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.093123393 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.092394048 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.120347342 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.086750902 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.098013901 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.105228197 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.090762927 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.098366491 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.113255386 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.098327439 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.088433472 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.152304279 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.106345274 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099139894 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.112607643 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.093258907 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.097013975 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.111251377 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.098073754 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.098900544 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.098389137 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.111823383 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.091307855 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.097811643 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.109807432 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.096248346 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092493757 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113656171 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.087273263 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.093862105 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.104479184 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.099787803 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.095732698 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.115875118 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.099272808 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097544911 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.091650605 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.12212366 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.090178766 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.095988241 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.106658761 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.098754747 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.10352956 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.118430783 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100354928 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.094834244 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110323314 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.096299576 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102509058 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.115503848 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.095242298 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.096289119 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.086913966 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.106437462 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.100334129 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.095664466 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.111893077 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.094145854 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094879184 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.115398255 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.093866403 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.086655065 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.117493824 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.098357821 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.088845927 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.113417226 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.091033609 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.092575889 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.121630142 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.088985196 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.091239476 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.096400568 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.118527912 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.095384009 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.093493576 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.117233898 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.101652974 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.097372928 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.11566913 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.104023599 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100745313 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.110311111 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.093761342 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.09053616 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.09627231 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.106601885 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.095737503 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.093954335 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.111065521 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.091182067 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098420848 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.119501732 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.10052382 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092522591 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.119486609 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.101727593 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.0994786 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091811286 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.119044117 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.090407542 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.08696013 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.11092692 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.087010828 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.095029052 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.109673477 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.099600515 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.092564228 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.113468007 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.099051473 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096779504 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.11072998 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.101138336 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105526378 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.109037148 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.089608862 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092719934 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.112799601 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.092392889 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.090848269 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.095504917 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.118253261 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.098718757 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.105863052 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.111366065 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.094936261 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.099917165 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.110400561 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.101087115 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.100639612 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.120045637 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.092631076 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.09986273 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.109794156 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.100638418 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.087917193 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.093213768 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.115391296 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095282524 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.091054015 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.112962902 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.090608991 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.087621945 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.111564688 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.101161031 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.093005008 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.120400974 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.096653691 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.092493361 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.111382434 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.09261162 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.101082398 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.114189207 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.101746352 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.09514125 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.086867448 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.108755054 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.100919062 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093989684 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.121198677 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.091425178 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.097526138 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.121833467 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.099457173 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.094294093 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.10256855 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.123597572 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.100825844 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.099080273 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.108641261 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.092176695 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099511161 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.115837191 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.097465968 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.095844468 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.108405422 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.098032866 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.100084449 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.116457823 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.094332884 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.088237424 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.095694762 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.123067893 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.097515076 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.098999372 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.11898869 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.097560085 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.090344912 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.117299657 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.102278728 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.094516159 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.122304447 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095219786 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.098663171 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.111101949 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.102360803 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.096596422 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.088876097 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.110226305 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.092203484 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.100981554 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.110578336 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.100467473 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.099599549 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.112902168 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.09397122 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.099887141 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.091154741 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.12085642 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104342667 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.095024836 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.12761138 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.097167329 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.093283662 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.120718737 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.100456402 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.08924176 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.116427785 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.101101957 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.1075077 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.118120938 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.107369634 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.101278503 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103590244 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.118654436 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.101063834 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.100160826 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.121505992 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.090603379 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.101159914 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.122447692 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.104425805 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.096812136 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.113385865 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.091129815 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.094164588 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.100499493 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.115216645 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104653529 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.10154438 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.114507124 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.092777143 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.100211993 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.117266152 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103118345 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.091543282 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.119125412 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.090071406 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.098445291 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.115918533 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.102965649 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.091909585 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.089648574 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.123229633 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.100380123 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099434071 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.119945894 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.101646401 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.088418665 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.110712512 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.097624216 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.092633403 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.12710168 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.105447387 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.094785993 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.114486552 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.09877299 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.096990354 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10139023 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.11124653 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.094436162 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.096094554 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.119282168 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.094735076 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.090553528 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.121994809 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.093998731 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096838544 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.115951873 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.091203148 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.093838098 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.124995751 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.096518755 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.09121306 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.091863302 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.125270277 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.095919924 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.092186311 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.112657659 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.105907516 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.097835572 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.123255698 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.092807177 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.096012002 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.116084264 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.101459839 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.102502659 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.117275813 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.100073912 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.094397047 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.123122502 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.108951954 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.091497315 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.093127018 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.127257399 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100680391 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.096838964 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.121313676 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.094513008 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103786744 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.127944114 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.10061271 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.089864311 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.109763016 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.095235139 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.089857036 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.118758337 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.10233958 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.097581581 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.093175415 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.1240167 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099632936 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.09739846 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.121626719 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.091318229 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.101876146 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.11452711 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.101387997 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.08856619 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.110802741 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.099417184 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100875544 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093957235 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.12035561 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.098842315 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.097699785 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.112812087 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.093824021 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.098563779 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.122889067 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.103591879 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.098797951 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.11564551 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.100987303 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106041881 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.096553211 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.119545536 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.104894526 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.101792217 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.119902468 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.095472974 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.098328181 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.127387963 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.099995167 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.101737005 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.116096 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.097209188 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.102400631 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.124489014 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.1059171 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093136591 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.110864049 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.102067888 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.094494695 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.111257338 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.10168182 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10377114 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.101638563 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.120701496 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.093297189 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103726051 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.123274441 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096361452 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.093657255 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.114543333 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.100581123 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.092651266 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.123143373 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.094024274 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.102711755 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.124079692 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102647774 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.103968726 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.089576639 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.124937964 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.097379934 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.102708447 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.120879649 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.091048444 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.089659737 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.120792107 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.10398091 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.101144746 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.122447932 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.102182625 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.100086753 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.096591938 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.119935073 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.098296587 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.10553798 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.124494967 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.099006357 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.097414243 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.116759017 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.098138937 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.096369352 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.121413772 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.103417619 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.096624156 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.126316482 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.104183133 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.094185484 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.093476649 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.124553441 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.101803164 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.09597852 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.123199753 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.09413154 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.091450335 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.121523256 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.10400975 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094716862 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.125769028 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.105489559 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.093940382 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.098725603 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.12691914 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.102280444 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.096687677 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.121196661 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.10031234 seconds)
  done (took 62.476501367 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.144608435 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.104336589 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.121002026 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.09801335 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116278229 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121908042 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099587367 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098338027 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.12107454 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108689467 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.097673427 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120134063 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116977215 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.120035112 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.139540326 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.108363441 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121264529 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.102664963 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.099225003 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099207746 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.135242835 seconds)
  done (took 3.245261796 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.116392424 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.113391229 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.132925091 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.112579603 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10429985 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.132202168 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.108736919 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.130588801 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.113403935 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10539539 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.136524673 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109302548 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.12743806 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.107083113 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10733831 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.129307835 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.113217606 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104591821 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.134218905 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.111101218 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.127671377 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.110190901 seconds)
  done (took 3.437013475 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.128421251 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.101052468 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.096368199 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.119918335 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.102769184 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.10306693 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.126245146 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.100729637 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.106612071 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.09378021 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.110395965 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.094763102 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.096731587 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.118368477 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.093196924 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.099128193 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.128497317 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.1038326 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.102879051 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.098648948 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.111192823 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.099388953 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.099157275 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.109100439 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.105265236 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.104228344 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.099608648 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.124638064 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.090730117 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.102007951 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.11906703 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.093681019 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.088977774 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.109742379 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.091595398 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.100949441 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.101503281 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.120296579 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.099213911 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.09004384 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.120926814 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.105927428 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.089960942 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.09903679 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.121065828 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.093173933 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.101608088 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.118742702 seconds)
  done (took 5.89082358 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.1297164 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.157766475 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.104837394 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.127528149 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.136501045 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.108676792 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.102862382 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.131110953 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.100464169 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.123964971 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.116224812 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.112778454 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.126864374 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.10659662 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.104757692 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.127711222 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.106032858 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101682131 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.129287349 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.102838723 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.106433847 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.127663072 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.114469864 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.133952408 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.106358359 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102482443 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.122529948 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.107525947 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.111862399 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.129365875 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.107488696 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107337983 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.135483484 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.103956168 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.102597544 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.126144846 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.371059066 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.112594164 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.127862121 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.102047841 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.102140985 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.127771751 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.104365469 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.13558617 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.106359138 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.104229902 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103121637 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.121877081 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.111434196 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.124451134 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.111471656 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.114069817 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.127672714 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.103902368 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.106265526 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.135706455 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.103277977 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.101569475 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.127015129 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.110761897 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.09959339 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.12642516 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.114286211 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.102701354 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.130042346 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.113007091 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.125794715 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.105511578 seconds)
  done (took 9.103441651 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.132629429 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.106506825 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.137498851 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114297804 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.105711399 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.128514619 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.105880624 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.106097474 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.129225587 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112173174 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.129484805 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.223516183 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.125892932 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.111960727 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.106016154 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.130785284 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.106929455 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.129672396 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.106596061 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107186654 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.128592427 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.11467015 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.105670703 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.139775623 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.11885969 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.101757491 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.127846995 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.105177336 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.136858643 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.10781481 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.117788915 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.128215918 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.110389592 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.114205607 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.13976982 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.10668302 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.123943955 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.108711758 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.107012522 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.129155165 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.104567771 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.11452238 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.129441481 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.104173904 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106988941 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.130010346 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.118416495 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.145135237 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114644628 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.112574027 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.131442248 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.116391442 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.107391348 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.129847942 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.114902114 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.144068083 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.116345741 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.115461576 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.130565125 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.115307622 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.139027565 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.124061905 seconds)
  done (took 8.358473945 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100974685 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099112368 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.099852139 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.122113633 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.102630439 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098610314 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.098438486 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.121227116 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.10051667 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.099921724 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.121274922 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100164081 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099682501 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099279828 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.120546164 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100586024 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099135591 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.120121054 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101052293 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099549094 seconds)
  done (took 2.972709212 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.110967431 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.116711045 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.125993444 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.111296172 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.101926056 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.130857918 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.104168926 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10237093 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102224469 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.124849439 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110941864 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.131741254 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10326739 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107501609 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.134428592 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108736049 seconds)
  done (took 2.694463482 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.119407828 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.118428961 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.210535101 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.104904573 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.125776672 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.109673544 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.101542715 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.126373106 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.101329276 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.106498206 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.129092713 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.106698209 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.103027116 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.112974295 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.126092258 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.106130265 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101429481 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.127405967 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.104275815 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.218322285 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.105655148 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.104704645 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.127276699 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.106144924 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.103352755 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.130160308 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.109168222 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102057377 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.125532268 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.1037106 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.105204302 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.131071415 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.104393946 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.1071543 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.124305703 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.106460501 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.10246144 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.102673179 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.130228828 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.10353728 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.105332013 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.129114049 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.10358062 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.105048879 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.121738434 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.105382998 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101090156 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.12845013 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.104171288 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.103790288 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.102556437 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.130304069 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.10640073 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.109834983 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.132564812 seconds)
  done (took 7.255965846 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.115759961 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.105225479 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.136919883 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.101504649 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.10442781 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.104065694 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.127644171 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.105054171 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104226647 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.12539871 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106053584 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.104368725 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.127373185 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.106363652 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.103457764 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.128725069 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.103767529 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.104205912 seconds)
  done (took 2.885376455 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.108778497 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.102173764 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.107357886 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.126665421 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.102700838 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.103150222 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.125169416 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.102894215 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102303168 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.102743892 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.127601637 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.104000627 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101833667 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.132372708 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104085675 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10275232 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.126471462 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101235073 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.102572146 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101901345 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.127199176 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.1013544 seconds)
  done (took 3.294226307 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.115422742 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.21307668 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.110252595 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.223724508 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.100339267 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.122677062 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.11069104 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.100042673 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.140426003 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.099867059 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.099385243 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.12071266 seconds)
  done (took 2.434804866 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131040843 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140836618 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.127438242 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105199896 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112974743 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130393972 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108338576 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107313842 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141320518 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120280187 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130210906 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11715966 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116859514 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139322557 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112873571 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136028286 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109050971 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109476452 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125450345 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123497737 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107690886 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139534959 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107601911 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108314763 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130314442 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116343354 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139574314 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120129637 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108660913 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.140053346 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113299964 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130440024 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117725319 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121001062 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128243697 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117040058 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108097223 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14540443 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11307782 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140521021 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105606613 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113795296 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137726626 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114718986 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139507186 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108317154 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114857652 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13723479 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108958748 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129050638 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137776645 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117688401 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135766338 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117675863 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116373281 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.151910609 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119027179 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139759055 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112739088 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.143629162 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117683534 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112348835 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138514114 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120134729 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137949925 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117295958 seconds)
  done (took 9.02178187 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.144838941 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105038903 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131318169 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121017287 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137420747 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109873943 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107932585 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129899708 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110736488 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104618039 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.172817032 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108750346 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116894576 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.138826762 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108842827 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131281968 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108926736 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116701216 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128609406 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130067043 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132616735 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118648443 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115758598 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140925481 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121120881 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135077218 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109216987 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109761591 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129936819 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108547675 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114235584 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132192365 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116280397 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105117632 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139145042 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109296251 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108358836 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137386352 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108203689 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134619506 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117389109 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123521408 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132178754 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110119583 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141782445 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11132616 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108343042 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127222562 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108685051 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105084187 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.143935219 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119945835 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.142856207 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116671212 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110481193 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137075331 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109797237 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108407404 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132438767 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115987391 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11609371 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132399479 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13068257 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133432903 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109990428 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115921912 seconds)
  done (took 8.940060813 seconds)
done (took 169.734407088 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.174589665 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.216733348 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.195897162 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.157826268 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.093983538 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.152361591 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.12827006 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.197557036 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.095379507 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.094402374 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.094938036 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.120534873 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.162367256 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.09475402 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.119471183 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.098433109 seconds)
  done (took 3.077466302 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.196582418 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.346696089 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109940822 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.122070118 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.10183787 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.09938078 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.122513596 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.101413526 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.100276971 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.131002776 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.099693669 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.096205468 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.129735263 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.095766367 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.100079311 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.122233782 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.108089933 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.100843109 seconds)
  done (took 3.180494386 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.120187256 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.166830708 seconds)
  done (took 1.18478929 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.131971028 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.216966276 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.295525478 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.173054202 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.121069224 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.14296168 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.151306957 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.134353291 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.189880367 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.13700746 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.114908093 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097994595 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.148382172 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.106527232 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.137177583 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.099079538 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.128880538 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.138393938 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.11472299 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.101453422 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.145958181 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.104154222 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.105923769 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.136880172 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.182621318 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.137527946 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.103692235 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.103465607 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.124726658 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.115116136 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.106918732 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.139557736 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.113200648 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.180384993 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.103661491 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.17668567 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.106727429 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.12424177 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114065034 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.099642582 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.126739865 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.103604442 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.136088959 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.099545435 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.103901832 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.129635252 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.105878778 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.104985175 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.131150992 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.108694583 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.109040957 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.131373217 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.177334202 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.109132829 seconds)
  done (took 7.98267161 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.882942701 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.14702687 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.10016539 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.002117937 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.144540193 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113779184 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.874237256 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.148579178 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.256026998 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.897389072 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115475928 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.107550277 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.264232072 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.258843068 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.287463174 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.362468417 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.737040908 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.112014494 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.131136102 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.165093444 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.105928925 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.140833471 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.116316236 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.519831854 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.101303901 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.099303678 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.127391311 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.108993573 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.182013889 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.099689093 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.104334169 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.197446024 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.294884653 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.213931388 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.100947402 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.121903682 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100437222 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.187511574 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.278048807 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.230525713 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.172682191 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120431349 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.100260699 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.10612534 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.138743839 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.097536268 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.182474238 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.191116441 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.170382157 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.127993138 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.109358835 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.107543404 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.127498464 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.176731407 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.098534274 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.359647129 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.364893253 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.122863798 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107983545 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.112649544 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267383283 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.124643909 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.241554126 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.123003823 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.218485124 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.123653295 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.835687108 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.164982246 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.123567549 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.104731575 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.105554596 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.12980994 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.104412535 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.191018011 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.482061373 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.130637639 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.105101851 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099605244 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.235688215 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.123575886 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.102112271 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.180893219 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.101930149 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.106095509 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.132021273 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107829867 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.190938547 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.270439286 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.107902184 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.106605096 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.128074852 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.111687818 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.102144362 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.236777819 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.230857023 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.179414584 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.231317934 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.10581043 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.187559796 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.184711573 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.105330911 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.187354438 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.106637663 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.112766811 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12798113 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.228097466 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.156783285 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.103951953 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.106448275 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.128746439 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.138002593 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104163712 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.129960639 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.166172213 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.557651718 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.186479296 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.0966331 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.128087058 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107674989 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.181114936 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107424205 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267602636 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.129864186 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.164032309 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.12903965 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.098803442 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.107019838 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.181344624 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.108444875 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.130567437 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.10404703 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.110740525 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.280831185 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.224647638 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.133421867 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.255270794 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.176365781 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.128224238 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.170991649 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.130819179 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.188852365 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.112336299 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.104892856 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12481507 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.820323967 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.11257191 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.107223625 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.12852972 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.18610928 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122231178 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104620108 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.100686394 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.10227867 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.816840445 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.12850024 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.098844804 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.110355822 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.133282536 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.107035481 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.105927182 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.128807909 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.177862819 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.248479984 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110703932 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.127499569 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.101444627 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.181773196 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.103171392 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.101638837 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.101085905 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.124522421 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.108557278 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.107049859 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.126846468 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.190786715 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.156347728 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.233488383 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.638380011 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.125813339 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.101304408 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.244008259 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.123828475 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.330295607 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107362872 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.239561363 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.184431461 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.09821428 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.362010652 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.188276251 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.209791122 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.10378337 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.191852663 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.09913143 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.1070011 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.180590763 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.124181127 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.108496075 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.178074355 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.111765606 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.107913692 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.301293201 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.102672119 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.252031187 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.099454528 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.18910025 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.102838314 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106021993 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.352935676 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.102124164 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.111663422 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.184983332 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.111040735 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.12441406 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.679324202 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.103590191 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.110716486 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.127976698 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.239993806 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.185339302 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.108990247 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.10757788 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.131807326 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.15764866 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.232315258 seconds)
  done (took 47.823184126 seconds)
done (took 64.140110149 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.267527985 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.171403747 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.376431694 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.15218324 seconds)
  done (took 1.957048336 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.294488571 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.14630437 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.252853662 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.101523538 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.264995397 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.097809151 seconds)
  done (took 2.080920445 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.179636692 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.169052656 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.147870882 seconds)
  done (took 1.425052181 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.212494885 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.210167324 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.345118219 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.25930771 seconds)
  done (took 2.040165211 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.285671513 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.11709169 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.125299481 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.236744897 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.254209844 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.21212225 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.124727015 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.176939412 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.129952901 seconds)
  done (took 2.625396515 seconds)
done (took 11.049957116 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.429896658 seconds)
    (2/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.260514659 seconds)
    (3/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.248473558 seconds)
    (4/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.401570778 seconds)
    (5/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.11093266 seconds)
    (6/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.354367733 seconds)
    (7/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.159634678 seconds)
    (8/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.18926925 seconds)
    (9/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.203476603 seconds)
    (10/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.279814924 seconds)
    (11/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.150884085 seconds)
    (12/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.211221865 seconds)
    (13/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.146715453 seconds)
    (14/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.143593817 seconds)
    (15/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.298477231 seconds)
    (16/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.079107258 seconds)
    (17/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.123664963 seconds)
    (18/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.184536766 seconds)
    (19/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.143937747 seconds)
    (20/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.238807733 seconds)
    (21/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.112814315 seconds)
    (22/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.253732115 seconds)
    (23/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.158526255 seconds)
    (24/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.403177333 seconds)
    (25/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.188707171 seconds)
    (26/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.139038376 seconds)
    (27/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.217481571 seconds)
    (28/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.321599974 seconds)
    (29/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.231975572 seconds)
    (30/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.173635873 seconds)
    (31/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.195278881 seconds)
    (32/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.25193482 seconds)
    (33/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.134086197 seconds)
    (34/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.151027625 seconds)
    (35/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.11218593 seconds)
    (36/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.08624241 seconds)
    (37/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.133395241 seconds)
    (38/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.110583015 seconds)
    (39/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.085831009 seconds)
    (40/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.109646284 seconds)
    (41/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.125316633 seconds)
    (42/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.10850872 seconds)
    (43/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.102096145 seconds)
    (44/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.197809352 seconds)
    (45/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.132102701 seconds)
    (46/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.103675009 seconds)
    (47/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.192053574 seconds)
    (48/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.176766042 seconds)
    (49/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.11126503 seconds)
    (50/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.147399083 seconds)
    (51/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.111618098 seconds)
    (52/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.131893061 seconds)
    (53/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.105441185 seconds)
    (54/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.172438229 seconds)
    (55/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.110685459 seconds)
    (56/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.167994898 seconds)
    (57/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.174896473 seconds)
    (58/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.219835403 seconds)
    (59/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.20658932 seconds)
    (60/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.163460835 seconds)
    (61/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.150528025 seconds)
    (62/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.10333147 seconds)
    (63/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.155423236 seconds)
    (64/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.086908051 seconds)
    (65/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.079215413 seconds)
    (66/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.103900448 seconds)
    (67/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.218223126 seconds)
    (68/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.08479424 seconds)
    (69/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.084711149 seconds)
    (70/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.102807748 seconds)
    (71/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.26630637 seconds)
    (72/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.113530398 seconds)
    (73/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.1038869 seconds)
    (74/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.109544305 seconds)
    (75/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.143817031 seconds)
    (76/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.086155615 seconds)
    (77/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.132425172 seconds)
    (78/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.13131596 seconds)
    (79/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.194085238 seconds)
    (80/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.10665526 seconds)
    (81/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.145108632 seconds)
    (82/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.11903462 seconds)
    (83/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.11208213 seconds)
    (84/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.133947344 seconds)
    (85/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.103287528 seconds)
    (86/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.125363456 seconds)
    (87/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.111150937 seconds)
    (88/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.106108572 seconds)
    (89/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.103028481 seconds)
    (90/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.146613592 seconds)
    (91/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.380892468 seconds)
    (92/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.104397323 seconds)
    (93/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.106501804 seconds)
    (94/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.149859002 seconds)
    (95/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.080494745 seconds)
    (96/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.178746212 seconds)
    (97/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.115758313 seconds)
    (98/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.081288807 seconds)
    (99/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.180438448 seconds)
    (100/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.079307567 seconds)
    (101/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.127478094 seconds)
    (102/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.111381035 seconds)
    (103/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.113930432 seconds)
    (104/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.082040422 seconds)
    (105/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.128036535 seconds)
    (106/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.101032175 seconds)
    (107/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.127782489 seconds)
    (108/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.110063131 seconds)
    (109/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.153698155 seconds)
    (110/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.166338306 seconds)
    (111/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.185357202 seconds)
    (112/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.185392379 seconds)
    (113/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.078835032 seconds)
    (114/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.155227028 seconds)
    (115/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.111892386 seconds)
    (116/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.086456199 seconds)
    (117/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.08789662 seconds)
    (118/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.157568079 seconds)
    (119/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.104793993 seconds)
    (120/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.078625373 seconds)
    (121/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.120630448 seconds)
    (122/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.115752618 seconds)
    (123/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.180192686 seconds)
    (124/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.082548542 seconds)
    (125/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.129860898 seconds)
    (126/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.114787212 seconds)
    (127/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.229633991 seconds)
    (128/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.111552134 seconds)
    (129/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.125100164 seconds)
    (130/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.123232959 seconds)
    (131/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.102914998 seconds)
    (132/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.081116976 seconds)
    (133/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.104785946 seconds)
    (134/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.103815562 seconds)
    (135/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.102604313 seconds)
    (136/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.102680798 seconds)
    (137/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.079541283 seconds)
    (138/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.136160781 seconds)
    (139/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.136334732 seconds)
    (140/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.08321305 seconds)
    (141/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.193287066 seconds)
    (142/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.112558293 seconds)
    (143/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.083621655 seconds)
    (144/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.107555144 seconds)
    (145/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.134293695 seconds)
    (146/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.136109812 seconds)
    (147/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.086990758 seconds)
    (148/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.104234417 seconds)
    (149/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.078749455 seconds)
    (150/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.135538498 seconds)
    (151/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.110148573 seconds)
    (152/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.13548253 seconds)
    (153/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.086393293 seconds)
    (154/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.105374671 seconds)
    (155/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.087028188 seconds)
    (156/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.100747358 seconds)
    (157/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.146418639 seconds)
    (158/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.10543427 seconds)
    (159/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.101216634 seconds)
    (160/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.079672751 seconds)
    (161/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.106740812 seconds)
    (162/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.111048722 seconds)
    (163/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.087096348 seconds)
    (164/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.080772739 seconds)
    (165/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.082600592 seconds)
    (166/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.109568976 seconds)
    (167/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.083868665 seconds)
    (168/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.125333829 seconds)
    (169/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.080715834 seconds)
    (170/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.079196748 seconds)
    (171/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.106867007 seconds)
    (172/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.086756082 seconds)
    (173/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.103604241 seconds)
    (174/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.079520165 seconds)
    (175/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.10431694 seconds)
    (176/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.081069825 seconds)
    (177/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.082961693 seconds)
    (178/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.11173544 seconds)
    (179/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.130553458 seconds)
    (180/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.087262231 seconds)
    (181/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.082623437 seconds)
    (182/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.122907186 seconds)
    (183/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.104278085 seconds)
    (184/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.080719751 seconds)
    (185/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.103291993 seconds)
    (186/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.101555753 seconds)
    (187/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.110042071 seconds)
    (188/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.114363322 seconds)
    (189/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.082990037 seconds)
    (190/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.104691542 seconds)
    (191/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.107905539 seconds)
    (192/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.110877385 seconds)
  done (took 27.436217834 seconds)
done (took 28.368121613 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.225841442 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.13177519 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.112026591 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.110833684 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.232666854 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.118966141 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.153676664 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.114790189 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.120584698 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.136648736 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.101665362 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124411672 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.136155806 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.205931044 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.139831377 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.103923223 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.103413399 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.146613203 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.128003346 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.127974964 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.233810662 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.104183372 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.148209139 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.103554678 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.234700338 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.104223153 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.110575966 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.138698963 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.124892336 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.111417814 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.138182008 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.103802199 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.127509737 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.151500708 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.105152386 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.111887603 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102363018 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.110892556 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.113935811 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.113208327 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.150463936 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.113871021 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.11120903 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.129354135 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.11473844 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.110648813 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.126614941 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.117976076 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.101661066 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.136679726 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.108085075 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.127000191 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.10952237 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.125468865 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.103158294 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.102791831 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.14664928 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.103707456 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.123605395 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.126440592 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.104795094 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.102584004 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.137011754 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.103932654 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.111028021 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.101354259 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.137685961 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.113766106 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110464797 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.128923662 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.104902785 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.110729896 seconds)
done (took 10.089739664 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.10890798 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.14818173 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.234249994 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.236768046 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.131160969 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.145755249 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.117876229 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.126003746 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.141633562 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.122903501 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.139552799 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.160893822 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.238116278 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.120333278 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.119396302 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.141241601 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.114904764 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.112062576 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.236907055 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.131784624 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.155401698 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.120104367 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.156379193 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.12261522 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.106782509 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.157106681 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112240605 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.115542315 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.131436161 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.126439752 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.127773788 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.133083003 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.111068778 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.125640597 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.149557191 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.117563008 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.118761607 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.139894914 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.109188411 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.107283257 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.141811863 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.122769395 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.106622584 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.146755338 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.115525595 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.14631604 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.116832289 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.120452106 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.10802678 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.140232483 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.108611502 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.132959914 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.144623278 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.123234932 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.144180466 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.12276485 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.120063448 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.118643499 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.137730786 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.119057922 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.106717693 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.131713499 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.109736969 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.154433493 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.112356612 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.120019859 seconds)
  done (took 9.804212243 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.12671593 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.136911861 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.143195139 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.11755576 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112103601 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.125991828 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.102131984 seconds)
  done (took 1.840064694 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.104294835 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.243364313 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.217641877 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.243491061 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.2430509 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.25558874 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.12681246 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.101662125 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.165530522 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.114223166 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.246637848 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.273258921 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.11328072 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.118416722 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.250401638 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.130209556 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.222232937 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.130255569 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.11943825 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.249689138 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120262736 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.160219731 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.118771309 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.102917121 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.241406675 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.104446291 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.293031886 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.149549182 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114445885 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.116631456 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.143008603 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.186227582 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.242135849 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.117866483 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.13701784 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.216953478 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.242683341 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.117792686 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.257353251 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.136441888 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.215306498 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.145929731 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.120124062 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.118156692 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.146002062 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.20499722 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.151110229 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.122036462 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.117107649 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.251206311 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.141076472 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.215706667 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.143564106 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.117621452 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.114753543 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.147361749 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.125389646 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.119189393 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.251612278 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.120840746 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.244913161 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.245493269 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.243458193 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.245490518 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128796429 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.246698028 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.214555167 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.144869696 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.113364123 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.119056928 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.247954241 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.14401809 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.117600537 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.239492665 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.121668183 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.252900561 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.248827233 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117814733 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.117336038 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.133225095 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.119065649 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.103868421 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.239989056 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11690156 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.114382435 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.150760114 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117697501 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.147152352 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.111016447 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.128021149 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.145432996 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.118175461 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.123638403 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.143501649 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.122924118 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.251625411 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.11630017 seconds)
  done (took 17.114108657 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.106820405 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.105705738 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.109182586 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.131047021 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.106099766 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.106130569 seconds)
  done (took 1.66908783 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.144408646 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.119059466 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.15403616 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.12019404 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.16872876 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.25140742 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.259983256 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.11349996 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.167187746 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.131371798 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.254480872 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.256396582 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.25372613 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.123248434 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.262856139 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.12126501 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.262895674 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.11776726 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.126464718 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.143582226 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.119394227 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.148600409 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.118277167 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.245050463 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.12073619 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.120022979 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.139401533 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.127155727 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.125511135 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.141747224 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.122997173 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119356497 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.137256197 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.113058584 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.260362405 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.111723565 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.141482861 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.123210766 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.122050852 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.14669725 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.231356177 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.144120224 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.126096773 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.121779004 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.141465908 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.111487331 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.122156844 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.15989333 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.260798545 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.122657735 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.123384863 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.146884692 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.12171369 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.123157776 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.13901146 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.113980715 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.121658456 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.259004869 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.150380868 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.113748353 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.119953315 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.148458112 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.115568083 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.123723714 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.14734901 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.123304411 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.11245468 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.146508761 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.118464497 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.119483021 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.14707306 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.120603008 seconds)
  done (took 11.858047518 seconds)
done (took 43.253523016 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.581862959 seconds)
  done (took 2.579935184 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.139497789 seconds)
  done (took 2.138157944 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.558673922 seconds)
  done (took 19.590954253 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.444369811 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.478148198 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.169172603 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.149569871 seconds)
  done (took 3.240090318 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.851663944 seconds)
  done (took 1.880162843 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.346193437 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.257231636 seconds)
  done (took 1.61045491 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.723672884 seconds)
  done (took 1.745908811 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.565879795 seconds)
  done (took 2.570532792 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.294001167 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.24823018 seconds)
  done (took 1.56318998 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.646997723 seconds)
  done (took 1.664726123 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.223385321 seconds)
  done (took 20.24584353 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.262160725 seconds)
  done (took 1.289665041 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.293897893 seconds)
  done (took 1.320712659 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.62806352 seconds)
  done (took 4.652741627 seconds)
done (took 67.106130577 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.12036197 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.1232585 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.121434949 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.145909547 seconds)
  done (took 1.525457242 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.125989345 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.119981242 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.147727322 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.119436846 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.125376648 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.118892948 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.144525638 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.122589468 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.118338544 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.148198841 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.120498033 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.11772771 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.146924102 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.1188962 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.117813266 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.148347542 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.123635815 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.119625081 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.146193812 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.122070562 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.120411477 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.147633464 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.123335445 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.122528358 seconds)
  done (took 4.11359274 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.115428639 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.110506779 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.111748882 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.135216061 seconds)
  done (took 1.501677117 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.128139488 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.131978308 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.154767296 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.12756891 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.13227642 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.155413304 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.119995079 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.115799034 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.142745681 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.128570288 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.135146548 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.158754112 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.133749701 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.121604337 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.157070652 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.114696325 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.121008958 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.15671503 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.126618698 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.127864163 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.147400381 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.127731225 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.125039574 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.155471958 seconds)
  done (took 4.27107873 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.194073408 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.131105515 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.177615111 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.164606445 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.17963009 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.116853204 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.146946348 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.150439847 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.12669624 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.120289892 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.147456958 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.16449471 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.152844094 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.121080553 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.118918622 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.152025098 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.131364507 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.124275714 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.193301586 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.125109049 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.152468934 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.129661727 seconds)
  done (took 4.250531335 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.123374155 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.109814562 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.132815352 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.107888074 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.12075176 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.137384828 seconds)
  done (took 1.769479911 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.109177014 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.103255315 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.104395924 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.129231476 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.107354578 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.10378074 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.102337048 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.131071752 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.104063232 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.103179351 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.129187171 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.103179932 seconds)
  done (took 2.361335338 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208044833 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146074068 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257383185 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.399241928 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18968109 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162892839 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.31621917 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192290262 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.18034751 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166407038 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213947387 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164969422 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182876351 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188836396 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167703453 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.159881327 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194384005 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211112117 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17038499 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.242981977 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159129646 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201337962 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.190093473 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178679035 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140818571 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191355903 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.120035763 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128657961 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197783353 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19462306 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178573988 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17801474 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141926461 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221453297 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263310672 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205009626 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270505393 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133889606 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.201694123 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.189777243 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.266170456 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168174818 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19470189 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182128249 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128311305 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214546651 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15462885 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.216421537 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.133177918 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172155137 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21687973 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184135666 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.199724737 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137785959 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.32841215 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161323712 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.143766317 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204014652 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191670819 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23057724 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207758243 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.124626852 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.200110474 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191046837 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24251235 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.170011549 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.174072004 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154682926 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167483238 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.233981448 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183112641 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189135024 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.240048587 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132458471 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201864643 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.196115593 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157894678 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238932063 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171929234 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.148787243 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152801459 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16173855 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1274078 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.188141827 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14999782 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244342994 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135793898 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.348615497 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179749572 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18466995 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.190688215 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162606001 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191474053 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149235554 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.103232161 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172512839 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.160484775 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188412226 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129147205 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186770015 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141023767 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.125413459 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181999157 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.122225107 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198868786 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.136057037 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194668149 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173021333 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.15903552 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178630062 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176588802 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.161711055 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198577493 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222539859 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131371767 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131134336 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247742571 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199528446 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.136980293 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.202210408 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.198291261 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.178824562 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13479146 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200676181 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222167819 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144694416 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227809646 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138550963 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162597058 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.144409882 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201508878 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161470963 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.189159479 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128741457 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.192712493 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192892819 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.1552584 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140643637 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211488461 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133510113 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123594831 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165397006 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138315433 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.170280601 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.14865622 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.166954881 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155945286 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195769293 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16693584 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186580385 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135062427 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20339349 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132378727 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.198151105 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151345608 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.119431703 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.20513666 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225617588 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129692205 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210351373 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.163069847 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211382606 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200562282 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129537816 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.211929331 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128661441 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.120800639 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192748663 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169759065 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.194391232 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.217306936 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206639843 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.16696799 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.192077434 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150487508 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200311478 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.185188974 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184726126 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.143034555 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.204051484 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199102428 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.128252259 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.124928103 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.155978634 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138768137 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129836304 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165511175 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183370142 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19433117 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.204901873 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168235336 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167077235 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189886164 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.153650587 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160780663 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.204746859 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138732363 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.217686519 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218225004 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179981597 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168718348 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165490236 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.147927765 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128087594 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.134263667 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.189448366 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138312899 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164186208 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141859539 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.21938633 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173877182 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17793754 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217874465 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170024346 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.228022404 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.120643902 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.190799757 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169234249 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198129555 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.186511239 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159994871 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.162589023 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.220973776 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142728549 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224895891 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197175274 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182546696 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22677606 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.164278488 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159642596 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149427893 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190700456 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13909843 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.191526423 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14631076 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130777517 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181659089 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.139383941 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169576896 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223144371 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145743082 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210077529 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.157168743 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202721339 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126139323 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17206716 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175422284 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173614847 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.105488935 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199973578 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197725817 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179656517 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156721614 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203400339 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130249626 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.346295501 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190456829 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20704614 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136346804 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170074478 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172025333 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.189206641 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194232164 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.185582137 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169952459 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208484681 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.202318536 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.142247932 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158898976 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149704847 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180213771 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.14279803 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.181749752 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.163220497 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.172923231 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189997802 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167353355 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171284317 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207095938 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.145023818 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.179252505 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139724023 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25643019 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196620216 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174318724 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.192467301 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.166509533 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213257344 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124139058 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125817828 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.162375364 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.187366117 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159406087 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178995088 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.194961788 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216521754 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20556639 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163876184 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140201379 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.15743118 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169055359 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178740335 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212368814 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136697476 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.138708457 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218100636 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.12937855 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160454191 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160415203 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.319679726 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151382266 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201497122 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.107672136 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.31085004 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132703309 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161201628 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161237669 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19963823 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.132806699 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.210835726 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175267568 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169608354 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16271397 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136342753 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.206968355 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211683991 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194909837 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178397009 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.17612355 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164006554 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193178368 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174598483 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175803689 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.148468408 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188092312 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195186356 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.206005463 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.131441783 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19779276 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168560284 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.199825247 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205806668 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140112758 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212082476 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128521473 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166613243 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167223668 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124585471 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189801711 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.194376863 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13068968 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20248723 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177937847 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133136981 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156280748 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150155364 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195382755 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141787683 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.158437726 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188495114 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.159065189 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18291394 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24309585 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129780136 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.197488654 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147093755 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159650058 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139847266 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171478371 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133132946 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.175735951 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210464445 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.131330628 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20910729 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165927426 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194977544 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189065113 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145300903 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.263915769 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.16054771 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19118055 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.181964435 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227655453 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151455255 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204965041 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170638456 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180663878 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166336737 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178952639 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.219518759 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195791955 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.166866586 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161431522 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145585378 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138970957 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.164651346 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153401453 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198751205 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142342527 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.165633309 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.169215444 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175323817 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.149305027 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142112142 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229276328 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.18129219 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190138816 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.217228814 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137915026 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208642811 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214881561 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129064195 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.194359301 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173752683 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172015326 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153252157 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.135219237 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.167159176 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243466208 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.125941555 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161237223 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202468787 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167917011 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20229871 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.135087171 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208800355 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141464484 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207462646 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127787396 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.182431399 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170950228 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164723976 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.129340918 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.200091302 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163781054 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.194053545 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144118345 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.179121751 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222481837 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.124427595 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163668121 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.289572185 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190014297 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226036991 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.138084859 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137034647 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177156774 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160262302 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.199907475 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1714812 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.161153355 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129893025 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.17612259 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.159843671 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.171628592 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170712521 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211580352 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162233471 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215406059 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.134916172 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.282293029 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144077933 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.200742564 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.11840309 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.128692568 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170285609 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136300903 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146763606 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.214307391 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246563473 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.191414108 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.150195647 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135588941 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.156508038 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132426331 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192149843 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153744992 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19799909 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149573688 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.104695741 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169924981 seconds)
  done (took 86.218391845 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.201728491 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.160908378 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.170339595 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.22344648 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.19668427 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.292502252 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.229888767 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.248494129 seconds)
  done (took 2.838098047 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.122519251 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.160815295 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.142422385 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.145213494 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.11009568 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.489927284 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.161247236 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.120477443 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.162331532 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.152661195 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.13715775 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.580080124 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.117790625 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.147620031 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.122229992 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.13606805 seconds)
  done (took 4.1150916 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.321922621 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.550243469 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.163512185 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.289897482 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.270632801 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.215105453 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.790958873 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.210756668 seconds)
  done (took 12.927435147 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.179446235 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.170649174 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.461339718 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.316068745 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.18419262 seconds)
  done (took 2.443657572 seconds)
done (took 129.352657348 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.129421795 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.125891285 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.124114944 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.156586124 seconds)
  done (took 1.64773486 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.19871505 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.093449938 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.094459592 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.1210037 seconds)
  done (took 1.629927175 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.476306517 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.092071265 seconds)
  done (took 1.72601675 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.152938559 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.14337125 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.1679723 seconds)
  done (took 1.608232082 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.141902959 seconds)
  done (took 1.271964492 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.123001706 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127292547 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.279629067 seconds)
  done (took 1.665627619 seconds)
done (took 10.684536881 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.124008194 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.926886883 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.434672529 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.134771036 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.71295042 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.428403387 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.427314404 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.178282424 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.17579996 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.139227053 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.132744449 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.691268801 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.439106577 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.880591706 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.396329722 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.910622903 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.696559727 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.113665222 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.147164365 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.112709194 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.406105496 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.138939992 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.112986515 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.113646396 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.722685598 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.421655476 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.110955141 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.924014637 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.112076684 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.115685525 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.428604374 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.111395595 seconds)
  done (took 21.039928683 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119517081 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.168653545 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.148162832 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.113137338 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.116530229 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.141249081 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.124607959 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.126123777 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.206173136 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.112398995 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.1621727 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.110827985 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.11738845 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.141759399 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.136652988 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.110310116 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.141416432 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.115273096 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120284991 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.11304458 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.163989869 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.110261607 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.112880281 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.142424858 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.111734018 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.133635866 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.140382578 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.124926595 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.112383488 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.145168478 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.117765171 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.11255703 seconds)
  done (took 5.32130564 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.163847768 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.179530404 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.150300638 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.150514734 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.191297682 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.113760698 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.228814982 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.151085678 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.210020902 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.111854414 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.134633026 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.139668169 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.153495289 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.112467571 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.167486022 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.111451951 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.114165784 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.143241693 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119758421 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.113505819 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.163233756 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.110630467 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.114424995 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.14258568 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.113166841 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.135100516 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.140143926 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.124830234 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.111618416 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.144954188 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.117465631 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.113794129 seconds)
  done (took 5.639364432 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.131475635 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.127153859 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.135453726 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.164303125 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.120760755 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125122153 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.155897172 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.120985918 seconds)
  done (took 2.228644578 seconds)
done (took 35.364513877 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.142561663 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.129226273 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.132512119 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.156652126 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.254431292 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.118948351 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.129316927 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.118121507 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.157008371 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.132420667 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.113689005 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.150554771 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.131394156 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.122640086 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.255656848 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.127819405 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.26198243 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.258457341 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.119370886 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.127167791 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.150437745 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.230334713 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.156022492 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.119841802 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.257902817 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.115366112 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.252757234 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.122718264 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.12286745 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.14142288 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.228610669 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.156045362 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.121102993 seconds)
  done (took 6.448670582 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.243627746 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.15328428 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.121192822 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.119819872 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.121424881 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.151053754 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.244853603 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.151750722 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.120102526 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.12221505 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.150011864 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.226747068 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.15813698 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.116040685 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.122262095 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.110876983 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.279722065 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.124174627 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.144484672 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.095891664 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.115604369 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.120069771 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.28895663 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.14648957 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.12093358 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.120058515 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.121852715 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.157072927 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.121737389 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.122613887 seconds)
  done (took 5.670019281 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.131584425 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.133497725 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.138648498 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.218816516 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.15046528 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.163635555 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.140524065 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.135689953 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.173259714 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.113698101 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.129758268 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.183354339 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.135446317 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.124058053 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.14387557 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.132542854 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.137093309 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.145515218 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.12320517 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.132272104 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.16619856 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.132925589 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.137939443 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.154763271 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.113062234 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.121943646 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.153775583 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.125217313 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.12269585 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.15868752 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.117224116 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.117601614 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.116711747 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.180434338 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.11620709 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.157259496 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.141674821 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.128227451 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.157873302 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.148269004 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.118484129 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.147017402 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.141792941 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.168932597 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.146680273 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.130200541 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.126072499 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.15945429 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.113098185 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.133124906 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.187357331 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.115249916 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.13558628 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.143739414 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.113500615 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.123694345 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.11339817 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.14817881 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.129951899 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.118002449 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.171393833 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.122262269 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.124991998 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.145257916 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.126000604 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.11250611 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.113237896 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.149403835 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.141598354 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.121713452 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.182303524 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.11369578 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.125568738 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.157020288 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.124691946 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127394421 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.14330175 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.12721457 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.125155767 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.151590973 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.127097957 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.117045475 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.14684914 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.132450206 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.135642949 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.159094904 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.126231949 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.127102526 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.147319654 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.117676271 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132335529 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.115365152 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.151139696 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.127227887 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.114972868 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.148333285 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.128257003 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.12571998 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.142596234 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.141836185 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.118273311 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.143265568 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.142260568 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.118619726 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.11991548 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.154798256 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.157306905 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.114287983 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.155812766 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.129581154 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.114812574 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.152130247 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.117265488 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.113283057 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.163406125 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.131093808 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.123151042 seconds)
  done (took 17.172594657 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.363659939 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.342785767 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.189795398 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.433384009 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.128368517 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.275536364 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.342187624 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.345159651 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.114876799 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.181226537 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.177937996 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.313171231 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.115720346 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.175194636 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.346967695 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.40538087 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.178823062 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.151581339 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.181623118 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.128869643 seconds)
  done (took 6.057911206 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.139645479 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.150747396 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.168019676 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.142930519 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.124641378 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.162643928 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.116626956 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136445192 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.155899338 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.125375919 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.11772269 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.161761634 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.128080654 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.132263783 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.160538401 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.150166317 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.123668424 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.151296917 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.138698409 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.119876457 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.134516122 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141431012 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.123859473 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.167682596 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.134931099 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.126149708 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.144443192 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.121097239 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.123174762 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.15371699 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.119890971 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.134829002 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.151921456 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.107805843 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.127031456 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.129796156 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.151405413 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.119819057 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.121195496 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.148599921 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.132336113 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.129469952 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.153248162 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.101651185 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.135907752 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.111834356 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.159315501 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.128846959 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.107713314 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.134293564 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.158581031 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.130542391 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.123535594 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.166613809 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.121736213 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.13334468 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.156773695 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.131812561 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.119583597 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.143448335 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.113747343 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.119323549 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.122369365 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.15868035 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.127001867 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.165018587 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.13147563 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.116071068 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.11953291 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.14864834 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.119713471 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.129422758 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.166050913 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.124379253 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.121231828 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.157947297 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.123768498 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.09640352 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.123602532 seconds)
  done (took 11.833623324 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.14331995 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.125676317 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.133087419 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.181227134 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.128971195 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.120934047 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.156149804 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.135465901 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.130803809 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.168173605 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.13030905 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.129280074 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.167322696 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.126411945 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.126259042 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.163295446 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.128404857 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.15377361 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.163294616 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.141710047 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.130568713 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.150935953 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.128007035 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.12603141 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.174953137 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.126206285 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.142654715 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.161072319 seconds)
  done (took 5.179427815 seconds)
done (took 53.511346321 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.324897806 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.510779899 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.283730322 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.278670186 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.317223593 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.290430273 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.2805644 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.282766964 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.845420808 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.251615188 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.281993796 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.276791267 seconds)
done (took 29.40195955 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.596683154 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.418276934 seconds)
    (2/2) benchmarking "String"...
    done (took 1.564981101 seconds)
  done (took 4.167207557 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.269402071 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.269897447 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.52590961 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.272316521 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.270033695 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.268155817 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.270597044 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.291898029 seconds)
  done (took 16.337052698 seconds)
done (took 26.538750954 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.256904923 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.610771949 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.52474991 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.247819199 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.273412691 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.267279428 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.272189084 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.329442945 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.271619497 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.252105802 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.709048423 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.558557498 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.276920445 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.698623524 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.256214369 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.285131595 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.285223251 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.66359405 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.268652203 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.252083804 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.262253751 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.247507986 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.302886213 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.288090335 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.27624268 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.280374551 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.307711573 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.26988775 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.59874553 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.295822139 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.316788053 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.271733432 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.318372655 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.280281077 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.278486515 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.286611576 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.588459904 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.281559619 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.255775252 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.305651149 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.590700688 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.29448375 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.268431987 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.294836483 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.252720766 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.288831141 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.27614704 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.384994554 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.290801384 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.279674894 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.347404631 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.690171288 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.272570794 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.286353432 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.280998306 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.643015186 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.297394164 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.36907033 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.30753304 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.287062582 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.285102629 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.274279022 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.295282375 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.281981443 seconds)
  done (took 149.180735528 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.272068665 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.277809909 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.277203664 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.279453551 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.275081097 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.275121047 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.273984679 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.27439252 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.274660259 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.27768728 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.278336273 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.274503058 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.293852069 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.225094769 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.283451881 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.297110577 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.278576221 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.306294525 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.282798745 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.275108307 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.282603777 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.277767942 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.286355348 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.274544846 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.285765006 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.353011386 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.271477624 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.285090231 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.28322149 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.274874939 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.283802754 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.284041244 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.927297238 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.147680067 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.285032388 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.308197052 seconds)
  done (took 82.835828172 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.276202704 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.277030574 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.276148795 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.311805893 seconds)
    (5/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.278520749 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.277263656 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.887299628 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.889568734 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.345127287 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.652323873 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.725086756 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.533059873 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.27389623 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.371695096 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.285323565 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.277135618 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.380230176 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.304514466 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.277125745 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.278855742 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.865495775 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.28739613 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.517448836 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.457610073 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.287485352 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.312761418 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.673154596 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.280309348 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.313651829 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.61691386 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.327566521 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.280019467 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.62835508 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.650799368 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.39299323 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.281097318 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.312433487 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.278219779 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.572341697 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.280416586 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.280436418 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.281449512 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.925296984 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.276907641 seconds)
    (45/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.28034672 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.870952286 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.264529183 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.276245227 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.281436502 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.27817773 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.509671609 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.006811777 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.27620919 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.278754587 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.282021471 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.280437223 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.278502446 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.31391904 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.491767535 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.19565051 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.276056688 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.283417005 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.31309051 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.28225034 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.435795332 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.278088044 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.197569431 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.335043828 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.446514454 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.87062499 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.277410027 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.379634502 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.403691354 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.278357042 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.278620843 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.279973969 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.281548286 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.396579085 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.285596568 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.007948692 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.278466126 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.462228679 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.295381619 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.750421813 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.386010715 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.2819655 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.636613162 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.284594314 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.280315426 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.045758735 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.379660769 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.280751861 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.283603089 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.281386919 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.008319282 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.87538187 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.590257244 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.282923873 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.282645164 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.011076956 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.284047571 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.184298167 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.870381342 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.942924104 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.282883564 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.400128281 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.469786823 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.294718769 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.284175081 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.722776083 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.281400783 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.337580644 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.28150844 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.686609505 seconds)
  done (took 387.790897986 seconds)
done (took 620.978870875 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.161340616 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.102759713 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.265639583 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.125329924 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.100649636 seconds)
  done (took 11.931823988 seconds)
done (took 13.110294508 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.487141611 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.489313499 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.351582545 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.493478178 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.320173515 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.509804918 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.468454074 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.305728956 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.403197894 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.373616296 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.403197377 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.344426074 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.320101079 seconds)
  done (took 19.448382231 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.585266428 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.298535783 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.353019232 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.565262727 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.330388635 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.572613513 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.657502133 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.297931612 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.439525362 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.30933084 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.306722187 seconds)
  done (took 18.896771407 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.583988732 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.295376737 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.357568292 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.563013756 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.331680389 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.591065413 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.621665617 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.296336005 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.461742076 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.33409868 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.30831036 seconds)
  done (took 18.92282837 seconds)
done (took 58.449816508 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.325828861 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.394598907 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.318105352 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.306522438 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.306691307 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.303793868 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.307830802 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.30569016 seconds)
  done (took 11.747678974 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.304346986 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.302621452 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.305383255 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.303934095 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.302854274 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.303592556 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.304342775 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.302641501 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.302798464 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.305619728 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.304119884 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.303193608 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.301910623 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.302408455 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.304683807 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.301872155 seconds)
  done (took 22.0352598 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.308271351 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.302664629 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.303068654 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.304163233 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.303936243 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.303501567 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.308148148 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.305054205 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.304539067 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.304809729 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.304333491 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.304734691 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.30491001 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.304608751 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.303388152 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.305643558 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.306828229 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.304798196 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.30836982 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.303770716 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.304312739 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.315043384 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.306076486 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.305910181 seconds)
  done (took 32.512354351 seconds)
done (took 67.47493943 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.289715354 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.300547228 seconds)
  done (took 5.769639028 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.367709396 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.362269703 seconds)
  done (took 3.914991047 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.305776141 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.304862645 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.306715056 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.308217235 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.30607072 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.30680576 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.306276663 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.307137199 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.306859836 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.305993878 seconds)
  done (took 14.24646919 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.311447418 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.307638569 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.308354852 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.307423852 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.306415012 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.304328937 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.305586606 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.30767592 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.306908531 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.308484669 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.307439972 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.306920792 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.306580102 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.307064198 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.307396066 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.307632868 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.306692366 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.306904235 seconds)
  done (took 24.714154178 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.323393867 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.326790026 seconds)
  done (took 3.835990537 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.434684416 seconds)
    (2/7) benchmarking "second"...
    done (took 1.348280704 seconds)
    (3/7) benchmarking "month"...
    done (took 1.413211267 seconds)
    (4/7) benchmarking "year"...
    done (took 1.403384883 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.350257298 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.331070902 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.348767827 seconds)
  done (took 10.814451525 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.299094511 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.609192058 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.798395001 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.45479839 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.286635438 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.313006806 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.2715906 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.322184788 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.317141917 seconds)
  done (took 14.856765684 seconds)
done (took 79.336267014 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.295384919 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.335334597 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.327037694 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.312275844 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.660355158 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.333570202 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.2960801 seconds)
done (took 16.747902524 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.275294254 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.283721384 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.276596133 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.305095763 seconds)
  done (took 10.325939149 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.295906404 seconds)
    (2/2) benchmarking "read"...
    done (took 1.621302844 seconds)
  done (took 5.103473269 seconds)
done (took 16.618972215 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.311556743 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.311206697 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.310562516 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.309881051 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.310362002 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.309981214 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.308731186 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.311304381 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.308983198 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.312985482 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.307971957 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.311747013 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.310363412 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.30932587 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.311333432 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.31238097 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.309613803 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.310988622 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.311138754 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.310105816 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.31258001 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.312563675 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.312126742 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.312357363 seconds)
  done (took 32.647745372 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.313175146 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.311495307 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.311396157 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.309940308 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.312225436 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.311907416 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.312051571 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.311066113 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.314048976 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.311600931 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.312567046 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.312016497 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.312458035 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.311020748 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.313262427 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.314851597 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.313880138 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.312578026 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.312973495 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.315155165 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.313357766 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.314329433 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.313409638 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.313199964 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.313368316 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.315323632 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.313554982 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.316113806 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.316836162 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.315818037 seconds)
  done (took 40.583141692 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.317881823 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.318823292 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.313651377 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.312502345 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.312848632 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.315760793 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.312735311 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.313737642 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.31556435 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.313487554 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.312839419 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.312630228 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.313634404 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.313526003 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.313873633 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.314289343 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.311870496 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.313509648 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.314113406 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.312697384 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.313630807 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.315423126 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.31433051 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.314561338 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.312222474 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.314186246 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.314946172 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.314586934 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.315431913 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.316370943 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.313693384 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.312758578 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.315323505 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.318378549 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.314172834 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.315033434 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.319623132 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.320084646 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.318794212 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.316406929 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.316847207 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.315608507 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.316018833 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.315412557 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.316538959 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.315588524 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.313990853 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.315629694 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.314462065 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.317669662 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.316579291 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.316931932 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.31566817 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.318479826 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.316425901 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.315494671 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.31443661 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.317140959 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.31831498 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.318464983 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.31735081 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.317285284 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.316095639 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.316395409 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.317837763 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.316818469 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.318944066 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.318588185 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.317229606 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.31746383 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.318646315 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.318572911 seconds)
  done (took 95.917141589 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.318141007 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.320251109 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.31757913 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.316444618 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.317020421 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.317284163 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.318732095 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.318448339 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.321063044 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.320021114 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.319596791 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.319453418 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.319055117 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.319198289 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.319393012 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.318570719 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.319760074 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.319589846 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.320363522 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.322512644 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.31932257 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.319185061 seconds)
  done (took 30.213433631 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.319378231 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.321299438 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.319013199 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.319921387 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.322443815 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.321588762 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.320775753 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.320821581 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.319802794 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.319157744 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.321748248 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.320289891 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.323100097 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.317903379 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.31891443 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.322194554 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.318454328 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.322824759 seconds)
  done (took 24.961774171 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.321418582 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.318211572 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.320517984 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.317933425 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.319343614 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.320522474 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.320178555 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.319406371 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.319590773 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.31808888 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.321851964 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.320629902 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.322343053 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.323503941 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.321518449 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.319605319 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.319583042 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.320614467 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.320640795 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.321590779 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.321392447 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.322511315 seconds)
  done (took 30.257032778 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.322707172 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.319578982 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.320777081 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.320623256 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.323838462 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.323057424 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.320271836 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.320284502 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.322354225 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.324084976 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.322149298 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.324026678 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.326003857 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.32343773 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.323159509 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.319673482 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.323887288 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.324441291 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.325629046 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.324161004 seconds)
  done (took 27.651188428 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.323549411 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.325058075 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.32634807 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.326218586 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.322751193 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.325569332 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.322836379 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.324185358 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.322294892 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.324451132 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.324160793 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.322674469 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.323867867 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.325951441 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.322892824 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.323358969 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.325707568 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.324633589 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.324843979 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.325501982 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.324633622 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.323860357 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.323022697 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.326457748 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.325371022 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.325039966 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.325239165 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.324244171 seconds)
  done (took 38.282460703 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.324615634 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.32309885 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.324154982 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.325361225 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.323828396 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.327485669 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.325139585 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.325853378 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.325013491 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.325537653 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.325818036 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.324400609 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.328112938 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.325016649 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.325587703 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.324082173 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.326721401 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.327649412 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.3257752 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.328007344 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.326465451 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.326246395 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.324157462 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.327256638 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.325793819 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.328282426 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.325826731 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.32759092 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.328285921 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.325656419 seconds)
  done (took 40.975492328 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.347015091 seconds)
    (2/2) benchmarking "in"...
    done (took 1.345554683 seconds)
  done (took 3.892189263 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.327481681 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.326580805 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.32802542 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.329735052 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.328043525 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.328444544 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.327332635 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.325570877 seconds)
  done (took 11.822126046 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.318645397 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.328284581 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.326886776 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.327446729 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.327637799 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.322420047 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.331341245 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.3345105 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.320535179 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.321767567 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.324831621 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.328913892 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.325092127 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.322171901 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.319020845 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.325179231 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.330878139 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.330610004 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.328671827 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.33164615 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.331289102 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.324115409 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.326247251 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.332976706 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.322958699 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.337731229 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.330100727 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.333648182 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.321646039 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.326876683 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.324590228 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.331124798 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.331363919 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.332647965 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.331489038 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.33291516 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.335711774 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.328064651 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.332538134 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.33662526 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.333016591 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.332418042 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.324871209 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.327822787 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.329153922 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.333415237 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.333458923 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.332758394 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.322714821 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.328544432 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.338688395 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.323222258 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.333785563 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.330335471 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.330914267 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.33544491 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.337475822 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.329806209 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.331844406 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.339222971 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.34417572 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.34178062 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.330887517 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.336858641 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.334757425 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.350064492 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.339764842 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.338513959 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.333511098 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.334095609 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.335561008 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.342881674 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.345068913 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.339139391 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.334276878 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.333493208 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.325070686 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.334810169 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.337244074 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.337916381 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.339229476 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.335413548 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.336398833 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.348200246 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.330145039 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.337137747 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.334807985 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.334961481 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.32563408 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.339584529 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.342201911 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.336684111 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.324590497 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.328654903 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.330986024 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.336022067 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.326426841 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.330983956 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.338201223 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.334964572 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.33508271 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.328613547 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.33865774 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.340828216 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.33437028 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.33737104 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.34406732 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.329645795 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.340269614 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.341860898 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.335585804 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.328859571 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.339059555 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.338704865 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.329275028 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.337988048 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.342791525 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.331885275 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.341813754 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.337278004 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.337264919 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.355122942 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.342779925 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.336599107 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.331601434 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.348594061 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.337827978 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.334639191 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.34118713 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.337276609 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.338392355 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.334462755 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.346805896 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.331642286 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.341678361 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.33183663 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.340075801 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.336863291 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.337105603 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.333934934 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.337744947 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.335406259 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.339515284 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.342406576 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.33867739 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.336352823 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.347987226 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.339614199 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.338187492 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.339937439 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.343407383 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.337972251 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.332633516 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.342590983 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.332358237 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.34183103 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.332085233 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.34231557 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.340182477 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.339942594 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.341542668 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.329786105 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.335260908 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.344784568 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.34113334 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.340073997 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.342543236 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.339105225 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.339350273 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.332467301 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.341087353 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.331855307 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.335778869 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.347844197 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.343107551 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.340808672 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.338164465 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.346049369 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.342167929 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.342016598 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.335876304 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.34129419 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.345854327 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.347289719 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.349716087 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.33972918 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.341704738 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.334335779 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.336083625 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.343934808 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.335000193 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.349758561 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.348316094 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.35617092 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.337505368 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.346015599 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.332499363 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.346666961 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.341900698 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.347812049 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.340711546 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.341135999 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.336520461 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.34684772 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.337693668 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.344663631 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.336418611 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.344972817 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.344433949 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.34304836 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.343565857 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.336820208 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.340275587 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.346337531 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.343701147 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.342854758 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.334425963 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.346057625 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.333433817 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.339232186 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.345609205 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.343597593 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.345876996 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.350886351 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.340172598 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.350666726 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.343259547 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.338391574 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.346032214 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.34208554 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.34414303 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.352313376 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.348462012 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.340410512 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.350270304 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.344610756 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.337865508 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.346742597 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.34988745 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.343024478 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.337725842 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.351881946 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.34416618 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.342488693 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.345115034 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.339515359 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.350591249 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.3504969 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.353214771 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.337428221 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.349542368 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.339516081 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.349409356 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.340053246 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.346220667 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.344336562 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.348740814 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.352783798 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.346246473 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.339469743 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.348249396 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.346406637 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.346169222 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.33856076 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.353439575 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.348001728 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.347776854 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.344542286 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.344174167 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.348530806 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.336864805 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.345387291 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.342384706 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.356827977 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.367106992 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.351376642 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.354684996 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.351078017 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.35138736 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.350395862 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.342279962 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.344865462 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.34453494 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.342564705 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.3431796 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.353749185 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.342001402 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.351824392 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.348675145 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.348748581 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.352139287 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.347920088 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.340493145 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.353259585 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.348292241 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.350207724 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.340649741 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.351234831 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.343975258 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.352711943 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.349063525 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.344865315 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.358192222 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.355085655 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.345320289 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.347737 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.340719274 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.342996189 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.347132189 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.354453119 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.345556926 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.354708959 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.342755595 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.352576218 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.347851167 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.356447957 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.361591685 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.34330037 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.357150773 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.348197993 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.33989033 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.344762239 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.350738713 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.354756375 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.3618426 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.342155005 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.353342412 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.351055532 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.350907381 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.349217036 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.351767085 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.351501066 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.351832339 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.357496532 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.357228379 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.345843748 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.35441547 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.358295282 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.350295964 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.350225932 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.341537811 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.352538766 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.361089844 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.34656758 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.349156955 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.349990627 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.356536418 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.352518082 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.351044858 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.354143269 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.351574333 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.357856841 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.356235941 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.354878073 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.35344893 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.357831354 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.364512097 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.363274305 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.365801603 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.349097752 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.360717292 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.353298 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.34925515 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.350120132 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.351455653 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.35713933 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.345793122 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.357973983 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.352505317 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.350685732 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.355539698 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.361855574 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.346152989 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.358350749 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.374692752 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.345911002 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.357538637 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.354525566 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.345527098 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.358024645 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.355017028 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.3455479 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.350952915 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.355634707 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.362306105 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.35060807 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.35833078 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.347739832 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.359668861 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.355561365 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.356514306 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.355858372 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.355136388 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.347775363 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.357442461 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.357468538 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.364558047 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.351549608 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.357487716 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.352638442 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.366989777 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.368909367 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.351708687 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.362451791 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.356501409 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.351149889 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.356009036 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.362468563 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.352001336 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.360089429 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.347441672 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.356387295 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.353976743 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.359716632 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.361597784 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.360382269 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.348723618 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.35417463 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.360341229 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.358159688 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.359740136 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.354098807 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.36505143 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.350785831 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.353125315 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.361735618 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.351585107 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.363889252 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.350288868 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.357969088 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.353712325 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.363374266 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.359451425 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.359436168 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.34958475 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.355565657 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.365897344 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.365788972 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.35994271 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.358345635 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.365583133 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.35128056 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.357642239 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.358610353 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.35519612 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.356944874 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.36541834 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.352817941 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.355061054 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.355853317 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.362318211 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.365591912 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.363720754 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.354835799 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.371227266 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.370951292 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.367400111 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.355969338 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.356998736 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.355550558 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.36477153 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.364538829 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.354592802 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.368277099 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.368340086 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.365690104 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.361901011 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.364120892 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.353556071 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.367503209 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.364215954 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.358428305 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.367298865 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.360264288 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.369171965 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.361768784 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.361544125 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.352595142 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.356800987 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.359894559 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.361616768 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.364165341 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.362805872 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.36650025 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.362486339 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.370314132 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.363534694 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.36304045 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.365399904 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.359084581 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.368444882 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.357416428 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.365597502 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.366840587 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.359732621 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.367637681 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.365355644 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.359128185 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.367028133 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.37133784 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.364984217 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.355867821 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.361749724 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.372850487 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.37591128 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.364714779 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.35808937 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.36106986 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.368858712 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.365644664 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.365981616 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.360917285 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.383281815 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.380204208 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.359976344 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.362749449 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.371386103 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.377008607 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.365490708 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.36808995 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.363884663 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.367668752 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.373075144 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.368596249 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.372737021 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.374589883 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.362433745 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.373557763 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.361537537 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.36709817 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.369178193 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.378600486 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.367015803 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.365008982 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.385416349 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.380016099 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.368738293 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.395006401 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.373324642 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.367875779 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.371364305 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.357548354 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.369800588 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.363353384 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.375107476 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.369781108 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.369411357 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.369663995 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.360812838 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.371478982 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.377639549 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.380334869 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.369390799 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.361715138 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.368494792 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.373857133 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.370062269 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.372131597 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.370756344 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.370754459 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.37348401 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.364078133 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.383505148 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.390331592 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.375697087 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.369189904 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.369972532 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.37133033 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.373609356 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.371154523 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.376452183 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.370295558 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.371520273 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.36836849 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.380622932 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.371725775 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.365751357 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.365782756 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.366771696 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.37545353 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.380363885 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.396287547 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.376449511 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.374218588 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.374469202 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.37103911 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.36571043 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.376316002 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.372720063 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.365178813 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.366100913 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.372718317 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.374272978 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.376109164 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.368030598 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.377519814 seconds)
  done (took 805.875451996 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.372895126 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.37120107 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.373144315 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.37066267 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.372462389 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.371624947 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.374273452 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.370296418 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.371826334 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.372757616 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.371936736 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.373485446 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.37099605 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.371323801 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.371498964 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.372592905 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.372892367 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.37135224 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.371917935 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.376209185 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.373503127 seconds)
  done (took 30.058792703 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.374358038 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.372786516 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.373253142 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.372885293 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.372162357 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.372432023 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.372531995 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.371474962 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.374813968 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.374575364 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.373992893 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.373591561 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.374612627 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.37388972 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.372254736 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.371815004 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.377114786 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.375858413 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.3734263 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.374301948 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.374513409 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.371886945 seconds)
  done (took 31.45638277 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.375968526 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.373325524 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.365802531 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.377559324 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.375498327 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.373946177 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.374531917 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.372776087 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.375762472 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.368587335 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.36800535 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.366909305 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.372477872 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.382281894 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.370684843 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.380287879 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.376384771 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.377208367 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.374698655 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.373758001 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.380458454 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.3873369 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.37564727 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.369096239 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.37818996 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.374802628 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.375842906 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.374073703 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.367718846 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.380848302 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.377417495 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.371778278 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.379901695 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.377220299 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.372382348 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.380650946 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.376696202 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.375216739 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.377127528 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.378943468 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.398095201 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.376623631 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.384160913 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.389436868 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.377223972 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.373025994 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.383096196 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.374094263 seconds)
  done (took 67.305868024 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.378564487 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.376985966 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.376290114 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.377879003 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.378905561 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.379702398 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.376058849 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.379649884 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.378712154 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.375525752 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.37855198 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.377669243 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.379127285 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.378757884 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.378046431 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.378775057 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.377349879 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.379548246 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.378432847 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.37991488 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.379645054 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.380526349 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.381516196 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.380844761 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.379703913 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.380610948 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.379301741 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.379950833 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.380303807 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.380449176 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.38153678 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.380286047 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.380648225 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.381801597 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.380147959 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.381960253 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.381920785 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.381746973 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.383665725 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.381630046 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.381695569 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.380699002 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.382376878 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.381829503 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.381296795 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.381627739 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.380941575 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.382354621 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.3822456 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.382581424 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.380853788 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.381988614 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.384805052 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.383104833 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.381400626 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.383647628 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.383635809 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.382792412 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.380545085 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.380891874 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.382068201 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.38255842 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.382962121 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.383623917 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.384388066 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.383800046 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.386032653 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.38283341 seconds)
  done (took 95.13505537 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.383907232 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.384686157 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.384658822 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.38270384 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.384430187 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.38537103 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.385897221 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.383829139 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.382228019 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.38526007 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.38736692 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.385086806 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.385479283 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.384744669 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.38556747 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.387123308 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.386735942 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.387879787 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.38665046 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.384529556 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.386624779 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.386898313 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.383635417 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.386003307 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.387985199 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.386736348 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.384643364 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.387070672 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.385997119 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.386020939 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.387768889 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.387406284 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.385736121 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.387893381 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.387563247 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.385826784 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.389076108 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.388207017 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.388711503 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.387462942 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.388697419 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.38565403 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.390277926 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.389315656 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.389288727 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.387677191 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.387104114 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.387440163 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.389108267 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.388575301 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.38599079 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.388424929 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.387732905 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.38671679 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.387601078 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.388782713 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.387792107 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.387437195 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.388190329 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.389115474 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.39077979 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.388399968 seconds)
  done (took 87.230056977 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.390441487 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.389096235 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.387298119 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.388682332 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.38772987 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.391040114 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.387178143 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.387105946 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.389236404 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.390511821 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.388954554 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.387674664 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.389323651 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.390459858 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.389029132 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.390795172 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.389112654 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.388236363 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.390215913 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.390087537 seconds)
  done (took 29.034127218 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.390377769 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.389817762 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.392120527 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.39056245 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.39149965 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.390601113 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.390338331 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.389824153 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.389938713 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.392230609 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.391757072 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.389869875 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.391666278 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.393620421 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.390951665 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.389135481 seconds)
  done (took 23.506106317 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.392452049 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.392849903 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.38983291 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.390662678 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.390700256 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.391581906 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.39382168 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.388912504 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.39231423 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.391310708 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.392367932 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.394690396 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.393518425 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.394333617 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.393486852 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.392616972 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.392945908 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.390643229 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.390501882 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.393927687 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.394286133 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.392222688 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.393076168 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.394272771 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.391035188 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.393954714 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.391076431 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.391424168 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.392809978 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.3930503 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.393640953 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.393756078 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.39316531 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.39344769 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.393916325 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.393456586 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.394787572 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.391625314 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.392603498 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.392454317 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.389437639 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.392332492 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.394008182 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.393124063 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.393614041 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.391349752 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.392572541 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.392165782 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.39254198 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.393785775 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.394603142 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.393405615 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.394434978 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.393758188 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.394268209 seconds)
  done (took 77.853491716 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.393064603 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.39318463 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.391961284 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.394347237 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.394993075 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.393904653 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.395585953 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.397348787 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.394483461 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.394948503 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.394136432 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.397312616 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.395200663 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.395616873 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.397473771 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.3939905 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.394311693 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.396004554 seconds)
  done (took 26.364790276 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.397402012 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.396132836 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.395813695 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.395506181 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.396365992 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.39628695 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.394160837 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.395925348 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.394676146 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.394891251 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.397606892 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.397828857 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.396936185 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.396340184 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.397324837 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.397870935 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.397554264 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.395210325 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.397908985 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.39699064 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.396266347 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.397353758 seconds)
  done (took 31.978391455 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.388109766 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.386344381 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.38695107 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.408096538 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.407370795 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.386585947 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.388694216 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.389224458 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.411410023 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.433277476 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.427997284 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.405870835 seconds)
  done (took 18.080220405 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.398995763 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.398387847 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.395234009 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.397839109 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.394976816 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.397636796 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.39803514 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.397439853 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.397355173 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.398012234 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.39816249 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.399241788 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.398814728 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.399373657 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.39821304 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.399915954 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.398432474 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.401423886 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.397469704 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.398189908 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.397294022 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.400126778 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.39864665 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.401358064 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.39881993 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.398882114 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.398974609 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.401588212 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.400567461 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.399770253 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.397239507 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.400277123 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.402653299 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.400331995 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.400541374 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.397085231 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.40063482 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.401387982 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.398394033 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.400291419 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.400660822 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.400213371 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.401690306 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.398957847 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.403375215 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.40072516 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.400985027 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.398591425 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.402680051 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.402406175 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.402088759 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.402375267 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.403485042 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.402455914 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.400632311 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.404211801 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.403249522 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.401011329 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.402424763 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.402473991 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.402643406 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.40108084 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.402335978 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.402742644 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.402859707 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.401241201 seconds)
  done (took 93.666380443 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.404633436 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.403209372 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.402010385 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.402292201 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.402296606 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.400936103 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.404582013 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.402918608 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.405309184 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.402002985 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.404971289 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.40212659 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.40347287 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.403650983 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.402792593 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.403083964 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.405239551 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.402425628 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.402638123 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.404931689 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.401702526 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.402314964 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.402959821 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.403884533 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.403409323 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.403546106 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.403017207 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.401993718 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.402815878 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.404491577 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.404152303 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.40363655 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.403080325 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.404716378 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.405254175 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.405693284 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.404733522 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.403995119 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.404969419 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.405603222 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.406546088 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.403968128 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.403796218 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.406584456 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.406171438 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.402741102 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.406073279 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.406630226 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.405938801 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.406496759 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.404968525 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.407039505 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.40863239 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.407470126 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.407375625 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.40566671 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.407710506 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.40665455 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.406268803 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.405730431 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.405930175 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.407881712 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.408060604 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.408143117 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.40753814 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.40738501 seconds)
  done (took 93.974739846 seconds)
done (took 1889.911781921 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.566449719 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.521704747 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.397712041 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.409505664 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.391553651 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.397051759 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.406242735 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.392976159 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.397444099 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.39867331 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.399237337 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.600328588 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.436177584 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.394774252 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.396245129 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.497272905 seconds)
  done (took 28.268252003 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.427566995 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.407666033 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.534187749 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.402893635 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.428468611 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.613954062 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.465842822 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.404707983 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.603114011 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.420876337 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.394517908 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.474134275 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.402659105 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.394638361 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.435627754 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.615013579 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.70035551 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.388647573 seconds)
  done (took 30.78214706 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.913139053 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.429736064 seconds)
  done (took 5.610286048 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.424567262 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.404296268 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.402347498 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.403479819 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.394913501 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.390961267 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.39849324 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.394139396 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.399773063 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.546109568 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.40514701 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.414679915 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.401745078 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.400415389 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.40961066 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.450640916 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.565477427 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.413864061 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.410458738 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.410028929 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.40395955 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.508388958 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.446293523 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.415661605 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.549062271 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.412745856 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.407777623 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.409614932 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.522106968 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.414491873 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.400676105 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.40443527 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.405859043 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.399372084 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.978961673 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.396607457 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.426480973 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.41595271 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.415772077 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.554191854 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.407066479 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.412627528 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.397642959 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.974256516 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.515008757 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.540218779 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.397152456 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.405925208 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.407807023 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.476066615 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.407770702 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.407699078 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.467718383 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.298667493 seconds)
  done (took 89.526201029 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.458682268 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.39687209 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.58610768 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.421170482 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.393583048 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.414738411 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.4013618 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.727761949 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.393169788 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.397594729 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.736699601 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.062792724 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.402373902 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.46517081 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.429544866 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.456915135 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.396910803 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.418774074 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.396010946 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.398892655 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.007929984 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.411444532 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.395250425 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.504149394 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.440779486 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.998300082 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.411753526 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.395935728 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.415592353 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.395756712 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.032098731 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.408196782 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.460150126 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.397606347 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.712159191 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.840992122 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.807254046 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.401999466 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.410904907 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.402690101 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.423163952 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.999035606 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.825301488 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.396411809 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.40121209 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.992955502 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.397636208 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.411494382 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.40994123 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.675874671 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.402960378 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.4008399 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.404803829 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.397810235 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.39952975 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.45730184 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.457473601 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.005618648 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.40228481 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.397746443 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.442284347 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.401514652 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.409109213 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.404104877 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.404612659 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.828440321 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.634329091 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.411332129 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.831397508 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.034105424 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.40456463 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.115187062 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.402951039 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.424002826 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.449811821 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.416698164 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.39673053 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.989308849 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.412840984 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.400030996 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.811721218 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.399820987 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.733128673 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.423305969 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.399796812 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.031471726 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.411699495 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.455011107 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.402678703 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.404977761 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.399976574 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.407075154 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.725422368 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.456526127 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.403551004 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.403949081 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.427787216 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.403611263 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.400273486 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.415305093 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.113777528 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.406737177 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.405017806 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.426682654 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.40760999 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.403164622 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.405350846 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.406945135 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.705830432 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.40665311 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.408800297 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.405892027 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.404606953 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.404274635 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.497704444 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.415513149 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.766315246 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.401601927 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.417831959 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.407591966 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.403964314 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.438719666 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.402231547 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.405503122 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.406606025 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.787515688 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.42575063 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.402626125 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.406904402 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.424050756 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.418874967 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.40523146 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.474508863 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.408704328 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.259443158 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.413223711 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.422577697 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.408040086 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.42099661 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.411242323 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.416780877 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.412551321 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.728419283 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.730343456 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.637124841 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.407817834 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.407870671 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.286478894 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.415258008 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.598215266 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.428527078 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.40822898 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.726813812 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.649597416 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.410379157 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.405074332 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.407732543 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.700292344 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.4092487 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.745967609 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.078311627 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.410898353 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.420662113 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.266374897 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.255733794 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.411910542 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.407754957 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.742161507 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.429590906 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.408567547 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.408553973 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.41320943 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.406089139 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.416302978 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.410569254 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.410295053 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.40961059 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.697139788 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.6112292 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.429775744 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.409786962 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.023215664 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.441396674 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.406631269 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.419726111 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.407733813 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.408903315 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.459889215 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.414941542 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.459871533 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.411135249 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.419227996 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.092544022 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.422907893 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.413911189 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.611033303 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.216012365 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.414499634 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.410609786 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.414674739 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.467097441 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.050648291 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.477218678 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.787656713 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.416464418 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.457932136 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.423252321 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.422516632 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.051725056 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.432608789 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.411174359 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.227247601 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.413070193 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.893595307 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.411024153 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.414461056 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.143496701 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.414653684 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.418256534 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.405989164 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.409656824 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.727791899 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.413768773 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.41997174 seconds)
  done (took 517.810545389 seconds)
done (took 673.265904295 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.418938252 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.414709683 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.41375649 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.414020388 seconds)
  done (took 10.943948885 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.430368649 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.423567374 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.431628241 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.4190609 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.431594363 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.421680252 seconds)
  done (took 9.842786854 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.415046678 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.414732705 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.415625842 seconds)
  done (took 8.529664132 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.672853615 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.445902993 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.826144019 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.412150255 seconds)
  done (took 9.644496015 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.430191001 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.429825091 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.430178741 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.431248269 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.435571424 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.432828198 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.434185641 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.434345103 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.432205672 seconds)
  done (took 14.176726412 seconds)
done (took 54.422767192 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.671270227 seconds)
    (2/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.688992927 seconds)
    (3/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.487586953 seconds)
    (4/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.72067211 seconds)
    (5/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.448694561 seconds)
    (6/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.602157109 seconds)
    (7/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.503263288 seconds)
    (8/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.577596759 seconds)
    (9/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.446901013 seconds)
    (10/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.447658652 seconds)
    (11/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.521683835 seconds)
    (12/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.395258099 seconds)
    (13/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.474975487 seconds)
    (14/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.528477662 seconds)
    (15/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.615307307 seconds)
    (16/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.394336205 seconds)
    (17/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.606509643 seconds)
    (18/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.529680241 seconds)
    (19/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.449100349 seconds)
    (20/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.421692128 seconds)
    (21/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.454319846 seconds)
    (22/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.64053808 seconds)
    (23/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.501026098 seconds)
    (24/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.407311344 seconds)
    (25/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.801317231 seconds)
    (26/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.452655106 seconds)
    (27/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.402632694 seconds)
    (28/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.638992133 seconds)
    (29/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.782085929 seconds)
    (30/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.396829051 seconds)
    (31/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.691776426 seconds)
    (32/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.732823494 seconds)
    (33/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.571098483 seconds)
    (34/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.501434011 seconds)
    (35/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.491597491 seconds)
    (36/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.400849694 seconds)
    (37/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.623190338 seconds)
    (38/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.462675822 seconds)
    (39/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.395355677 seconds)
    (40/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.575956307 seconds)
    (41/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.590703978 seconds)
    (42/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.510091805 seconds)
    (43/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.580747536 seconds)
    (44/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.519511326 seconds)
    (45/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.605144342 seconds)
    (46/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.432936727 seconds)
    (47/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.405674493 seconds)
    (48/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.673085407 seconds)
    (49/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.454081373 seconds)
    (50/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.585770345 seconds)
    (51/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.449835032 seconds)
    (52/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.73431067 seconds)
    (53/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.607508164 seconds)
    (54/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.651881859 seconds)
    (55/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.489236849 seconds)
    (56/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.538093105 seconds)
    (57/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.395414438 seconds)
    (58/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.437095452 seconds)
    (59/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.484860626 seconds)
    (60/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.505439554 seconds)
    (61/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.412893647 seconds)
    (62/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.523966216 seconds)
    (63/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.73314776 seconds)
    (64/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.421952276 seconds)
    (65/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.392832238 seconds)
    (66/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.425493914 seconds)
    (67/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.824345049 seconds)
    (68/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.657209777 seconds)
    (69/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.540816965 seconds)
    (70/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.423314547 seconds)
    (71/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.669310886 seconds)
    (72/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.462609418 seconds)
    (73/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.526705885 seconds)
    (74/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.553378377 seconds)
    (75/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.66090106 seconds)
    (76/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.700107026 seconds)
    (77/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.546054445 seconds)
    (78/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.516936449 seconds)
    (79/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.739932733 seconds)
    (80/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.584159612 seconds)
    (81/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.402145122 seconds)
    (82/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.566325682 seconds)
    (83/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.740130366 seconds)
    (84/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.660025686 seconds)
    (85/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.532585505 seconds)
    (86/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.520556987 seconds)
    (87/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.464845193 seconds)
    (88/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.823156948 seconds)
    (89/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.533638663 seconds)
    (90/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.510563734 seconds)
    (91/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.50810631 seconds)
    (92/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.705226812 seconds)
    (93/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.552958229 seconds)
    (94/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.510071266 seconds)
    (95/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.402194492 seconds)
    (96/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.402067916 seconds)
    (97/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.674790379 seconds)
    (98/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.411668418 seconds)
    (99/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.611435967 seconds)
    (100/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.452956625 seconds)
    (101/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.560683573 seconds)
    (102/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.459240758 seconds)
    (103/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.548062286 seconds)
    (104/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.520846453 seconds)
    (105/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.526686201 seconds)
    (106/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.55498118 seconds)
    (107/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.50384159 seconds)
    (108/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.80818504 seconds)
    (109/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.705722839 seconds)
    (110/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.42556693 seconds)
    (111/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.490807295 seconds)
    (112/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.402792313 seconds)
    (113/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.402624814 seconds)
    (114/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.51209637 seconds)
    (115/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.474605426 seconds)
    (116/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.830111487 seconds)
    (117/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.402896036 seconds)
    (118/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.536177558 seconds)
    (119/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.598080686 seconds)
    (120/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.401155154 seconds)
    (121/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.467832995 seconds)
    (122/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.684542673 seconds)
    (123/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.403255519 seconds)
    (124/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.770696424 seconds)
    (125/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.58046456 seconds)
    (126/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.49366104 seconds)
    (127/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.00456538 seconds)
    (128/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.618667945 seconds)
    (129/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.567233809 seconds)
    (130/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.515850171 seconds)
    (131/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.418147638 seconds)
    (132/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.569259724 seconds)
    (133/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.592375306 seconds)
    (134/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.424076559 seconds)
    (135/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.401735249 seconds)
    (136/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.649374031 seconds)
    (137/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.40519462 seconds)
    (138/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.403486292 seconds)
    (139/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.49587023 seconds)
    (140/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.542482458 seconds)
    (141/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.592418008 seconds)
    (142/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.404139678 seconds)
    (143/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.798317642 seconds)
    (144/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.492249993 seconds)
    (145/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.907686549 seconds)
    (146/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.471678965 seconds)
    (147/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.544213423 seconds)
    (148/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.558099129 seconds)
    (149/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.406209449 seconds)
    (150/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.468498793 seconds)
    (151/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.463061399 seconds)
    (152/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.401783739 seconds)
    (153/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.405995042 seconds)
    (154/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.444114532 seconds)
    (155/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.596027965 seconds)
    (156/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.561956089 seconds)
    (157/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.426002107 seconds)
    (158/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.712681606 seconds)
    (159/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.49279461 seconds)
    (160/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.428844623 seconds)
    (161/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.509914824 seconds)
    (162/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.46461103 seconds)
    (163/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.012154053 seconds)
    (164/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.454497877 seconds)
    (165/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.527475362 seconds)
    (166/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.610719292 seconds)
    (167/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.550602527 seconds)
    (168/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.53926373 seconds)
    (169/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.517906927 seconds)
    (170/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.417384986 seconds)
    (171/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.59891239 seconds)
    (172/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.663317136 seconds)
    (173/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.429694069 seconds)
    (174/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.413050912 seconds)
    (175/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.511396943 seconds)
    (176/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.407825721 seconds)
    (177/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.424450976 seconds)
    (178/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.503436061 seconds)
    (179/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.427862331 seconds)
    (180/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.585922132 seconds)
    (181/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.700283663 seconds)
    (182/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.638160612 seconds)
    (183/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.501247424 seconds)
    (184/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.51837302 seconds)
    (185/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.502428257 seconds)
    (186/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.552081713 seconds)
    (187/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.779125948 seconds)
    (188/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.602131271 seconds)
    (189/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.430408125 seconds)
    (190/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.568327249 seconds)
    (191/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.597509643 seconds)
    (192/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.462089329 seconds)
  done (took 345.380655127 seconds)
done (took 346.668938271 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.460155605 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.535457248 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.436818655 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.436961239 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.440054497 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.42752713 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.457471901 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.438665355 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.452273138 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.4538807 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.429771371 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.444304127 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.454667778 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.450926853 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.470554492 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.438222864 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.436599498 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.450114842 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.453337833 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.454654283 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.43956469 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.440763269 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.468153372 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.43819939 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.445726019 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.451964544 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.444949681 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.428573549 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.441890894 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.456280777 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.433442162 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.438292065 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.455385226 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.451686786 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.442923385 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.450198054 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.442767067 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.532316845 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.459859258 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.448201626 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.44777711 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.453761288 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.443667293 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.445665518 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.450534024 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.467146534 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.447384157 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.454678002 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.43377192 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.442998031 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.457403053 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.453178775 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.449474872 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.431912544 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.445219268 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.449665953 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.450621567 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.464930733 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.451145175 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.439595024 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.471491667 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.460927195 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.45192786 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.448796235 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.447906879 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.457909807 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.449805756 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.461253906 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.448436851 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.441573694 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.44209623 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.450412137 seconds)
done (took 113.749245016 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.567104285 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.434744654 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.609606632 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.451276549 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.613102309 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.564880559 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.450548143 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.450097966 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.449640701 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.243650453 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.449317475 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.450669087 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.440789882 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.453542329 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.561962118 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.452725213 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.452907571 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.145730007 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.451005283 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.578598161 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.442000213 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.451838816 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.454264497 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.250134824 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.443977819 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.439361226 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.580703491 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.45297631 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.147079681 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.436528697 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.438495728 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.148709654 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.578557201 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.469544934 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.461566831 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.459108104 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.613527679 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.457531265 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.57152905 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.572047446 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.601108435 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.488538123 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.434389804 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.441203047 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.454965249 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.456372137 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.450811658 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.483428446 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.439007237 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.451841936 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.144259754 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.461959054 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.463605905 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.453133049 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.45350487 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.474820124 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.455389417 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.455231122 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.579554889 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.454309728 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.569771318 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.253229022 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.244506906 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.455221054 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.444172732 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.45509191 seconds)
  done (took 115.964802889 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.513474502 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.520202422 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.571739641 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.446382432 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.495985078 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.57206415 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.444224526 seconds)
  done (took 11.870260719 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.450554553 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.455588611 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.495345085 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.495340841 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.455364407 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.619262341 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.45658269 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.457698268 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.45306521 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.497122558 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.459328804 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.454813766 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.463339216 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.44484894 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.493892429 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.458707081 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.564137734 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.450756799 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.456313892 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.602403017 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.45347167 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.464553657 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.49886773 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.460262959 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.457604491 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.452129466 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.232773624 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.454774405 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.457043947 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.459331892 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.456622016 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.513204596 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.458884031 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.446859454 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.454438448 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.563151151 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.458183596 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.458408254 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.457867659 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.449644574 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.45400272 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.457392972 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.459627663 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.459191353 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.458272896 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.475273529 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.458293852 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.456913774 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.460003412 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.458444406 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.500485131 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.459177483 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.45762953 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.459983721 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.506160899 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.46796487 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.459899756 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.45872706 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.45911499 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.459225523 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.604670511 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.496990074 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.461674372 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.495171132 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.45972825 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.456414626 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.45971421 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.458363695 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.544131261 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.459776197 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.498147572 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.456682284 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.632425905 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.474268774 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.460974417 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.451240009 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.453100817 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.459961611 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.446603032 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.455820089 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.460344627 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.451421856 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.451817719 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.459663875 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.461074736 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.606615322 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.555117882 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.458453943 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.463681197 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.456800241 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.459822005 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.502199614 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.461279119 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.459082408 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.501779457 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.570942525 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.502389533 seconds)
  done (took 149.356943497 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.464054594 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.464469824 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.453895081 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.478664123 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.450335767 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.451811922 seconds)
  done (took 10.073374675 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.455664409 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.464604871 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.460178141 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.458194367 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.462834117 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.45769077 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.461568217 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.453152846 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.465853031 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.460490092 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.462724589 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.463481816 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.464237736 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.462529331 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.460780151 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.463075418 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.46349115 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.462584513 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.462049679 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.466482242 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.452655102 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.46537755 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.461607831 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.453919437 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.468814276 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.465173858 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.478188592 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.463597921 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.46598741 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.463627158 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.465357248 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.463304896 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.457148503 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.459636672 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.467980239 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.455392469 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.46881316 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.465603261 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.465433696 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.46527417 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.465282709 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.463568343 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.460639031 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.464367452 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.457372517 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.46007845 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.471548226 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.477264012 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.461627235 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.46468036 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.466912459 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.466516376 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.464130336 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.464996035 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.460834857 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.461404136 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.470313331 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.465974268 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.463270939 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.457969935 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.46807983 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.467436491 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.458661824 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.470809717 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.466892524 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.46471454 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.459938965 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.468391696 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.464630961 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.464752739 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.469618837 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.466696177 seconds)
  done (took 107.697606416 seconds)
done (took 396.269323462 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.783125005 seconds)
  done (took 4.100895653 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.620055347 seconds)
  done (took 3.939868573 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.64733564 seconds)
  done (took 25.976618611 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.462387345 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.547749247 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.452587707 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.448689281 seconds)
  done (took 11.230347091 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.792955797 seconds)
  done (took 4.114231853 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.475917387 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.461356255 seconds)
  done (took 6.258333423 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.786709014 seconds)
  done (took 4.102767939 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.898717208 seconds)
  done (took 4.226921159 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.482785485 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.457489974 seconds)
  done (took 6.271952721 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.427342605 seconds)
  done (took 3.744246158 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 21.064691609 seconds)
  done (took 22.386433228 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.481629888 seconds)
  done (took 3.803251727 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.496025812 seconds)
  done (took 3.815528897 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.560081578 seconds)
  done (took 6.87873084 seconds)
done (took 112.171128441 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.44861885 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.454815204 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.454033025 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.445889259 seconds)
  done (took 11.121921821 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.533311553 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.531472931 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.541413862 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.52585533 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.526824781 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.53552203 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.495262085 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.495173978 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.524219246 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.522561888 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.538956561 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.525237531 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.534369231 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.506803497 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.520954944 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.535287255 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.524736118 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.543742552 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.497695263 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.521344359 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.470695741 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.529226985 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.520266912 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.470874816 seconds)
  done (took 37.793192328 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.959212899 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.53372561 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.613547047 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.511597318 seconds)
  done (took 7.93762486 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.57456159 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.577696729 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.594883834 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.627934301 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.659029298 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.589601322 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.499310813 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.495319099 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.480902451 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.575795211 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.655866463 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.57425651 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.792855744 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.469552358 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.792678971 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.472300316 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.471669778 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.576560508 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.627161573 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.655690982 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.471197497 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.574988913 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.579892548 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.578051326 seconds)
  done (took 39.288985676 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.480658594 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.48898733 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.470044285 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.48867817 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.472471577 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.473807569 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.476105756 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.479885694 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.473928427 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.471611384 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.471744045 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.484570665 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.473596399 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.474860332 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.482554911 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.473781 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.476252331 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.479893194 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.48329037 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.474269784 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.471079765 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.481810725 seconds)
  done (took 33.825569751 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.456816571 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.457182959 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.810775781 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.712243224 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.460000398 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.461441809 seconds)
  done (took 14.679863883 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.544693699 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.715774893 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.466166297 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.883400919 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.965362021 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.461608964 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.466736086 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.755902502 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.132489541 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.121586618 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.53394105 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.54895917 seconds)
  done (took 21.922668041 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.548653884 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.46709805 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.489698425 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.538211055 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.471640229 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.466037914 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.547521299 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.273975566 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.477512897 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.746641452 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.471412403 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.552982766 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.720213709 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.466423727 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.472968316 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.437433371 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.699104824 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.055906228 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.475703138 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.470545585 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.503006229 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.470100615 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.474761129 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.714719139 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.473175469 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.469557106 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.828156274 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.470757785 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.80917212 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.786037645 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.785040789 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.475548307 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.749451044 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.195691801 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.581603505 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.715963663 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.468324204 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.476313536 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.46093842 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.476513438 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.48777114 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.479815174 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.788731177 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.477998995 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.472459501 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.489200857 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.292662784 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.482950957 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.473593066 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.473911765 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.788794174 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.559716245 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.481304225 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.474279101 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.569772029 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.475056006 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.480061117 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.612668138 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.115313402 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.477206351 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.505458306 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.478219018 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.468394779 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.493881754 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.257372146 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.486822381 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.482464345 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.482353801 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.47800489 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.478653381 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.501155016 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.477602006 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.490206677 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.478929108 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390933025 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.483576835 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.479356981 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.12297271 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.479798191 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.495936235 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.705521604 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.476884627 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.478139993 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.476143748 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.476522651 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.364260004 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.485300126 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.444847057 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.521930213 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.285195626 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.722028399 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.500414191 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.513656741 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.702430733 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.447369942 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.479318056 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.486386363 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.483251834 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.496324371 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.288059276 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.480109806 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.481264317 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.729929802 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.695115946 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.495143137 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.457671674 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.029907185 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.495642121 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.501391686 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.48319304 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.720618413 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.207696374 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.800494704 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.47633379 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.515195825 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.480636266 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.42810565 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.499652532 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.485603697 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.490464895 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.794251756 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.444840784 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.485071783 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.55295223 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.480590091 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.480122407 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.484105787 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.481971821 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.482370098 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.700227979 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.489893884 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.796291661 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.482857358 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.480065544 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.477349893 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.491749128 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.482759897 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.705519489 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.498919928 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.75735585 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.480807567 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.481112852 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.476609267 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.699940816 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.48820645 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.484454184 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.825542937 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.482950677 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.479075836 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.786688556 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.511968578 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.595594725 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.517359996 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.488871385 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.73030823 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.490288472 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.49246533 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.486274477 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.501894878 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.489158994 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.490375123 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.488055526 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.208479421 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.457662725 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.48605105 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.487665592 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.499872698 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.55976903 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.493692816 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.727343108 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.487327329 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.49420867 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.488370595 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.500205554 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.705652579 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.795769724 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.489726735 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.659288063 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.034591254 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.213624742 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.501503868 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.486486481 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.484729644 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.485462037 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.48749159 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.481961495 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.486043667 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.724208602 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.806103781 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.503502115 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.218228096 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.49090937 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.495686508 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.494258551 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.798094984 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.494668434 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.488612607 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.496935135 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.482038556 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.486434908 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.802950242 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.708499128 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.505063012 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.48656022 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.003112545 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.494848334 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.487707477 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.48608173 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.512167304 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.500842029 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.481704138 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.830852171 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.487979838 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.804648266 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.499298086 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.504553823 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.486898555 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.498647366 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.487766449 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.509549885 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.496932662 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.73189736 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.506357234 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.492158014 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.127023035 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414576674 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.154407278 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.513489495 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.488371666 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.489724561 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.301618147 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.487912956 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.490332638 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.778803162 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.303798621 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.488696443 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.042054959 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.506106314 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.369683607 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.8008045 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.720444134 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.491279066 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.524719649 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.812964088 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.703817666 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.516557297 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.496584398 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.49059574 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.454021379 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.133284599 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.50687471 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.670227026 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.304197192 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.505028673 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.491714169 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.518099256 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.507820076 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.960124256 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.494413158 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493531821 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.489026489 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.501684053 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.484222898 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.49658637 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.493642908 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.253072989 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.499842872 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.046444554 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493973549 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.738855397 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.809346796 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.782674828 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.495902059 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.494938026 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.734919096 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.805708887 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49398377 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.500980854 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.155441788 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.357624022 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.499160504 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.493012121 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.441721901 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.511449581 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.834710713 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.501943791 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.507435681 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.493759931 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.493246524 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.494181247 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.49183013 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.50031356 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.461013132 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.075794404 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.512669022 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.483937567 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.521256837 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493674339 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.739562569 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.508628949 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.223484374 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.72215191 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.509648206 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.521527964 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.498669588 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.51264195 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.461652293 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.491112284 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.492050836 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.495329694 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.716480877 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.493349023 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.463485795 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.566692102 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.707458231 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.49043675 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.510184075 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.750804138 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.492895802 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.507625974 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37174829 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.522735775 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.509502735 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.49379055 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.484995856 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.532645476 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.569289891 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.737403694 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.8155932 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.810838224 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.964437454 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.51321718 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.49755476 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.510904282 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.576196449 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.502819705 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.502369355 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.4963275 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.228292469 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.42019752 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.234201636 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.817822222 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.494600443 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.50608882 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493957162 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.733218136 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.494695759 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.77072444 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.495494591 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.500957196 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.512592437 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.495210507 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.517762058 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.710823657 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.772069315 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.49579903 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.513129843 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.498471207 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.495873483 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.819157114 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.714358786 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.093740332 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.161499357 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.500436336 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.496469082 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.320574739 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.775707162 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.498828458 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.497649636 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.496122636 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.503761359 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.520071603 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.507850242 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.500480921 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.741957398 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.815744176 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.234339295 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.817647478 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.527463362 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.497931885 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.498567803 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.751629702 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.331488072 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.743371586 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.241583941 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.360641177 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.756231991 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.571657371 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.744842786 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.501193055 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.739516396 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.50289959 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.498779089 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.498887431 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.499466381 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.498495873 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.818410435 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.242976614 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.756747823 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.505920119 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.5040077 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.530787583 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.74807427 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.726358441 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.401163436 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.724164544 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.822973572 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.508485509 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.502650285 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.246779755 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.828294168 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.503645938 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.502524538 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.757761898 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.504438373 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.539419796 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.374073293 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.501014037 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.163513004 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.715849712 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.523301231 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.501389016 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.366610982 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.24612052 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.513353688 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.101593412 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.505140445 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.502369722 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.780904804 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.512152376 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.504368902 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.787284357 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.509443254 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.50588008 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.769128755 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.240607055 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.399161069 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.506303011 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.533012293 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.509137179 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.50378626 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.57549333 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.504161798 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.50111429 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.977647234 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.505676402 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.505272263 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.513900241 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.520660328 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.500417946 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.504298301 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.506929239 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.506946909 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.481614677 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.474623839 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.50943726 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.644442892 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.10649465 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.504611221 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.123902696 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.844935463 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.754451733 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.507710827 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.474985518 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.511665778 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.507815063 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.505757219 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.501652513 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.494706688 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.147602933 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.50612646 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.823898362 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.509080121 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.719908105 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.720776053 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.507428065 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.755383127 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.512914398 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.526843207 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.475755755 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.506377277 seconds)
  done (took 1046.143833922 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.536368501 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.503678325 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.527336061 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.520085465 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.553591885 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.616401309 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.573005148 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.598302487 seconds)
  done (took 21.787170446 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.498464914 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.507271246 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.514222166 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.51030575 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.506085306 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.071063562 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.51228844 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.507473033 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.520621439 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.501962082 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.508767616 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.243067287 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.509630975 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.519809512 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.509436684 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.510964433 seconds)
  done (took 34.81867389 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.758061833 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.700142887 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.068954804 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.571884929 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.501493301 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.523543015 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.872274597 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.493800701 seconds)
  done (took 28.851303984 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.514952576 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.518950302 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.515174278 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.517798594 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.516493856 seconds)
  done (took 8.9425435 seconds)
done (took 1308.435310927 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.516954441 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.518640265 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.516152589 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.518162301 seconds)
  done (took 7.429074417 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.478957644 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.476731424 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.477806384 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.492544435 seconds)
  done (took 10.286502955 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.354875868 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.148220231 seconds)
  done (took 5.863687564 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.086957926 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.067685593 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.076089765 seconds)
  done (took 7.593069548 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.814206034 seconds)
  done (took 3.174215053 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.502545108 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.501559559 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.540677158 seconds)
  done (took 8.907725183 seconds)
done (took 44.614561079 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.513172279 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.26608385 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.665303248 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.504447288 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.662424568 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.664954743 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.743886085 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.501994179 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.509702995 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.499787446 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.497619464 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.663842013 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.768436948 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.271030902 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.767692325 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.27173491 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.670163204 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.50252514 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.498216952 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.517818076 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.772598681 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.502920373 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.508806221 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.508098328 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.667621492 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.652138086 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.512861694 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.268703956 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.513897039 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.506365476 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.652407783 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.504066617 seconds)
  done (took 86.891349664 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.50392842 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.515159 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.498294621 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.502872933 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.536758613 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.502441385 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.520333767 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.500465947 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.500061974 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.531585468 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.499395793 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.518292533 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.501956376 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.499910452 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.523166814 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.499473065 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.520594431 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.522913702 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.516313073 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.501351028 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.521057703 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.504569643 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.515953494 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.500382152 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.502776739 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.500919969 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.502291465 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.500643513 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.500701237 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.519081671 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.508211672 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.507253249 seconds)
  done (took 81.661673211 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.513639442 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.503862685 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.502526239 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.506423254 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.505964517 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.524719394 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.505984381 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.522558527 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.512764307 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.507243185 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.52249459 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.511634018 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.498870448 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.52090878 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.501617319 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.502869423 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.507078263 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.508328991 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.507181495 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.506125829 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.504716023 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.506360361 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.506059316 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.505416294 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.524897744 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.505070482 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.507451969 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.500726021 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.505435494 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.503211932 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.508915077 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.508605393 seconds)
  done (took 81.643516384 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.751890072 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.524138149 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.530075695 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.52032394 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.528034878 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.524571007 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.519145619 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.756699468 seconds)
  done (took 16.019391577 seconds)
done (took 267.578873779 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.517368029 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.089261507 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.542231997 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.532328601 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.535448401 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.544104756 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.756931481 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.542662943 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.742033583 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.515940737 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.530075041 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.519535296 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.454508143 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.663604341 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.392767435 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.521949924 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.505596048 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.509799867 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.208373656 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.775524047 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.540223933 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.52564625 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.408918854 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.518256196 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.488376826 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.594691634 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.594628448 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.69215708 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.651557296 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.595590283 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.109557034 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.522745316 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.531150766 seconds)
  done (took 69.540242733 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.518003021 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.525362405 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.529713672 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.527512504 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.52514222 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.530087248 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.520704886 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.527743391 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.527580349 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.527615297 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.527954265 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.530111059 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.52743966 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.527287816 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.527400364 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.505021212 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.52070481 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.528349037 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.519859259 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.501651253 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.52899013 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.527799826 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.528937318 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.528212669 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.530592568 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.530685458 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.532939501 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.52843251 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.529247496 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.531038636 seconds)
  done (took 47.139007374 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.529979932 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.213455742 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.40433944 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.527812697 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.51976487 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.527156027 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.873913311 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.52567907 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.526244067 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.526633181 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.086297861 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.52842094 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.561750723 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.402940152 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.522136033 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.531240067 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.533658459 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.523167123 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.22283168 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.534078468 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.883341565 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.533218634 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.885192075 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.534458073 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.527523562 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.524807368 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.530117573 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.44808741 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.54750876 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.111873904 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.478266496 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.87665332 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.325810341 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.463907818 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.481599888 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.535134646 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.535024932 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.095820204 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.521478851 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.527055829 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.872986294 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.521982066 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.420583384 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.25431892 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.544274182 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.535484631 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.458041334 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.089834951 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.814140153 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.527729748 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.430978793 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.525893321 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.538539301 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.528618951 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.826650674 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.522236046 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.524319306 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.481291649 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.525758678 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.871310662 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.530810832 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.528491407 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.198176834 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.523621641 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.194556929 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.522035457 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.535899136 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.528115134 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.410368539 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.525000717 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.274595281 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.544567516 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.534999624 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.089491674 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.187180507 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.500843991 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.524930808 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.206560345 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.356711589 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.887304117 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.52638608 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.396293573 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.890146414 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.52491633 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.539169412 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.539296392 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.537309706 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.636833526 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.871495168 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.19226418 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.276552354 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.485296616 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.872741362 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.531744919 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.530454649 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.487185163 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.533289854 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.538145208 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.389726955 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.270727424 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.541697899 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.536578345 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.264416935 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.548602952 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.876780299 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.529641785 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.43924294 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.525392157 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.612974002 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.538829932 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.537781728 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.533376134 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.877478518 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.527950998 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.540300805 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.261183212 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.120928939 seconds)
  done (took 215.183884034 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.523577211 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.519560309 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.524572755 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.536256766 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.523779376 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.532752189 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.523810277 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.523862031 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.530795132 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.523292105 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.52481281 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.534813625 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.531456553 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.52468901 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.526666279 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.52068229 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.525712921 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.529981147 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.52008548 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.524133943 seconds)
  done (took 47.904169985 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.54256977 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.212864984 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.179706477 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.538689708 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.542336927 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.534038963 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.601074195 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.54349302 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.542338349 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.891986418 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.741448611 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.546037459 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.539920099 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.542891969 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.176363835 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.51000282 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.889366088 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.197071173 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.538272874 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.201348798 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.509520276 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.540499879 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.533467269 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.199918205 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.896559724 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.874056342 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.599458931 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.204410073 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.53735041 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.543084096 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.20178775 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.53771102 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.536271042 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.188045946 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.540078303 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.555881336 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.543074172 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.607199335 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.608979127 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.894363736 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.204176368 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.88446563 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.551542169 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.707240183 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.546262365 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.511361342 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.216524145 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.538561881 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.515497744 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.544931024 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.549474514 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.190084605 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.529814854 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.190446019 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.539917206 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.545338639 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.20587565 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.185980983 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.173242875 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.742653768 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.536443825 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.882506259 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.542022549 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.218757155 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.541243443 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.543502916 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.545986059 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.750081118 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.204480258 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.888226551 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.894782472 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.89278188 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.541116064 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.618463749 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.546840482 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.90070625 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.613364876 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.948463993 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.89933807 seconds)
  done (took 140.626628823 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.861680212 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.661722455 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.971005829 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.172186792 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.097828936 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.690188856 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.664312143 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.818177569 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.556177472 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.642329238 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.306684869 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.647014205 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.370759112 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.612936607 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.6599529 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.680826176 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.99266985 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.538251935 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.243083658 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.268185539 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.536284844 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.648896446 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.129155667 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.757088133 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.536828664 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.171331693 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.553966959 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.109520998 seconds)
  done (took 58.283311863 seconds)
done (took 580.046093424 seconds)
SAVING RESULT...
DONE!
