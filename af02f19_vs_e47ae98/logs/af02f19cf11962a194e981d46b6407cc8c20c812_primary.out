cset: moving following pidspec: 5288
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.981225142 seconds)
loading group "string"... done (took 0.512035854 seconds)
loading group "linalg"... done (took 9.330618119 seconds)
loading group "parallel"... done (took 0.168978831 seconds)
loading group "find"... done (took 4.087603745 seconds)
loading group "tuple"... done (took 2.062446527 seconds)
loading group "dates"... done (took 1.386984955 seconds)
loading group "micro"... done (took 0.194590109 seconds)
loading group "io"... done (took 0.515188597 seconds)
loading group "scalar"... done (took 57.086901121 seconds)
loading group "sparse"... done (took 14.11597079 seconds)
loading group "broadcast"... done (took 1.335259567 seconds)
loading group "union"... done (took 10.451315105 seconds)
loading group "simd"... done (took 3.622590325 seconds)
loading group "random"... done (took 13.596064784 seconds)
loading group "problem"... done (took 2.224411364 seconds)
loading group "array"... done (took 24.426417332 seconds)
loading group "misc"... done (took 1.160060384 seconds)
loading group "sort"... done (took 3.831609655 seconds)
loading group "collection"... done (took 22.230133455 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.689683724 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.145705085 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.202286508 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.208502086 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.276257812 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.164662009 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.156499072 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.170868381 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.68550785 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.208710929 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.137432005 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.416846185 seconds)
done (took 6.214211088 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.315693548 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.061124715 seconds)
    (2/2) benchmarking "String"...
    done (took 0.16920292 seconds)
  done (took 0.934033769 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.093018888 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.159982376 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.10822266 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.094986394 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.093615347 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.109195894 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.154582886 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.108474799 seconds)
  done (took 1.525417833 seconds)
done (took 3.572370236 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.49803063 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.941165986 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.544946519 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.181481425 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.311308709 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.313516446 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.270502822 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.220262589 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.092960498 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.08578813 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.173158665 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.418842832 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.403504494 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.960113863 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.06983352 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.109379743 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.135867372 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.799207752 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.07883737 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.109812693 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.537170526 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.215354258 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.115315264 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.10666985 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.185772272 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.133728682 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.139261622 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.103230491 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.704298042 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.139563102 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.215115942 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.083238653 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.136733092 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.165157676 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.222657768 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.110006519 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.705424434 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.199712799 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.098980587 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.101636508 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.675571777 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.124984498 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.204302387 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.106413086 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.067738356 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.163528098 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.116471463 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.078113166 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.092972856 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.100795354 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.158859245 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.525149278 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.105851261 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.191164556 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.093706699 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.689563847 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.096844743 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.278471232 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.126377754 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.093135923 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.090054784 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.089406415 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.164148035 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.095012356 seconds)
  done (took 20.399081224 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.171998857 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.191546832 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.077791677 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.161837968 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.126602746 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.098200586 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.089007537 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.079065571 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.131903669 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.183032483 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.14293319 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.193163039 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.07564697 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.089756423 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.168659288 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.237514788 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.124619531 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.103879761 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.089631889 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.110764196 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.128426861 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.112222249 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.096748107 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.098160302 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.171402795 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.206147496 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.107584463 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.121415143 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.08983656 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.099827285 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142135994 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.149370614 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.091743075 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.088927989 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.176432165 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.122302325 seconds)
  done (took 5.368968183 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.232586962 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.103729381 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.246890814 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.196721006 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.151448772 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.182314016 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.174884188 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.301627513 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.315836294 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.160313021 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12746247 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.096731934 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079541182 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.079233748 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.094551633 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.817497383 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.170347943 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.16491277 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.182885422 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096777507 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.098267196 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.363897177 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.099967339 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.086217523 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.10983598 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.064700186 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.221239914 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095634332 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.486706786 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.082022814 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.116182854 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113563134 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.205196035 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.183000043 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.141292711 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.121032699 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.114358515 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.087059634 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.216998535 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.101983063 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.094318598 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.080974039 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130797704 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.114115961 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.107865039 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.108626173 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.134053004 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.087519196 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.11149322 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.074094805 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.193261474 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.145829866 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.101636619 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.269888723 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.128255317 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101486811 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.108597817 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.804727593 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.135513008 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.085435278 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.095119443 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100557115 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.077628231 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.829788317 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.108445045 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.309218318 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.081096437 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.160561042 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096518828 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.117552838 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086129379 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100131435 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.111445271 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.086585143 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.095374518 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.085548211 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.07965012 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.105710216 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.113190359 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.084927129 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101090628 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.080745363 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.147326755 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.09852007 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.096800572 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.10694384 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125640517 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.090802878 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.10146203 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113604748 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098693456 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.08851243 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.185336449 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.097235545 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.131147996 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112936294 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.128162107 seconds)
    (98/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.085662127 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.102544234 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.267336174 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.094318376 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.121867243 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099566546 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112678296 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.117224615 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082090116 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084370427 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.09544774 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.081862795 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.147630559 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.101511209 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.081487764 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.088520152 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.109104128 seconds)
  done (took 27.745985044 seconds)
done (took 54.210732983 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.416330593 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.082042669 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.080994614 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.101922668 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.083286858 seconds)
  done (took 1.53471695 seconds)
done (took 2.277964954 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.3046645 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.201978112 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.087258619 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.189511675 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086007325 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.195806439 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.184110187 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.101023602 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.206803103 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.085310026 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.191281001 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085382979 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.104319894 seconds)
  done (took 2.797445836 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.103540656 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.105538871 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.102300226 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.119304597 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086711873 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101775195 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.118045045 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10760013 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.101660351 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.113696184 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087033075 seconds)
  done (took 1.893894077 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.101015799 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.104272024 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.093044155 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.116565098 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086613952 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098418794 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.115868273 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10623085 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.098135619 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.113429835 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.086872641 seconds)
  done (took 1.871252328 seconds)
done (took 7.311728081 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.203258749 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.949433994 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.163152258 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.243138112 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.345446182 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.29638009 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.612083975 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.201621006 seconds)
  done (took 15.89458737 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.117738847 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.188420987 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.089963042 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.091850958 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.109776638 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.091373497 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.095065651 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.116057951 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.095315805 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.091487117 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.095894116 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.109755245 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.095503026 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.09225245 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.112792855 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.096289043 seconds)
  done (took 2.509352269 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.135799152 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.116048441 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.116230686 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.10133612 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.094521834 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.11843091 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.102998136 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.097313769 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.113359768 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.096216559 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.103160294 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.115915775 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.098373593 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.09419228 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.116246708 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.117861688 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.094858649 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.115940666 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.117913445 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.116552136 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.100079152 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.097928283 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.115931099 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.099513253 seconds)
  done (took 3.436824498 seconds)
done (took 22.594131375 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.148430135 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.101753461 seconds)
  done (took 1.009827621 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.163086954 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.181709489 seconds)
  done (took 1.110023609 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.112564805 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.090855537 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.13686643 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.103299807 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.091376569 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.108012924 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.11806178 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.108821225 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.091533364 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.09319803 seconds)
  done (took 1.825852746 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.095299049 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.097390007 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.123460059 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.166750869 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.11799299 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.093641926 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.09670963 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.112702607 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.098015711 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.092253028 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.113844398 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.109730356 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.096505624 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.126520557 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.096976826 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.096438481 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.117269244 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.095372674 seconds)
  done (took 2.714863451 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.091932381 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.094571132 seconds)
  done (took 0.955593356 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.094067403 seconds)
    (2/7) benchmarking "second"...
    done (took 0.091637385 seconds)
    (3/7) benchmarking "month"...
    done (took 0.09336074 seconds)
    (4/7) benchmarking "year"...
    done (took 0.109803597 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.091550024 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.089705604 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.108557186 seconds)
  done (took 1.448016023 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.531141421 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.240489279 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.376266001 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072712616 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.12451777 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.326679057 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.105558395 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.073864958 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.091924644 seconds)
  done (took 2.748081208 seconds)
done (took 12.580235848 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.092268628 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.440259122 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.630828762 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.131665641 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.092154804 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.147545466 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.332442948 seconds)
done (took 2.640969305 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.354147942 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.165408098 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.084980264 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.092085605 seconds)
  done (took 1.464703956 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.08397058 seconds)
    (2/2) benchmarking "read"...
    done (took 0.100346923 seconds)
  done (took 0.960911711 seconds)
done (took 3.202347186 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090321877 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.089812546 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.129552632 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.090226143 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.089144616 seconds)
    (6/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.089393968 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.109677876 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.089668943 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.089050929 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.088728328 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.108772768 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.090985151 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09040049 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105407087 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090385643 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.209601215 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.088344608 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.106630415 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091176264 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090371347 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.10598985 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08847107 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.089090351 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.087299948 seconds)
  done (took 3.207546861 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.110675784 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.091884662 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.111439942 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.093701477 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.093729644 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.110500058 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.094209421 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.092322465 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.111964236 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.091126251 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093921051 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.094116769 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.108573469 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.093616978 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09117579 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.110861491 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.094436489 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090920248 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107882177 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.095046218 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.092680604 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108549915 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.094468812 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09265182 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.112076514 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094334405 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.09087994 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.109650864 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09481405 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.094590409 seconds)
  done (took 3.744144338 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.098131945 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.088523616 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.089980231 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.115787965 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.087477772 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.091266934 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.103893973 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.092069517 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.091295233 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.089880846 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.109677266 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.090258718 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.090687816 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.108499907 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.092540175 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.093652947 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.11627193 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.091926229 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.090442218 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.091252521 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.11037117 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.090935612 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.090403365 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.107941688 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.09047855 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.087504781 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.090169471 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.107255259 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.092198547 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.090103483 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.110210437 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.095165626 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.089845966 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.100655914 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.110369966 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.091191532 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.097166365 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.106080726 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.091078445 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.086903649 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.086924423 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.108275097 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.090195521 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.097483809 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.10816917 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.090396167 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.091190379 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.109714833 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.090987873 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.093238062 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.086972428 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.107064822 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.093249252 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.091371906 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.109276598 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.086762019 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.089958103 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.086096993 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.109207232 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.091068001 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.086262555 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.103717833 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.095183905 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.091664032 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.121659032 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.096568359 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.089397469 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.090998503 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.108300363 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.096344163 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.092634374 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.118268596 seconds)
  done (took 7.749971012 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.11419513 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.098748673 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.108683327 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.091888379 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092467082 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.089745376 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.113150435 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091934035 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092202946 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.115203938 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091921465 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.091131908 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108691458 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.091753588 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092161262 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.091912792 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.114447108 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092077476 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.091322458 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.109755982 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093237765 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.096013618 seconds)
  done (took 2.957956258 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.242808552 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.096590068 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.140122291 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.122352164 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109253739 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.121948853 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.095076147 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.09606294 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111028033 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100554554 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100007805 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113049172 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.110318993 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099480256 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.117203564 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.102371151 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111446351 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.102794614 seconds)
  done (took 2.881371256 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.104122486 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.094388847 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.153758775 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.092426733 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.093775509 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.112925676 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098407613 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.112933484 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.112897202 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.093670655 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.100155206 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110131365 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.094368967 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093732374 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111056642 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.092906658 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.093207247 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091651181 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.11674869 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099908442 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.114651143 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.099598264 seconds)
  done (took 3.077723722 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106679602 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.09462027 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.127376088 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.096116054 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.092694004 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.091456702 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.116441222 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.093500653 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.098511197 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.11057409 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093979264 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.092914743 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.125750578 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.096481746 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.098741809 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.110806556 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.095212653 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.092760871 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112763846 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.092961619 seconds)
  done (took 2.83168424 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.195086798 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.126632317 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.109364547 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.117316185 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12756798 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.110702529 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.13588499 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.108963342 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.113016532 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.137875788 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10974214 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.110268073 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.135924427 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115887973 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126619706 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118243754 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.117296143 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.134254738 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.110344232 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.126599289 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122705908 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.109518781 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.13524238 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.110143048 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.109211459 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.12703572 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110156789 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.131539794 seconds)
  done (took 4.236918093 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092067908 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.091228879 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.090857104 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.110207963 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.092624534 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.09183687 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.091084965 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.109305773 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.092324498 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.091380923 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.109546923 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.092256631 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.091937282 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.091601981 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.109432862 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.093058379 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092072864 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.109612605 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092356356 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091982173 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.091047312 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109155128 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.092045542 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.091265487 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110126686 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.092256485 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091891316 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.090738932 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110384792 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.093188994 seconds)
  done (took 3.692349593 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.104115162 seconds)
    (2/2) benchmarking "in"...
    done (took 0.101918841 seconds)
  done (took 1.003079612 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.099170262 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10660846 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.091706449 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.110639335 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.099130002 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.09311198 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.118565246 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099566749 seconds)
  done (took 1.616357733 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.165162292 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.188349699 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.097336089 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.123099415 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.170278986 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.179738176 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.130426219 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.117401754 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.093038429 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.085315404 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.184062854 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.0843831 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.111400013 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.090716789 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.092683133 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.118560746 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.094159341 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.101543068 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.119604058 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.095068593 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.098168239 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116080617 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.096877677 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.103653924 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.10696941 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.097024444 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.097625465 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.124224542 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089778821 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.094305001 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.10864734 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.093374102 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.097263286 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.097651532 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.111726694 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.169008438 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.120441668 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09025993 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.113208939 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.097783407 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.127873218 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.092803001 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.114931797 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.093421822 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09719947 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.116238583 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.09946024 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.094769532 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.10368072 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.089789819 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.094123919 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.107084653 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.093254668 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.095256797 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.110725718 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.100571422 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.097226446 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.107931158 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.090052322 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.089714426 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.110293319 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.091512529 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.096000342 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.09729506 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.112495735 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.094861722 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092839236 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.1119868 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.096661214 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.094457486 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.11245844 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108795103 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.093581202 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.11625422 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.099194997 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.095437354 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.108659537 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.09947995 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092886978 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.112325467 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.09790044 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.122979305 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.113987816 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.089101849 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.090047739 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.119561828 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.097162819 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.097203266 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.087176276 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.120138632 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.09585013 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.094291353 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.103943677 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.092714112 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088861526 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.116921178 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.08722049 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.095333247 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.11132294 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.099976144 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100219847 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.109999157 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.096015298 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.099720743 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.116770645 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.094741652 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.157038394 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.110484643 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.090572659 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.09526623 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.118691975 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.088900515 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.09339491 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.112705709 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09163215 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.089360454 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.116146748 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.094945089 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.095540319 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.098575982 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.115187307 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.09583856 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.095341397 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.112385856 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.09053189 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.098783115 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.121188444 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.096261506 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.095540527 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.113309689 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.094858845 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.094576397 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.11667167 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.091624954 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.099844617 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109094853 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.094968536 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.095434898 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.0983967 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.113216272 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.089968776 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.092084558 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.113725165 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.09351095 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.096507969 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.113761831 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.09047441 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.086838131 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.113546542 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.090162564 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.095440773 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.120110973 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.090763859 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.096539961 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.109338496 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104244454 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.091952672 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.098322349 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.117169675 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.100829499 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.099215695 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.106083898 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.092191499 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.096099826 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.114641694 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.090321668 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.095980003 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.112717945 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.101266909 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.08795455 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.096990642 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.105901127 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.092143908 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.099496498 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.115213352 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.098505558 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.090485274 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.151867506 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.106614498 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100789724 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.113348401 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.094776813 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.098797762 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.113227049 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.100634663 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.100311914 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.118447857 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.09592712 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.093438798 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.09879004 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.109889954 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.096602905 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092466537 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.115278787 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.087630154 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.094896497 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.106466488 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.098883723 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.096099488 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.117163452 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.100259453 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.096507659 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.111785949 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104310635 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.091338613 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.09774058 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.106417691 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.100113246 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.103212546 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.120741132 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.099850939 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.095781894 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110799535 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.096444165 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103599683 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.116518396 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.095172532 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.096006611 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.106558813 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.089349511 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.100050348 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.097048043 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.112725063 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.094494408 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09555813 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.116029051 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.092681714 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.087246386 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.119413223 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.099596099 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.090688128 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.114428647 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.0910023 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.092987773 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.122265975 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.088479047 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.092053249 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.115429695 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.099215216 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.095500678 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.09412249 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.117097041 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.101119398 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.097777447 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.116309952 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092616455 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102670542 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.111432128 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.104721005 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.091467509 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.097767663 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.108158317 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.095999829 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.095365017 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.11149995 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.091297834 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098280799 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.119898203 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.100227769 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093404883 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.119940537 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.101402 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.101023154 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111912236 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.099869854 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.091078187 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.105818909 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.092137206 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.088054584 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.096370006 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.111183541 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.100909914 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.092054715 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.113773152 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.098664931 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096161497 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.112198797 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.100685719 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104757516 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.107817362 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.088668016 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092370407 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.113687199 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.09170747 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.09146175 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.115426664 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096279095 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.099251735 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.127515876 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.091518162 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.094543557 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.100518036 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.110600534 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.10100754 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.099646145 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.120289238 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.090836877 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.100129251 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.112599531 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.099340999 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.08923666 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.114321453 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093089957 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094396502 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.112162865 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.093351149 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.092199437 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.106729536 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.091832706 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.101022128 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.092690798 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.119329567 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.094421261 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.092353462 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.112056986 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091751767 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.100389246 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.114026206 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.102645841 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.095743374 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.108284404 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.089388522 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.10082942 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094661218 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.122143326 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.091014314 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.098414288 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.121513223 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.098849636 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.09533103 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.122359033 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104992376 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.100257022 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.120317127 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.087557887 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.092933107 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119274642 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.095529132 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.098563911 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.095957832 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.11088318 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.0981613 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.100624517 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.116394856 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.094077591 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.088626552 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.11603124 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.101385325 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.09858016 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.098861625 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.118012831 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.097445874 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.089964857 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.118271785 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.101136052 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.09602404 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.122254679 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.096192438 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.099664225 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.113138681 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.101896411 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.096678212 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.110326716 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.089133103 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.092065956 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.101179877 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.109579778 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.10038073 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.098993989 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.112277134 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.095160902 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.099835771 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.112490044 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09750208 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099471614 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.113582891 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104828011 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.09654776 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.093370493 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.119840965 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.101238495 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.088499393 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.115069508 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094438006 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10096183 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.114053015 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.100597998 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095256189 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.11998251 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.097522551 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.099326386 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.099590079 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.120398663 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.089939894 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.101216147 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.119818604 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.098100196 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.091509227 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.113987588 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.091950439 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.094130581 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.121066321 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.093255416 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103222806 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.121559197 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.093967937 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.092162217 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.100298461 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.114736278 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101961218 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.091197053 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.118295688 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.090209422 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.096709706 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.115262918 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.103878016 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.091026625 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.109603983 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099858658 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.099538437 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.120278783 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.098558556 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.100911308 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.089618514 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.110009176 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.097902211 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.091727151 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.125323728 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.099009892 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.09292348 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.113859668 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.097324922 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.096351885 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.121896619 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.090434205 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.092714824 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.115668071 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.099387327 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.093304697 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.089611903 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.120391557 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.094746246 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096867134 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.115037687 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.090614904 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.09350923 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.122951438 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.093821042 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.091687266 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.112970389 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102763638 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.094192602 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.111843504 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.090144215 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.102665787 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.117095773 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103138983 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.09212952 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.115664305 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.093291442 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.097385337 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.100935003 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.114354515 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096227718 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.092453096 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.121024569 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101126572 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.087513143 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.113920635 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105059925 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099755197 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.11828366 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.098514009 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.094019607 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.123325986 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101786483 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.098358101 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.08918522 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.111197211 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.094469476 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.088646402 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.119270797 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101650486 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.093939737 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.114482125 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099731266 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099083874 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.117747645 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.099236321 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.089372284 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102211884 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.114188194 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.098993015 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.089124351 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.109682116 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.099377196 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100520877 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.114672012 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.096060776 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.097499874 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.096935835 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.11242983 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.093783315 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.098837007 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.121794215 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.100821522 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09779613 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.11497653 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.10000502 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106686923 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.118839744 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.095347163 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.103230358 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.121822242 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.097909787 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.096292618 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.119418482 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.103220227 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.098477916 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.103058753 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.114983113 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.095563011 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.102792722 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.123476185 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.105935468 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095254366 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.111968024 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.099942256 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.093135809 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.111313962 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.100058534 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102268984 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.121663038 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.096289041 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.09363655 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.124444483 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.1013672 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096214364 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.114064359 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.093853869 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.100361053 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.092842525 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.121361495 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.093464009 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.101997683 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.124337936 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101339171 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.104995892 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.109976313 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.103087428 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.098524377 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.124187198 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.097456344 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.090028753 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.08985912 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.119824943 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.102778703 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.100967056 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.121201135 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.099936389 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.10007336 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.118029555 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097024627 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.094172748 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.123833192 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.102034523 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.097815808 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.097972822 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.116630764 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.097157634 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.0965308 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.122674215 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.102786574 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.097803414 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.126908991 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.103553318 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.093815134 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.113763754 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.098854067 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.098854183 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.11901941 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101823248 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.092784666 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.089961626 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.123241222 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.103077542 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095942494 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.124874881 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104164664 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.094103173 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.121607722 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104768755 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.101616473 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.119432897 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.097997927 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.098392028 seconds)
  done (took 62.440203952 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.145822765 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.104314884 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.118874264 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.09942781 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114858279 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121764338 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.0998426 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099242083 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.120971779 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.10831659 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.098295113 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119672065 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115390899 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.11844025 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.137265025 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109080886 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118974897 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099959041 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098478526 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099322714 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.132619574 seconds)
  done (took 3.231753685 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.116364833 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.111742077 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.131478708 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.113414538 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105478277 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.129672993 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.110255487 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.129912826 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.112373761 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106181704 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.133254876 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.1100451 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.126946753 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.107415575 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106737714 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.128806887 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.113189862 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104468758 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.131678367 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.109530242 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.127531608 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.110424531 seconds)
  done (took 3.426059611 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.127959623 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102134563 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.096469402 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.11899623 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.102965161 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.09812979 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.121794808 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.099052938 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.107438032 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.093456368 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.110347264 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.095163551 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.098078657 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.119561 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.09294746 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.098459878 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.127583608 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.10204958 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.102397981 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.097558368 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.111273204 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.100336102 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.098972617 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.10942203 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.10453208 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.10350948 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.098544269 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.123483368 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.089940803 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.102566869 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.12055468 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.092804806 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.090306839 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.109735047 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.090730092 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.101131604 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.101018529 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.120340076 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.099726996 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.089991748 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.12066905 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.104380591 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.089693451 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.099032555 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.120762394 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.093274635 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.102617352 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.119024339 seconds)
  done (took 5.874426267 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.12734977 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.157461684 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.10253626 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.127418613 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.135770605 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.109014604 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.102112815 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.129897998 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.099984224 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.125314229 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.113966288 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.112825988 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.127271704 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.106692787 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.101999503 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.126216531 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103973459 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101620465 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.129171632 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103059707 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.107084622 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.12527809 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.113820942 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.133959782 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.105256286 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102323292 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.122066601 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.106193754 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.111660975 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.129400248 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.106697126 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108063079 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.134310442 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.104347615 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.102711813 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.125610486 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.115158064 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.353860208 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.12568227 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.100683772 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.104003699 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.125939435 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.104798603 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.114102491 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.125513964 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.105935554 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103516414 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.122598252 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.113802594 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.124166728 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.111205066 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.113320147 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.127228397 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.104049163 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.106684838 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.136628351 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.104442629 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.102854178 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.126255932 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.113734478 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.101236457 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.127405648 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.113249899 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.103333241 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.131053555 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.113078469 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.125655133 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.105084899 seconds)
  done (took 9.078496411 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.132035763 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.10694641 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.137105406 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114635082 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106739233 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.128386099 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.106311064 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.105554012 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.127418458 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11086658 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.128435823 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.225055925 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.127228862 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.110844309 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.105065918 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.129779871 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.106047725 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.128611433 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.107603589 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106532718 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.127250933 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.114673684 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.106651621 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.134348684 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.117361219 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.102377659 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.127318897 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.107113047 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.13584212 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.106529434 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.116919709 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.127874563 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.109179272 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.112380623 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.139140759 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.10725885 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.122963165 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.10768302 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.106574741 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.126849633 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105028372 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.115002079 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.128562189 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105310842 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106881002 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.127579534 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.115700232 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.140037212 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.11216684 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.112134898 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.128257111 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.116875608 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.107063394 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.129594625 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.115244059 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.143385231 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114732257 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.113899501 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.129801763 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.115528515 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.136940256 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.122154664 seconds)
  done (took 8.315495621 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100028305 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099714018 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.099644084 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.120397024 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.10081662 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.10079095 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.098832174 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.123332729 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.102397393 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.099611278 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.121292733 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100432358 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099437369 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100640313 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.120786844 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100168628 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100034761 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.119598556 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099945814 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099807991 seconds)
  done (took 2.977135102 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.110413733 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.117593774 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.122808109 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.108544254 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.103159775 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.129518977 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.103211883 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10276658 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103180262 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.124045501 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.11022206 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.131432437 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104102043 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.108545475 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.131186218 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108544838 seconds)
  done (took 2.690485163 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.119833552 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.118287432 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.21279521 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.104412177 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.125357126 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.109700511 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.102425797 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.126310667 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.101215085 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.107489389 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.128522274 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.105579991 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.103264683 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.10194281 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.12509151 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.104215549 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100574311 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.127847272 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.103266084 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.214767864 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.1059583 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103768004 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.126064583 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.106304506 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.102957108 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.129348069 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.109031901 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.10256901 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.128303741 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.103443416 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.104184238 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.131239241 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101691637 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.106273496 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.12475888 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.10296534 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.104760303 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.103608178 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.127659358 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.103453567 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.105741086 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.127173093 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.103103098 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.104724773 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.121737709 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.104561505 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.102361013 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.128961057 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.104009192 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.105057219 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.102751597 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.129564106 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.107325732 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.110510292 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.132065842 seconds)
  done (took 7.233573782 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.113718293 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103790986 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.136213611 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.101258482 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.103523316 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.103762829 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.126622429 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.105569353 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104484398 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.124268911 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.10536913 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.105272951 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.126697795 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.104906786 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.104253674 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.126853174 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.10096537 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.104140168 seconds)
  done (took 2.876272028 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.108200401 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.103130854 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.107040828 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.125746668 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.104000756 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.102741136 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.124183579 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.10298015 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101711749 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.102511183 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.125648759 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.105146915 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10198173 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.125297755 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.10362184 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101944312 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.124819745 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101984983 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.1035447 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102692135 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.126403867 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102706294 seconds)
  done (took 3.287183347 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.114314604 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.21308362 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.109811354 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.222324415 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.099641862 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.121698728 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.109786332 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.100842233 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.140027227 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.099413258 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.098440532 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.121075773 seconds)
  done (took 2.428993358 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130654735 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139556064 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.127636085 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104879905 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113109606 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131079826 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108843201 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107504911 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139829488 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11804784 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130370245 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117070947 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11629344 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.138822317 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113070524 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135072158 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108412694 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108849247 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125765137 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124409748 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108214021 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137243138 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108620932 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108201221 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13032523 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116245636 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138552824 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119316605 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109387519 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139257976 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11233845 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128967375 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115961386 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118812928 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126173092 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116076927 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108188577 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144672037 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112646253 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139062536 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105019776 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112774149 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136845588 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113668669 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137684257 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109359281 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112731079 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129616755 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10743246 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127892974 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135913146 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115291671 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135539142 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116020291 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11572449 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.149730833 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11948116 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.138677886 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113557181 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.141915825 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116590535 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112179091 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137352338 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119152615 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135189596 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115786617 seconds)
  done (took 8.970322414 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142126957 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104982382 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131443858 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119949002 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137342094 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10858197 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109025506 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130426296 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109175099 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104385484 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.173769282 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108035521 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13722024 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117968541 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108169764 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13137024 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107750588 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117632864 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127780755 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129959375 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130899484 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116702882 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117164086 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139646282 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121071833 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134722931 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108960101 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108156576 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129560441 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108847907 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114483993 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131822641 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115955573 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104866467 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138829815 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108926294 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109933035 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136381129 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109428903 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134296324 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117426873 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12373458 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.13132123 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109833658 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142727085 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111653613 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108251671 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127373895 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108610301 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105469318 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142202649 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119684825 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.142012518 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117033064 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108276688 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131578432 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108367505 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107634075 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131398812 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113758231 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136757943 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109323695 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129160719 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132055942 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110005322 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11686993 seconds)
  done (took 8.911671468 seconds)
done (took 169.519124326 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.173685746 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.21521985 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.196190891 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.186192728 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.094618148 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.15205255 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.127732189 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.197699161 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.094996492 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.093984101 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.094127707 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.120052256 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.20410659 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.094659871 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.117658598 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.097266498 seconds)
  done (took 3.145210442 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.197568889 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.345665771 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109538004 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.122233238 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.102241454 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.099329526 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.122585733 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.101613547 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.099245367 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.130024877 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.101163758 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.095741432 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.130268144 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.097448133 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.099950095 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.121928 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.109368075 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.10008016 seconds)
  done (took 3.182601193 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.12038127 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.15218585 seconds)
  done (took 1.167845248 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.131542998 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.216125959 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.295715183 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.172419322 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.120541463 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.141160667 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.151053192 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.136026698 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.19063907 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.136144811 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.113190225 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097619392 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.14912507 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.105340896 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.138967733 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.09765198 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.128663513 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.136901618 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.114501542 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.101380525 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.146370006 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.103809843 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.105561164 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.138213022 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.180785793 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.136554242 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.104035624 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.102486591 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.125618725 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.114121174 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.105628243 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.139023232 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.111582711 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.180737723 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.103411633 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.17773433 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.106637847 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.124562387 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114332597 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.100064151 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.126471948 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.10457525 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.134954432 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.098591403 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.104403733 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.128307471 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.104437083 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.103766975 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.130650491 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.108272498 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.107932898 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.129807396 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.176233239 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.108770591 seconds)
  done (took 7.958807248 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.890371353 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.146805271 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099093061 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.032576365 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.14413712 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112001963 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.876657232 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.147768036 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.255933951 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.878759461 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.118005697 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.106632892 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.264543702 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.258176793 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.282931084 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.362142839 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.741561553 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.111767968 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.130524919 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.165354837 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106087381 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.140723415 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.11772296 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.520172373 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.100719497 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.100611606 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.128161339 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.108437773 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.18220707 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.100431506 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.103859879 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.195998744 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.293133516 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.213662604 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.100521098 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.122416251 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100293825 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.187011509 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.281001921 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.223075739 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.171789169 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119560679 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.100407927 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.10476619 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.136720812 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.097760073 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.179630098 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.190881594 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.167894097 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.127311281 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.110377959 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.108490545 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.126597648 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.177051213 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.098576883 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.360898525 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.364168557 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.12168081 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107043153 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.111800125 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267714947 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.125747142 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.240951196 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.12408657 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.218576408 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.123609034 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.836162929 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.1639097 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.123339211 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.105310556 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.106325942 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.130056351 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.104695497 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.190760705 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.481278216 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.128889787 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.105141635 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098992562 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.233059197 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.12428994 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.09943624 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.183802918 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.101116728 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.106661154 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.130538661 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106655818 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.189745059 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.270821446 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.107766692 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.105961215 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.127465666 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.110937323 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.101986051 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.235013767 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.231154978 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.17598859 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.231006416 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.105266358 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.182180713 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.185978579 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.104938532 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.187714494 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.106044666 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.111590184 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126691987 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.22810194 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.15557137 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.103479849 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.106605012 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.128315846 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.136884947 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104447899 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.128383148 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.164819244 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.559256836 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.187010257 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.097840602 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127179616 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109161487 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.182163965 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107171995 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266205217 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.129570966 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.163480216 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.129040228 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.099033721 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.107864004 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.17881893 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.10803487 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.128960924 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.104386995 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.130747088 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.258825548 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.223720799 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.133438614 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.255246232 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.177873234 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.129262108 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.170245008 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129922483 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.192268192 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.111721635 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.105194994 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124051303 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.82358879 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.112617927 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.105548494 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.129207792 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.184576264 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.124094831 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103587109 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.100862526 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.123652923 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.820703211 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.104445361 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.099692683 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102129206 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.128696038 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.107753123 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.128597108 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.107133463 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.178197095 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.248319787 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110564393 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.128353461 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.100248832 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.182011208 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.103271792 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.101507475 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.12274102 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.102413178 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.107513001 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.127752938 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104307101 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.191731956 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.155292589 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.254140482 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.639647715 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.101646481 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.101105096 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.242376457 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.12530964 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.3323975 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107683801 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.235428502 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.186401632 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.097381073 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.387020506 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.164827112 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.20973405 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.105224706 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.191915614 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.098307548 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.129742724 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.156174281 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.123978194 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.107927224 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.177278374 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.110569785 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.129982758 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.282348488 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.101716044 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.253234109 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.098725618 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.19195521 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.101968319 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105840783 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.351322143 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.101741106 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.11234086 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.18073597 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.105764701 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.124836603 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.679400955 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.101830991 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.109919494 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.128494256 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.238182857 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.185774512 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.107805431 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.108071529 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.133005887 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.178719526 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.211550145 seconds)
  done (took 47.774283163 seconds)
done (took 64.12334547 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.258485155 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.171200704 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.375707327 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.152453785 seconds)
  done (took 1.948537343 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.268363174 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.175356011 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.252904852 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.098646731 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.25800953 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.097289463 seconds)
  done (took 2.075943326 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.178742816 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.17015566 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.148056629 seconds)
  done (took 1.421489531 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.210229368 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.208129636 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.348078123 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.260818969 seconds)
  done (took 2.035413264 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.28291639 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.116256071 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.126425071 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.235286977 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.251478356 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.206692754 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.124181358 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.175015336 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.130470476 seconds)
  done (took 2.607144737 seconds)
done (took 11.013621778 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.218146695 seconds)
    (2/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.251148026 seconds)
    (3/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.222451053 seconds)
    (4/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.402789391 seconds)
    (5/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.40502053 seconds)
    (6/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.314300855 seconds)
    (7/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.309490192 seconds)
    (8/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.329356624 seconds)
    (9/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.084941187 seconds)
    (10/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.10939991 seconds)
    (11/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.278411584 seconds)
    (12/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.103020747 seconds)
    (13/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.218013453 seconds)
    (14/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.109654411 seconds)
    (15/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.381485811 seconds)
    (16/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.36926269 seconds)
    (17/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.117362978 seconds)
    (18/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.14642272 seconds)
    (19/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.173693412 seconds)
    (20/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.199991616 seconds)
    (21/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.124219135 seconds)
    (22/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.10969731 seconds)
    (23/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.135742252 seconds)
    (24/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.12382281 seconds)
    (25/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.117183337 seconds)
    (26/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.128319175 seconds)
    (27/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.358705595 seconds)
    (28/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.130176646 seconds)
    (29/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.07996411 seconds)
    (30/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.102254602 seconds)
    (31/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.209692857 seconds)
    (32/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.081066863 seconds)
    (33/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.085203454 seconds)
    (34/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.155051191 seconds)
    (35/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.281047692 seconds)
    (36/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.132869598 seconds)
    (37/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.131743633 seconds)
    (38/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.131712966 seconds)
    (39/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.302591115 seconds)
    (40/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.204533343 seconds)
    (41/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.170600091 seconds)
    (42/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.112094759 seconds)
    (43/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.147081091 seconds)
    (44/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.244299493 seconds)
    (45/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.138658651 seconds)
    (46/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.100702711 seconds)
    (47/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.33095425 seconds)
    (48/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.245699315 seconds)
    (49/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.176037329 seconds)
    (50/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.202357457 seconds)
    (51/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.078408622 seconds)
    (52/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.178409068 seconds)
    (53/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.100885638 seconds)
    (54/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.085563709 seconds)
    (55/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.087512548 seconds)
    (56/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.167722957 seconds)
    (57/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.196139093 seconds)
    (58/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.269543049 seconds)
    (59/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.089972548 seconds)
    (60/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.111602878 seconds)
    (61/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.128293723 seconds)
    (62/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.149377234 seconds)
    (63/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.109919078 seconds)
    (64/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.13535856 seconds)
    (65/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.119861149 seconds)
    (66/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.141514997 seconds)
    (67/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.12745175 seconds)
    (68/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.199809357 seconds)
    (69/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.084633839 seconds)
    (70/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.131764171 seconds)
    (71/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.103489999 seconds)
    (72/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.082827413 seconds)
    (73/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.085997218 seconds)
    (74/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.159723112 seconds)
    (75/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.104969388 seconds)
    (76/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.150150766 seconds)
    (77/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.148115598 seconds)
    (78/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.087085772 seconds)
    (79/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.081391093 seconds)
    (80/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.10914121 seconds)
    (81/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.138915858 seconds)
    (82/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.080577175 seconds)
    (83/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.14384465 seconds)
    (84/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.138887933 seconds)
    (85/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.172469064 seconds)
    (86/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.08168099 seconds)
    (87/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.099681918 seconds)
    (88/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.079073157 seconds)
    (89/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.078857479 seconds)
    (90/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.104152531 seconds)
    (91/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.183195007 seconds)
    (92/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.085717581 seconds)
    (93/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.147269176 seconds)
    (94/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.109461431 seconds)
    (95/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.10697303 seconds)
    (96/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.147073051 seconds)
    (97/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.082776967 seconds)
    (98/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.085667934 seconds)
    (99/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.111241826 seconds)
    (100/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.143293715 seconds)
    (101/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.102797463 seconds)
    (102/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.079816076 seconds)
    (103/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.100989727 seconds)
    (104/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.109229768 seconds)
    (105/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.102062843 seconds)
    (106/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.110962578 seconds)
    (107/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.086319982 seconds)
    (108/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.229122807 seconds)
    (109/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.101130507 seconds)
    (110/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.084344995 seconds)
    (111/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.151895884 seconds)
    (112/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.209369361 seconds)
    (113/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.104630411 seconds)
    (114/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.189498341 seconds)
    (115/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.112830403 seconds)
    (116/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.138032501 seconds)
    (117/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.173318132 seconds)
    (118/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.086022977 seconds)
    (119/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.108434636 seconds)
    (120/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.147829605 seconds)
    (121/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.110480225 seconds)
    (122/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.129304362 seconds)
    (123/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.105456362 seconds)
    (124/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.104158491 seconds)
    (125/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.079414812 seconds)
    (126/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.13562703 seconds)
    (127/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.080179659 seconds)
    (128/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.176607743 seconds)
    (129/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.079030424 seconds)
    (130/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.137804963 seconds)
    (131/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.087526666 seconds)
    (132/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.130775515 seconds)
    (133/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.129699168 seconds)
    (134/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.081526428 seconds)
    (135/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.111697091 seconds)
    (136/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.080289467 seconds)
    (137/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.149746705 seconds)
    (138/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.125265262 seconds)
    (139/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.147330303 seconds)
    (140/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.080729162 seconds)
    (141/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.107193013 seconds)
    (142/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.112642426 seconds)
    (143/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.08058466 seconds)
    (144/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.083226383 seconds)
    (145/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.13617718 seconds)
    (146/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.087749065 seconds)
    (147/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.132745047 seconds)
    (148/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.085728486 seconds)
    (149/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.112702423 seconds)
    (150/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.081109338 seconds)
    (151/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.105938351 seconds)
    (152/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.13565363 seconds)
    (153/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.105726037 seconds)
    (154/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.108535728 seconds)
    (155/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.111101212 seconds)
    (156/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.140403361 seconds)
    (157/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.103710926 seconds)
    (158/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.095153802 seconds)
    (159/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.102237386 seconds)
    (160/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.079069642 seconds)
    (161/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.107020316 seconds)
    (162/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.111294815 seconds)
    (163/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.105943399 seconds)
    (164/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.109909279 seconds)
    (165/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.15791171 seconds)
    (166/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.12511171 seconds)
    (167/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.11137555 seconds)
    (168/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.110691824 seconds)
    (169/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.141845527 seconds)
    (170/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.085714775 seconds)
    (171/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.087837618 seconds)
    (172/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.125967899 seconds)
    (173/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.105521708 seconds)
    (174/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.083457459 seconds)
    (175/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.10106428 seconds)
    (176/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.111270816 seconds)
    (177/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.082881209 seconds)
    (178/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.082748365 seconds)
    (179/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.123102808 seconds)
    (180/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.130635993 seconds)
    (181/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.079750267 seconds)
    (182/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.131212864 seconds)
    (183/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.128047574 seconds)
    (184/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.087245344 seconds)
    (185/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.134973278 seconds)
    (186/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.086348378 seconds)
    (187/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.131635713 seconds)
    (188/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.08353972 seconds)
    (189/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.086329678 seconds)
    (190/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.087832668 seconds)
    (191/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.13858051 seconds)
    (192/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.083624019 seconds)
  done (took 27.406085311 seconds)
done (took 28.337492585 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.224730872 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.132067732 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.111899061 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.110931226 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.232805387 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.119016995 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.153809757 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.113439447 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.120848189 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.136679035 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.102713921 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.12436967 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.136257522 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.206536588 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.140966997 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.103950261 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.103205049 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.148291597 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.128218013 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.127528045 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.231737695 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.104386957 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.147956326 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.103282884 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.235132431 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.106170425 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.110015319 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.138564587 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.125569821 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.112381798 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.137789228 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.103551335 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.127862868 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.151047066 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.103399774 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.111539417 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102103763 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.11163137 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.11213358 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112197301 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.150699223 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.113442458 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111431241 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.129766166 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.114167787 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.11245993 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.126978449 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.116766386 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.10168946 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.136694141 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.106316955 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.126687873 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.110467786 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.126450574 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.102421033 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.10385823 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.147840431 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.10348713 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.12494227 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.127986303 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.103762718 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.102456355 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.13771183 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.10376261 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.111630983 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.102735528 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.13697975 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.115554669 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110773885 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.130006629 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.104659409 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.111541228 seconds)
done (took 10.09966065 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.108109164 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.147782434 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.234598158 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.235619588 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.131901614 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.146588043 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.116975481 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.126102188 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.141854308 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.122026258 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.140664765 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.159651323 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.24008801 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.119208016 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.119713403 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.142366402 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.115049931 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.112373097 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.236658659 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.130676858 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.154451989 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.120358369 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.155682588 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.121887655 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.106767211 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.166206553 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112322356 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.114973807 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.131119467 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.118088806 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.127205775 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.132260731 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.110700695 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.124608487 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.148389258 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.118474208 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.118500851 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.139383225 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.108793999 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.107071642 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.139951806 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.12215986 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.107050491 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.145107361 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.11650312 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.1462439 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.114944175 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.119284259 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.10697655 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.138763574 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.109124825 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.13135183 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.144204838 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.12454184 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.142998806 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.119797873 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121556293 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.118859731 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.135504857 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.119582596 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.106160352 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.132622403 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.109370296 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.153593034 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.112095251 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.120973537 seconds)
  done (took 9.786645442 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.125930647 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.136898324 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.143400489 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.119492758 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.111653857 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.125731944 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.101382993 seconds)
  done (took 1.844918384 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.104381084 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.243829783 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.215762667 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.243657292 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.241179863 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.254051437 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.126598243 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.102318321 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.166365118 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.112771183 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.246009949 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.272086751 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.112935181 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.144747495 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.221970379 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.129807551 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.247031032 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.104949078 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.11791366 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.246202339 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120452067 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.160823059 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.117353524 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.103519454 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.239001763 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.10447734 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.29274367 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.14986877 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114596061 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.117071566 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.144349601 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.185625826 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.240262244 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.118393103 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.13833533 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.215393377 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.240328844 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.144618046 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.230607908 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.136265452 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.215909901 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.14493818 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.119453337 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.142994024 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.119533175 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.232380869 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.122934413 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.118368699 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.143520919 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.222711976 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.143381967 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.215946186 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.141951349 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.117404997 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.113280834 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.148424157 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.125220366 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.118181649 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.250284522 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.148522968 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.216505206 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.245963475 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.244657188 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.247637277 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128067496 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.246418618 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.231182103 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.117982048 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.112934323 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.145641844 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.220255526 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.146002358 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.117279061 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.236746614 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.121253051 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.249449201 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.247719327 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.11702737 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.116711512 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.134162262 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.117285307 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.103547959 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.238868587 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117600379 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.14147705 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.12352056 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.11811754 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.146306363 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.10954343 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.126342303 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.144655324 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.117262726 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.122298153 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.142624028 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.120813195 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.249813596 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.113900343 seconds)
  done (took 17.054430231 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.106676781 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.106101002 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.108874647 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.131118494 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.106360097 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.105248736 seconds)
  done (took 1.668877915 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.142395624 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.119503396 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.153089703 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120211435 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.167502335 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.249843835 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.257997485 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.112898388 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.164984856 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.132036851 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.252348259 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.255055175 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.253770208 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.122393675 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.257997638 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.121294947 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.260702147 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.116979286 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.1267323 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.142444378 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.118914482 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.150024694 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.118556772 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.244101086 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.121053137 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.120007457 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.139345892 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.127776158 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.12532622 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.141097351 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.123357336 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118061865 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.136471833 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.112956817 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.259755719 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.111000166 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.142340353 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.122408551 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.12193966 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.146306127 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.230130965 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.14606613 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.126153956 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.121244382 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.141926219 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.112198132 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.122208228 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.139481099 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.260897158 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.123393982 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.121887654 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.149267084 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.120422078 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.121600292 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.139486694 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.11354109 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.142674035 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.258521273 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.150208767 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.112796896 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.119865918 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.146410172 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.114202684 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.12330907 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.14774685 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.12280847 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.111613894 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.146103825 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.118173215 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.119422594 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.147307414 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.121274824 seconds)
  done (took 11.826881052 seconds)
done (took 43.153603382 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.677821678 seconds)
  done (took 2.678452601 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.292440082 seconds)
  done (took 2.293754706 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.264036881 seconds)
  done (took 19.300092791 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.447430932 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.483420919 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.172220772 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.148873158 seconds)
  done (took 3.255368887 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.854291508 seconds)
  done (took 1.880697808 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.348733777 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.255992442 seconds)
  done (took 1.615074629 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.770045867 seconds)
  done (took 1.793348724 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.574151022 seconds)
  done (took 2.586869273 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.292410157 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.248978965 seconds)
  done (took 1.566134957 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.648719685 seconds)
  done (took 1.670647692 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.217256202 seconds)
  done (took 20.243267778 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.264044977 seconds)
  done (took 1.289237511 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.297814208 seconds)
  done (took 1.325712514 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.687843328 seconds)
  done (took 4.716667171 seconds)
done (took 67.228506662 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.119763719 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.123171335 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.122530798 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.146659569 seconds)
  done (took 1.529793417 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.125860931 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.12015391 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.14781976 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.120460455 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.127133889 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.119733505 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.144232202 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.122570173 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.118335768 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.147617648 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.120359474 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.118783049 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.147215478 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.119709372 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.117205605 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.147414222 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.123447129 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.120437708 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.146213339 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.120513329 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119941613 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.147856494 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.124675412 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.122410566 seconds)
  done (took 4.119515392 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.11643111 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.109869475 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.112019411 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.134618846 seconds)
  done (took 1.505532931 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.12714215 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.133224567 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.155206249 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.128730479 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.13213532 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.155763969 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.119126812 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.116614458 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.144058461 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.12805118 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.135848016 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.159643272 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.132638899 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.120323712 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.155819794 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.115002321 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.120147082 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.156059559 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.128600619 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.127524085 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.145415413 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.126506715 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.124951598 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.154009263 seconds)
  done (took 4.270888337 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.196718138 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.131189234 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.178042823 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.166021518 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.18092503 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.119012318 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.146904597 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.150734241 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.127446644 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.119770784 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.148304783 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.165057631 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.152356663 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.121590476 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.119913392 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.152312417 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.132045328 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.124682519 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.193638425 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.125585558 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.153001511 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.131264011 seconds)
  done (took 4.271226852 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.123263202 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.110808326 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.133244849 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.108869438 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.122186368 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.137940083 seconds)
  done (took 1.777563147 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.109221417 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.104384017 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.103881044 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.130759273 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.108667803 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.104604938 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.101624867 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.131499191 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.103735521 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.104630513 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.129772573 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.104015168 seconds)
  done (took 2.369582303 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20808558 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147621941 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257818222 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.400748021 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189908505 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1905426 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.287845466 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191485013 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.179762027 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167730575 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214899376 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16298318 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182112874 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188338266 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167172174 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.159762818 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194684756 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209083784 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169332265 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.243356835 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158848396 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.204248339 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.189366197 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178294082 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141373704 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190955768 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.120968732 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126932307 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196494451 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193782226 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177757407 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177477826 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14143321 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222164745 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263112753 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208022747 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272443079 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133883074 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.200525947 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.192176722 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.261530425 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1679299 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193845704 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181081572 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130288622 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216733121 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15347912 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.212913464 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.134209729 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171683075 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216015155 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181522477 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.200726469 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13699637 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.327150112 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160874991 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.144639444 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203986219 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189938193 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229298836 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207552602 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.124067591 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201888314 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191708766 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24224006 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.170273746 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.167090878 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151356584 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166633476 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.233272725 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182415631 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188652105 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.240515123 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130288611 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201565688 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.195634019 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159419054 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237864515 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17235813 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.148159979 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153199988 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162172446 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126404969 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.18871227 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150367387 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243585398 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132384812 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.34244708 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180170815 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.185178748 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.190239147 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163155548 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190692261 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149323591 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.101995116 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171466469 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.161849438 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187011675 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129598648 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184605161 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140623241 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.126172852 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18180512 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.122658718 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199253998 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.136767442 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193946591 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172986856 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.159762583 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180514001 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176422441 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.161921722 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197659508 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220378234 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131804822 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131304158 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247765742 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198909777 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.137026431 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.202412182 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.198063535 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.179823067 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135140392 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195249296 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220630331 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143309839 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227768679 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138914904 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162103738 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.14393178 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20119935 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16155796 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.18758052 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127272087 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.192365046 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193486399 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.154315089 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140742447 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211652433 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134103036 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123694358 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166710408 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136372046 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.171182363 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.149144213 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.167152198 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156070629 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193911772 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16614368 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18728079 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134897215 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201873726 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131460269 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.197521584 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149538289 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.117836819 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.20517562 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225230457 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129395909 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2111242 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.163334031 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211764192 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202249612 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129155744 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.212906118 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128341511 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.119297779 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191046712 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169574859 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1951874 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.216914863 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205794914 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.166882492 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.191725314 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150894759 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199814632 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.183512784 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186025914 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.142614308 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.202890162 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199510819 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.121751124 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.122411221 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.154839161 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137867587 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130149776 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166281792 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183394571 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19421767 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.206572627 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166089865 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16535324 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.191652202 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.154591331 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160792177 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.203883763 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137783742 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.217550501 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219258458 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179237246 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169065893 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16360805 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.148472897 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127737192 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.132894794 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.189113239 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137076734 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163247369 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141896101 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.220462383 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173283762 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178936117 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217492691 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167094439 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.227779395 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.120681678 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.190558687 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168918487 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197472319 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.186906796 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158790111 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.16363502 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.223389281 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143027872 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221385761 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168403881 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208280353 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226310259 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.16511759 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159034045 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148539113 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19097397 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138597735 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.190695993 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145912248 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129759572 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182028756 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.138859124 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168060633 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218964703 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145448025 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209668162 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.158368334 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201823991 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125692146 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16983239 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174048403 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174175318 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.106981323 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169389086 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224442823 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178619334 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156991591 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20254324 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130086554 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.347786511 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187998127 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206483765 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135393249 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168139272 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171987622 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.191328269 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19171577 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.186124246 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171257144 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208488241 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201146753 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.142787998 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15972872 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149229507 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180530844 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.141649437 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.181046862 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.164003053 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.172953446 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190751916 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165873351 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170025907 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205318139 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.145488247 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.179170282 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140345939 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256658452 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168183484 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202840709 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.192632646 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.166535913 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212432083 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124428182 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126173325 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.161703495 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.187749102 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15792014 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178734435 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.192895439 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211304756 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175681171 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189893315 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140380298 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.155891818 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167062285 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177327273 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212918325 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135065849 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.138189993 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221394711 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.129484143 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160668283 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160702805 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.320531328 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14936132 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201835268 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.107867533 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.313304671 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128718125 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159656227 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162978475 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200457585 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.133740276 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.210733242 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174605538 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168358467 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164494901 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134686723 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.206093027 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211955423 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168467309 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206019586 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.176102275 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163252657 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191059326 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176026001 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175960693 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.148278095 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189258453 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194882445 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.206308756 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.133064278 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19837109 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169281422 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.199135708 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205600659 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14092601 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182944858 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15744924 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165718181 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167893528 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125415862 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191407025 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.166668307 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157985072 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175887779 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199771451 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131485282 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156100934 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148626398 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196365379 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141254764 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.156926294 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187507415 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.159520911 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182767178 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239035856 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132037029 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.196899682 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147911004 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159288766 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140810677 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143389356 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161453764 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.17615339 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210406512 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.131296144 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206568301 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167636578 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194208203 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159607944 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17297658 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.264507441 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.158836962 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192912995 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.180939843 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227654469 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151301398 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205631747 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169935107 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180059101 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167296789 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177228771 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.221355153 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195597651 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.168160403 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159267345 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14361507 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138216138 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.163387314 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154312212 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197390187 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142468815 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.166302955 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.168110479 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173448656 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.148746016 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141303283 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232697963 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179747553 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188877012 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.218250834 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137665032 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206375781 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207401384 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129658753 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.193307796 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173527516 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173093469 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15381652 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.134156553 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.166692579 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21472822 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.15587119 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161834489 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20434085 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168237528 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202311624 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.134135642 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208629883 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140757527 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208402314 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127357931 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.180860525 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170027502 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164666175 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.128053955 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.19910085 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162695195 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.194947199 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143855405 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.176166733 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220120138 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.123007114 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163562373 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.29024407 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190295264 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225119684 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.139007407 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136255122 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176716732 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159827012 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.198615438 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171356335 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.159619844 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130474781 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.174462729 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.158863944 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.168450891 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169610278 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210273904 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164873861 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215547567 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.135443121 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.284651893 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143244958 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.201479059 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.118101554 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.130094018 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169242154 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135648588 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141495305 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.209940621 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244842974 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.16225687 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.178889892 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135406657 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.155874387 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131631834 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162535608 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181809987 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196073947 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147778153 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.104558324 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170254512 seconds)
  done (took 86.033665862 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.171664325 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.221185633 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.18953215 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.256064132 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.217576585 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.312572144 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.250058817 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.265325153 seconds)
  done (took 3.006381329 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.120980939 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.160991421 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.144445756 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.145230416 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.111567172 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.492294567 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.161479974 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.121761596 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.163405885 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.153095932 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.137447248 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.579895428 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.117850496 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.147224384 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.12558702 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.141928482 seconds)
  done (took 4.145008455 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.354473984 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.558326992 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.234117144 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.290289389 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.271519435 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.215702053 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.805441879 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.210274211 seconds)
  done (took 13.059846223 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.175482641 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.171488401 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.46043397 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.315610211 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.184311948 seconds)
  done (took 2.438276071 seconds)
done (took 129.548167437 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.124489334 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.12592472 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.124898818 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.156202462 seconds)
  done (took 1.649629355 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.194056483 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.093493014 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.095093353 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.121747861 seconds)
  done (took 1.633370988 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.471260342 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.092910225 seconds)
  done (took 1.723054789 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.149371402 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.144214386 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.170487378 seconds)
  done (took 1.606251649 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.137536557 seconds)
  done (took 1.270286142 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.118102044 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.128204779 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.278180807 seconds)
  done (took 1.659733143 seconds)
done (took 10.682168009 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120517521 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.933823605 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.436872539 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.135726356 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.713880744 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.428756653 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.426273681 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.178603849 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.177080379 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.140306563 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.132758197 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.691755149 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.436091053 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.880846102 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.38999394 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.908438203 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.696209392 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.112783441 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.147908689 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.113755438 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.407056366 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.139827394 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.113435096 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.112755055 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.723015154 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.423437389 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.111935054 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.923248212 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.111051574 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.115748705 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.436025743 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.112567672 seconds)
  done (took 21.057141331 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.113725035 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.171422918 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.148382405 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.112730181 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115837449 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.141915972 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.124734211 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.124826048 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.20630603 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.111668436 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.16381992 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.111894419 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.117455352 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.142453241 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.137217048 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.112541682 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.145288332 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.115346063 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119923653 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.141959618 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.134463101 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.111679542 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.141535705 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.115484765 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.112972516 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.161736441 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.112326377 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.125813756 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.139085242 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.11699744 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.117361045 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.11262031 seconds)
  done (took 5.32371189 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.160964809 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.181538895 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.150032286 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.151174764 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.19133211 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.115220214 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.230767109 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.150784292 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.209111983 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.112279285 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.134469905 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.142085564 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.153760626 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.113158425 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.167028393 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.112241254 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.115005571 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.144340146 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119725801 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.116185661 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.163527845 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.111996892 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.114502421 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.144030502 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.113080305 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.135798079 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.141921837 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.125978761 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.112351045 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.14587714 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.118440404 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.112590263 seconds)
  done (took 5.650985447 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.126751636 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.129350865 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.133910614 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.165520367 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.121725361 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.124691645 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.156384223 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.123404498 seconds)
  done (took 2.224203049 seconds)
done (took 35.394996925 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.136928264 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.131144899 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.132773446 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.156871611 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.255555436 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.119758891 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.130041897 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.119282057 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.157170987 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.132961918 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.111228795 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.152869644 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.131596422 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.123970747 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.256881282 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.128369063 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.262307813 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.258687826 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.120275934 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.126122404 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.150887145 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.232056538 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.157230796 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.120246483 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.256471442 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.116608639 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.25289824 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.123974673 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.122942523 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.142324509 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.228662245 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.156550816 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.121461798 seconds)
  done (took 6.4554178 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.239834965 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.154364521 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.122705218 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.121228865 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.122432632 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.151313509 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.245653092 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.151468012 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.121477994 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.120985481 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.150684544 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.226812246 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.159050121 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.117427774 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.121781763 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.111804959 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.278651291 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.123365909 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.144330911 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.095345365 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.116791355 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.150405563 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.258564816 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.14823315 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.121318959 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.12087348 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.122804987 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.156131781 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.123574615 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.123006402 seconds)
  done (took 5.677947412 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.125799227 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.135149385 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.138674363 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.220875952 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.15137498 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.164235999 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.142185854 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.13670026 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.172082352 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.115923844 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.130758045 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.181415167 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.132379399 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.125062401 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.143315618 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.132941599 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.136927969 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.146513339 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.12337201 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.132168718 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.166477632 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.132204866 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.138114419 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.152949978 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.113478874 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122031229 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.155209525 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.125981578 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.122189175 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.159961721 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.116681712 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.118743854 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.116804249 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.180595786 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.115540949 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.158951505 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.142560089 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.127759577 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.157308464 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.148166648 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.11889418 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.146163357 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.142572217 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.170156937 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.145313468 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.128645952 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.127154488 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.158928971 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.112892789 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.133280863 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.186429253 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.115485575 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.135917171 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.142905149 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.113470125 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.123601837 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.114892988 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.149283001 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.130279823 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.116339699 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.170116212 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.123447838 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.126357437 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.145841242 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.126877845 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.114246228 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.112823816 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.148470224 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.142411968 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.121915494 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.182706479 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.114547378 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.126365613 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.157394814 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.12733766 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127312786 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.144757194 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.125948662 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.125901715 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.149860244 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.128233407 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.117323161 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.117498285 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.16008751 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.13517797 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.158014725 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.12583697 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.128137272 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.147772726 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.11753261 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.134175494 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.11496603 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.149960103 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.128270704 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.114053929 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.149424297 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.12877244 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.126038248 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.143159472 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.141022459 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.118890864 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.113891294 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.169717822 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.118633841 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.119383835 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.153419832 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.157181604 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.114077003 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.155863214 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.129845947 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.114157715 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.153135923 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.118292202 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.11355341 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.162861242 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.130457429 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.122623297 seconds)
  done (took 17.180733819 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.357310636 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.342329731 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.187647481 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.433224596 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.129489916 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.274525997 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.342557518 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.346162732 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.115202183 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.180972716 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.177102091 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.313059926 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.147296309 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.143883001 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.345598469 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.405325659 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.177915604 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.151830717 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.18222693 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.128944081 seconds)
  done (took 6.05369582 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.136879598 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.150483971 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.16961161 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.143394335 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.12505665 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.161519406 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.115595409 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.137850383 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.156480016 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.126809724 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.117633708 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.161672003 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.127718258 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.132325516 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.160300503 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.149124636 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.122520031 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.151610008 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.138506002 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.120598153 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.134413055 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141165595 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.124257331 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.167691666 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.134803587 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.127165336 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.144514974 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.121652385 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.121904515 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.153959616 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.120184668 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.134008083 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.152210199 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.107218003 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.126498055 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.130055702 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.152375429 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.118633445 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.121875992 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.148996119 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130659003 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.129328144 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.15209156 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.102150862 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.13472463 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.112126818 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.159209184 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.128016572 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.107849809 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.1351725 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.158016352 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.129774503 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.122628756 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.168532895 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.122872154 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.131721098 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.156668477 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.130845815 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.120212931 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.142495281 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.114484117 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.120517667 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.122701599 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.159227561 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.128260026 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.163097293 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.132320594 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.116234936 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.119355095 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.149244134 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.11939186 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.129769573 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.165093579 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.125113692 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.121489081 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.158859123 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.123604155 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.096869134 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.123311167 seconds)
  done (took 11.838364493 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.140609636 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.125698036 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.133176977 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.181441982 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.129562782 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.120408774 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.155395135 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.136040985 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.129686629 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.164192516 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.133696215 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.129454476 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.166868715 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.126536201 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.125326198 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.162965458 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.130184651 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.15294358 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.163302896 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.142995537 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.160751092 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.120533926 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.128414672 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.127152574 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.176972062 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.127774942 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.171742635 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.129624108 seconds)
  done (took 5.180166552 seconds)
done (took 53.530927187 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.295033891 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.505178095 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.280230964 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.27844396 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.342268074 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.304709972 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.280459521 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.280452533 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.875350322 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.252253801 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.277395607 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.277761387 seconds)
done (took 29.42608501 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.429568837 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.413365696 seconds)
    (2/2) benchmarking "String"...
    done (took 1.555654715 seconds)
  done (took 4.146868072 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.268324035 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.268284227 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.518784158 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.268078549 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.269120391 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.270191158 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.268324964 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.293769106 seconds)
  done (took 16.324237716 seconds)
done (took 26.340027514 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.317538247 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.620943173 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.560546819 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.253466792 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.272641207 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.277057717 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.273257046 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.337929745 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.274795926 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.255211649 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.694969546 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.569195441 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.276780213 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.693066019 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.254031277 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.279590048 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.286856271 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.669448629 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.27654089 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.304856574 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.248556952 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.255508815 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.283207587 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.276017229 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.282319919 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.282045771 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.291034637 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.283378475 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.55659488 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.288390259 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.306246799 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.273999382 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.291165939 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.2858658 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.275371367 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.273136576 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.575429547 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.285823064 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.253615594 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.298862776 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.580876603 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.288145693 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.2719677 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.277286234 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.258940152 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.255740094 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.26963976 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.38911427 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.297669698 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.275502509 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.283816954 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.696151931 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.287854916 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.282554199 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.281808015 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.637742517 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.30261203 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.399600044 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.295048423 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.284006628 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.272809679 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.28533066 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.299535466 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.282028922 seconds)
  done (took 149.142041508 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.272272923 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.272491736 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.27451262 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.279663437 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.27813975 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.277396871 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.273113987 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.276185466 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.279520925 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.276486226 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.278001916 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.275010794 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.278758157 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.285176797 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.284980855 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.296495352 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.279531835 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.275926047 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.303382215 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.27385995 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.279115654 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.280140642 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.275415253 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.274963214 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.285052192 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.362752679 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.314049548 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.298053126 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.288985771 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.275545317 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.288782302 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.284881842 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.944455816 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.145891583 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.287644752 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.319591271 seconds)
  done (took 82.96955573 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.276599703 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.275964792 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.276219565 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.310061761 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.276184045 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.901909818 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.90395412 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.341585155 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.542347564 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.828006306 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.583146582 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.278810172 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.369914564 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.289495288 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.277728648 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.372552659 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.301075023 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.279830927 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.276537971 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.89846321 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.291936275 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.36520531 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.461071709 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.293986236 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.311352588 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.669075297 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.277251685 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.312575773 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.616271608 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.328445978 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.277665893 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.676595959 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.424275648 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.27670694 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.390740354 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.279936371 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.3120904 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.277370334 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.562573393 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.277290256 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.279054454 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.280509258 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.974527032 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.28321487 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.904674137 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.281995967 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.314543018 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.281505276 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.277943258 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.26589545 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.123688669 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.283217465 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.278414081 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.281103909 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.278489484 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.278197529 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.314451828 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.23360956 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.185241418 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.279223308 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.281844013 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.314711488 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.281070426 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.349807751 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.282003581 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.66591915 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.335046171 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.497706035 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.884586268 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.280622227 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.377190125 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.400507544 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.280839957 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.280061021 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.279784604 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.280518716 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.393636322 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.280721135 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.999884796 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.281524853 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.465213744 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.298575256 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.851459025 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.283650321 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.378202245 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.281830392 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.684865899 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.285173267 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.281085583 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.022187546 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.378169403 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.281482132 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.281502367 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.279949922 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.002036363 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.907500331 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.624034131 seconds)
    (98/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.28557112 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.282141989 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.897640813 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.284784517 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.188738649 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.884171722 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.997710642 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.287178743 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.395057517 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.466521495 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.29907996 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.281598079 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.856372928 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.287468328 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.343332022 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.282700336 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.684442026 seconds)
  done (took 387.021162914 seconds)
done (took 620.303856901 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.149228387 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.092232692 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.249139838 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.104956832 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.090406708 seconds)
  done (took 11.866044315 seconds)
done (took 13.04625853 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.481276316 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.48255236 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.348817358 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.484991581 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.317630642 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.500725766 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.468352911 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.301195121 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.404358586 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.372917695 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.397762581 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.339349317 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.319435779 seconds)
  done (took 19.399595745 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.578695002 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.294187721 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.349278838 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.553652422 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.329071859 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.609888839 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.62133739 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.295081233 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.456095351 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.305470475 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.307026814 seconds)
  done (took 18.881748832 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.578649362 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.296258175 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.369767768 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.561096513 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.330094639 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.599034756 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.604509537 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.294556098 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.480715424 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.307533674 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.305248746 seconds)
  done (took 18.909237919 seconds)
done (took 58.372929432 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.325161212 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.38848997 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.318166455 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.303437419 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.303557626 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.30382429 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.305869759 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.302743245 seconds)
  done (took 11.733057564 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.303644779 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.301651162 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.303239776 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.301831025 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.301124545 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.301645929 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.304131765 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.301950008 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.301385016 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.300841046 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.302365345 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.302866212 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.302570605 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.302658768 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.302164193 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.303808722 seconds)
  done (took 22.020876268 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.305244145 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.303872963 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.304101581 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.302313031 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.304032543 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.305070837 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.303787709 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.303568214 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.303329183 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.303496474 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.304989722 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.303036784 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.30301627 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.303178371 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.303031073 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.304655427 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.303924762 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.302567435 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.307479446 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.303477198 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.302831557 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.304759082 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.311013329 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.304400797 seconds)
  done (took 32.484929036 seconds)
done (took 67.422821268 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.303199632 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.289250735 seconds)
  done (took 5.777037477 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.361203828 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.362466264 seconds)
  done (took 3.909771369 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.306938475 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.305827195 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.304779313 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.304157476 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.303961432 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.304700301 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.304549197 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.304176026 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.305632426 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.304473707 seconds)
  done (took 14.232893231 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.306033125 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.305600308 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.304344861 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.305988084 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.305851753 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.305244837 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.305172421 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.304428352 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.306622001 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.306058121 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.306316127 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.305582811 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.304317082 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.304795352 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.30551113 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.307528548 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.306527279 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.306067237 seconds)
  done (took 24.688163291 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.319804666 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.328904047 seconds)
  done (took 3.836204113 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.435065906 seconds)
    (2/7) benchmarking "second"...
    done (took 1.348181736 seconds)
    (3/7) benchmarking "month"...
    done (took 1.409992244 seconds)
    (4/7) benchmarking "year"...
    done (took 1.403385493 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.347918278 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.329584896 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.348635102 seconds)
  done (took 10.808873527 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.297988958 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.589541595 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.772571738 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.452263303 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.283032082 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.315425892 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.269597723 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.310503754 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.31121586 seconds)
  done (took 14.789234351 seconds)
done (took 79.228885536 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.29234317 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.378010011 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.321453775 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.309239745 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.647596944 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.341084878 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.296844114 seconds)
done (took 16.776792532 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.270599665 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.269768775 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.27912116 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.317105456 seconds)
  done (took 10.323923869 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.311826742 seconds)
    (2/2) benchmarking "read"...
    done (took 1.621376117 seconds)
  done (took 5.121702429 seconds)
done (took 16.635438436 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.308925828 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.309443606 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.308723008 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.309203775 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.308800083 seconds)
    (6/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.309788936 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.309107787 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.308893399 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.308771804 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.310616125 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.310065412 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.308704631 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.309159372 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.309614644 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.308820184 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.309180586 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.310582685 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.309885384 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.31031686 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.31125399 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.312551354 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.312414449 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.310324734 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.310550723 seconds)
  done (took 32.625740838 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.312288002 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.311662103 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.310840056 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.309784174 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.310853799 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.310844217 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.311815144 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.310276256 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.310759723 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.310667522 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.309202605 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.310107921 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.312312535 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.312273715 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.31079763 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.311139875 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.31151895 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.308984731 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.310213051 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.311427633 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.31127657 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.311178556 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.311506457 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.311122192 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.31110395 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.312279829 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.312555509 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.311555577 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.312021788 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.308789592 seconds)
  done (took 40.522676961 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.316549404 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.319506083 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.311770429 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.31083201 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.312173968 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.3114633 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.312327346 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.310528592 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.311707367 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.312542117 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.313861274 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.311705071 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.310982319 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.311881004 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.314127964 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.313343793 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.313472778 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.312796195 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.313334858 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.313839892 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.313356606 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.31272573 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.313492047 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.314871938 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.312111127 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.314227956 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.311350718 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.3133061 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.313984609 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.312552179 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.311979087 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.313428574 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.312687502 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.313222194 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.313552661 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.314117474 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.319135133 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.320943659 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.314763437 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.313553142 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.313359564 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.314766748 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.314469923 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.315810197 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.314810876 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.313495846 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.314432601 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.313373394 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.316751606 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.313913145 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.316358684 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.315655948 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.314602328 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.3160955 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.3144335 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.315957804 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.314378554 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.314961026 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.314495598 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.314921783 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.315242523 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.314622966 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.317624559 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.315790347 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.315780537 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.31713566 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.315585475 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.316123898 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.315860368 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.315781596 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.317980211 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.316812748 seconds)
  done (took 95.823496234 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.314932362 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.316990637 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.316272845 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.314263859 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.315741519 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.31771332 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.315387262 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.317858783 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.31741457 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.317088153 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.315499119 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.316684656 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.317910514 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.317543978 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.318035334 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.318048402 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.316523763 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.317947033 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.319024423 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.317224855 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.317387153 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.317068181 seconds)
  done (took 30.166721904 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.316873834 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.317597191 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.317008551 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.318415599 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.320181122 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.320837278 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.317164548 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.320483871 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.317299686 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.317763606 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.318603232 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.320883292 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.319119155 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.319977212 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.31679892 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.321705468 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.318637491 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.320667415 seconds)
  done (took 24.935024121 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.318453192 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.318171021 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.318740933 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.317924963 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.318571433 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.320982263 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.320487468 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.318382783 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.320168796 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.318383502 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.320019965 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.31933598 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.321144596 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.320585957 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.319291708 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.319410165 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.320443537 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.318398877 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.319760708 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.319787009 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.321967456 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.320700112 seconds)
  done (took 30.22897964 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.319314176 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.319657162 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.320093044 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.319624941 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.318791537 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.319605117 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.320519546 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.319421809 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.321604276 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.320200382 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.318851712 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.320964447 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.322239129 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.319328238 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.320771155 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.320261151 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.320823644 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.320577382 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.322541341 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.319826643 seconds)
  done (took 27.605298123 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.322495549 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.320861932 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.322030122 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.322635568 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.32268001 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.321124802 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.322263927 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.3228543 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.321540757 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.321758105 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.321600918 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.322980397 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.321209108 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.324045769 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.321625756 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.32337581 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.324207207 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.323365612 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.322679404 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.323364235 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.323362935 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.322776182 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.323862821 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.323103145 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.324120281 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.322308713 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.324409659 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.322975284 seconds)
  done (took 38.236207068 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.322443737 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.322636613 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.322907523 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.322987218 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.324224979 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.324453491 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.32376951 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.323527277 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.324841595 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.324323126 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.323444401 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.324608536 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.323804771 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.324449437 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.325534194 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.324493467 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.323748299 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.324633406 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.325785044 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.326819266 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.324357737 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.324709488 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.324091329 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.325005806 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.325120852 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.325616628 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.32566098 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.325763665 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.324002112 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.325196406 seconds)
  done (took 40.934743777 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.343650395 seconds)
    (2/2) benchmarking "in"...
    done (took 1.343792156 seconds)
  done (took 3.890405227 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.325341132 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.326122192 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.326593423 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.326965045 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.324736429 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.325863296 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.32596143 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.325312177 seconds)
  done (took 11.810051705 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.317253 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.328024397 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.327804986 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.328593966 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.326768371 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.319708042 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.326075623 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.331677148 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.320492892 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.32114127 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.326520573 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.327080197 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.322100493 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.320136671 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.321629488 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.324529234 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.330242162 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.33118392 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.328657345 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.329141267 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.32835407 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.324311321 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.326148541 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.330787471 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.322262659 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.331084693 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.329346735 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.333745761 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.322117117 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.329075036 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.32437908 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.333496159 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.329642833 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.329814306 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.330516432 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.329173031 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.331951777 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.327906375 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.330948983 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.335142828 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.331236235 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.329739856 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.326074355 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.327546287 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.327662438 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.334919032 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.330455235 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.33091585 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.323936853 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.327586533 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.338869922 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.324503568 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.331843785 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.328939839 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.330210777 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.335512734 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.338507361 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.325238159 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.333490929 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.335813475 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.342721337 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.343210543 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.331055193 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.337775071 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.334957311 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.350851274 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.337364428 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.340913482 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.333220015 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.333347903 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.332471515 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.343458273 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.347022402 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.338116887 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.333391331 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.332181255 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.326288219 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.338325209 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.334249697 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.336314655 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.339516437 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.33374435 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.334572775 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.348001487 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.328566558 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.336954271 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.332860026 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.334416353 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.326324745 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.338994402 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.341212159 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.332945291 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.325653979 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.329183903 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.329832353 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.336484532 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.326854684 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.33028381 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.337401037 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.334535384 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.332792544 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.330396343 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.335844966 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.339297257 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.33453573 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.33434248 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.34266813 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.327111421 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.339396517 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.341675548 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.333883277 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.328529076 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.334808085 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.340206794 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.330109497 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.337309095 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.341483655 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.332759492 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.341048798 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.337662854 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.337738768 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.355790816 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.342729674 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.337481511 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.333211764 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.346995065 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.337750772 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.33472378 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.343214175 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.33599092 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.334830783 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.332887255 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.343277481 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.330800235 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.341367121 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.331511831 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.341346915 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.337280928 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.337631135 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.332423787 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.338151956 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.335085404 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.337619715 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.340961814 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.343835446 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.334541183 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.344847959 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.337748959 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.337320975 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.340076778 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.342705993 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.339264616 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.334424105 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.342060624 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.331091124 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.340512268 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.331484814 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.343397845 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.339944776 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.339747148 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.337902516 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.330885195 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.335101199 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.341621571 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.338434123 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.33932468 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.341873226 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.339909411 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.339653251 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.332430454 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.341893539 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.330977248 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.335468231 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.347864064 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.339266503 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.339655969 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.336591789 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.3474014 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.341344072 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.340723445 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.334193044 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.34441884 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.344228623 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.341462597 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.348897828 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.339810406 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.340137521 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.334577572 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.336316831 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.342383835 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.334579475 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.34937177 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.347244277 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.354757978 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.336978264 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.344971483 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.333656282 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.346556811 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.33905805 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.348785979 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.341790276 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.341140457 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.334677039 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.345551828 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.336395679 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.345811117 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.332610912 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.345364182 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.343602247 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.34176397 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.342649305 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.335672171 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.341043499 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.345001378 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.340883748 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.343010041 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.336380985 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.345753222 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.333926137 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.335346683 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.345887181 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.341811265 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.345253784 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.35038271 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.340722516 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.348371699 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.343598823 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.339053091 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.346396285 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.34163574 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.344281863 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.348683852 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.346531829 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.341071951 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.350025043 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.348151833 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.337307241 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.344743641 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.352988042 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.343873674 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.338959925 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.351718908 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.344916432 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.344073144 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.342918271 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.337462252 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.348558197 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.347336764 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.355499161 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.338606834 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.349218485 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.341635497 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.349101126 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.342223489 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.347188429 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.345952663 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.348074926 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.354514539 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.345405011 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.339980209 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.350195095 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.34656785 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.345539966 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.340196716 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.351866809 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.346860381 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.348562419 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.343125096 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.343786432 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.351173658 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.339883843 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.347178832 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.339472593 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.358738472 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.368572754 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.350980805 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.351477996 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.349106404 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.350440025 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.349177878 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.343104081 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.343231617 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.343938899 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.342123437 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.342649728 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.350047092 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.340274119 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.351009026 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.345345055 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.349619176 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.351971316 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.347690849 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.339693405 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.351772774 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.346908495 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.348786008 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.338928858 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.349322539 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.341127312 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.351083788 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.350316443 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.343191824 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.355174738 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.352128384 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.346108347 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.345974101 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.342750245 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.340154226 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.345709999 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.354161737 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.342784823 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.355768932 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.341815936 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.35038777 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.344961517 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.355792103 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.361098814 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.342586593 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.357726379 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.349056827 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.341384963 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.343678214 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.352306257 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.353238282 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.362795853 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.34247405 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.353263548 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.350702745 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.3496169 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.349528454 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.350430345 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.350477739 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.348405693 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.356667268 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.354778168 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.346776192 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.355480805 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.360873085 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.350633209 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.350284116 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.341567707 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.351082355 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.360857062 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.346816713 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.349939297 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.345685834 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.352142939 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.350538456 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.350574316 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.351859159 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.351233292 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.356926884 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.357536468 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.356621548 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.351891836 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.356545122 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.364956577 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.35771861 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.365690803 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.347208777 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.358971321 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.351837745 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.346143653 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.348073733 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.348152704 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.35728154 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.343777318 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.35734817 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.352233551 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.349010149 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.35535961 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.361658871 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.345895855 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.357805379 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.376675129 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.347296874 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.357372799 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.354439574 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.345556304 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.358246993 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.354614417 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.345259879 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.349069088 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.352918541 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.361296158 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.346796468 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.357395495 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.346941121 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.358466772 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.354580585 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.356195815 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.353885795 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.353418499 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.347720471 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.355839118 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.356489045 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.366136627 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.349237623 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.354420386 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.35084177 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.360783905 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.36687034 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.350479223 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.360836028 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.355225716 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.347560293 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.35457317 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.359969451 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.34771442 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.359620958 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.347594885 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.353345145 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.353781782 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.356567152 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.359523726 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.360028631 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.347496085 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.349528431 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.357971473 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.357108625 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.357147129 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.352374268 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.361940432 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.348763221 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.348651522 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.359646063 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.351536977 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.36334399 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.350864885 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.357500003 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.354662551 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.360792572 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.356824455 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.356605576 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.348800571 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.350248524 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.363875673 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.364655699 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.358858871 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.356535897 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.362104808 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.351799931 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.356274315 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.358004398 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.352808254 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.354154947 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.361558004 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.351812247 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.354055382 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.353016278 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.35956256 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.362619069 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.36365541 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.352097811 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.365220055 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.368824286 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.366334256 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.351595511 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.356119466 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.354695895 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.361039837 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.358829909 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.351014348 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.367109725 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.36640568 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.363554585 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.359561274 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.361485591 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.350272947 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.362950244 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.3613452 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.355785939 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.366067905 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.355178476 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.366661464 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.360611474 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.35926635 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.351129419 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.35437557 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.356421852 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.359297698 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.361071026 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.35926521 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.363920776 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.358247263 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.365995194 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.359948819 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.359113947 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.360607847 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.351075373 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.362125151 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.353095013 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.362696099 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.363015331 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.354723582 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.364789621 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.360987661 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.352941301 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.361966279 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.367633724 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.362328931 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.353790029 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.359467863 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.36763768 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.373041522 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.362742785 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.356894696 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.359697725 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.366920193 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.361220499 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.36182668 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.356849337 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.37591017 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.37718732 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.356079466 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.358723223 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.366810662 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.37465631 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.361333902 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.362781928 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.358114667 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.362800226 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.370240534 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.362624783 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.366531993 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.369758065 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.358910736 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.367222763 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.35771456 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.363153011 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.365169398 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.374998019 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.363501541 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.359704734 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.37777491 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.376048174 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.365892936 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.390714482 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.372997581 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.365057429 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.369732126 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.354839561 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.365924953 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.360176527 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.370735107 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.365460031 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.36415773 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.364336176 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.356896137 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.367542838 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.373466475 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.376007851 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.365460808 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.355914801 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.361440639 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.367629833 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.366168339 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.367552619 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.365400386 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.365144644 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.365876155 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.358382884 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.378675137 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.386449686 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.371719778 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.366440613 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.365047743 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.368646109 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.371928643 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.368892986 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.373968792 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.367722151 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.366845788 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.363852365 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.376250932 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.368988421 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.359764722 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.362358623 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.363226546 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.37102533 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.375729593 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.392434058 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.370063051 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.372886531 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.369318485 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.36817642 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.362592672 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.371682813 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.367783027 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.361161873 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.364768055 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.372054618 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.368660741 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.368244711 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.362394781 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.375524008 seconds)
  done (took 804.969300753 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.368658142 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.368692053 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.369331421 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.36851092 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.369847286 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.367456493 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.367652495 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.369012741 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.368208512 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.368660452 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.368855225 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.368588735 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.36874286 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.369286118 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.368969835 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.369562289 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.370063164 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.36997117 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.370069041 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.370436175 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.368609234 seconds)
  done (took 29.986792209 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.368989275 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.37021803 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.369527506 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.369772405 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.36985488 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.369158329 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.37000404 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.370244734 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.369839698 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.369900529 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.370114398 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.370001702 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.370423237 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.370857567 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.37024349 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.37057267 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.37050795 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.370016187 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.371928972 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.37190726 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.371331563 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.370846239 seconds)
  done (took 31.386984952 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.370340064 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.370903108 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.364467964 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.375781172 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.371359839 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.372657569 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.371160265 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.372630431 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.371975079 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.364951983 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.3665678 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.366066029 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.369617333 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.379428756 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.368255974 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.378053983 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.372358231 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.37371253 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.3730958 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.371584532 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.376867764 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.386265117 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.372408138 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.364716227 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.374546739 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.372298977 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.373395797 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.373728351 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.366465799 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.376350659 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.371899002 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.365659659 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.376789507 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.376679352 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.36683777 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.378173036 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.374570605 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.372427431 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.373513333 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.374600666 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.396047585 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.373396404 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.378348302 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.387548285 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.373904301 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.368686931 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.38327189 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.375390079 seconds)
  done (took 67.17230031 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.372664787 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.37360261 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.374703753 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.374483949 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.373853743 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.373526774 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.375680521 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.373997811 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.373739977 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.373687153 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.375734912 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.375976635 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.375936682 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.377031293 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.376071439 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.375003576 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.376138099 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.375191772 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.376896585 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.375516945 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.376626445 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.376375532 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.376795887 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.376013642 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.37545099 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.376038728 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.37602502 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.375629127 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.376797412 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.376226309 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.37553584 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.376357022 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.377392356 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.376473646 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.376183873 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.375871987 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.376920124 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.37676549 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.37590707 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.377179232 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.377547352 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.377381926 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.376701147 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.376295344 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.37679081 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.37725011 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.377620198 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.378053553 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.376539288 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.376362901 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.376549207 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.376519797 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.377337457 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.377671258 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.3783661 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.37856108 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.378518085 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.377544423 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.377894074 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.377906034 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.379704829 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.379196649 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.378000034 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.378592983 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.378060661 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.378961158 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.378545118 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.378589352 seconds)
  done (took 94.850664881 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.378561343 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.377737387 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.379378795 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.380548616 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.378016453 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.380532723 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.380100822 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.379063454 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.38016273 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.380124355 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.378959901 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.380590956 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.379763673 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.381049757 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.380711007 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.380651573 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.380983127 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.382305179 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.379260033 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.379499528 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.379338796 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.380623938 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.381192688 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.380168766 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.379967342 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.379506009 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.381399197 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.382380183 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.381535784 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.381219469 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.382176124 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.381889474 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.381337857 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.382628793 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.381762567 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.381489327 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.380417245 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.382045539 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.382185214 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.381098024 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.381762894 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.381886645 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.382670975 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.382405077 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.381863713 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.382045989 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.383233588 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.38310332 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.381648162 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.383919043 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.381898051 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.382911463 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.383042277 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.381720332 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.38228262 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.382681582 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.38240017 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.382293774 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.382313682 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.384257794 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.384249096 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.383070369 seconds)
  done (took 86.889945045 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.383122869 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.383567493 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.383537799 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.38394217 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.383386305 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.383226367 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.383307397 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.383906162 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.383471316 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.382784298 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.38347372 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.384981579 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.385078282 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.383692464 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.384366539 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.386253762 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.384536802 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.383609912 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.384602696 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.384749057 seconds)
  done (took 28.930128546 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.384904808 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.385189195 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.384939376 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.385466692 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.384493084 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.384546589 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.385010963 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.385526528 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.386247926 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.385415272 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.386470994 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.386757223 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.384536841 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.384141314 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.386904519 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.385875686 seconds)
  done (took 23.418000341 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.385346978 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.386664997 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.386705905 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.386684261 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.385728927 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.385067956 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.386865351 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.38590573 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.38686943 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.38616873 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.386198601 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.386791488 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.387545211 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.385984338 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.386076894 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.386382149 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.385914006 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.386142313 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.387580502 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.386066378 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.386911281 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.387655973 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.386499038 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.387631887 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.387038872 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.388709509 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.387398358 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.38698399 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.385512829 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.388037095 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.38654327 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.388767936 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.387106949 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.386898743 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.388426027 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.386827162 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.386963086 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.386710793 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.388465453 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.386372385 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.390069294 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.388475091 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.388550528 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.387839488 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.38868077 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.388510581 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.388569763 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.387326641 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.389516864 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.388460056 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.389260103 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.388615265 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.388641668 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.38807433 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.387972763 seconds)
  done (took 77.55665293 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.387882277 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.38846138 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.389372817 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.389561586 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.389959133 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.390012042 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.389300449 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.391072948 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.389239094 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.390343813 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.390483363 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.391242451 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.390793166 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.389671792 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.389921714 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.38937074 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.389536021 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.389589749 seconds)
  done (took 26.272004915 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.390558256 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.391263374 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.39256623 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.39040005 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.391304117 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.390810702 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.39015364 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.390751351 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.389823776 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.391358825 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.390502252 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.391240672 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.391598532 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.392388297 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.391818736 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.391497736 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.391114674 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.391912956 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.392793455 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.393272097 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.392973713 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.391758769 seconds)
  done (took 31.869368216 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.380692152 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.383340323 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.381578422 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.398918804 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.401697973 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.383397503 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.383042029 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.381942875 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.405919922 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.432846953 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.425498655 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.400825221 seconds)
  done (took 18.018540924 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.394483145 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.39381614 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.392880423 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.392402703 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.392861965 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.392472284 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.393450501 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.391727949 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.393105958 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.394969888 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.392982719 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.391828812 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.393905362 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.394570263 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.392729382 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.394973453 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.394247248 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.393569566 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.395276022 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.394479623 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.394050361 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.393371728 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.395986072 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.393897699 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.394071354 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.39360544 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.396305325 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.394466456 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.392948843 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.395032161 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.394883779 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.395135471 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.395174391 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.395923483 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.395692055 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.395004981 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.396014148 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.395989289 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.394972208 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.395049762 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.395754174 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.395186985 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.396289551 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.396547854 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.396184868 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.394784108 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.396435248 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.395770916 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.397135921 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.395889333 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.396191752 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.397218662 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.396079919 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.397389143 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.396645062 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.397803174 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.397969472 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.396347923 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.396520151 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.397432854 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.396131855 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.396248193 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.395637224 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.396755182 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.396214873 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.39612494 seconds)
  done (took 93.335894303 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.397459682 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.398110688 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.397287688 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.397172293 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.39752612 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.396648659 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.396560934 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.397483013 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.398115915 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.396722031 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.397984452 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.398055627 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.39864989 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.397344066 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.398040538 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.398689894 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.398253451 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.397176229 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.397580945 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.399491908 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.399042055 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.398141781 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.398625787 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.397120339 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.399085458 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.398962236 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.398141954 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.39848511 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.399204521 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.397900777 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.399396412 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.399597053 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.398613115 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.400690588 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.400018902 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.398319925 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.398437285 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.398529302 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.399823344 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.400109475 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.400507359 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.400159494 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.40005926 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.40001305 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.399509404 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.401149689 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.39970857 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.40032522 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.400076306 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.400922781 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.39993063 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.399960196 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.39993039 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.401399121 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.40026139 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.400626892 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.400587133 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.40049288 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.399929748 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.400848665 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.401696501 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.402165835 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.402706255 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.400196805 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.401488285 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.401760731 seconds)
  done (took 93.61395469 seconds)
done (took 1886.241086976 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.565712301 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.513459575 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.391192958 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.453076246 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.391653112 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.393866638 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.404773639 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.39117374 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.392392383 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.391812397 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.391585953 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.625285505 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.444340413 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.392504621 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.392828807 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.489298619 seconds)
  done (took 28.29193367 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.421379346 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.400720474 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.527725233 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.39605698 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.423074414 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.611871948 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.457703908 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.397915282 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.593685773 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.417226208 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.404337425 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.419246005 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.410931623 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.399450171 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.41820602 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.611234173 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.691345068 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.40682714 seconds)
  done (took 30.676784682 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.920265586 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.408486585 seconds)
  done (took 5.59806651 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.420480846 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.397596965 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.399947874 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.396687197 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.391335419 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.389128723 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.395390354 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.3957919 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.395629565 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.545648232 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.398959262 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.411842624 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.418772874 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.398675066 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.407086171 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.445492408 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.56211547 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.406520997 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.404303137 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.403894719 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.397680764 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.500085703 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.44420875 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.408224115 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.544864163 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.398218023 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.405870629 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.406843343 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.517023894 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.40867106 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.398070128 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.399732878 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.399756097 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.393840213 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.973564065 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.397472838 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.426438522 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.406786511 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.410755374 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.542775868 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.402216607 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.404872651 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.39190462 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.968300724 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.508115723 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.532804818 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.411982546 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.404164413 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.40174643 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.469505825 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.400626006 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.401322612 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.461123449 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.26754029 seconds)
  done (took 89.268906119 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.451292326 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.393301791 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.581899233 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.421098532 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.391798662 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.428812668 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.392809012 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.729377465 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.412708199 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.394286628 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.740404325 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.068049664 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.403127123 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.46010035 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.429104373 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.450803378 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.412588749 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.40589147 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.393658697 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.398778719 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.996175871 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.405192477 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.393250583 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.491788558 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.438187221 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.996689444 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.395884164 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.413236967 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.415682496 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.394341674 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.034119144 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.394934244 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.444370781 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.398822232 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.705803397 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.846842416 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.805080909 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.397417973 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.419440916 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.399323724 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.426008708 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.996158558 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.82829018 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.395648097 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.399938065 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.998231506 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.395944532 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.407798564 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.401826202 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.671128656 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.395156072 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.399703096 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.397777318 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.415846062 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.397828421 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.449911819 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.451927448 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.002604816 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.400581195 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.396644122 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.438167508 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.401310039 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.403801708 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.399107119 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.403131681 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.829937762 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.636585659 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.408268983 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.829441297 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.026142895 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.397528231 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.104995466 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.398419024 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.4163858 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.44570645 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.41263344 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.398183205 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.99305083 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.414512496 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.399346844 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.809160498 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.40300289 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.728052579 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.419908913 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.398141531 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.018104902 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.402365042 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.43973338 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.399928638 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.40691575 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.398604374 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.405458077 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.716851951 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.447680598 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.39922527 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.400603424 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.426035218 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.400931495 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.399505097 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.405790922 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.106484473 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.403944803 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.401433382 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.426400953 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.400176517 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.400250289 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.399407171 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.401390693 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.688558721 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.399248847 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.403307817 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.400458238 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.400729786 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.430845575 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.500688124 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.40857762 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.765398423 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.400487255 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.41595498 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.406661117 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.400061808 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.433592903 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.400187038 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.403693621 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.400683905 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.77446607 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.420712087 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.402195542 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.401705546 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.40148297 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.403679372 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.401772301 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.455633755 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.407478908 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.261465615 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.410356646 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.427722005 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.402000402 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.41652757 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.402346617 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.410119037 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.403189565 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.719589542 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.715896371 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.631425144 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.404992093 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.402104436 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.271757522 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.404430956 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.591316371 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.424833093 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.402886137 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.707956291 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.633232856 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.403337066 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.401912162 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.404606109 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.689163662 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.404091586 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.741217065 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.064333233 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.404663282 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.405441606 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.252054173 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.245716856 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.406201845 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.409267678 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.730858468 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.423520849 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.404303485 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.405587125 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.405652263 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.403947535 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.405775134 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.414091188 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.404617272 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.40482104 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.699357324 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.60464697 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.424239677 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.408674411 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.002672728 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.427697099 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.406531486 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.410095651 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.410004933 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.405686781 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.4599469 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.408246137 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.408109508 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.40602646 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.414775001 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.072571323 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.407120418 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.426940385 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.605739689 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.217725595 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.410580609 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.40586855 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.40646981 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.459920353 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.034080807 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.46120068 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.771353044 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.411984433 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.449664072 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.415996606 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.414221697 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.033381477 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.424137176 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.407687824 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.203052797 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.407807703 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.887997472 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.407982046 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.410299909 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.130942689 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.406894169 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.412846123 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.407625973 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.408856173 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.721110335 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.408472108 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.416656098 seconds)
  done (took 516.750503745 seconds)
done (took 671.854339825 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.407471977 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.413974781 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.412240302 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.412864928 seconds)
  done (took 10.930854545 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.427626592 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.419529032 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.425659644 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.414242387 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.424244641 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.415172839 seconds)
  done (took 9.813681957 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.409189739 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.414638168 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.412691172 seconds)
  done (took 8.521918884 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.65277174 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.429941053 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.823055569 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.409493523 seconds)
  done (took 9.602532303 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.426153454 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.42679663 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.425718051 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.425695503 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.427870404 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.427805431 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.427802007 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.42766414 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.427215756 seconds)
  done (took 14.126871383 seconds)
done (took 54.282306582 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.476346778 seconds)
    (2/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.57511357 seconds)
    (3/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.641695055 seconds)
    (4/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.637865803 seconds)
    (5/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.555174111 seconds)
    (6/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.674825075 seconds)
    (7/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.508514213 seconds)
    (8/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.810972154 seconds)
    (9/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.570755323 seconds)
    (10/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.485226592 seconds)
    (11/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.623877319 seconds)
    (12/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.584123627 seconds)
    (13/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.720950564 seconds)
    (14/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.465213455 seconds)
    (15/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.8088356 seconds)
    (16/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.388357682 seconds)
    (17/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.529142101 seconds)
    (18/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.450400244 seconds)
    (19/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.723513947 seconds)
    (20/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.594078937 seconds)
    (21/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.435895663 seconds)
    (22/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.547662768 seconds)
    (23/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.445493125 seconds)
    (24/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.539779144 seconds)
    (25/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.416759107 seconds)
    (26/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.45925627 seconds)
    (27/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.420166941 seconds)
    (28/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.506770356 seconds)
    (29/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.38965532 seconds)
    (30/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.474265186 seconds)
    (31/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.590212035 seconds)
    (32/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.491328951 seconds)
    (33/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.722385075 seconds)
    (34/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.498531894 seconds)
    (35/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.389463685 seconds)
    (36/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.530258857 seconds)
    (37/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.500851398 seconds)
    (38/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.495665058 seconds)
    (39/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.393276793 seconds)
    (40/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.395187899 seconds)
    (41/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.685136319 seconds)
    (42/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.485887959 seconds)
    (43/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.413339113 seconds)
    (44/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.420828681 seconds)
    (45/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.512030316 seconds)
    (46/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.524177868 seconds)
    (47/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.390145716 seconds)
    (48/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.831510137 seconds)
    (49/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.392172334 seconds)
    (50/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.39272735 seconds)
    (51/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.395365296 seconds)
    (52/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.672359779 seconds)
    (53/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.537771509 seconds)
    (54/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.673098869 seconds)
    (55/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.391698257 seconds)
    (56/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.643426956 seconds)
    (57/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.988613699 seconds)
    (58/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.601163005 seconds)
    (59/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.391930515 seconds)
    (60/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.452264671 seconds)
    (61/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.534165741 seconds)
    (62/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.42370828 seconds)
    (63/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.451377249 seconds)
    (64/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.45073116 seconds)
    (65/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.576030441 seconds)
    (66/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.517500191 seconds)
    (67/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.521786023 seconds)
    (68/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.418701934 seconds)
    (69/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.573851909 seconds)
    (70/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.623483821 seconds)
    (71/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.591178277 seconds)
    (72/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.895004422 seconds)
    (73/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.812065581 seconds)
    (74/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.590015456 seconds)
    (75/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.415413134 seconds)
    (76/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.560852909 seconds)
    (77/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.514430008 seconds)
    (78/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.600848569 seconds)
    (79/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.511207554 seconds)
    (80/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.456110923 seconds)
    (81/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.570580402 seconds)
    (82/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.392849341 seconds)
    (83/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.533848272 seconds)
    (84/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.486732149 seconds)
    (85/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.690699188 seconds)
    (86/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.578642958 seconds)
    (87/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.505249926 seconds)
    (88/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.443803128 seconds)
    (89/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.394363324 seconds)
    (90/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.647604176 seconds)
    (91/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.609828826 seconds)
    (92/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.393786089 seconds)
    (93/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.513179303 seconds)
    (94/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.532054529 seconds)
    (95/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.541831962 seconds)
    (96/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.504243188 seconds)
    (97/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.41494791 seconds)
    (98/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.688719498 seconds)
    (99/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.456738576 seconds)
    (100/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.692995524 seconds)
    (101/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.492593241 seconds)
    (102/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.394498362 seconds)
    (103/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.632672278 seconds)
    (104/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.643667031 seconds)
    (105/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.547939024 seconds)
    (106/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.450859527 seconds)
    (107/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.394256422 seconds)
    (108/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.405921375 seconds)
    (109/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.565108123 seconds)
    (110/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.594421973 seconds)
    (111/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.49907556 seconds)
    (112/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.494705444 seconds)
    (113/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.483478378 seconds)
    (114/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.394337847 seconds)
    (115/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.506601876 seconds)
    (116/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.45223105 seconds)
    (117/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.728721484 seconds)
    (118/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.395466803 seconds)
    (119/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.609027306 seconds)
    (120/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.556217037 seconds)
    (121/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.688405567 seconds)
    (122/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.588322091 seconds)
    (123/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.587780793 seconds)
    (124/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.548175702 seconds)
    (125/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.396015919 seconds)
    (126/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.498153076 seconds)
    (127/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.396011167 seconds)
    (128/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.43470961 seconds)
    (129/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.397605424 seconds)
    (130/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.500483788 seconds)
    (131/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.993817523 seconds)
    (132/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.582481651 seconds)
    (133/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.526800004 seconds)
    (134/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.41496952 seconds)
    (135/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.460157176 seconds)
    (136/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.502853364 seconds)
    (137/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.561294199 seconds)
    (138/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.515464957 seconds)
    (139/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.443803692 seconds)
    (140/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.398410752 seconds)
    (141/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.771693953 seconds)
    (142/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.489420013 seconds)
    (143/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.447576324 seconds)
    (144/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.762019587 seconds)
    (145/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.461596846 seconds)
    (146/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.397239291 seconds)
    (147/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.534486746 seconds)
    (148/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.70167507 seconds)
    (149/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.398711899 seconds)
    (150/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.539193892 seconds)
    (151/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.421987451 seconds)
    (152/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.474467446 seconds)
    (153/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.52172666 seconds)
    (154/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.516701517 seconds)
    (155/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.452365599 seconds)
    (156/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.503246752 seconds)
    (157/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.398121695 seconds)
    (158/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.79069292 seconds)
    (159/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.486061225 seconds)
    (160/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.397384244 seconds)
    (161/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.737424297 seconds)
    (162/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.456996621 seconds)
    (163/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.690004376 seconds)
    (164/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.460590029 seconds)
    (165/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.653303773 seconds)
    (166/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.53551124 seconds)
    (167/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.456860617 seconds)
    (168/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.575611879 seconds)
    (169/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.45196975 seconds)
    (170/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.540105715 seconds)
    (171/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.765868145 seconds)
    (172/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.546709981 seconds)
    (173/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.528570305 seconds)
    (174/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.412412874 seconds)
    (175/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.516492521 seconds)
    (176/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.821949347 seconds)
    (177/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.518016586 seconds)
    (178/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.540637523 seconds)
    (179/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.628230234 seconds)
    (180/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.424134311 seconds)
    (181/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.420871947 seconds)
    (182/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.497075345 seconds)
    (183/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.529348073 seconds)
    (184/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.539178997 seconds)
    (185/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.739168659 seconds)
    (186/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.662847226 seconds)
    (187/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.456586703 seconds)
    (188/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.589011526 seconds)
    (189/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.657365839 seconds)
    (190/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.42432851 seconds)
    (191/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.510679036 seconds)
    (192/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.610059856 seconds)
  done (took 344.235061569 seconds)
done (took 345.5227827 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.451768517 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.525528929 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.431339932 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.43140151 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.433472453 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.435398897 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.453672734 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.434349236 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.446736129 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.447379352 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.435919504 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.441536667 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.448304238 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.444919992 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.466415044 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.432925776 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.432871156 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.44192655 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.448624275 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.450645597 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.434605424 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.434425987 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.461818774 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.433978688 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.441592495 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.441559191 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.439917104 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.440613294 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.440856535 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.448821458 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.425085582 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.441787676 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.451432632 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.446735521 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.436576388 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.444815227 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.437475228 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.52889016 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.455885377 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.446328599 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.443445667 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.451000213 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.440259696 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.441145651 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.448966805 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.463900232 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.444848226 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.450303646 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.425764144 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.429787515 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.456454792 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.448679254 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.445357992 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.429136911 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.446032543 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.451694263 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.445404024 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.456430782 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.443667474 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.43773203 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.470742716 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.455458876 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.448320036 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.444502073 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.443715585 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.452712424 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.44769859 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.453485201 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.444752418 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.439343312 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.439378202 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.445920288 seconds)
done (took 113.457314865 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.559562351 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.433849509 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.594328642 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.444348076 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.606098928 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.559799995 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.445492911 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.44564265 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.445210587 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.23655006 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.445920497 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.44547362 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.433976517 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.447776404 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.559072779 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.447869435 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.445613234 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.139571447 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.447620629 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.573776321 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.436720509 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.446943536 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.448259417 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.245820465 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.435437852 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.431098356 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.572262228 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.44716208 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.14028801 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.430426298 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.43366515 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.140930075 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.571280617 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.466554653 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.457865702 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.45620732 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.604925124 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.451223522 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.560304365 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.565682617 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.596128709 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.486098916 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.440661834 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.438816715 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.450161318 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.45125757 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.448889397 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.478101367 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.438410775 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.450326957 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.1408624 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.458845261 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.459674644 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.449198028 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.44982856 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.469206356 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.451432785 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.450482758 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.576083278 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.44961612 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.562212965 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.24366357 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.247469177 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.448700129 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.436776084 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.450866127 seconds)
  done (took 115.628132884 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.508011864 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.517763262 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.562030667 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.440681939 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.49135873 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.563794496 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.441955169 seconds)
  done (took 11.831988115 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.447539509 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.452259121 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.487499513 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.489820044 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.451284159 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.613615697 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.451346619 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.453876112 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.450605784 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.49362982 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.451972785 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.451501487 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.460260841 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.440470952 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.489508698 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.453234095 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.561194044 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.44416044 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.453271417 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.597625515 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.451886945 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.460757232 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.493706163 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.454585087 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.45289229 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.450419429 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.243948944 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.452610861 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.450611352 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.453209149 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.452156853 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.510755863 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.452800401 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.442447536 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.452831566 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.558020951 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.451889346 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.453525923 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.454681566 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.445409933 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.453841995 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.453564458 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.454098452 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.453086271 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.45283736 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.467998264 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.453021357 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.455372651 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.454018084 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.455822567 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.493525551 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.454105087 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.454485746 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.453889784 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.499077742 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.463587963 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.452708124 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.45292571 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.453961597 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.453461957 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.599197295 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.492748239 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.455040959 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.49144076 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.453441412 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.454770829 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.455603253 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.453793418 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.538345808 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.453908686 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.493722047 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.453921786 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.635315424 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.47151124 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.456568119 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.449486611 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.450142204 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.45490175 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.442277086 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.452017137 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.455212409 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.448542482 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.452388161 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.454388563 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.456588167 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.60557586 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.553773671 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.456096763 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.463252944 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.453613018 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.456175296 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.498134639 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.456766047 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.455901311 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.497914049 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.564848861 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.497895173 seconds)
  done (took 148.965529201 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.459868633 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.461033431 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.450558718 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.476314166 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.448304465 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.449011801 seconds)
  done (took 10.057578305 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.449462925 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.461160696 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.458111592 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.456725386 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.458865502 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.458780319 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.458466925 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.451001168 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.463740627 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.458500829 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.459282297 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.45939069 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.459553858 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.457411239 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.458446971 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.457395043 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.458673071 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.458036624 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.458143209 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.459608888 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.44707179 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.459300466 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.459031195 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.452516907 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.461994962 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.460356057 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.47418678 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.459808356 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.459572788 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.456403744 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.46376831 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.459692031 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.451629748 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.455795171 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.461515621 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.452102608 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.46380595 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.462083051 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.459283724 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.46008059 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.461017256 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.460440073 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.460383986 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.462364738 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.453011324 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.456267962 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.463993642 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.474346091 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.459776444 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.461466626 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.462196269 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.46138113 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.460559652 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.462423547 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.453091872 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.458140055 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.466660075 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.462635137 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.460930115 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.454573899 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.465168716 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.463404896 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.452944421 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.465527569 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.460155658 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.462668095 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.454343437 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.466402947 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.462473033 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.463182936 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.463485474 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.460706264 seconds)
  done (took 107.412544232 seconds)
done (took 395.201060606 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.763450665 seconds)
  done (took 4.079851245 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.565165684 seconds)
  done (took 3.883827806 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.967067793 seconds)
  done (took 26.290648632 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.491490604 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.458253445 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.463524433 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.455257041 seconds)
  done (took 11.187727748 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.817563369 seconds)
  done (took 4.136577275 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.458447594 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.458267578 seconds)
  done (took 6.23706874 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.756045655 seconds)
  done (took 4.075249409 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.840538606 seconds)
  done (took 4.166279871 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.464344265 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.466459307 seconds)
  done (took 6.25787698 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.429905048 seconds)
  done (took 3.749645218 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 21.195142559 seconds)
  done (took 22.513892265 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.4769628 seconds)
  done (took 3.797785568 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.540822976 seconds)
  done (took 3.858183605 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.650019408 seconds)
  done (took 6.968520804 seconds)
done (took 112.52163515 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.448294116 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.447427867 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.449127266 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.4498326 seconds)
  done (took 11.112869833 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.527921866 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.527987948 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.536548398 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.521620996 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.522608062 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.532330196 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.489218833 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.488343857 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.519932243 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.516113126 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.531066575 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.522513571 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.53008987 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.49025286 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.517569725 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.532529625 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.520756886 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.537597075 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.489822356 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.523018895 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.465401939 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.522712254 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.514776838 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.465847241 seconds)
  done (took 37.666790991 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.953709958 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.529095528 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.609190815 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.50603235 seconds)
  done (took 7.917778807 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.568363729 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.572697167 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.588015361 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.623885769 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.659093702 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.584323396 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.492440894 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.487928879 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.473478794 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.572716852 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.651103258 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.568850501 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.790362006 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.467449351 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.785985116 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.466401648 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.46679292 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.569799586 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.619857051 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.652676767 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.466819878 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.57034958 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.574617868 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.571134194 seconds)
  done (took 39.166283277 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.474713841 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.483127337 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.469150053 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.482308896 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.470287162 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.467901406 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.469410388 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.474027465 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.466155113 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.46940471 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.469364173 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.482284466 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.468028895 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.467372335 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.475077291 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.4713017 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.470402868 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.476375905 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.477002646 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.468362462 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.468842952 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.475257101 seconds)
  done (took 33.718339604 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.452938628 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.45270706 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.803582708 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.706793955 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.453537044 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.452418826 seconds)
  done (took 14.645232321 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.542996033 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.698390608 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.460446095 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.890752011 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.97456468 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.461190222 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.459937534 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.743231446 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.116194561 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.134318404 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.529310006 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.540133881 seconds)
  done (took 21.877025535 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.543702414 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.463080426 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.466000342 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.532543843 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.464575429 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.466058958 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.518422565 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.233808038 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.472578996 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.74196816 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.464777907 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.546557387 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.715311427 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.474238667 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.466623409 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.435513711 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.694643296 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.039516968 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.468601162 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.477659039 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.497324733 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.464396363 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.472067877 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.705972291 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.469577275 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.467633007 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.730306784 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.466318334 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.811494455 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.789705076 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.78824552 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.474127759 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.741562165 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.18128226 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.57202452 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.703871298 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.458584526 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.469087973 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.457193903 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.493313125 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.473726271 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.467807292 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.782821078 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.475474837 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.468105324 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.484653068 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.234318433 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.475576485 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.467747417 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.468283488 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.78686649 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.555710609 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.472949972 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.468277511 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.458299218 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.468773657 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.472664786 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.602736177 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.107227392 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.468993072 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.487387979 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.468254107 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.482185321 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.470009738 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.204477292 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.474883312 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.472978752 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.475227098 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.468777695 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.480647043 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.489959017 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.469137189 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.48986194 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.468387832 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.344302934 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.470228445 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.470550961 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.097400428 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.479168 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.469443448 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.695078271 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.469946679 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.469980949 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.46963882 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.467407003 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.335807186 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.477742699 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.435025546 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.511910718 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.237599239 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.710719794 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.487297261 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.500032835 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.691621772 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.437638889 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.471240506 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.471855986 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.471668749 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.489382045 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.237210653 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.470695855 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.476668213 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.720147325 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.681218777 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.487860291 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.457487258 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.997416043 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.490042927 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.499932321 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.488155792 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.712224994 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.18761574 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.797867863 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.495498151 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.506635152 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.474423284 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.398625154 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.480744921 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.477748329 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.473634264 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.787695165 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.427545047 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.474288359 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.546827973 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.474507843 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.473438478 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.48759855 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.474078532 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.473299332 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.68825339 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.487097688 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.795141179 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.479614054 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.472783825 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.48892189 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.479530112 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.476443463 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.695019565 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.490601764 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.751458012 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.47290275 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.474544803 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.472900664 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.692334114 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.472908851 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.506865643 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.813654867 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.485480832 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.483531177 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.795487635 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.510367097 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.58717276 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.505403544 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.48639409 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.727521956 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.482835173 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.481782465 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.476984478 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.497536593 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.480766984 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.483568833 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.477868022 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.199520304 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.445101621 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.480850415 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.477180535 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.490035032 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.549774038 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.481668219 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.716777661 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.481329939 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.474715312 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.504410478 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.482132523 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.697678845 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.788175375 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.486305257 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.647666228 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.99850521 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.196022123 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.490715717 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.475659226 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.476957233 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.477465792 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.478548396 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.476017945 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.476817981 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.716220594 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.802417204 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.477032604 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.198893996 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.480916142 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.491601036 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.48389654 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.790461431 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.48677321 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.479316989 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.478268947 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.481571877 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.489745044 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.794775557 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.698744334 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.49360392 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.48023226 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.999254977 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.485899404 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.477944457 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.477555865 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.503422909 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.494044363 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401553516 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.820254698 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.475041054 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.794342953 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.491813206 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.497245029 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.478027284 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.482041643 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.498905269 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.486386827 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.493131535 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.722627564 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.481592417 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.504542686 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.11934122 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.461640642 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.141481836 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.481734498 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.499118343 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.479236552 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.249392922 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.480949175 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.481545343 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.761974587 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.253307852 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.479891529 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.005891241 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.479682281 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.383044208 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.794852077 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.70711247 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.481749563 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.48614411 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.797613333 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.695225484 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.50754457 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.482932513 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.484510604 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.448957186 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.081006605 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.496390895 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.660264416 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.258437899 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.488560511 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.48428483 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.528757087 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.483620556 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.940349923 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.482075367 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.481379761 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.485910159 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.49071787 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39606782 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.488738752 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.48110391 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.223110557 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.492821735 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.016512184 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.482566868 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.725445189 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.797814923 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.771085448 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.495968293 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.488975508 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.72794173 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.797868818 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.483245261 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.500922526 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.142695623 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.34145824 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.490785301 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.483274737 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.407034334 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.485487552 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.827917299 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.499584762 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.487570502 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.487351791 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.485917499 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.484654813 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.485074561 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.49145555 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.452540136 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.062542966 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.4831162 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.487461449 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.490057962 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.490728975 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.73305047 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.500217137 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.208197708 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.715598114 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.478968823 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.538110497 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.491632379 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.501447093 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.452995528 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.484814222 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.48553336 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.482460506 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.711948406 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.498211391 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.453618842 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.529415697 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.696161952 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.486395603 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.494373688 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.738429508 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.487375918 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.496373727 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.45875181 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.524387436 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.496488889 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.488310238 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.504314688 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.525597369 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.562363747 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.731025966 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.804654297 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.804236192 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.948051476 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.49681082 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.488629662 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.500908778 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.568275726 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.487977237 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.489299925 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.488217057 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.210772795 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378410545 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.216099078 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.807978645 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.489413933 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.499375421 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.489596411 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.729432288 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.487037938 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.76715604 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.489271639 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.489625329 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.509717902 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.503846322 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.488540594 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.69841367 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.762603538 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.489191955 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.488205141 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.514121659 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.491011867 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.813455089 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.708598301 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.071232977 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.127548806 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.492608113 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.50338154 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.268097078 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.765556655 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.490289278 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.491192732 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.491000572 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.510448003 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.495704161 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.499977794 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.510003944 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.71361791 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.806761295 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.210811306 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.806569899 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.518009195 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.490692256 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.494447561 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.739250398 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.322350725 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.735578039 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.222170237 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.339257807 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.744275537 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.565783795 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.738032519 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.493714446 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.728502684 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.507073033 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.49291715 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.491544612 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493031314 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.491629979 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.806555549 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.219916734 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.745768987 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.496930932 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.505521014 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.520927473 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.735203533 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.714925261 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.366276223 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.712247996 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.814791002 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.499149654 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.49160865 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.223872361 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.813350445 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493772939 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.497426257 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.746219204 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.492961241 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.527414183 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.3690693 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.492491201 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.131978649 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.706062367 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.515023344 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.495609572 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.343858911 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.225472063 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.495279576 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.076674997 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.496625162 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.494006962 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.771410536 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.501178357 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.502242512 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.77556078 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.500620273 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.500242584 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.739802383 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.221296717 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.404325606 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.513746377 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.503688834 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.499303424 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.495341351 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.569747761 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.495239328 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.497246133 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.956878849 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.497888538 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.497626892 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.51056115 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.495828533 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.505087282 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.501400976 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.497658636 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.504234034 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.474096243 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.481367298 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.506038711 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.629909636 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.113427121 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.499218017 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.165079076 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.833314526 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.744595273 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.504165929 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.463728312 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.503744961 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.497940915 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.497325485 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.497759897 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.489225782 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.138662517 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.505825547 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.815336926 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.505246305 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.708237561 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.708761303 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.514573536 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.746080734 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.517853621 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.525322077 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.464894996 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.499730626 seconds)
  done (took 1041.226235743 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.538688146 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.505258036 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.508063892 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.504975004 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.547999666 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.502277252 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.529746119 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.500885124 seconds)
  done (took 21.490514114 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.504791962 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.497629883 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.497126244 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.49678338 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.490832919 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.055411142 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.493758125 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.499330476 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.512613817 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.497787453 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.494972833 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.216553642 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.499740573 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.490772562 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.491520914 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.499112867 seconds)
  done (took 34.599017899 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.834288185 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.713865301 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.183736975 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.490943266 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.502722952 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.528242878 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.89100608 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.502099228 seconds)
  done (took 29.001921415 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.505589201 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.506049043 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.507168974 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.506763799 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.509681556 seconds)
  done (took 8.890093644 seconds)
done (took 1302.634970472 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.50655962 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.507460493 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.508050598 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.507582119 seconds)
  done (took 7.385868441 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.468460814 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.469830985 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.474687529 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.486534256 seconds)
  done (took 10.255530808 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.338718142 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.124510482 seconds)
  done (took 5.818809829 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.0730915 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.059371341 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.062331562 seconds)
  done (took 7.550851111 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.807693112 seconds)
  done (took 3.164736038 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.492255769 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.51179806 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.514888701 seconds)
  done (took 8.875789986 seconds)
done (took 44.408426394 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.492869043 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.262923944 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.649267693 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.49257109 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.675971526 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.648480848 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.770486019 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.503273323 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.49707611 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.492824642 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.51069919 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.654451139 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.75790025 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.262390123 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.750787781 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.26284116 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.657169698 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.498302687 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.49322847 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.504399041 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.773072804 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.508229055 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.495237277 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.511174983 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.658598161 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.639142631 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.495789679 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.285593091 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.493651045 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.494038648 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.639707894 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.494292411 seconds)
  done (took 86.683836427 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.495496764 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.511437745 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.493862112 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.514851708 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.515648783 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.497882885 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.5153003 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.495028577 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.49521972 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.511597417 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.495151956 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.496123847 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.495531263 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.49565966 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.518541795 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.494620386 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.519840897 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.496064886 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.512210513 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.496529892 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.49785052 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.508938048 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.514462411 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.510229404 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.495740026 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.497365944 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.51082279 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.495764897 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.496636889 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.526237905 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.496069756 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.497988672 seconds)
  done (took 81.473905895 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.499508871 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.497142608 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.500712008 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.515357474 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.49730678 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.49809898 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.498676156 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.497524042 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.497319368 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.533548093 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.504768945 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.496286416 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.496710005 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.497557057 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.500660564 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.497263171 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.499065898 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.504458735 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.495884969 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.517770703 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.499026831 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.498986777 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.498541824 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.49678614 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.498359052 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.498668106 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.517138997 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.507412316 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.500239817 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.503584116 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.49987264 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.517145075 seconds)
  done (took 81.442605883 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.742086387 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.513873206 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.517266577 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.510029334 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.517361905 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.513597026 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.510394828 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.748850507 seconds)
  done (took 15.935223652 seconds)
done (took 266.894267591 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.508587703 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.081876689 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.536580747 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.509014192 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.526845853 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.536987166 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.741995819 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.53537689 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.730300485 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.510371027 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.525166325 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.519218051 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.469627777 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.656405712 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.390534321 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.517643514 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.509918296 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.502139647 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.187076832 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.763528893 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.537956065 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.511022298 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.399895416 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.520607662 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.487823148 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.584013799 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.584676641 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.678440346 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.638797138 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.583057479 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.078863164 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.514491512 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.513295842 seconds)
  done (took 69.255695307 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.507773091 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.51746289 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.518104907 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.519566003 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.518681493 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.518731781 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.509581035 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.51967771 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.516786266 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.519014019 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.51993721 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.519956688 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.520955367 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.52032604 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.520990456 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.491463715 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.511000712 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.519384493 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.510269978 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.493515367 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.520338475 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.520977769 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.52242983 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.520101575 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.520403542 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.521276284 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.520821882 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.520387288 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.519833896 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.521296399 seconds)
  done (took 46.868884673 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.520982444 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.183428621 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.368168216 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.51745169 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.5133947 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.51663292 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.867411292 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.522037875 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.516627413 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.516191735 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.078240403 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.525619034 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.549868667 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.381401154 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.515626387 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.520691543 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.52191424 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.511704465 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.195532854 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.52350592 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.867608985 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.521878099 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.867403696 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.523823017 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.516327285 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.515088216 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.520076874 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.415603273 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.536938496 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.081302936 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.516365471 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.861263035 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.326019847 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.441648042 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.508795316 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.52777385 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.523126693 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.087058068 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.516050863 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.51564033 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.866646354 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.514519518 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.386916797 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.237504105 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.537468146 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.52577551 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.459340025 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.08398889 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.81588803 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.521895996 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.427708649 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.518883464 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.526116104 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.516984113 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.814898028 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.520701894 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.515799343 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.484367336 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.521618671 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.868081426 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.52653843 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.516929845 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.196514994 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.517091951 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.193277468 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.519149723 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.527930482 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.519413279 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.394642863 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.519403858 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.255153479 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.538958712 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.526475018 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.086596858 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.193337539 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.509296489 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.520158756 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.202187978 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.35994136 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.890796716 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.521689437 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.398176256 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.893453649 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.519742958 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.529441824 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.528527626 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.528217493 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.590671728 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.868931321 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.174679042 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.252585108 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.493184175 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.873440597 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.525960582 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.520434513 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.487387622 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.528423858 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.527036165 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.389024395 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.254417715 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.543803531 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.527966578 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.247123875 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.542521926 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.875094277 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.525923735 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.437664882 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.520857727 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.621209268 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.529097542 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.527340621 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.526523841 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.87499799 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.524379356 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.530741444 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.24126991 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.118848244 seconds)
  done (took 214.227416884 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.51642007 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.535270776 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.532355541 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.514645548 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.513400392 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.520833184 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.514929954 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.516710229 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.520176718 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.514762671 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.516029948 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.523439431 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.523152907 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.512461003 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.516199975 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.515982323 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.516726226 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.517065047 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.514851513 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.517297997 seconds)
  done (took 47.746848099 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.533725697 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.205243445 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.177645234 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.53288574 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.532710807 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.522700742 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.591346265 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.530974757 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.531955781 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.8860389 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.735245284 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.533113241 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.532074279 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.53221188 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.177954473 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.503080632 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.887345677 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.206393752 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.53398754 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.206653912 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.503061776 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.531911111 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.522398236 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.205419708 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.900175774 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.874947669 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.591645756 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.204405668 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.535123758 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.533322415 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.205829684 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.533224489 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.524651409 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.18942909 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.535172873 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.545954983 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.532807872 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.594356122 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.596662241 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.890398662 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.212789645 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.886843832 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.542878147 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.702674283 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.536503786 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.501920889 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.217775036 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.534274411 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.50254427 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.535574326 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.540416277 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.193924172 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.526691505 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.196279588 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.534953234 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.534401208 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.208860338 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.195986659 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.184991028 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.738523109 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.525386844 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.87958765 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.536572092 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.222401924 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.536721869 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.536312671 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.537575382 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.742379306 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.210533998 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.879888868 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.891300272 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.893300825 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.535980345 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.607481644 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.537749468 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.892739528 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.605151981 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.949234543 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.894895474 seconds)
  done (took 140.267441398 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.853921203 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.655983734 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.966295243 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.163061498 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.094541764 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.683983797 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.656570757 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.79987265 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.532772248 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.636525715 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.298243687 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.633012502 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.37414513 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.605486749 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.647509607 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.664101015 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.988644577 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.522941201 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.249984864 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.270682035 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.531532186 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.641430538 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.080409186 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.745449833 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.532886745 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.120098198 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.545836292 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.112080592 seconds)
  done (took 57.98896766 seconds)
done (took 577.719360217 seconds)
SAVING RESULT...
DONE!
