cset: moving following pidspec: 15519
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.939309798 seconds)
loading group "string"... done (took 0.554748019 seconds)
loading group "linalg"... done (took 9.072588169 seconds)
loading group "parallel"... done (took 0.171981184 seconds)
loading group "find"... done (took 1.384334687 seconds)
loading group "tuple"... done (took 2.21503662 seconds)
loading group "dates"... done (took 1.399108446 seconds)
loading group "micro"... done (took 0.221201744 seconds)
loading group "io"... done (took 0.626609151 seconds)
loading group "scalar"... done (took 44.536233554 seconds)
loading group "sparse"... done (took 13.992272563 seconds)
loading group "broadcast"... done (took 1.091997411 seconds)
loading group "union"... done (took 12.662876849 seconds)
loading group "simd"... done (took 2.554736885 seconds)
loading group "random"... done (took 10.240833171 seconds)
loading group "problem"... done (took 1832.304729668 seconds)
loading group "array"... done (took 25.754802043 seconds)
loading group "misc"... done (took 1.12291737 seconds)
loading group "sort"... done (took 3.787120348 seconds)
loading group "collection"... done (took 18.88057017 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.672102141 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.144995578 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.175584152 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.337725002 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.218026568 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.167243089 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.172522997 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.571213523 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.99378452 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.217938463 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.152458592 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.555905908 seconds)
done (took 6.091582387 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.260858184 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.446754512 seconds)
    (2/2) benchmarking "String"...
    done (took 0.137525203 seconds)
  done (took 1.243907846 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.085139948 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.186383589 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.118454003 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.103177659 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.120402218 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.118417213 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.119321613 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.120375427 seconds)
  done (took 1.549088018 seconds)
done (took 3.805298594 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.496778844 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.850568908 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.555655336 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.138437046 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.166948541 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.157019864 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.311433452 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.173662158 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.125874585 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.10992492 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.179418876 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.410865741 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.482797472 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.043838974 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.094438103 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.140270886 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.105757812 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.739769903 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.09408424 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.140164956 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.556941189 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.120900688 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.109133341 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.148201203 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.213914733 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.140412063 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.163127877 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.105128269 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.679720764 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.110999795 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.198982009 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.112614116 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.182563462 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.24388128 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.109531233 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.114766005 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.668032712 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.185422742 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.120979509 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.10202075 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.682747537 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.089037344 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.199256794 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.105370533 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.117904194 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.197274907 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.125176341 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.108083629 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.108903904 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.082194135 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.182706111 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.474922404 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.115154421 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.154028133 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.116927939 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.691046601 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.104992865 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.164095576 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.147184203 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.116825056 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.093737086 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.121327252 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.164298631 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.120917359 seconds)
  done (took 20.252183609 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.126075187 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.148842257 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.102026566 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.1632544 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.147624192 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.088969218 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.107692908 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.086903437 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.132749052 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.19454493 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.147333082 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.152357058 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.098984316 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.090584892 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.124930003 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.257313672 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.113556978 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.129511019 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.105962963 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.097561495 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.148095349 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.119879511 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.115218465 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.10225318 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.177553386 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.227053275 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.117835206 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.134130801 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.104442482 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.125128188 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.15109926 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.156973194 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.102988589 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.086552185 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.192801314 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.133641838 seconds)
  done (took 5.494031808 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.207218824 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.125170862 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.199334657 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.186893101 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.153851431 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.189803133 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.125974583 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.260202519 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.204428758 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.188916206 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.139941278 seconds)
    (12/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.171260042 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.102629968 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.106156015 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.087309332 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.105316377 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.689142174 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.187060522 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.157609334 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.133085946 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113946701 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.106074007 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.38158364 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.093700478 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.105716733 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.092911519 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.099836947 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.184816709 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.111541638 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.306094637 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.127482274 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.116893295 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.138756132 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.201745697 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.141349482 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.147650149 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09427415 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.107476652 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.222868904 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.117876885 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.105891122 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.086420169 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.132990069 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.140973684 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.124078166 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.108405925 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.119629479 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.247169892 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.090905292 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.127693212 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.078401362 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.221247545 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.107096177 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.107699031 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.3583766 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.124661707 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.094537558 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.107626336 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.298067801 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.143774367 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.090471713 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.103897054 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.093041656 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.103699661 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.408460594 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.114978726 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.009595699 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.091629444 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.163645524 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.108893433 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.112247733 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.110670785 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.093473543 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.127288524 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.086585614 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.10570859 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.104225324 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.087295449 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.108999025 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.122706565 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.092485184 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.104448905 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.155284826 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.126099047 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.12570768 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.13256891 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.092629871 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.104595707 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.136258781 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.090015912 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.10806171 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.153733382 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.095722113 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.124128492 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.108838147 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.151331506 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.104712164 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.181670523 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.105286043 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.130936402 seconds)
    (101/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.107886219 seconds)
    (102/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.121474916 seconds)
    (103/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.128051588 seconds)
    (104/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.105796321 seconds)
    (105/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.107698957 seconds)
    (106/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.091298844 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.10225981 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.088569986 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.170880472 seconds)
    (110/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.093548686 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.105635334 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.090079462 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.105389195 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.118715571 seconds)
  done (took 24.782591289 seconds)
done (took 51.187898624 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.466857963 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.120528054 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.120563685 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.118601913 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.10278683 seconds)
  done (took 1.675736344 seconds)
done (took 2.394046361 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.363453464 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.180421714 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.127207253 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.187851157 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.114783031 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.193576139 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.17132409 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.126824551 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.220808343 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.090746989 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.201151358 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090350838 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.113172748 seconds)
  done (took 2.928729975 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.103152991 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.126709413 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088143976 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.117552804 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.08154972 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.117604123 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.115727364 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.119746416 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.116297011 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.092700637 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.100095608 seconds)
  done (took 1.897151616 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.098692812 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.12114425 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088247686 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.115165503 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083051202 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.11543255 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.096120456 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.125765767 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.113782957 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.093934419 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.100678919 seconds)
  done (took 1.871339108 seconds)
done (took 7.41066577 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.04711165 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.237544089 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.127379101 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.173102509 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.345205266 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.199085573 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.546475457 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.139607117 seconds)
  done (took 11.735591483 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.122104796 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.124315155 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.107985186 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.090117635 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.107915093 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.089171158 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.104270367 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.087979607 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.105998538 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.105236806 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.091032355 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.106909503 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.089746698 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.10717215 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.08775146 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.106837626 seconds)
  done (took 2.414214011 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.125302022 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.124183352 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.1119608 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.11666326 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.092200123 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.1105963 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.112099308 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.093550115 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.107206936 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.109114852 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.098638823 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.114172386 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.113183892 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.090962872 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.111977117 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.115344909 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.091580463 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.11145343 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.096515276 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.112131219 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.115882737 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.092784613 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.112763997 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.11468812 seconds)
  done (took 3.423975831 seconds)
done (took 18.291765412 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.177324272 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.109963787 seconds)
  done (took 1.011621614 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.10923836 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.127201781 seconds)
  done (took 0.963632349 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.115634819 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.105462571 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.143346514 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.122846487 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.089580203 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.106205979 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.138158782 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.089599304 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.105995096 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.106316468 seconds)
  done (took 1.853624506 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.092855733 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.109700622 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.097727898 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.12776033 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.116692947 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.09126971 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.111577845 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.109946794 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.095512848 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.105188377 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.097689463 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.124995421 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.111539578 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.126562958 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.094303574 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.112647285 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.115065144 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.109377536 seconds)
  done (took 2.680243548 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.088819396 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.10801457 seconds)
  done (took 0.926715506 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.092940009 seconds)
    (2/7) benchmarking "second"...
    done (took 0.103642926 seconds)
    (3/7) benchmarking "month"...
    done (took 0.092546233 seconds)
    (4/7) benchmarking "year"...
    done (took 0.108081293 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.104029608 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.088029015 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.104286714 seconds)
  done (took 1.424279145 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.53019668 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.250437373 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.341972118 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.124160806 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.143795333 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.394207651 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.145295247 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.121386334 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.120824993 seconds)
  done (took 2.943982815 seconds)
done (took 12.533792495 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.100033664 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.198500853 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.552725498 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.124775049 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.086934038 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.169256429 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.274371495 seconds)
done (took 2.240011638 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.377840373 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.116634722 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.098260263 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.087549678 seconds)
  done (took 1.412294925 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.087768389 seconds)
    (2/2) benchmarking "read"...
    done (took 0.112355346 seconds)
  done (took 0.938875551 seconds)
done (took 3.090730471 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087700528 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.103155888 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.084448394 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.103389842 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.084993227 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.102170549 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.203367235 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.103089488 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 0.087713386 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 0.103284048 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087606226 seconds)
    (12/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.136659825 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083911231 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102734745 seconds)
    (15/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.086539089 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105299856 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.086222333 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.102721276 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084307 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.101766515 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083965387 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103603236 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.08454821 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.101297696 seconds)
  done (took 3.186462665 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.108485047 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.105073366 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.109770427 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.093448198 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.108973069 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.094248792 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.110046053 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.104913987 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.093888548 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.106995454 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.107982795 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.092349497 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.106338098 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.092422209 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106731368 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.108902497 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.094583133 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104335493 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089698223 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.108688041 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.1114211 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087547591 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.107941265 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110658428 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.09270113 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108092413 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.090465089 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.10453707 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.109869523 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.092173964 seconds)
  done (took 3.805256967 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.096129413 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.101179599 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.086312273 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.11380853 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.08509804 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.106116101 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.08512074 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.102467273 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.086384045 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.101923358 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.087149371 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.101749054 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.0848851 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.103304669 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.086084402 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.109383692 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.120561387 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.086723035 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.101422576 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.086786303 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.108375274 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.085586583 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.105409382 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.085155137 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.10289555 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.085244611 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.102996186 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.085699201 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.103353338 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.085697336 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.108198653 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.091574428 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.102792152 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.11608843 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.092967876 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.10166097 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.09454728 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.101850045 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.085976773 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.101937578 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.084721623 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.102460485 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.08530128 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.113404964 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.087962156 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.103571187 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.085726502 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.103322899 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.085860306 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.10574866 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.084611337 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.102275525 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.104790483 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.087006427 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.107315461 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.085513365 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.103699666 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.085322612 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.103662475 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.085129782 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.101598572 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.085646857 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.108890158 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.085820778 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.125942359 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.113299429 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.086053615 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.104305381 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.089653282 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.110702732 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.087563741 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.121503237 seconds)
  done (took 7.755487391 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.091447591 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.11400891 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.087399178 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.105701844 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.083373213 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.107883495 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.10965771 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08692403 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105781562 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.105330357 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103028674 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.088521596 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105996601 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.090303376 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103670958 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.105135514 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.096869174 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101847484 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.086569905 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.107051792 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.087060638 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.109950157 seconds)
  done (took 2.935166216 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.232708984 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.114153846 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.153658246 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.126003354 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.123291006 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.103286482 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.111180357 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.112115572 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093930089 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.113219434 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.11378801 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094560422 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.122714448 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113120021 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.11292267 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.097246451 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110043295 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.096824387 seconds)
  done (took 2.900423344 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.102819515 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.106708987 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.131215346 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.090774073 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.107403061 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.092122921 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.113017197 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.121847889 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.091736166 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.106421076 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.099141015 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.109566439 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.108016944 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090304056 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108866854 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.089811551 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.108141873 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089797179 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116775233 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.112592432 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.112729964 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.099139911 seconds)
  done (took 3.068499263 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.105933415 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108197512 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.137052163 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.093986475 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.102861846 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.086749315 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.113245117 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.106458754 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.098684383 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.107945147 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090105045 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.105195867 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.09577077 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.108287859 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.112443066 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089025336 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108241552 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.089276335 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10920407 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.084542941 seconds)
  done (took 2.814487431 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.133557434 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.124298207 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.123088218 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116650014 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.124032133 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.122223755 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115960186 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.12346644 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.123171673 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.135826974 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.106462597 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.122966047 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.133267918 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113208024 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.123520204 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.13416658 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.134419503 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.116442932 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.122504286 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.122257359 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.118561518 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.124258633 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.133275914 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.12289681 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.106286965 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.12595795 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105320459 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.129816747 seconds)
  done (took 4.201755764 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089709247 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.106089633 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.087229165 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.104000266 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.0869744 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.103718035 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.087671398 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.103819142 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.089870296 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.103661385 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.090331593 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.105709347 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.089782461 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.105880332 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.089186955 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.107074846 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090103031 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.104245995 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087428209 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103422605 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.088888761 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106201881 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.089908689 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.103014544 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08743036 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.105009448 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087140466 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.103192465 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08934819 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.103377191 seconds)
  done (took 3.66591747 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.098267601 seconds)
    (2/2) benchmarking "in"...
    done (took 0.112648834 seconds)
  done (took 0.977224103 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.088257488 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.123402641 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.086421862 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.110703391 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.095293938 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.107664602 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.116431695 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095933236 seconds)
  done (took 1.591526647 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.114779869 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.127860746 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.094524328 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.120673733 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.126866501 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.10910943 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.17447554 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.113838248 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.114444882 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.09115248 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.126868408 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.089601176 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.117706148 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.094134979 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.118592915 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.122515884 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.087517268 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.117770485 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.097435345 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.111188624 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.112807386 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.106654837 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.118441632 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.097066879 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.111251498 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.118913578 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.103002434 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.120559674 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.112496805 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.102878731 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.115360731 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.084725731 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.11278758 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.095023265 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.107427101 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.125719437 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.108843678 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.114093066 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.117078639 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.096745277 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.117226259 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.08572933 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.118635277 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.09666667 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.121344026 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.112537982 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.096238979 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.103660074 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.090819291 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.112238642 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.085604542 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.112065099 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.101635288 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.100103915 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.116724526 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.126012983 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.094088086 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.112784714 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.09427285 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.110679705 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.097297812 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.113431308 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.119009017 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.094312284 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.118181182 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.099767421 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.117830765 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.103039849 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.084307876 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.105704256 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.099683924 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.132962178 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.119616425 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.09672829 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.114165846 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.088468027 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.113888996 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.113159376 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.098696254 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.11919711 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.094839518 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.115423119 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.117813114 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.094912081 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.112459123 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.097165104 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.111111534 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.092868028 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.109541621 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.128466495 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.093024697 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.10660811 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.090702007 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.11921496 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.111821399 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.096074418 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.108275996 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.101566027 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.102026271 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.095729325 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.114621864 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.095560452 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.12060275 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.114043087 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.096328828 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.117784273 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.119514145 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.09603836 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.112553428 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.086783454 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.114295042 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.093119603 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.116962622 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.083464904 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.114458154 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.112028452 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.096418461 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.118892835 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.091935268 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.113372055 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.119051362 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.102477283 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.110608029 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.087090959 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.11423405 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.094561636 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.117972633 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.120266215 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.092793521 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.104395745 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.085816807 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.117899165 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.112288342 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.09811183 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.11367776 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.096163004 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.102981942 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.088530743 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.114279024 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.118849227 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.0941468 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.114904576 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.099956192 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.116609947 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.110626753 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.100976838 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.112313626 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.090981459 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.1180687 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.111888643 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.09411291 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.117706856 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.094405903 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.111899219 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.095502559 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.118829497 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.113119522 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.096456586 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.111858128 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.095562793 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.114568855 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.090467041 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.115609708 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.11844354 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.103996606 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.112758386 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.08632479 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.106023966 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.097235273 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.1110125 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.11162085 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.092535643 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.112969305 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.095916263 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.107756502 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.094264255 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.113036882 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.124730035 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104581788 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.114544246 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.098240451 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.121469665 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.11241614 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.098169477 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.11335347 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.096620001 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.114324914 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.100043303 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.117770296 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.115079194 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.094947476 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.105688276 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097817394 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.120108062 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.090047634 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.108253079 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.108054616 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.096910964 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.120522363 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.096445623 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.114435848 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.093138464 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.117040646 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.117800003 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.095607688 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.113190727 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.091593495 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.113417552 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.100507122 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.116210732 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.114720633 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.10322499 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.115000177 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.086214864 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.118884741 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.091989413 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.119175412 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.104513856 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.09265231 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.111499097 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.098510593 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.112366336 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.094275857 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.104456779 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.100678453 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.121350503 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.114995712 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.091519274 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.113899873 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.104653868 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.113468444 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.117351127 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.09678236 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.116974425 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.128742258 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.091730138 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.113815805 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.103758444 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.115300338 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.084095438 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.118207046 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.111324444 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.09102934 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.111822284 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.093270274 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.114762835 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.097886097 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.115917986 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.083953632 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.114161864 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.111959844 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.092797483 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.105488832 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.101403231 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.115909867 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.095128733 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.124775019 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.116454124 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.097189045 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.116734756 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.09488892 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.117143689 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.115003263 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.097229812 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.117243146 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.094220524 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.110275311 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.096032149 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.110769982 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.107640042 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.095274404 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.114638961 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.097993104 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.116360186 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.094283379 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.120710171 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.114640001 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.096919095 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.133471583 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.111444082 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.092797116 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.115937782 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.116435331 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.096734322 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.113398223 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.088191661 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.119772098 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.095679385 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.120882587 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.113104144 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.089583832 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.114882827 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.095577793 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.116191256 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.096911546 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.116653788 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.093195966 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.115474072 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.113853495 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.105754602 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.111330504 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.102857487 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.118001457 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.117078085 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.096645342 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.116897608 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.094561221 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.111369223 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.114064394 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.098477143 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.115834829 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.095133422 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.117723975 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.096290603 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.114820859 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.111849889 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.099106494 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.115660544 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.09803474 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.105679756 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.090921876 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.111924935 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.114515937 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.101579457 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.115671249 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.094191119 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.113176776 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.097327789 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.113973616 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.087584344 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.121293297 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.116833572 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.09875511 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.125044158 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.09167896 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.11722368 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.12522977 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.085854602 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.112569738 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.089842201 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.11229785 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.101526571 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.117554867 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.120089983 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.097698203 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.111571316 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.090169784 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.116803562 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.094307536 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.106421377 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.090319588 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.119090785 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.112902161 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.095381399 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.115899647 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.099299052 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.117005418 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.099427834 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.11580717 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.114743478 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.098044779 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.107852681 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.092883619 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.111020278 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.097677554 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.117573052 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.092495999 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.109746587 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.114337336 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.097675197 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.115762308 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.095795078 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.114674078 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.101296028 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.116452173 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.115329351 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101619913 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.105890285 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.097089942 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.115777572 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.096447001 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.113680864 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.116030513 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.098546038 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.116754776 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.101230287 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.115920207 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.116926244 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.097503449 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.111875611 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.097622522 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.116537418 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.097079207 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.112444686 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.098293653 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.123147503 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.108494674 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.097824908 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.116489491 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.09453003 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.117871621 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.096950997 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.117708603 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.120013225 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.09737728 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.11603034 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.099994606 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.116912324 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.117206765 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.099321839 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.114481368 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.101887051 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.112453604 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.122453177 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.098250795 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.117244338 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.095666467 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.112795989 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.095884362 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.11573432 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.094699819 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.122712996 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.116757438 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.093398525 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.112337738 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.090638339 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.116057505 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100624836 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.123554497 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.116626171 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.098031729 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.107534071 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.089412911 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.118504077 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.092063526 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.115754831 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.118196105 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.101695653 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.116400061 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.093970659 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.11540424 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.120671267 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.101890928 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.118959409 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.09422525 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.119175829 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.117016379 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.097886542 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.113395383 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.097007274 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.117639692 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.099070634 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.116490129 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.112370853 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.106194941 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.122324808 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.09913369 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.116011922 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.118412229 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.097693614 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.110699084 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.101947576 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.123063102 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.121721372 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.101457097 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.118672587 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.108991923 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.113050237 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.095394758 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.122624526 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.114663879 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.102860035 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.108109588 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.098122633 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.119300857 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.118225545 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.089235837 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.112185898 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.093982963 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.117284709 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.092963371 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.108159607 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.12628484 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.103849143 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.117133216 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.095884006 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.114965806 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.088493623 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.108661671 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.093187612 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.120087018 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.114670821 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.106645449 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.112993297 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.093339356 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.109006971 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.097485937 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.118533346 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.118567209 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.091573052 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.107909244 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.094665168 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.117568887 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.104633502 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.117260293 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.116497359 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.100373788 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.116691141 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.091969222 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.121928502 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.089202016 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.119068285 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.127490703 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.099198378 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.119794641 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.100299687 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.124258875 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.117154812 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.088969707 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.117895956 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.097855112 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.119821044 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.117398169 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.100398996 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.133068856 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.097451365 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.114463692 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.114366387 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.097356691 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.113266894 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.104698657 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.11985915 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.117253205 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.101198688 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.114952246 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.100273193 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.12467807 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.11837579 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.098936921 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.117498473 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.097354057 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.117155111 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.094709662 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.116065774 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.099357407 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.120470058 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.115975269 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.101115313 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.113287494 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.107782958 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.125719819 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.118640487 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.091322495 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.113353218 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.0943829 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.108645247 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.098943523 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.11181835 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.095369645 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.115772312 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.095087228 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.120943874 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.119323521 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.09841882 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.118977024 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.096934121 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.108349353 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.100173832 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.118800264 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.119524831 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.090354225 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.117430055 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.101031112 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.122981447 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.121795572 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.096629819 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.117712874 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.096950395 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.120901589 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.088637892 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.122171749 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.114495791 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.097942497 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.112360766 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.098625011 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.119117697 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09995157 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.119919488 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.119017359 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.099888471 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.121709879 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10190242 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.110280801 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.091315937 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.121945706 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.090988022 seconds)
  done (took 64.93318844 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.161833423 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.095955517 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.110029524 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.088947006 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.135395602 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110047073 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.089346935 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110616207 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.089917926 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.123373092 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.107714929 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.089093125 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.130470692 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.136788746 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.133844091 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.124555028 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.090063249 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.110095211 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.089203424 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110248877 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.129552499 seconds)
  done (took 3.208598469 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.115445219 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.128914334 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.126326011 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.131106221 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100029869 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.126723929 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.125265201 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.127265333 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.130796598 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10250248 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.131812541 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.127134129 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.121574288 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.103052433 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.122627693 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.123905515 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.110704731 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.120783507 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.128376089 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.126210073 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104754596 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.127205689 seconds)
  done (took 3.501293143 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.103313495 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.116232047 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.103033633 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.112002032 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.098305657 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.111746809 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.102258577 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.114817748 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.102402776 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.120028739 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.115251395 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.099426212 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.122740504 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.091977345 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.115503538 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.093993245 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.122807466 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.096620449 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.12011501 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.090204266 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.137868973 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.113552987 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.091166515 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.116125984 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.125557644 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.099520591 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.117438664 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.097460797 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.115430999 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.097397761 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.114758825 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.099872613 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.123034391 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.114529727 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.095990118 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.117665558 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.098298473 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.113218504 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.094977963 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.122818274 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.092590221 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.12016168 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.124511984 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.095387696 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.11435571 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.099880902 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.118298512 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.091686539 seconds)
  done (took 6.061058826 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.131957026 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.171722824 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.105792961 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.144675802 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.134555433 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.132917829 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.119112542 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.157508776 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.097081027 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.118584468 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.14057755 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.133757589 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.102476259 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.129911466 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.106896936 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.12054789 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.123470367 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.098487612 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.125153197 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.117407345 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.104730826 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.126605288 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.134063245 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.13384904 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108790928 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.125057958 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.117632894 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.107741119 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.129952436 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.126038733 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.124444773 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107357878 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.137637656 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.121049899 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.100672861 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.128096822 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.140996919 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.09810492 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.126109186 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.116595161 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.10112642 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.124547166 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.123015616 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.118126917 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.121712654 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.124188169 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.10454082 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.123171151 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.131573829 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.105029067 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.130414257 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.133440157 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.123625427 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.09913529 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.129738952 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.135009895 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.101030132 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.125102395 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.128680873 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.130085891 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.100632383 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.123787449 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.132628209 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.101888585 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.130027803 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.137212253 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.100576157 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.126975646 seconds)
  done (took 9.312404832 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105999965 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.143356997 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.136001807 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.13499369 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.105081545 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.125057413 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.124184063 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.1044276 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.125253736 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.132123074 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.103876797 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.174999144 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.119762145 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.13048276 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.104287656 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.127226425 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.124277796 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.104011598 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.126137984 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.123792556 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.103947622 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.136338943 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.124945297 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.135843221 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.137486105 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.098010456 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.125288106 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.124067628 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.115805794 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.125218214 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.138121948 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.125330919 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.105282586 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.136874935 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.13866719 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.123712785 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.094971057 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.125751297 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.124603472 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.105171278 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.118338508 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.136039959 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.104427002 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.118934666 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.124559553 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.10511105 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.137502867 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.1380515 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.130976346 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.130310282 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.105478872 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.136134618 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.124589031 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.104231143 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.136879866 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.144085624 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.136543939 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.136517327 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.124384017 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.116188269 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.136152384 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.144142222 seconds)
  done (took 8.568770143 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09660778 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.115293538 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.09433425 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.113139605 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.096439397 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.113931881 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.096387609 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.114906919 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.096276941 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.115388414 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096275737 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.112874684 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094359826 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115443166 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.094041636 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113166104 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094285498 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.112767861 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096229582 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.113470657 seconds)
  done (took 2.957941846 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.105161527 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.137558226 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.096058913 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.12592094 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.119518289 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.102524269 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.120378901 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.120308183 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097079287 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.120045162 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108005392 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.130176539 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.117349096 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.123631016 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.108615277 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.124031247 seconds)
  done (took 2.717674556 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.117852849 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.129668198 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.144368551 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.100205446 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.117687156 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.124871169 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.096345852 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.11369455 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.091711137 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.12604201 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.101875617 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.12936245 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.116509887 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.095102817 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.117800618 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.102889336 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.113751317 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.100678994 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.118410982 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.142228406 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.101128093 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.12160309 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.11731425 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.099698827 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.120255995 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.10170064 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.12570595 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.116984669 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.094846863 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.117686601 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.098936715 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.126682988 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.11330278 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.102507328 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.11535538 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.094425804 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.117591585 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.096504362 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.123938263 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.116574534 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.095329092 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.120018249 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.096641621 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.118632638 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.091761901 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.118902979 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.091076104 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.125061779 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.118778095 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.100346332 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.117804789 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.103454291 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.126134657 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.128567053 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.106556937 seconds)
  done (took 7.047892896 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.111497766 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.121517622 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.099614722 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.118190893 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.120012296 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.105923855 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.121570717 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.098864742 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.120111963 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.093350094 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.121732658 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.120616102 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099530991 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.121823977 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.098547336 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.122062761 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.090157232 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.120891167 seconds)
  done (took 2.880245711 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.102742557 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.117383715 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.104182379 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.118021944 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.095725607 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.121953729 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091772148 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.117310057 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094053694 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.118300637 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.117598006 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.09953605 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115418262 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.099799602 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.1178361 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09653225 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.119924969 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093794001 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.119240896 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09187631 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.12197356 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.115377999 seconds)
  done (took 3.265586093 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.115454541 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.151462539 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.132765223 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.138763426 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.124123305 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.121299071 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.110843867 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.123289251 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.140414731 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.100727712 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.12168935 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.099696534 seconds)
  done (took 2.354750006 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123581897 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.157702932 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.114905439 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100172401 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13187342 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121973782 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101943031 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123366652 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13503678 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.13669439 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102936905 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135695121 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134772674 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133994548 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109417719 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132519066 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123200841 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101602709 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120499391 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.144450524 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12276853 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114209405 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123919706 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123345624 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102522926 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135303719 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134660836 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137010041 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123828286 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113786967 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132668054 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12361488 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135202761 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137153763 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101540851 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135116193 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122278945 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12366337 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132227043 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134582397 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.119471665 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109930642 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136542761 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129788066 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134813088 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101761892 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132202665 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124632474 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101082354 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.173329361 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110190536 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134752872 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131915872 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135130614 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134387345 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.151839633 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136073032 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113891748 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131423683 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137531619 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.13534883 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131953426 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114649028 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138481722 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131792953 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134043477 seconds)
  done (took 9.245691885 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13832989 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.118166373 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123728584 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.138452712 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113562223 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125825975 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123533127 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102149464 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124311103 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119675383 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.17289172 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103065173 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136503346 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13579887 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124083002 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103215728 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125161058 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135523723 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098047146 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.152108018 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125531856 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135320386 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136139852 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136298321 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136431964 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110848264 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124624526 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123623816 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103172988 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124369442 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13206103 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102720081 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.136509426 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.11773112 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134641843 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103340124 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125068804 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132191617 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1033121 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132455837 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136211688 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.14623553 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102724053 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126119876 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138111589 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124872578 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103069053 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12141165 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12387148 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100446776 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13842159 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139178156 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139866199 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135954439 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102481379 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125466651 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124487904 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103248587 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124681887 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132943742 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134801741 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104122467 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.152578105 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125341451 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123475684 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115237302 seconds)
  done (took 9.122546704 seconds)
done (took 172.815984194 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.116371876 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.157011549 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.13379608 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.161045164 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.119815477 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.132409827 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.153445945 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.112572843 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.121574121 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.096721275 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.121349406 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.121514821 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.163898667 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.119498007 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.097825599 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.12339583 seconds)
  done (took 2.93779916 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.215523829 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.284466034 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.138877397 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.103809345 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.127651026 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.099495445 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.126753479 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.103307013 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.122157995 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.133763609 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.099529686 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.123294293 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.132222743 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.100794529 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.122454268 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.100364825 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.133996095 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.121965509 seconds)
  done (took 3.283224351 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.130553195 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.174080066 seconds)
  done (took 1.194959411 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.134788854 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.199821213 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.325803737 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.177050769 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.149458522 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.141159654 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.17733681 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.11806406 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.206391246 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.143150611 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.142874652 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.12705763 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.149831222 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.111010097 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.13218584 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.104201546 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.154791134 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.129721328 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.105516035 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.129471768 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.151022616 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.105542298 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.134188984 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.130225331 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.199599433 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.143297565 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.106187649 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.130672883 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.128620074 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.106715365 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.134334473 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.1418201 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.140970361 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.184178285 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.366927456 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.180248097 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.135719518 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.126644768 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.107562143 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.126934879 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.107651778 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.131922132 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.142854861 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.126375249 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.106414037 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.135512397 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.105020175 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.128379004 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.13556638 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.134888016 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.112279137 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.133169697 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.177053849 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.137175378 seconds)
  done (took 8.745340564 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.868199325 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.145862905 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.127540988 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.974182366 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.157087771 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.116012956 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.86938927 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.123558703 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.277614613 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.863672067 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.116778066 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.139280419 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.244292767 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.267249593 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.162292355 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.352746887 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.740901695 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.139523555 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.130387948 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.189859653 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.110114636 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.153278214 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.144463985 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.442726785 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.125709802 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.103206209 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.130327217 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.135710669 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.178077215 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.101162642 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.128242769 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.218455425 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.283172183 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.217327633 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.102944994 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.123604548 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.101136843 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.20803571 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.281924274 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.211329688 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.187316713 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121526008 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.12225374 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.116544241 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.145590893 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.12096036 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.181255105 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.189851502 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.213176905 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.105468894 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.138565894 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.133888826 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.1497287 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.178845669 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.122285687 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.351865199 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.356093228 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.102423994 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.134388317 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.142743341 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.280168967 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.103519081 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.242817652 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.152077362 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.230065977 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.102501416 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.803485819 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.183708694 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.124401335 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.134090128 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.110945366 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.130809346 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.136268082 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.184778781 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.39962675 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.138874094 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.107561768 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.125237975 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.239405354 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.125051855 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100959632 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.203639859 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.10397597 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.133914295 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.14033154 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.137608268 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.189332957 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.266759506 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.139924587 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.132407767 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.107024975 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138039454 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.12630607 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.231776618 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.234846003 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.17483063 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.251351787 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.137020947 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.183910235 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.183220537 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.136836535 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.189303109 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.133079072 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.143247807 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137096851 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.231741478 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.157992938 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.104546923 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.130328024 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.110289817 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.16328972 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.129542444 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.132063711 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.189143745 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.49278905 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.184240272 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.099167214 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.130549151 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.133263749 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.181285597 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.132475829 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.256825225 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137515165 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.208183579 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.110635344 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.12208215 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.110591325 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.206656081 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.138658491 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.11193655 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.137825398 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.133556137 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.269604529 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.240863771 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.141446858 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.231189257 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.194630106 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.135386957 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.212793239 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.11223674 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.208842503 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.113596859 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.136473696 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126637416 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.792744737 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.116396191 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.133332844 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.130512707 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.209256239 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.103325985 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.126679601 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.102413979 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.123621768 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.833798175 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.106215164 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.122299464 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.104791486 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.135145745 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.110392814 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.1319195 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.130928843 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.180727817 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.250417223 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.141193726 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.132344091 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.104144159 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.178055535 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.128187816 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.125271033 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.103818752 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.12581688 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.112340254 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.129929762 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.125881964 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.192338517 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.17668592 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.238767508 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.548711642 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.102804814 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.127016488 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.246928228 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102684702 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.324857496 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132941287 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.243709256 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.185680939 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.123087233 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.354589006 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.187173497 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.20760493 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.128332584 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.190753211 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.122228879 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.109485591 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.201527325 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.1033386 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.133993821 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.17648199 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.142575947 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.140233769 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.185095611 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.103541477 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.269375646 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.100422884 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.210219344 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.105887965 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.138837581 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.326870834 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.103626061 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.146917304 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.20224103 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.108179607 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.126432822 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.723629551 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.126698406 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.135346725 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113852257 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.239352185 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.205856895 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.111247648 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.135414932 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.138057611 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.181782045 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.232371303 seconds)
  done (took 48.113409759 seconds)
done (took 65.167616268 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.323089837 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.287414579 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.325823252 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.239948704 seconds)
  done (took 2.181720339 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.197270014 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.17093048 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.164090479 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.100746382 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.173078822 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.124879888 seconds)
  done (took 1.861699147 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.51182129 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.423009448 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.363990933 seconds)
  done (took 2.231445128 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.280227473 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.305235142 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.37891063 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.471601477 seconds)
  done (took 2.479254437 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.222342947 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.142606176 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.114228102 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.157055922 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.190010705 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.217102884 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.134937675 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.195133524 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.123811772 seconds)
  done (took 2.478738863 seconds)
done (took 12.165879438 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.204762195 seconds)
    (2/224) benchmarking ("map", identity, Float64, true)...
    done (took 0.294034698 seconds)
    (3/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.250507652 seconds)
    (4/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.143498014 seconds)
    (5/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.148174786 seconds)
    (6/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.141848102 seconds)
    (7/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.226558319 seconds)
    (8/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.143136706 seconds)
    (9/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.107715088 seconds)
    (10/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.233285074 seconds)
    (11/224) benchmarking ("map", abs, Int64, true)...
    done (took 0.25020589 seconds)
    (12/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.262537871 seconds)
    (13/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.11341955 seconds)
    (14/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.249703846 seconds)
    (15/224) benchmarking ("map", abs, Float64, false)...
    done (took 0.155992663 seconds)
    (16/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.240993758 seconds)
    (17/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.176463739 seconds)
    (18/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.203519322 seconds)
    (19/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.261880262 seconds)
    (20/224) benchmarking ("map", abs, Int8, true)...
    done (took 0.232628307 seconds)
    (21/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.113852653 seconds)
    (22/224) benchmarking ("map", identity, Int8, true)...
    done (took 0.178648136 seconds)
    (23/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.144864749 seconds)
    (24/224) benchmarking ("map", abs, Float32, false)...
    done (took 0.211176455 seconds)
    (25/224) benchmarking ("map", identity, Float32, false)...
    done (took 0.144031522 seconds)
    (26/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.160928318 seconds)
    (27/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.112482476 seconds)
    (28/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.269084296 seconds)
    (29/224) benchmarking ("perf_sum", Bool, true)...
    done (took 0.141591254 seconds)
    (30/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.135996955 seconds)
    (31/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.144231933 seconds)
    (32/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.255040758 seconds)
    (33/224) benchmarking ("map", identity, Int64, false)...
    done (took 0.178454548 seconds)
    (34/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.220047333 seconds)
    (35/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.130277881 seconds)
    (36/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.108588357 seconds)
    (37/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.160594805 seconds)
    (38/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.214644154 seconds)
    (39/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.168736072 seconds)
    (40/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.152133446 seconds)
    (41/224) benchmarking ("perf_countequals", "Int8")...
    done (took 0.115423189 seconds)
    (42/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.112977785 seconds)
    (43/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.234467638 seconds)
    (44/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.157236655 seconds)
    (45/224) benchmarking ("perf_sum", Bool, false)...
    done (took 0.106072948 seconds)
    (46/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.204986039 seconds)
    (47/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.216698487 seconds)
    (48/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.210361262 seconds)
    (49/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.213202346 seconds)
    (50/224) benchmarking ("map", identity, BigInt, true)...
    done (took 0.238269419 seconds)
    (51/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.108309624 seconds)
    (52/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.14365595 seconds)
    (53/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.132986689 seconds)
    (54/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.221602097 seconds)
    (55/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.123122794 seconds)
    (56/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.162148727 seconds)
    (57/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.140459438 seconds)
    (58/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.12061512 seconds)
    (59/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.115721137 seconds)
    (60/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.181364636 seconds)
    (61/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.149761783 seconds)
    (62/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.109058592 seconds)
    (63/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.131443233 seconds)
    (64/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.137012986 seconds)
    (65/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.258981288 seconds)
    (66/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.108590848 seconds)
    (67/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.145709253 seconds)
    (68/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.088711118 seconds)
    (69/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.214405518 seconds)
    (70/224) benchmarking ("map", abs, Float64, true)...
    done (took 0.121265388 seconds)
    (71/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.109999723 seconds)
    (72/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.133203412 seconds)
    (73/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.212116302 seconds)
    (74/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.131676461 seconds)
    (75/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.107525665 seconds)
    (76/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.129299544 seconds)
    (77/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.108850522 seconds)
    (78/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.139880769 seconds)
    (79/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.2039183 seconds)
    (80/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.089204267 seconds)
    (81/224) benchmarking ("map", abs, Int64, false)...
    done (took 0.113395589 seconds)
    (82/224) benchmarking ("perf_countequals", "Float32")...
    done (took 0.114544999 seconds)
    (83/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.134108916 seconds)
    (84/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.219700982 seconds)
    (85/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.163693816 seconds)
    (86/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.220602063 seconds)
    (87/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.215576089 seconds)
    (88/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.090346544 seconds)
    (89/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.131670708 seconds)
    (90/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.219276433 seconds)
    (91/224) benchmarking ("map", abs, Bool, true)...
    done (took 0.221716917 seconds)
    (92/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.089840512 seconds)
    (93/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.115322912 seconds)
    (94/224) benchmarking ("perf_countequals", "Int64")...
    done (took 0.114187496 seconds)
    (95/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.144711399 seconds)
    (96/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.141055135 seconds)
    (97/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.107351045 seconds)
    (98/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.205174549 seconds)
    (99/224) benchmarking ("perf_countequals", "Bool")...
    done (took 0.156147157 seconds)
    (100/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.140930978 seconds)
    (101/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.162635752 seconds)
    (102/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.108110949 seconds)
    (103/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.128509613 seconds)
    (104/224) benchmarking ("map", abs, Bool, false)...
    done (took 0.099088543 seconds)
    (105/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.132536381 seconds)
    (106/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.102460985 seconds)
    (107/224) benchmarking ("perf_sum", Int8, true)...
    done (took 0.162474309 seconds)
    (108/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.152712322 seconds)
    (109/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.102201213 seconds)
    (110/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.132444689 seconds)
    (111/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.088656154 seconds)
    (112/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.137535486 seconds)
    (113/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.161307623 seconds)
    (114/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.109614694 seconds)
    (115/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.115532836 seconds)
    (116/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.207313602 seconds)
    (117/224) benchmarking ("map", identity, Bool, true)...
    done (took 0.175430049 seconds)
    (118/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.1068144 seconds)
    (119/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.126967513 seconds)
    (120/224) benchmarking ("perf_sum", Int64, true)...
    done (took 0.117944471 seconds)
    (121/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.148281522 seconds)
    (122/224) benchmarking ("perf_sum", Float64, true)...
    done (took 0.142474615 seconds)
    (123/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.091120632 seconds)
    (124/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.135876651 seconds)
    (125/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.10900396 seconds)
    (126/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.139000476 seconds)
    (127/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.108630848 seconds)
    (128/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.133602118 seconds)
    (129/224) benchmarking ("map", identity, Float64, false)...
    done (took 0.088855774 seconds)
    (130/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.146767127 seconds)
    (131/224) benchmarking ("perf_sum", Float64, false)...
    done (took 0.129689205 seconds)
    (132/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.107144282 seconds)
    (133/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.124105872 seconds)
    (134/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.108610161 seconds)
    (135/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.135218937 seconds)
    (136/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.142466409 seconds)
    (137/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.089914153 seconds)
    (138/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.130409363 seconds)
    (139/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.109703311 seconds)
    (140/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.113529435 seconds)
    (141/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.207069399 seconds)
    (142/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.20890622 seconds)
    (143/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.090393547 seconds)
    (144/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.112379324 seconds)
    (145/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.191082823 seconds)
    (146/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.114653495 seconds)
    (147/224) benchmarking ("map", abs, BigInt, true)...
    done (took 0.179762972 seconds)
    (148/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.209415833 seconds)
    (149/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.109236379 seconds)
    (150/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.138473678 seconds)
    (151/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.103181479 seconds)
    (152/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.114882931 seconds)
    (153/224) benchmarking ("perf_countequals", "Float64")...
    done (took 0.115932473 seconds)
    (154/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.144277435 seconds)
    (155/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.141740757 seconds)
    (156/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.278541791 seconds)
    (157/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.15647247 seconds)
    (158/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.091834791 seconds)
    (159/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.114503288 seconds)
    (160/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.091426629 seconds)
    (161/224) benchmarking ("perf_sum", Int64, false)...
    done (took 0.128920825 seconds)
    (162/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.091758773 seconds)
    (163/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.179984417 seconds)
    (164/224) benchmarking ("perf_sum", Float32, true)...
    done (took 0.119513363 seconds)
    (165/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.129149609 seconds)
    (166/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.113519587 seconds)
    (167/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.091415988 seconds)
    (168/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.112519551 seconds)
    (169/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.152403781 seconds)
    (170/224) benchmarking ("map", abs, BigInt, false)...
    done (took 0.113141676 seconds)
    (171/224) benchmarking ("map", identity, Int64, true)...
    done (took 0.098851165 seconds)
    (172/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.114882654 seconds)
    (173/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.091195358 seconds)
    (174/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.126495436 seconds)
    (175/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.090990539 seconds)
    (176/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.225964331 seconds)
    (177/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.133291924 seconds)
    (178/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.091034363 seconds)
    (179/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.2176438 seconds)
    (180/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.114473455 seconds)
    (181/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.103865462 seconds)
    (182/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.133916887 seconds)
    (183/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.091062884 seconds)
    (184/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.132165751 seconds)
    (185/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.090044101 seconds)
    (186/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.132080266 seconds)
    (187/224) benchmarking ("map", identity, Float32, true)...
    done (took 0.097628277 seconds)
    (188/224) benchmarking ("map", identity, BigInt, false)...
    done (took 0.114928717 seconds)
    (189/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.141272987 seconds)
    (190/224) benchmarking ("map", identity, Int8, false)...
    done (took 0.090560575 seconds)
    (191/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.089764471 seconds)
    (192/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.147146561 seconds)
    (193/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.11471462 seconds)
    (194/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.090052332 seconds)
    (195/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.112788093 seconds)
    (196/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.103453117 seconds)
    (197/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.133790333 seconds)
    (198/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.091081377 seconds)
    (199/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.160993099 seconds)
    (200/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.091273958 seconds)
    (201/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.138154248 seconds)
    (202/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.090611905 seconds)
    (203/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.115165474 seconds)
    (204/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.088917962 seconds)
    (205/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.134996942 seconds)
    (206/224) benchmarking ("map", abs, Int8, false)...
    done (took 0.090072449 seconds)
    (207/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.12802917 seconds)
    (208/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.089834357 seconds)
    (209/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.142067525 seconds)
    (210/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.132857491 seconds)
    (211/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.130777029 seconds)
    (212/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.163657124 seconds)
    (213/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.155681329 seconds)
    (214/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.109781476 seconds)
    (215/224) benchmarking ("map", abs, Float32, true)...
    done (took 0.123155335 seconds)
    (216/224) benchmarking ("perf_sum", Int8, false)...
    done (took 0.108747982 seconds)
    (217/224) benchmarking ("map", identity, Bool, false)...
    done (took 0.114334421 seconds)
    (218/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.107793247 seconds)
    (219/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.115978861 seconds)
    (220/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.090700314 seconds)
    (221/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.115152827 seconds)
    (222/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.090498582 seconds)
    (223/224) benchmarking ("perf_sum", Float32, false)...
    done (took 0.131860467 seconds)
    (224/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.131891371 seconds)
  done (took 33.493241285 seconds)
done (took 34.438053926 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.421270584 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.146973914 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.139742332 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.113283771 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.160168159 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.141101038 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.11527697 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.142706909 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.137325749 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.105202854 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.128390551 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.114376028 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.139040397 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.157704319 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.115612261 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.131657766 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.1308193 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.116014046 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.138753884 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.115615111 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.159505279 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.132188219 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.112660739 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.130615064 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.159400417 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.107729005 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.138086716 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.114682591 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.137917036 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.129686068 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.114542332 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.130996466 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.115279597 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.141922433 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.104114294 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.131880722 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.129120239 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.098312252 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.130379005 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.108334349 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.137440268 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.130733081 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.116111289 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.132347461 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.108256629 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.130025921 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.129137697 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.117475567 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.129713573 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.114031702 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.133222846 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.143409685 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.104854568 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.129024315 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.104116856 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.132304075 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.114550774 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.130758585 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.139206267 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.105604362 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.131949265 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.10513717 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.134763814 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.104484948 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.131960317 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.13067737 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.108094484 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.132272 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.104113525 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.131936327 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.103832245 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.13220092 seconds)
done (took 10.355510598 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.113428418 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.203526149 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.165402089 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.167923159 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.165156848 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.149471189 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.115976702 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.164178047 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.138893204 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.160498684 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.161514175 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.129269569 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.169631261 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.140438032 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.149689336 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.113837204 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.138061653 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.148203746 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.173182535 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.133684507 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.165543311 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.140276685 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.160021518 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.158500156 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.112854951 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.160053851 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.142037152 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.112931126 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.158296449 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.155659826 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.154822725 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.117727377 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.140847262 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.150054059 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.120754051 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.137034677 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.149807573 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.109759902 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.139246462 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.137368526 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.126212989 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.149786245 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.13445451 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.120444219 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.139079947 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.142060401 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.112548299 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.13821901 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.139421752 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.108617443 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.16253786 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.159171313 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.112840256 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.14263859 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.13982296 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.112975155 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.141672725 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.142149684 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.142724145 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.11884525 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.139710362 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.141018739 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.119327136 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.155226473 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.13850105 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.140253208 seconds)
  done (took 10.332187115 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.128736132 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.167663567 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.145900557 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.145606297 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.116257176 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.127097355 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.102538489 seconds)
  done (took 1.931622426 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.104472279 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.159124617 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.162111395 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.137751214 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.152635068 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.166548831 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.120412686 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.129945756 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.153265698 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.113674059 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.159225606 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.185967269 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.130220285 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.116677544 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.166194135 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.129420074 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.140678417 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.131226234 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.137086756 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.138414645 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.136210191 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.1519797 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.118913378 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.131425214 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.15205534 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.10712353 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.198716281 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.143231142 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.103446937 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.136875524 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.135394133 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.20351877 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.126941855 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.142036204 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.127763004 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.134233816 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.152486167 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.134887085 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.130468376 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.135372009 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.152942293 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.111979099 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.137861701 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.109190118 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.139246053 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.146375205 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.116296376 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.139094906 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.136514533 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.13484199 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.14179811 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.153772849 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.106617382 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.134170148 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.11626418 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.137691482 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.144426778 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.110286607 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.160356199 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.138661631 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.131790451 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.158859491 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.153127094 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.157549482 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.122702308 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.153438269 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.153057156 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.110796475 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.138635623 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.112791543 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.157707951 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.135441549 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.11477299 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.148563495 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.140048221 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.133423591 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.159475287 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.135724849 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.117481093 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.138642862 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.107360079 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.132126197 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.147181506 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.109226012 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.133092727 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.123115644 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.14343214 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.135832232 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.108701978 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.153511557 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.135121158 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.116959304 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.143423818 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.134825285 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.121095525 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.160958072 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.1420691 seconds)
  done (took 14.33506488 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.107223443 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.132661532 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.11170272 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.133490052 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.106062498 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.133817395 seconds)
  done (took 1.739690575 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.137207824 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.136480462 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.147005582 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.112327654 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.17774748 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.156761082 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.13051363 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.143013003 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.153463158 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.120188755 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.157056501 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.157724361 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.162550511 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.114173915 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.157550573 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.113726419 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.157600294 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.136069979 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.121330665 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.136479582 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.148727187 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.113811016 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.135936454 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.155549671 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.113475312 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.140489687 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.112410469 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.148036521 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.146927756 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.116605661 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.140222144 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.139103088 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.11413741 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.142121385 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.157490346 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.113722655 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.135661724 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.115165137 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.142426522 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.140270695 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.132983939 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.13658052 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.145355975 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.116013121 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.142281392 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.139639018 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.116496589 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.139126381 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.130641973 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.143203407 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.141922942 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.114141592 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.140301658 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.115801335 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.140409666 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.142067119 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.115769453 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.157799159 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.140816531 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.114078235 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.137645296 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.113293124 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.143174896 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.140048962 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.112499786 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.143646676 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.139748323 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.11037926 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.136427928 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.112376378 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.144040761 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.135864543 seconds)
  done (took 10.754239667 seconds)
done (took 40.085193791 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.188413734 seconds)
  done (took 2.202559358 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.890118273 seconds)
  done (took 1.905507492 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.25853312 seconds)
  done (took 18.309443741 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.558452404 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.635631004 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.995905522 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.18100788 seconds)
  done (took 3.386312737 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.97288759 seconds)
  done (took 2.010319645 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.358286789 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.258635489 seconds)
  done (took 1.637936069 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.869380777 seconds)
  done (took 1.898286929 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.59241672 seconds)
  done (took 2.616017528 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.374041045 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.217480884 seconds)
  done (took 1.629270415 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.601187362 seconds)
  done (took 1.634541375 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.406307394 seconds)
  done (took 15.443949562 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.250776134 seconds)
  done (took 1.300751285 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.319734272 seconds)
  done (took 1.353849816 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.603218268 seconds)
  done (took 4.640234551 seconds)
done (took 60.989773518 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.117339784 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.145118457 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.118914734 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.143594012 seconds)
  done (took 1.555221022 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.12210861 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.141015062 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.117802182 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.140434737 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.148949016 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.114922369 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.138874691 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.145425612 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.114362485 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.141425967 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.11433236 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.140761005 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.141572178 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.112579874 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.138239264 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.141917517 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.118438318 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.141140879 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.114000836 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.142213179 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.138459614 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.115263417 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.142690543 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.114177815 seconds)
  done (took 4.181261794 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.117115363 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.136760425 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.113428043 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.135871523 seconds)
  done (took 1.55038119 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.121489662 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.154805103 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.153426101 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.12063402 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.155634195 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.153217377 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.110652348 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.136939853 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.112797327 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.148356965 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.136223899 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.132287384 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.153370503 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.133020683 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.12299515 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.129533803 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.107354896 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.154306313 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.146125796 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.121666141 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.13602917 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.120028902 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.143993813 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.151008085 seconds)
  done (took 4.299288426 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.225437522 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.124352927 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.159891787 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.191014674 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.161979924 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.108461884 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.161350158 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.144136211 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.113438023 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.136262556 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.108141987 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.190686971 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.144080447 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.139086655 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.110588648 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.143252064 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.14478416 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.117468929 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.139518468 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.14881267 seconds)
  done (took 3.958241176 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.118123795 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.135860784 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.10576667 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.135823728 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.116604413 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.139055663 seconds)
  done (took 1.797635417 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.106536573 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.130100106 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.106286356 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.130410457 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.11065915 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.131619667 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.104943121 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.130898126 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.105667953 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.131360775 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.104984772 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.132216075 seconds)
  done (took 2.475676791 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.23483744 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.134383141 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.136723691 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.111219399 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.140470145 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.108257639 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.151418299 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.108328864 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.218608809 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.109535633 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.15234128 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.190401628 seconds)
  done (took 2.842139352 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22829871 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114877293 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.294340929 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.39636896 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177994962 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.18486918 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.297794857 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18540229 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.204056385 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156138074 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.250094336 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14789268 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173096719 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197276036 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158923471 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.204128279 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192126123 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.247666937 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168392214 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235658512 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185451858 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187371716 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.209494984 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1715688 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158569394 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176457585 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.10938842 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146783446 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19123561 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188277716 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221754532 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167043656 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130463623 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248878049 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232491775 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226619209 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.326508585 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153610045 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.21284075 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.212849764 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.297034743 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159493858 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215155722 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174816285 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150499291 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199801466 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175692786 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.199988535 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.15105469 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132545911 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230648356 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195442884 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.199919088 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157192779 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.32125006 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163819278 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.164714053 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199379341 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235329375 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219992744 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186488182 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.113538303 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.233858809 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211575244 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200341769 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.164137229 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.186490675 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144601401 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196596336 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.224726684 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222212273 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188514157 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.201562098 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152551341 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18428273 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.199665067 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173965481 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199141538 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180919336 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.139515293 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142150687 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157617842 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14793396 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.204245774 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115188504 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.259903873 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127485772 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.337677454 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226089487 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178009032 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.181394046 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183300946 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188230314 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167418336 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.137781503 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165223325 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.19051999 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177359147 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122991334 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177093818 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16599643 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.146586085 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172192848 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.114995996 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179373296 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.154094681 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186851847 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185243914 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.14754751 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184840467 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141618103 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.178221013 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218603379 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21752121 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123882034 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152310534 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223650185 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178924279 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.156756039 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.204716079 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.245053506 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.192064362 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127701648 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216179162 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216741174 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161881089 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217128569 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161755921 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124062491 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.169971536 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178021554 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175867214 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.174735597 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148782354 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.171580071 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223480379 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.147758162 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127353973 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222752065 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117973909 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147972707 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164096251 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126593354 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.161798914 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.170734108 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.159325992 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175091862 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180033957 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.174076703 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179018929 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162494227 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212473173 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152748119 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.180997308 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139620747 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.137925874 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.200207444 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243384241 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121414329 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206156169 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.188826455 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245163618 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184246755 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149798652 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.203482221 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120034591 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.140695481 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184504462 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.180793866 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181530978 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.210566114 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242199941 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.18829518 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.173038898 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169421138 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187932493 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.205338376 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176261687 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.16566856 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184940983 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186491585 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.141380396 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.11551192 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.146531978 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159038396 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122461389 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152593383 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199912236 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184089503 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.236924072 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.183505483 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130179435 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.241037348 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.116086424 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185487773 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.220368588 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130073246 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.241283111 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21215655 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187863929 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162639069 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191035968 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.110787643 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145094968 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.151561929 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.186919969 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12331729 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15346657 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163616925 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.212671432 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196861373 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168640071 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250154189 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189105233 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.222770998 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.143462079 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.183816826 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20043921 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178181587 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.18270581 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152019301 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.181434244 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.207959514 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164997967 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213049323 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184453809 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190483252 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252109768 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.177874151 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150558589 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140585476 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21721895 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130238808 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.19257588 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168321034 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156216822 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174463376 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.156178724 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.116919567 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229727169 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134037565 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230930941 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.187024292 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193573799 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146732638 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163378255 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.183062616 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137441974 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.137883952 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192262357 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216359524 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163566424 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177706478 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233510691 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121494445 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.335116888 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.248251974 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205291263 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158447456 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162937887 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180746243 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.189488677 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184845905 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.204844536 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163272123 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202079974 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179769344 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.135096688 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155412639 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167553588 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171463278 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.172274053 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.124481524 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.173717257 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.164567759 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204602687 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165011754 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179346996 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186256476 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.168511601 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.175847991 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160708768 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231028185 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18014184 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199330795 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.177157423 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.197272352 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208515572 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145718414 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118469183 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.148074698 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.204255619 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153108632 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179466633 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.204299602 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24459248 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179550389 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191207335 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128381075 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.145417331 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181374697 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169060133 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219668817 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162431002 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.157008177 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220198014 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.171901805 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150643977 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.185485891 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.30422397 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163944952 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204750055 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.111559717 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.32565584 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119979632 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152187299 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.190355684 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19203957 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.150937888 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.177800717 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184747805 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166033066 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192519331 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159161646 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.210529416 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256647185 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19129929 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196298961 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.164707419 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.178895217 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184935416 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206796683 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163895866 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.165253942 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184239347 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213905568 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.216930715 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.15313552 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184880112 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185810209 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.180890306 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194291459 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154639457 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209061662 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150520346 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186750199 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130432267 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144965274 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17881513 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.203727704 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152733899 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204443878 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179361492 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153823208 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.116971657 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172161599 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179711213 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164354161 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.150061822 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200303356 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.147944856 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183655299 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201570541 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121675928 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17599546 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167424935 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150050553 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134516058 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164432596 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155739007 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.190178336 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21411245 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.15156746 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208162389 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192705606 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185360603 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180800911 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165823336 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.681517164 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.11914294 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21184458 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168852288 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207371609 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169963322 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187856754 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.182750705 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170655669 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187646246 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17082928 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.240032098 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186241067 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.180492081 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152047089 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164285742 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137573578 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.151587647 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172517104 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184743868 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160706954 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.127985473 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.177549116 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167837821 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.165933339 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159078335 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218545373 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169776068 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205111696 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.205787083 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159678117 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188159117 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19572606 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151109383 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.181973438 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192442842 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163587681 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170260018 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.121440895 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.156704854 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202007107 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.144125481 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181297014 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151722339 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183503555 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185228588 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.155737623 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180793737 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163455968 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181957795 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146267977 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.175426678 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148646132 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151938699 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.147562272 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176055605 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18040599 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.180281726 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.116855474 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.194137284 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213261095 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.145764826 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124685942 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.332583624 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150188817 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244581934 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.174350411 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125380817 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165620965 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176035678 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.175496161 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180575703 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.148195026 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123672843 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.151685554 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.204304317 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.185436248 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177722084 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204897411 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181396652 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209660184 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.155791548 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.283794366 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130115588 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175603901 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.151129673 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.148110004 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132069089 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154105115 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165169373 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.213351448 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200912165 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.172705544 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.166366208 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147037082 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.119832926 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152271918 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19149742 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175951397 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178840157 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16200625 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.110098778 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165123086 seconds)
  done (took 87.993918452 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.172418247 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.163752423 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.170354888 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.220211082 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.188591908 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.27712689 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.227174734 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.248501501 seconds)
  done (took 2.820534943 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.119846102 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.158690922 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.16066654 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.144314151 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.1461623 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.368502606 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.15703231 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.14405352 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.203836501 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.155057314 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.141589005 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.639688974 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.112119494 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.14458225 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.137497685 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.142816521 seconds)
  done (took 4.223581256 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.285752696 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.555414347 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.953252687 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.269783733 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.250189205 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.199169779 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.751642544 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.183594918 seconds)
  done (took 12.607738006 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.147653932 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.165294873 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.308935285 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.165441611 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.18130593 seconds)
  done (took 2.134002799 seconds)
done (took 133.470325584 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.115453955 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.146744284 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.115033036 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.147175882 seconds)
  done (took 1.672794261 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.129444553 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.128335998 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.104760514 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.127995751 seconds)
  done (took 1.647952299 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.515229307 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.09972734 seconds)
  done (took 1.806151883 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.138742249 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.157171648 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.157863133 seconds)
  done (took 1.625727633 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.122685049 seconds)
  done (took 1.283805151 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.121611054 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.150742373 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.138279774 seconds)
  done (took 1.580602856 seconds)
done (took 10.779625752 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.149872896 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.543732654 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.435067829 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.128299814 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.746024294 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.427396053 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.013054302 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.180166907 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.187663362 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.139496838 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.128503612 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.722485221 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.061727086 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.452730667 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.052785496 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.359124043 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.72368957 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.140530432 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.11653248 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.140669086 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.997701678 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.138323943 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.111260957 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.141757421 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.718761717 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.414679859 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.139851947 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.373717584 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.138623267 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.143324657 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.399930146 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.139224009 seconds)
  done (took 17.861275299 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.154101787 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.203752338 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.149333142 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.111763729 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.144905438 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.110785931 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.149937414 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.153592362 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.20291085 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.109364995 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.161175601 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.138909724 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.11619899 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.140347451 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.132742309 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.139755328 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.113012376 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.143564963 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.145737686 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.112732949 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.1593537 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.109206372 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.141358163 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.112374383 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.140468806 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.15175757 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.111236565 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.153851997 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.109961939 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.145395367 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.144548381 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.11167925 seconds)
  done (took 5.59399087 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.159994759 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.212435728 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.14925145 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.174880479 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.191890119 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.112640688 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.22739739 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.181339492 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.205638565 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.140030593 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.130020947 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.140230657 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.177414127 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.111427811 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.162789295 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.110041859 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.143336903 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.113637236 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.147862151 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.142167934 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.132121926 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.139939442 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.1125685 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.143421334 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.138941347 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.125954767 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.140544917 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.123530877 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.141925417 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.144583283 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.117802303 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.140558098 seconds)
  done (took 5.915294499 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.119257531 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.149757341 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.128129782 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.158558142 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.143504623 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.120243797 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.149048829 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.114288076 seconds)
  done (took 2.258281675 seconds)
done (took 32.799040669 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.133409516 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.153852036 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.125234781 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.150415592 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.144710735 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.139918442 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.1508382 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.110682095 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.149158359 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.127130185 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.140310757 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.112472347 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.15526569 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.115489311 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.157074443 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.118977758 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.162731337 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.156547269 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.111920009 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.15162618 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.111751965 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.163380367 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.145610424 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.113779542 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.166606395 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.113419492 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.158398088 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.11579489 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.147466285 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.112217643 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.156851878 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.146176078 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.112828245 seconds)
  done (took 5.6983794 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.139013357 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.186404356 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.138464454 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.109500754 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.182030015 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.109102739 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.17002578 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.138715368 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.109146711 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.13999484 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.11010346 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.16735267 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.17226832 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.143984188 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.188506826 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.178159366 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.136846813 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.178949617 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.16464246 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.178921638 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.140250207 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.140954182 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.172102884 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.152736822 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.140471926 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.108768615 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.184959702 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.17016184 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.183818897 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.143577982 seconds)
  done (took 5.767787476 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.121278206 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.158558787 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.137180586 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.21198834 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.182751966 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.157257697 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.123977548 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.160568929 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.169178135 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.11153877 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.15273341 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.14432256 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.158858791 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.152931998 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.117931179 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.158289411 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.131592917 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.145203738 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.119284055 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.162014983 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.160604841 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.124262171 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.158072356 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.121082782 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.14146767 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.151007163 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.11804494 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.155808746 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.11959033 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.151816838 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.145886982 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.116821655 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.145766848 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.121601037 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.147084001 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.149257226 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.133784889 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.153172369 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.124563984 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.177432018 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.151696992 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.11526682 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.164444947 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.190635494 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.113371487 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.15056119 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.152917755 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.122100961 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.141368614 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.131922323 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.157533674 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.113306631 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.158424 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.142219679 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.111610481 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.151241826 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.113887763 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.145843762 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.121501347 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.147176514 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.164001838 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.120508645 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.151286337 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.115176843 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.152674386 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.141655918 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.112193383 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.148059772 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.137826971 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.148186689 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.175360911 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.112331278 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.149443581 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.120889555 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.150109562 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.121873644 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.142890675 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.149554976 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.121069918 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.147949119 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.121496533 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.146975229 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.115532855 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.162536538 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.157554408 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.119311738 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.150120957 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.148744491 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.116291779 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.144655369 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.126641437 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.145431754 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.117018162 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.153156353 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.142755714 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.115281371 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.149263253 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.116188339 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.142308037 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.131397905 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.148544149 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.141953907 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.130455693 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.144295048 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.116301683 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.151906964 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.124519666 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.142734662 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.1471884 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.119643587 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.142352318 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.11838115 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.146118447 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.111982493 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.156828058 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.155015903 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.117958018 seconds)
  done (took 17.614554173 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.265928634 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.24531485 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.251830845 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.303430004 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.167860744 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.172823839 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.2427853 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.197311807 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.112856828 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.185302847 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.236657143 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.20546991 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.112454351 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.176996493 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.245178047 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.340267474 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.178587334 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.187268236 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.184982654 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.167455242 seconds)
  done (took 5.389418791 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.13001545 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.184789295 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.174404447 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.17211441 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.114389005 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.158245471 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.112969401 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.160266911 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.145867638 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.120095849 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.143367417 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.121958564 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.146629465 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.147739896 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.13074261 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.162930096 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.148781376 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.119668581 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.161625636 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.150451906 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.115165186 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.165165432 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.155098622 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.172779096 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.122748415 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.16012979 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.112827408 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.150886094 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.110573813 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.144153013 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.118718731 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.159064989 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.151639242 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.114567738 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.149666661 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.145221816 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.110628231 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.146160431 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.116223618 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.1476119 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.129645349 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.147679555 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.11431065 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.14465507 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.121891899 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.142004699 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.149229005 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.120261531 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.152639927 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.122516766 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.152078883 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.149328626 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.121059794 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.157862275 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.110352127 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.154739703 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.1573495 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.118280223 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.152166705 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.112471599 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.143661382 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.116670384 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.142895862 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.149443745 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.118699386 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.161834805 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.153940784 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.113731826 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.150818833 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.117663511 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.14861587 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.161729796 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.133631647 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.143380505 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.110823559 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.166856918 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.11140748 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.133825567 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.153824275 seconds)
  done (took 12.252509068 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.142445637 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.145737031 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.132362122 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.17994187 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.160897848 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.121936017 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.145736817 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.133552029 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.152225712 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.122122422 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.151872558 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.160230177 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.141627126 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.158967043 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.14550513 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.128478275 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.150408442 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.186055479 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.133716182 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.176792126 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.156203597 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.118990726 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.159479082 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.125899157 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.178492527 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.158909579 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.147962935 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.150678679 seconds)
  done (took 5.384570668 seconds)
done (took 53.290768414 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.309285781 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.514952823 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.2782583 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.279134355 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.332836639 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.288758331 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.297811604 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.47269686 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.979475563 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.267983556 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.277720187 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.287121615 seconds)
done (took 28.79148251 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.383152265 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.872564417 seconds)
    (2/2) benchmarking "String"...
    done (took 1.592792937 seconds)
  done (took 4.671033072 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.276556736 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.27703944 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.525218807 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.277845319 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.293695733 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.295096342 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.290888797 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.28221128 seconds)
  done (took 16.448130437 seconds)
done (took 26.984556529 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.302835901 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.47648895 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.528617577 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.295452944 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.278678964 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.27759923 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.267555428 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.305443705 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.293336355 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.263453348 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.285156649 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.550644677 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.277547553 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.663158749 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.265610864 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.29874728 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.299133336 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.493035696 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.277698115 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.319864875 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.275317025 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.264618783 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.290253111 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.311448372 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.287855061 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.279387953 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.291670057 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.262950573 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.462427939 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.308112372 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.317857462 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.28005112 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.309361796 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.276480406 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.385087276 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.306014304 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.455755959 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.268866248 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.268548575 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.280114977 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.453382252 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.65798456 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.276130974 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.284567507 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.277213241 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.311188392 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.270164408 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.995373398 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.283805371 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.28249529 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.336776746 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.650038086 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.282911361 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.278010663 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.293574555 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.50843112 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.298042853 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.293677663 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.299829619 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.277420229 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.301411118 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.275711834 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.276378235 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.290522114 seconds)
  done (took 148.164961051 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.274842054 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.280539778 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.278155605 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.338236587 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.277822867 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.278109804 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.277425669 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.274031311 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.278949894 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.279646763 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.280218094 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.275704509 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.279462606 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.238076915 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.276875824 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.291518658 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.27429169 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.278346462 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.294798292 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.276226025 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.278901092 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.278360318 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.294460454 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.278931377 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.311067866 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.364257087 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.301965846 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.293280604 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.279387479 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.274780198 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.307469401 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.294937725 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.844340769 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.130411908 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.283817927 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.305603711 seconds)
  done (took 82.927499638 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.275270368 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.275673604 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.275564831 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.30410714 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.274597949 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.786849434 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.78952804 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.001914191 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.445657742 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.427736068 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.485900845 seconds)
    (12/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.276267417 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.27481103 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.368346235 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.291026691 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.278439641 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.292259668 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.304275981 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.276685888 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.276376595 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.789883949 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.290160794 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.40581985 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.44302514 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.290407055 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.304369432 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.671927365 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.276861807 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.30536942 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.601185548 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.322167077 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.277155315 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.594198078 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.645716073 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.388659896 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.279368647 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.307119969 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.277677838 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.553520907 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.277624679 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.276722689 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.278501344 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.281204401 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.899320191 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.282377721 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.789107529 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.279118753 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.174510048 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.280317115 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.278625127 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.553728645 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.849432098 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.296762261 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.279862436 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.280400974 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.278412616 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.277146309 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.306726747 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.543737063 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.38861299 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.278673492 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.281208626 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.306717445 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.278263663 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.398200302 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.283117679 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.107409762 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.338043159 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.385930624 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.792304065 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.282344614 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.37263161 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.395598522 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.2787897 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.279019906 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.279587644 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.278593992 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.3875084 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.280117205 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.659911912 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.445566942 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.293566775 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.423013896 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.376901363 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.279462142 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.595734991 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.282535122 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.280005537 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.957611666 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.373722673 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.280911411 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.282538903 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.280440809 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.663666863 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.792809329 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.459764051 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.284771541 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.905012115 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.28377746 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.671937608 seconds)
    (101/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.782777267 seconds)
    (102/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.917867093 seconds)
    (103/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.28595622 seconds)
    (104/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.391047827 seconds)
    (105/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.446235975 seconds)
    (106/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.296049389 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.282700783 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.283084019 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.436492744 seconds)
    (110/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.284031864 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.280614637 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.281661007 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.343159505 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.677295723 seconds)
  done (took 373.515108043 seconds)
done (took 605.810837293 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.987449214 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.939378365 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.060247445 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.960794035 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.923699253 seconds)
  done (took 11.079291895 seconds)
done (took 12.286244081 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.46004525 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.460270171 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.338825374 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.463551645 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.314715541 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.478660961 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.443045447 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.302236119 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.383170351 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.358957683 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.384012735 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.333392536 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.317560847 seconds)
  done (took 19.246506303 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.537903673 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.286410468 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.363215321 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.531308318 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.325599282 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.534052178 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.571542772 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.287365988 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.42981679 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.299569675 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.300548436 seconds)
  done (took 18.677648932 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.542106369 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.287514831 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.354681392 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.538730334 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.326939575 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.546842571 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.582102953 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.287445255 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.46142062 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.302319689 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.300388081 seconds)
  done (took 18.740826639 seconds)
done (took 57.870997168 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.324301088 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.448277075 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.311261237 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.29791049 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.295625274 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.298009012 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.301864306 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.294832697 seconds)
  done (took 11.784106124 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.291802395 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.293850458 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.293001073 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.294855751 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.293576127 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.290936076 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.291889331 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.291985574 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.290726938 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.29225219 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.295118545 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.293582194 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.292286826 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.29410841 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.291001059 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.296346074 seconds)
  done (took 21.897551894 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.294132737 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.292479177 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.292298948 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.291306746 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.292276186 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.291676478 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.293737293 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.293039418 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.293290291 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.292005019 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.293827171 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.293804432 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.292602345 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.291296242 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.291886852 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.293548543 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.292558567 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.291867889 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.295467381 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.291182617 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.292331688 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.29073868 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.290195081 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.290010145 seconds)
  done (took 32.23183792 seconds)
done (took 67.120437173 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.277175807 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.298012111 seconds)
  done (took 5.776471698 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.345820416 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.347816965 seconds)
  done (took 3.897248992 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.277996717 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.275445002 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.277551171 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.277736099 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.277287296 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.278080297 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.279272853 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.270279511 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.269531442 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.269922592 seconds)
  done (took 13.947799046 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.269738567 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.269312815 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.266971848 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.269565807 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.265426137 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.265301181 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.264989455 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.264763269 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.264770837 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.261690201 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.266430405 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.261394244 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.261704459 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.259567276 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.260896162 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.258531359 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.259238137 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.258038474 seconds)
  done (took 23.936445181 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.274574676 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.280381145 seconds)
  done (took 3.734639467 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.396958134 seconds)
    (2/7) benchmarking "second"...
    done (took 1.298105672 seconds)
    (3/7) benchmarking "month"...
    done (took 1.373311536 seconds)
    (4/7) benchmarking "year"...
    done (took 1.36335985 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.302011784 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.276326705 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.295879344 seconds)
  done (took 10.484065363 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.256744575 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.452100268 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.558629079 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.847515681 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.259209168 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.26182108 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.126098983 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.260778092 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.263261265 seconds)
  done (took 14.460848515 seconds)
done (took 77.438819512 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.248768332 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.282741829 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.258486847 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.277294687 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.592516098 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.288826557 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.254007236 seconds)
done (took 16.376857766 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.23560827 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.240392492 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.25278191 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.255783233 seconds)
  done (took 10.163459513 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.213745127 seconds)
    (2/2) benchmarking "read"...
    done (took 1.620656281 seconds)
  done (took 5.01164302 seconds)
done (took 16.350804393 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.259831604 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.258059526 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.256299725 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.258946684 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.25657708 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.258153304 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.259065897 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.259443797 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 1.258879604 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 1.259754266 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.259363832 seconds)
    (12/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.255688561 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.257931869 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.256303536 seconds)
    (15/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.259148872 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.259519078 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.26037566 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.257179021 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.25889963 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.256849218 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.256988507 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.260855556 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.259260724 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.258855869 seconds)
  done (took 31.381677982 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.259965049 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.257554513 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.261921222 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.259643737 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.2571939 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.259931067 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.256897145 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.254326512 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.258248152 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.257990439 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.255000637 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.254868665 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.257879598 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.254264842 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.255001018 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.252351061 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.256611281 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.253628746 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.256400642 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.253815427 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.255477046 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.25288816 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.252508233 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.253722376 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.252635664 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.252677258 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.254902265 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.252191446 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.25596432 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.252670923 seconds)
  done (took 38.84965046 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.259578877 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.260012395 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.254817848 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.254088305 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.254177109 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.254898783 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.252584374 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.252426827 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.252621872 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.251310065 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.251869836 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.251745688 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.251793117 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.252404142 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.253322936 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.249463507 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.249797071 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.249270326 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.25007397 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.249525795 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.249005895 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.250138832 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.250849545 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.249766139 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.250646391 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.250386929 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.249352157 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.248659625 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.250301095 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.250521305 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.250214649 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.249873479 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.251496709 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.249951382 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.251142439 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.251964082 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.254714472 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.256051734 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.251103311 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.249115681 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.249795671 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.250018358 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.251341145 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.251193927 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.251182329 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.25218621 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.25172203 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.250600205 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.251014356 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.251791287 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.25133402 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.251811768 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.252197949 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.252278709 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.252527413 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.250878567 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.251849301 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.253132337 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.252070793 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.25179894 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.251233122 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.252685737 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.251625207 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.251225143 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.253947558 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.253418812 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.252387652 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.252191404 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.252868677 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.251629351 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.252111196 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.251930141 seconds)
  done (took 91.304581399 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.252856625 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.25129993 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.250516247 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.250950921 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.249943276 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.254303574 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.250322345 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.253466131 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.250348208 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.252427205 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.252625783 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.250344265 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.250141106 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.254547731 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.253279524 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.250246725 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.253553691 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.250379548 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.254657534 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.252987244 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.253775263 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.250589218 seconds)
  done (took 28.716875982 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.252183949 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.254603401 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.250426364 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.254800294 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.252118524 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.254109843 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.253533058 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.255661641 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.252433311 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.249959028 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.251533406 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.255104388 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.253916465 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.251464529 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.252168292 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.253505792 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.254712638 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.25330015 seconds)
  done (took 23.728711194 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.253551463 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.251961892 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.254965929 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.253051357 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.253234795 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.256454583 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.252042595 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.255588098 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.255984569 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.252931385 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.258103427 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.255342564 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.256742973 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.253631832 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.25483444 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.253359393 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.255327796 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.252486522 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.255267113 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.253126913 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.252893719 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.255213511 seconds)
  done (took 28.771606413 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.256213392 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.255890378 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.253700125 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.255226959 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.252726537 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.25593813 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.255188066 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.252981607 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.25703888 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.256084298 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.253623925 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.256408604 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.254659197 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.254681715 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.2534773 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.254643519 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.25619604 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.253394412 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.255783998 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.251987924 seconds)
  done (took 26.272640087 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.255656336 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.25864404 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.25814229 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.256237414 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.256919769 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.256593196 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.256862631 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.256784298 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.256268051 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.258031496 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.255877804 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.257053793 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.256155393 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.258850245 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.257983623 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.258167287 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.257860274 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.257084821 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.257637248 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.258577311 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.257159094 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.25710082 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.258147578 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.257823139 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.257397393 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.257682256 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.259011005 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.258086016 seconds)
  done (took 36.384592042 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.258918408 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.257167518 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.255699633 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.255835548 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.255885666 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.255744533 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.255622309 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.25573542 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.259282217 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.255457271 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.260467334 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.258698345 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.25837884 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.259577079 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.257759868 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.259318485 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.258107033 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.255997638 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.256288634 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.257470341 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.260789471 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.258799276 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.260020572 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.256963838 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.25716759 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.257736556 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.257258269 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.257244826 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.25911588 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.257223225 seconds)
  done (took 38.908934804 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.304407572 seconds)
    (2/2) benchmarking "in"...
    done (took 1.305330982 seconds)
  done (took 3.788938312 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.258282457 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.26080119 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.261418346 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.257681298 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.25781383 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.261442342 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.260776513 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.257272464 seconds)
  done (took 11.256661645 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.258720752 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.26006631 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.2604565 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.25865531 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.259323163 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.259046458 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.266210277 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.280155298 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.260901367 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.259283398 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.263693798 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.264742065 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.261112669 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.260028153 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.26069655 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.26033797 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.26052379 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.258563418 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.259592003 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.261372329 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.259406751 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.262055235 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.260901237 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.258504993 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.260259007 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.267353283 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.263333859 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.263046851 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.259384083 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.262378726 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.25952689 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.259060416 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.260521555 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.259855698 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.261165492 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.262228246 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.269630827 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.281501119 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.267189238 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.261226929 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.26440008 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.260224805 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.261773611 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.261018127 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.261746593 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.261148612 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.262856912 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.261665147 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.2603752 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.263176969 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.265111826 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.26056624 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.259754141 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.263041914 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.261713917 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.26797366 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.279103486 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.264664816 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.267736062 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.270757396 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.273730968 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.284340843 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.265339146 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.2622446 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.27067892 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.279670672 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.268028078 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.278726123 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.259845326 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.264103379 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.26862991 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.272706253 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.286230573 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.262135694 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.262718692 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.264396221 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.262954429 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.266174158 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.270496863 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.28374972 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.26297927 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.263745636 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.27206198 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.281115688 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.260785896 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.263176936 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.262834136 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.265158707 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.264809315 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.272540359 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.282423114 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.265749163 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.262974102 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.262209522 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.26385874 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.26412074 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.262411924 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.263842965 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.262532634 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.265378153 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.265320335 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.267230714 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.270878758 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.2641907 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.265796783 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.270183903 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.265940016 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.264542315 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.27020773 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.266554548 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.265094421 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.266509981 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.270347679 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.265409911 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.26839956 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.270685116 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.265669376 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.264717536 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.265102209 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.266760095 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.27378913 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.285633759 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.267995975 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.265944449 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.269656518 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.275027615 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.266319726 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.266950509 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.266292799 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.263443892 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.264047583 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.266182084 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.268343156 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.267031891 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.265283751 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.267169779 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.263524121 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.267718773 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.267091866 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.265940592 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.267865386 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.266313082 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.265294586 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.267773976 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.267354604 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.267041692 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.271833037 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.265687184 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.2673735 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.26782776 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.264373338 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.26946867 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.267582726 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.266115969 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.266901877 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.267418557 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.266643924 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.2679173 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.269050644 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.268071818 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.268463358 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.266452023 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.269225857 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.269117411 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.273626196 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.26273207 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.706255132 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.263412883 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.264044946 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.262432891 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.264773843 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.262311036 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.264006664 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.265959753 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.26077915 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.258124452 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.261487674 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.259293211 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.259037913 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.258373743 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.262040444 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.260967158 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.253937099 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.259320934 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.254311736 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.256482789 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.257897761 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.254773172 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.255789554 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.254131075 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.256571516 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.261399265 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.264622119 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.276012589 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.254051771 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.257085023 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.254786363 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.256565239 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.257127529 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.254112784 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.256405803 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.254076894 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.253770135 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.254454192 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.255495529 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.255533395 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.253258844 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.25734928 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.257879547 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.254385166 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.25710755 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.255247211 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.256415372 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.254472707 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.2565673 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.25679409 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.255372772 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.253887918 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.254858482 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.256653239 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.258658381 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.25799758 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.261832155 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.25650557 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.258101151 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.257947903 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.255777264 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.253996947 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.259316655 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.257466299 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.256251847 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.263461065 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.275180083 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.256310247 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.261243168 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.272654837 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.255627029 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.258035266 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.258736862 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.254166212 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.258472443 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.264285013 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.257694675 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.256067142 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.256744395 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.257070922 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.257281823 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.261920914 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.255217208 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.259480606 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.25875964 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.259599357 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.25528148 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.256524521 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.257812359 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.256950087 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.258910943 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.257796204 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.258199746 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.258936189 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.256936047 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.258107103 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.258486443 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.260193186 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.262567287 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.261000339 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.258104501 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.261740376 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.258395565 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.261696877 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.257190644 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.257602194 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.259927896 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.2670152 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.280896358 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.265683427 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.276313695 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.259814735 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.263511117 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.27641628 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.261074016 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.258728176 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.258763782 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.257789675 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.257046359 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.257043464 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.258584783 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.260197355 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.259689284 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.259725233 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.26447144 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.260848019 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.258908699 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.25955169 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.259442617 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.262696355 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.25864761 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.260473327 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.26091729 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.261415978 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.258019722 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.259256634 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.26639182 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.279723781 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.259666682 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.258310682 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.258803147 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.259345311 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.259823405 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.26109881 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.263743801 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.266974437 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.262314029 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.268104047 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.261980506 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.267961349 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.261165566 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.263139285 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.266914489 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.261297995 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.259035984 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.259431722 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.259952507 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.265976436 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.278885141 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.263710421 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.264817849 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.259769411 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.261128627 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.261453835 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.260707942 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.264636342 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.261065274 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.268688661 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.282388546 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.263568846 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.262290136 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.259718008 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.261974207 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.263668427 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.260528517 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.264377187 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.260540949 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.263051034 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.261656682 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.261185021 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.262997906 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.263423767 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.264027406 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.25965427 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.264409441 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.267823948 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.282322683 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.265467875 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.265224102 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.26832503 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.262120148 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.269261276 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.281191792 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.262263353 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.262363941 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.264246285 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.262973342 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.262141856 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.263513213 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.262777103 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.264643271 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.267537504 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.261375222 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.264495756 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.26287858 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.264220465 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.263355338 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.271511895 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.281887753 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.265222216 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.267752999 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.26137063 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.264365196 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.267144034 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.263763232 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.262348216 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.266446734 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.272425085 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.271561001 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.26421105 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.263128743 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.263945921 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.263087679 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.26558427 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.266011904 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.264394802 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.267007539 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.265890352 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.264303857 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.266592849 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.265190833 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.26431405 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.267430746 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.266411101 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.272515399 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.2670163 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.26549993 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.266054107 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.267741655 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.266466459 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.265690664 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.265933193 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.265270051 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.265712177 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.264776565 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.270353427 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.26857082 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.266753964 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.265339159 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.2657387 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.265908431 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.267369663 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.265761048 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.266296755 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.26695506 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.266523752 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.265320965 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.26626858 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.264624257 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.266660091 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.266737476 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.26750973 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.26769022 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.271078602 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.266393457 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.264426599 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.26767539 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.266925753 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.264262261 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.266508843 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.271939512 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.26838876 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.276598602 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.276211949 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.27087889 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.266127621 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.269030852 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.272308881 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.26556808 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.267461102 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.265931926 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.266970733 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.266226493 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.270169122 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.268272777 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.273344601 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.266913831 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.266087311 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.275095155 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.287595333 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.267463416 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.269091797 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.270737866 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.267992332 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.266283391 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.269856064 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.268222624 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.274199086 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.286574076 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.268086734 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.270361839 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.268458239 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.269078812 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.271224653 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.271297937 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.269313015 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.26696608 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.268674648 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.267513621 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.27090016 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.267932669 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.268763611 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.267551822 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.271957745 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.274368203 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.267939687 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.269460844 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.269042097 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.268452561 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.269013232 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.272131253 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.268517298 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.268171021 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.269695601 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.268867901 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.270066952 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.272108739 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.267667807 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.271898885 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.27054213 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.269436934 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.272206918 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.278269154 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.277590934 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.268293736 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.269115851 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.270178335 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.271420756 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.268133942 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.270781792 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.270637975 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.270401176 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.271018266 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.269951282 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.271689716 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.272857822 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.284684887 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.293537081 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.27108062 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.270264224 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.272181793 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.271725278 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.27013029 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.271897734 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.271766925 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.273426644 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.277587055 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.271529136 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.277899563 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.288540724 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.271508737 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.275463832 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.273928877 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.275595399 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.274290651 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.270669435 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.27218953 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.27558985 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.285457558 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.274138649 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.280366437 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.295677186 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.292075847 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.272612746 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.271102829 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.271889669 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.274569003 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.274026619 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.272828396 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.275919241 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.27473403 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.272470174 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.273418271 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.277450083 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.274212877 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.276052542 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.275485969 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.273710807 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.274224946 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.273257194 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.273151854 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.275332204 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.273743399 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.272975068 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.272907355 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.274463163 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.283506769 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.296418523 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.274657024 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.273856209 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.273399867 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.276492734 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.27772011 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.282149137 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.280610215 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.274145993 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.27341056 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.276243369 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.273371781 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.276043746 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.275606255 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.27529259 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.274649691 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.272418265 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.285244408 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.296932071 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.278621234 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.274437139 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.274761625 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.276551412 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.277098977 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.276169934 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.27667551 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.278498161 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.279113264 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.278831403 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.277707467 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.276890053 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.278261057 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.283194585 seconds)
  done (took 756.4257257 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.274294725 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.274124324 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.27356113 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.274554299 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.275066288 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.273436826 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.273196596 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.274146808 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.275379359 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.274434124 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.275136424 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.27492 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.275379204 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.275584902 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.276447403 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.276035898 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.274626452 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.27546882 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.2773254 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.275908126 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.275179142 seconds)
  done (took 27.968978563 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.27891237 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.274576092 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.276002061 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.278138344 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.276144492 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.279553441 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.276141845 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.277974718 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.28037221 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.276867853 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.27879101 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.278664277 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.276202215 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.275613113 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.277949062 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.279148064 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.279561347 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.275943652 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.277570086 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.276187821 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.278290396 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.276253714 seconds)
  done (took 29.298632668 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.278766481 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.276112443 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.2770799 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.275732742 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.280335331 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.277220099 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.276720081 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.279499419 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.279140893 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.277637087 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.277467826 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.278447091 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.28477384 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.283754972 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.279443574 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.279565709 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.279638528 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.281090222 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.279535981 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.27769252 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.284828625 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.277090109 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.276909123 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.27867005 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.279512904 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.281332398 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.279671046 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.279561076 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.280126027 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.281787448 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.2804014 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.279360773 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.279887161 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.277358465 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.280100174 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.284857049 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.279585872 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.278698234 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.280595356 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.289444427 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.297426258 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.279113828 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.285389003 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.300564892 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.28244074 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.282500423 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.286806823 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.280128359 seconds)
  done (took 62.678466261 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.859581115 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.879375064 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.88109629 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.879474432 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.883647458 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.886288424 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.881390701 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.880963662 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.877592254 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.888091044 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.876424041 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.881034685 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.876773791 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.878190989 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.880733659 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.883359153 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.881748159 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.880912654 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.889631667 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.889685751 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.878793438 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.881185051 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.880457186 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.878526338 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.880176349 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.881574752 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.882438352 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.88293952 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.881735485 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.894520585 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.885769093 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.887030924 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.884588329 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.880639987 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.884189788 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.884450153 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.890922432 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.884530778 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.885769277 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.893312985 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.886527508 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.889897344 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.883330679 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.888374795 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.885240243 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.88414241 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.883795001 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.881949603 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.882618326 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.894026177 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.88206895 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.887099599 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.88731352 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.878346124 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.882584442 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.884577098 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.88219629 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.880298502 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.88395838 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.892595087 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.878220638 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.883222116 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.880478332 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.879369941 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.887586852 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.88295505 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.879668777 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.882155976 seconds)
  done (took 129.253273283 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.285083025 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.285220524 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.284574266 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.284298533 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.285254125 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.284523658 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.284291982 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.284220181 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.284464515 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.284605656 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.285190778 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.286779254 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.28498924 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.285461124 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.284402789 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.285777068 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.284374224 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.285760511 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.285629853 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.286129239 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.285982061 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.285936144 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.286251844 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.286934123 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.286332993 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.286220583 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.287241913 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.28643043 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.285630779 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.286142703 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.286833613 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.285964054 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.287841025 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.28692108 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.286595049 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.287802277 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.287254 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.286675153 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.287515154 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.286491547 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.286873147 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.287695086 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.286545876 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.286037942 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.286487456 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.286156016 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.28758431 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.287831842 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.289193833 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.288134216 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.287126396 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.287154677 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.28671101 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.287535619 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.289944213 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.288862322 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.28754847 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.289028985 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.2885443 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.288063101 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.288259675 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.288664089 seconds)
  done (took 80.967294628 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.289058005 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.288783529 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.286821688 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.28727983 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.288990289 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.28747669 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.289848844 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.290770665 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.290029257 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.289543374 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.290884804 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.286529624 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.288667773 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.290962545 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.287133608 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.288266546 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.288419935 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.287596135 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.289142216 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.287510989 seconds)
  done (took 26.978071797 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.287050638 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.292103242 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.286333355 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.287692056 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.291586998 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.287185253 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.289866598 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.290741806 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.287207825 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.291405945 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.291749864 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.289827312 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.28923775 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.288591301 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.291535877 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.288641118 seconds)
  done (took 21.833881031 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.289412473 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.290391197 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.290259338 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.289939664 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.289092085 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.289255353 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.292540385 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.289182386 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.289068784 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.292909244 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.290512982 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.290231064 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.292171937 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.290152737 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.289267189 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.291283956 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.288400951 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.290291745 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.291595756 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.291502269 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.289736923 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.288650491 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.29086842 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.292598583 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.289811893 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.291099937 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.289721829 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.290403405 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.290109601 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.291932784 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.290180965 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.291020634 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.289289523 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.291043145 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.291853515 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.291582626 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.2925061 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.292833944 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.294506284 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.29500699 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.297457287 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.294336956 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.296740756 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.297158424 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.29407382 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.29737885 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.294050191 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.29454252 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.291957377 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.291209247 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.293449943 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.293069859 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.293182897 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.293753999 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.29338487 seconds)
  done (took 72.254769608 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.293137644 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.296282476 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.294750623 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.297159581 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.298397586 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.296116588 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.297440868 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.295394852 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.293103694 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.294597307 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.291235344 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.294271992 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.292708913 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.294589295 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.291732055 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.294763272 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.292091657 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.291424517 seconds)
  done (took 24.50601087 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.291780574 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.292341425 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.295416886 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.291463282 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.292246525 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.295076022 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.291538308 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.294340078 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.296071351 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.292471208 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.292256378 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.296018227 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.295287667 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.295841065 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.292600964 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.292396047 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.295911323 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.29504821 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.292427333 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.292982225 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.296080817 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.29637445 seconds)
  done (took 29.675669102 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.293265198 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.293578844 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.292828397 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.30862353 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.310946021 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.293258305 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.293929771 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.294686265 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.315850236 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.34278573 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.339087856 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.312322499 seconds)
  done (took 16.900897488 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294903476 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296287372 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.293871807 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296960186 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297441436 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294878979 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295578006 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29648419 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296788622 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294726261 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293872168 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295761394 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297379415 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29431207 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297866213 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297839776 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294692606 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295053336 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295719763 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299117637 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294924693 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297564956 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296601338 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294327462 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29475348 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294782612 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297331063 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295748553 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297921186 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297668831 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297278621 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295508454 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297752978 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296860278 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297244964 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297620444 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295978955 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298748259 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29679794 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295970817 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.297837023 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298756335 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298851586 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296961245 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297646173 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296923196 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295636119 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296739532 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296731669 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298816781 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298617902 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296051521 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297583979 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298491521 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298581514 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298921757 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298222099 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29637231 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298376789 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29775924 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296097592 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299194299 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29775724 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.2973731 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29904297 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296155718 seconds)
  done (took 86.802584302 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298249754 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.296419256 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297430596 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297922602 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297263227 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297899299 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29805024 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297413547 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297178911 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298081115 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301886851 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297542836 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298092884 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298018085 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297583017 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29742725 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299211535 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298211546 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298712461 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300520536 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297983155 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297807878 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298809242 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297434428 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299896864 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301233498 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299618589 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298719336 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298505935 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299622914 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298236579 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298310694 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29907574 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.298546092 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299480839 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298998989 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29872887 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29841715 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301635459 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299960092 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298947111 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301018286 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299638548 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299150264 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300017189 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29930757 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29943907 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300546439 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299177049 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299615007 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300982317 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300692295 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300793804 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299943529 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300726656 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299662979 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301457465 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301411765 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300656705 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303171736 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301415599 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299827583 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302990768 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301259023 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300174014 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302349135 seconds)
  done (took 86.973176426 seconds)
done (took 1813.059446543 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.463548086 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.418816637 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.301563139 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.312116934 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.301264991 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.294552055 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.311594358 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.299800304 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.301809856 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.301176816 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.301382051 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.489535533 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.296976602 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.302145286 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.300879221 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.397175601 seconds)
  done (took 26.611312575 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.327018515 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.312741157 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.419443765 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.334867474 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.335415315 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.493570909 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.369659649 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.317113039 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.476025863 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.356170805 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.318414614 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.340285681 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.312230511 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.313291092 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.336104025 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.492270065 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.555867048 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.307879302 seconds)
  done (took 28.936045437 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.741739694 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.339339952 seconds)
  done (took 5.305583998 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.3334176 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.313718664 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.314688029 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.311935213 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.303778731 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.309885469 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.312119484 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.306152977 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.308593623 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.437087748 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.317430067 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.322932804 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.33238431 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.312882141 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.312103824 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.350927874 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.465844305 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.312982403 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.310745314 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.31827379 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.312200459 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.397779563 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.35324734 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.314228023 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.433550989 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.314875758 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.321238352 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.320454912 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.46775824 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.313801379 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.312903495 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.313607988 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.315358196 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.211454246 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.785267669 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.314566291 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.338365066 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.322451338 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.311251107 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.45867118 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.316676734 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.320127608 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.30703952 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.767051182 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.471253987 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.426419251 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.323628024 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.337044055 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.316124722 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.377168047 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.315211973 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.316375523 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.357469957 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.099632014 seconds)
  done (took 84.128552239 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.307191399 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.305597779 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.487926934 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.324330009 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.308353768 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.311872471 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.313102359 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.583575616 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.328847545 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.308636724 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.60363408 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.864054102 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.328963064 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.354495302 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.158395249 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.373514814 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.309214362 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.321779025 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.309066098 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.314212905 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.851921958 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.313630595 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.30715617 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.438327137 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.348187919 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.817056198 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.31051899 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.3248413 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.311563002 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.309312844 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.824646574 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.332897292 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.369894063 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.307786821 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.575920363 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.677715921 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.64366739 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.313683203 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.3273375 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.312282236 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.335057548 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.800813603 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.660920984 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.309763109 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.30991232 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.809383086 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.309678907 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.321592813 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.315154279 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.559237384 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.308280901 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.311104223 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.334354086 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.31442753 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.308416539 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.38346722 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.388799379 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.81863609 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.310099602 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.310307795 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.343615576 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.311509874 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.318201344 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.312394977 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.327558704 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.664469056 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.4520038 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.315551787 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.663338125 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.818637287 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.326093149 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.893234213 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.326106517 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.321786237 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.53104438 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.31123338 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.333129138 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.8295511 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.354706713 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.310368084 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.642601274 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.312888557 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.60054101 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.326870809 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.314604408 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.865948852 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.322034863 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.320337282 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.31196506 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.314224856 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.31185177 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.314413736 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.600235323 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.351687223 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.312418845 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.311864346 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.341957784 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.31316685 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.312715917 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.315378665 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.885512798 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.335111646 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.310399656 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.315590592 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.311282926 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.315970056 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.313760527 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.315318017 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.579532773 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.320652181 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.31389417 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.312021265 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.311943638 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.336313828 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.452059392 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.31696828 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.6158606 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.318272853 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.316029416 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.321087507 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.311949764 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.366529558 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.313111241 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.321457384 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.16648812 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.578409528 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.332762432 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.330519007 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.315285185 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.313649978 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.318453282 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.318470325 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.348253217 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.315879076 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.067624586 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.337515699 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.327232633 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.313487431 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.326661297 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.313406646 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.32093712 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.315645597 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.605449996 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.582722341 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.451025806 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.315578353 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.312823003 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.056533646 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.360969347 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.495983846 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.334453158 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.31538755 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.565238046 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.546291597 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.316417365 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.314983625 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.314960835 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.574830777 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.316034788 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.637340695 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.852853185 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.333579888 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.323593756 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.071078896 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.035746929 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.321195793 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.320294402 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.596933152 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.330413847 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.315054794 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.316648551 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.317229033 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.333287952 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.337619118 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.317921998 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.315851747 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.316454332 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.645940628 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.507260212 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.332827313 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.319755105 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.817129212 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.326783932 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.315715561 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.330777637 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.318059714 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.316176184 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.382540817 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.317238875 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.344718366 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.31646771 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.327525344 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.832627905 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.316357794 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.317377126 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.510159992 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.994152624 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.335007927 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.317348841 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.333345678 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.238272183 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.84170106 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.351478845 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.618407226 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.324970327 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.35690387 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.318391181 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.40855628 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.842948206 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.317922719 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.335921022 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.967881433 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.334586539 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.828690134 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.318383186 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.319159388 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.919080157 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.338710759 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.318930601 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.317073298 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.32408984 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.616744972 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.319497351 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.358097125 seconds)
  done (took 494.048882165 seconds)
done (took 640.247123092 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.318008294 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.324203017 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.309880966 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.324979281 seconds)
  done (took 10.514266606 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.328867854 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.326702668 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.327929823 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.326425981 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.327991622 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.325389135 seconds)
  done (took 9.202110979 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.319784032 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.325953516 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.324174758 seconds)
  done (took 8.209083212 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.525292629 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.343939353 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.647212155 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.344881392 seconds)
  done (took 9.101081831 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.326233403 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.327945273 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.328045561 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.3294097 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.33058231 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.331588376 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.330939316 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.32894412 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.330462072 seconds)
  done (took 13.202616105 seconds)
done (took 51.467296413 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.422652256 seconds)
    (2/224) benchmarking ("map", identity, Float64, true)...
    done (took 1.457695763 seconds)
    (3/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.405309728 seconds)
    (4/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.338216751 seconds)
    (5/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.359051576 seconds)
    (6/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.320928498 seconds)
    (7/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.572273356 seconds)
    (8/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.520680622 seconds)
    (9/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.337904386 seconds)
    (10/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.432382744 seconds)
    (11/224) benchmarking ("map", abs, Int64, true)...
    done (took 1.459688756 seconds)
    (12/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.073374478 seconds)
    (13/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.082174805 seconds)
    (14/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.034802614 seconds)
    (15/224) benchmarking ("map", abs, Float64, false)...
    done (took 1.385630964 seconds)
    (16/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.338288413 seconds)
    (17/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.379420467 seconds)
    (18/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.320447847 seconds)
    (19/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.392624112 seconds)
    (20/224) benchmarking ("map", abs, Int8, true)...
    done (took 1.371846774 seconds)
    (21/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.309393721 seconds)
    (22/224) benchmarking ("map", identity, Int8, true)...
    done (took 1.368576147 seconds)
    (23/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.331347031 seconds)
    (24/224) benchmarking ("map", abs, Float32, false)...
    done (took 1.371926977 seconds)
    (25/224) benchmarking ("map", identity, Float32, false)...
    done (took 1.373832307 seconds)
    (26/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.418090408 seconds)
    (27/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.438080138 seconds)
    (28/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.185280626 seconds)
    (29/224) benchmarking ("perf_sum", Bool, true)...
    done (took 1.348709018 seconds)
    (30/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.385315563 seconds)
    (31/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.341924117 seconds)
    (32/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.97824418 seconds)
    (33/224) benchmarking ("map", identity, Int64, false)...
    done (took 1.388035093 seconds)
    (34/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.449324316 seconds)
    (35/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.339399585 seconds)
    (36/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.371709147 seconds)
    (37/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.347191898 seconds)
    (38/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.309326073 seconds)
    (39/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.333490071 seconds)
    (40/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.323782608 seconds)
    (41/224) benchmarking ("perf_countequals", "Int8")...
    done (took 1.414299806 seconds)
    (42/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.184747007 seconds)
    (43/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.980895749 seconds)
    (44/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.456117959 seconds)
    (45/224) benchmarking ("perf_sum", Bool, false)...
    done (took 1.349502105 seconds)
    (46/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.367091425 seconds)
    (47/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.976076987 seconds)
    (48/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.453182761 seconds)
    (49/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.181570246 seconds)
    (50/224) benchmarking ("map", identity, BigInt, true)...
    done (took 1.484508611 seconds)
    (51/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.392723957 seconds)
    (52/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.444777206 seconds)
    (53/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.478314133 seconds)
    (54/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.364342016 seconds)
    (55/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.346401235 seconds)
    (56/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.322911484 seconds)
    (57/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.542560753 seconds)
    (58/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.516752537 seconds)
    (59/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.97473166 seconds)
    (60/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.514082832 seconds)
    (61/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.637771498 seconds)
    (62/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.381666759 seconds)
    (63/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.362560283 seconds)
    (64/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.481006079 seconds)
    (65/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.322828719 seconds)
    (66/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.34195662 seconds)
    (67/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.339233048 seconds)
    (68/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.071291458 seconds)
    (69/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.32848086 seconds)
    (70/224) benchmarking ("map", abs, Float64, true)...
    done (took 1.481016627 seconds)
    (71/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.501965396 seconds)
    (72/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.36775128 seconds)
    (73/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.316164744 seconds)
    (74/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.383931472 seconds)
    (75/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.337417426 seconds)
    (76/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.335465105 seconds)
    (77/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.479936088 seconds)
    (78/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.43929677 seconds)
    (79/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.068560789 seconds)
    (80/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.484673664 seconds)
    (81/224) benchmarking ("map", abs, Int64, false)...
    done (took 1.410721125 seconds)
    (82/224) benchmarking ("perf_countequals", "Float32")...
    done (took 1.367539566 seconds)
    (83/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.324648692 seconds)
    (84/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.983291739 seconds)
    (85/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.360805118 seconds)
    (86/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.494473538 seconds)
    (87/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.449587226 seconds)
    (88/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.467416149 seconds)
    (89/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.325414905 seconds)
    (90/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.316782471 seconds)
    (91/224) benchmarking ("map", abs, Bool, true)...
    done (took 1.412184136 seconds)
    (92/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.974138245 seconds)
    (93/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.31396844 seconds)
    (94/224) benchmarking ("perf_countequals", "Int64")...
    done (took 1.358392417 seconds)
    (95/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.324607429 seconds)
    (96/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.345790966 seconds)
    (97/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.411586845 seconds)
    (98/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.407239316 seconds)
    (99/224) benchmarking ("perf_countequals", "Bool")...
    done (took 1.360853275 seconds)
    (100/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.519651817 seconds)
    (101/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.355867643 seconds)
    (102/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.337853086 seconds)
    (103/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.464515047 seconds)
    (104/224) benchmarking ("map", abs, Bool, false)...
    done (took 1.352069112 seconds)
    (105/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.342125434 seconds)
    (106/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.405498724 seconds)
    (107/224) benchmarking ("perf_sum", Int8, true)...
    done (took 1.338557798 seconds)
    (108/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.532209555 seconds)
    (109/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.41365701 seconds)
    (110/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.341121952 seconds)
    (111/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.981276592 seconds)
    (112/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.508758527 seconds)
    (113/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.432617648 seconds)
    (114/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.409729338 seconds)
    (115/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.428011479 seconds)
    (116/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.452235032 seconds)
    (117/224) benchmarking ("map", identity, Bool, true)...
    done (took 1.391162184 seconds)
    (118/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.341638354 seconds)
    (119/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.195942219 seconds)
    (120/224) benchmarking ("perf_sum", Int64, true)...
    done (took 1.352754726 seconds)
    (121/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.428573811 seconds)
    (122/224) benchmarking ("perf_sum", Float64, true)...
    done (took 1.338329877 seconds)
    (123/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.313111474 seconds)
    (124/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.42168959 seconds)
    (125/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.34491359 seconds)
    (126/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.341217553 seconds)
    (127/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.411880276 seconds)
    (128/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.327673083 seconds)
    (129/224) benchmarking ("map", identity, Float64, false)...
    done (took 1.425577945 seconds)
    (130/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.353543777 seconds)
    (131/224) benchmarking ("perf_sum", Float64, false)...
    done (took 1.337867642 seconds)
    (132/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.343421491 seconds)
    (133/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.353814265 seconds)
    (134/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.361259558 seconds)
    (135/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.42490758 seconds)
    (136/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.533156459 seconds)
    (137/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.418080393 seconds)
    (138/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.342567163 seconds)
    (139/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.405993846 seconds)
    (140/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.070651697 seconds)
    (141/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.456756845 seconds)
    (142/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.468736327 seconds)
    (143/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.52467081 seconds)
    (144/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.02952119 seconds)
    (145/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.408105081 seconds)
    (146/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.076628035 seconds)
    (147/224) benchmarking ("map", abs, BigInt, true)...
    done (took 2.331236004 seconds)
    (148/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.491025162 seconds)
    (149/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.447433251 seconds)
    (150/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.52924412 seconds)
    (151/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.371462406 seconds)
    (152/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.418796759 seconds)
    (153/224) benchmarking ("perf_countequals", "Float64")...
    done (took 1.371720728 seconds)
    (154/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.42359036 seconds)
    (155/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.380943399 seconds)
    (156/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.654255522 seconds)
    (157/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.365404156 seconds)
    (158/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.317132477 seconds)
    (159/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.316763489 seconds)
    (160/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.337905754 seconds)
    (161/224) benchmarking ("perf_sum", Int64, false)...
    done (took 1.346981099 seconds)
    (162/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.49913205 seconds)
    (163/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.567734798 seconds)
    (164/224) benchmarking ("perf_sum", Float32, true)...
    done (took 1.347456968 seconds)
    (165/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.405731779 seconds)
    (166/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.420529096 seconds)
    (167/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.350989139 seconds)
    (168/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.138306033 seconds)
    (169/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.477005268 seconds)
    (170/224) benchmarking ("map", abs, BigInt, false)...
    done (took 2.315920802 seconds)
    (171/224) benchmarking ("map", identity, Int64, true)...
    done (took 1.487890285 seconds)
    (172/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.415235582 seconds)
    (173/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.656841302 seconds)
    (174/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.409428667 seconds)
    (175/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.4095323 seconds)
    (176/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.497973714 seconds)
    (177/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.453284213 seconds)
    (178/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.421850406 seconds)
    (179/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.471466329 seconds)
    (180/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.043949452 seconds)
    (181/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.371730975 seconds)
    (182/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.38938872 seconds)
    (183/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.464672089 seconds)
    (184/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.331997572 seconds)
    (185/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.141567747 seconds)
    (186/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.346495921 seconds)
    (187/224) benchmarking ("map", identity, Float32, true)...
    done (took 1.424576461 seconds)
    (188/224) benchmarking ("map", identity, BigInt, false)...
    done (took 1.409479567 seconds)
    (189/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.388355171 seconds)
    (190/224) benchmarking ("map", identity, Int8, false)...
    done (took 1.349160537 seconds)
    (191/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.034948968 seconds)
    (192/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.530581109 seconds)
    (193/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.333731452 seconds)
    (194/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.450676671 seconds)
    (195/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.985223574 seconds)
    (196/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.406048256 seconds)
    (197/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.402177291 seconds)
    (198/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.080331265 seconds)
    (199/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.699804736 seconds)
    (200/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.524779182 seconds)
    (201/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.413590371 seconds)
    (202/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.379664071 seconds)
    (203/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.455803153 seconds)
    (204/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.423107308 seconds)
    (205/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.358855283 seconds)
    (206/224) benchmarking ("map", abs, Int8, false)...
    done (took 1.353235559 seconds)
    (207/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.418865926 seconds)
    (208/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.500501098 seconds)
    (209/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.530745767 seconds)
    (210/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.43017859 seconds)
    (211/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.364015634 seconds)
    (212/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.407030223 seconds)
    (213/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.358401857 seconds)
    (214/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.381007046 seconds)
    (215/224) benchmarking ("map", abs, Float32, true)...
    done (took 1.427374036 seconds)
    (216/224) benchmarking ("perf_sum", Int8, false)...
    done (took 1.342449185 seconds)
    (217/224) benchmarking ("map", identity, Bool, false)...
    done (took 1.351599778 seconds)
    (218/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.350143568 seconds)
    (219/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.31856981 seconds)
    (220/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.331019579 seconds)
    (221/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.412533374 seconds)
    (222/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.079250062 seconds)
    (223/224) benchmarking ("perf_sum", Float32, false)...
    done (took 1.36280168 seconds)
    (224/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.347725528 seconds)
  done (took 366.814277003 seconds)
done (took 368.054013677 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.391611956 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.521171455 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.362183139 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.360829069 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.387565611 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.344233047 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.382344542 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.349265594 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.344870502 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.344353834 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.342547166 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.355248545 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.364805434 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.377009511 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.455652275 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.351509536 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.361750661 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.344069861 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.384416927 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.402092018 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.386796916 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.387035496 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.355216383 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.362851591 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.390745659 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.390524875 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.364918341 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.342395202 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.343646754 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.384381604 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.333460172 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.385124762 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.393375905 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.393836098 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.3885557 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.346148952 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.388809229 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.520402759 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.379868853 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.37821877 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.346459985 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.393676821 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.359184169 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.356000912 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.395789025 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.35679008 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.390393919 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.467454868 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.335965218 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.346615051 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.393376221 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.406146355 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.349042173 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.335383153 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.341690669 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.475265953 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.346247257 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.393070406 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.348302342 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.388658872 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.462916549 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.393015645 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.40756993 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.39440194 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.346842651 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.366943755 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.346808414 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.404633017 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.344388742 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.389972575 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.389345897 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.352306388 seconds)
done (took 108.52290862 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.407985329 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.341972138 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.448978527 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.346834558 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.445162042 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.444622392 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.343472709 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.343778725 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.343967092 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.720230125 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.343446894 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.34436684 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.345619037 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.344756778 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.426072462 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.346729808 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.343121185 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.704688409 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.344778655 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.420227842 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.346625395 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.345771911 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.347367219 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.749207661 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.343818025 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.340810998 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.428293664 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.34647565 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.69502099 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.340755734 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.342983894 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.710834959 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.452322653 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.364695031 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.357115536 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.353987019 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.446462298 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.366273264 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.437041923 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.429761144 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.450873497 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.385674583 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.340903132 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.347406453 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.349597819 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.347564552 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.346769481 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.3756976 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.345750961 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.346734502 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.688724408 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.358550971 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.355549048 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.346390335 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.347838491 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.368286518 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.348927984 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.348805666 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.437002524 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.349752096 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.419925483 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.729073164 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.745083511 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.348732901 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.344582533 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.346185283 seconds)
  done (took 105.473917558 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.415887897 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.423894983 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.458583868 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.348912071 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.399646045 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.462483446 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.34866898 seconds)
  done (took 11.116887134 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.35465807 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.351486658 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.397474991 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.397467757 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.347016218 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.56041182 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.351481509 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.359933995 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.347613265 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.426382863 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.349883131 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.35069681 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.35721393 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.34451241 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.398952353 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.360907849 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.464432624 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.350727858 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.349667529 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.501964639 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.348535193 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.358626544 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.423532749 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.361092226 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.351427259 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.35720166 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.316111027 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.351664676 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.347759104 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.350749109 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.348339264 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.470594391 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.352353449 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.348601751 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.349249165 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.50949088 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.350065035 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.349306885 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.353799371 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.351317274 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.353262427 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.351707336 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.352216293 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.349347182 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.352532968 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.374235238 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.352289532 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.353203747 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.352329889 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.352790328 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.425508361 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.354452535 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.349724439 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.349312555 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.428264308 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.361727983 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.353023131 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.350790503 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.353223979 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.349605075 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.502226068 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.399941643 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.352186141 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.400011863 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.35372794 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.353714495 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.353888716 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.354051853 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.442856951 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.354466074 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.40284693 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.351308678 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.579976544 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.375841465 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.355792693 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.355471183 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.35490604 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.353430151 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.348567115 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.359489732 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.351772297 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.355761281 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.357634545 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.351546542 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.351092719 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.537326299 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.509331097 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.352024274 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.365611441 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.363294092 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.35282446 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.426489852 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.354164206 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.352200441 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.404852506 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.469228761 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.429778724 seconds)
  done (took 139.943304138 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.358708315 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.362062358 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.356002618 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.375655925 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.354444542 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.354000353 seconds)
  done (took 9.423438591 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.356103812 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.35592681 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.35681366 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.355416811 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.356320647 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.356736014 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.355501132 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.355321958 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.358225134 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.357175503 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.355666802 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.359828336 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.356725569 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.354261409 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.356345232 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.356669532 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.35541512 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.355309388 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.356326651 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.355054981 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.354133472 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.355064858 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.35473959 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.356758088 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.360119444 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.357051246 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.362831902 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.356924932 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.356271881 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.36225649 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.374835142 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.357006338 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.357310449 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.362156257 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.358834177 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.357098171 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.360959701 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.35904931 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.355471624 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.356722313 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.357718837 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.356989349 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.358438437 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.358626993 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.359160736 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.360214275 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.361779493 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.364133534 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.357804071 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.358813046 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.358913377 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.359193185 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.356963034 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.360081806 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.360316832 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.377509606 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.362827321 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.358690732 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.356869261 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.359437783 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.361262998 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.35720476 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.358712106 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.360761861 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.357340197 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.359120163 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.359957817 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.36091054 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.357744831 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.358968443 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.360861893 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.357077073 seconds)
  done (took 100.082275057 seconds)
done (took 367.293555592 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.249482465 seconds)
  done (took 4.51667881 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.453289427 seconds)
  done (took 3.723940653 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.184024503 seconds)
  done (took 22.46038421 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.414600272 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.375765733 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.375299777 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.357384323 seconds)
  done (took 10.792533935 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.66007983 seconds)
  done (took 3.927922432 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.357332236 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.386775158 seconds)
  done (took 6.017010668 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.673838865 seconds)
  done (took 3.943217427 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.704326207 seconds)
  done (took 3.98042652 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.360786904 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.370164115 seconds)
  done (took 6.00900653 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.339047369 seconds)
  done (took 3.608284315 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.993867495 seconds)
  done (took 16.265709795 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.363034927 seconds)
  done (took 3.635773581 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.379895019 seconds)
  done (took 3.649627254 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.919211122 seconds)
  done (took 6.187971907 seconds)
done (took 99.986659278 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.353604312 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.356114536 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.354048724 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.35259594 seconds)
  done (took 10.686429104 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.397204397 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.39711039 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.398183924 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.407527705 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.398842632 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.399478016 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.402449681 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.403793986 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.408424943 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.400200094 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.401820835 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.40127647 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.398005928 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.391186769 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.404932403 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.39905893 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.406322142 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.414356533 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.388724369 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.404543827 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.364443602 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.408088488 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.403096374 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.365875136 seconds)
  done (took 34.835968365 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.85597881 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.434916304 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.520546292 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.416264506 seconds)
  done (took 7.499440778 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.424467806 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.432681843 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.441759288 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.495791904 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.505412123 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.442094781 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.389833347 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.384930367 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.371653035 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.434282246 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.49314995 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.426185112 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.509890237 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.364192771 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.672692681 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.364835728 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.365598536 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.44047045 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.481282733 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.496593588 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.368942157 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.425716475 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.442075229 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.424450911 seconds)
  done (took 35.871398989 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.362239643 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.376409883 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.362282218 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.371063054 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.362282056 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.36434203 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.365745078 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.370911864 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.364001218 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.364961508 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.365473905 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.377410316 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.363981971 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.365130613 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.370227122 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.367461095 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.370851861 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.36319274 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.366150718 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.37088469 seconds)
  done (took 28.617506087 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.355938247 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.356286659 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.709309007 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.613998266 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.358074294 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.357500375 seconds)
  done (took 14.024526452 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.4320227 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.576094954 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.365393037 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.715257326 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.794577236 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.366792176 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.366527534 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.610021185 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.927552064 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.904434981 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.427988689 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.439065209 seconds)
  done (took 20.201510454 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.35914751 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.363179573 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.373832803 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.380615314 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.418863018 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.368651136 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.372562445 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.357984955 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.424528705 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.422988258 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.374149987 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.421353294 seconds)
  done (took 21.913327369 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.457995083 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.361716972 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.363207473 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380580851 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368522943 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.208623325 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.439427257 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.063253609 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.383123976 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.636568696 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372992121 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.459686035 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.618125443 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362193594 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.369187826 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.348587103 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.599734115 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872223398 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.369142414 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363268746 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402477323 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.365600792 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.368115263 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.596477499 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.364997077 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.363615966 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.624849575 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.363453808 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.646155565 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.382819992 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373383358 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.362819877 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.637901377 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.011224918 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48046761 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.571110771 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381908637 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.37151927 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.354650879 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.367541519 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.369124047 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.370498173 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375969311 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36382064 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.363934945 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.377371865 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.069590685 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.39041209 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.362052498 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.365067386 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.622735595 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.462201467 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.368109152 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.363917097 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398020793 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370288576 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.369582662 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.456915075 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947500624 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364389438 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371668256 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.387763921 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.373786231 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371917108 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.994882214 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.376628927 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.368645672 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.370353596 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365587286 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.364620215 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.386010922 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365687223 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.390295043 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365620459 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.080321221 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.3835418 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36743777 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.936491373 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374485971 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.37231185 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.597743844 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366139224 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366114786 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.36395466 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.366248956 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.093023497 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381816841 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.349467737 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.408816284 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.057605048 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.59196237 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385823372 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395345326 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.587438644 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.347764172 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363871839 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.366400681 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366799022 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386720687 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.06121779 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382059692 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.368649184 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.624423814 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.576268822 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363812754 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.359295164 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.833930527 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384264533 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.385173594 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.366857414 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.579823336 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.945788107 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.387974048 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363701881 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386882697 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.365509623 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.132935328 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374581433 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.472968764 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.376516909 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.640799843 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.163525107 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373507859 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.43463158 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.370119556 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.368163389 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.365981097 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375622519 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.367556001 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.56596242 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.386115358 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.383486474 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.366540583 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369566227 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.366862649 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372009309 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.385873611 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.590741421 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369495278 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.647904624 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366858677 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366118927 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367945184 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.590574941 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.374411397 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.711536193 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.630898531 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372123873 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.377437639 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.384231181 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386658737 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.469735887 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.3892429 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.368667203 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.627424055 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.371268064 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.369545841 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.36682964 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.376641641 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372706437 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.375508385 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367758918 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.957543038 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356297376 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.378106868 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.368353516 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.386940279 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.439649107 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.377048216 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.581316989 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.368818471 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380889411 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.399177357 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.368647559 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.602209011 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.381562734 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.369789816 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.45724747 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.834214619 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.969192489 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.390118785 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.370980486 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.369550526 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.370336196 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371972463 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372698841 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.372875398 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.583782612 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.385639306 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.373326824 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.962527258 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380727386 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.372143342 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.383503272 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.386335301 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.379024505 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372234303 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.371159535 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380386336 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.379380558 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.389819843 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.517107305 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.38735839 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.373635159 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.891933648 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.379165971 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.372527139 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.373054295 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408467439 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.374764859 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.172439792 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.635075036 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.389212311 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.639380382 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.380485802 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.395305948 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.373647857 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380118995 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375091601 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.389044089 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388373882 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.385628942 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.374714767 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382270342 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.959327184 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.109787105 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.917700318 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.391075465 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.390968234 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.380597282 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.078152907 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393398472 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.375540927 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.613784194 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.075355975 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394255223 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.842965585 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.402626097 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.137231104 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.643784827 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.614493375 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.382896071 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.381449604 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.641170533 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.593900276 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409066908 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.38736196 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384883721 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.360330422 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.921509409 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.395067223 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.457566844 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.079018407 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403518207 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.377519125 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.375047274 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.399748725 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.777813711 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.399684831 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377594382 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.391697879 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.391456434 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.168588587 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.386628299 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.376568807 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.007101568 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.390871595 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.846922308 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395326386 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.588730751 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.389914476 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.382064609 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.376712399 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.400178033 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.637885145 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.639990386 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377887198 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.381151593 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922094883 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.25387803 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.382806663 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377763485 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.148150666 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395536383 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.672691493 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.391413765 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.386731363 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385764046 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.378069186 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378425881 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.375004228 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.383361089 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354336741 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.892984919 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.396168826 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394169539 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396403228 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384986187 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.634597192 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.392630795 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.96065522 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.616062133 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.385271149 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408638757 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.38356951 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394278636 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.364166615 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.379441581 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.381209024 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405934222 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.607482878 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.391892236 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.368520453 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.405257223 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.597849612 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.379968602 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.387798722 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.619018683 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.378660031 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.397013939 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.11491329 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418822516 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.38991815 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380779398 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.385484063 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.405190848 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.451452275 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.594081242 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.392518552 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.391332126 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.77638179 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411046242 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.383005135 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.397663345 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.476827189 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388839453 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.393975516 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.160889858 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.966744507 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.120490379 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.978600037 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.653348167 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.384756032 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389956841 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38175891 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.544848517 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.380857852 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.656573606 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383944771 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.399296962 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411782873 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392430721 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391586316 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.600888893 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.660907902 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.384510285 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394501487 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391207913 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.387028723 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.396689152 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.600007388 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898941731 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97067924 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391815398 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.397480926 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.093560337 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.677239724 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38521896 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.384626969 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383955892 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.401599121 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.390206761 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.418138824 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384423871 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.549678773 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.646465909 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.041616012 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.414314538 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.411407568 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.90167122 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38708447 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.647289805 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.384651691 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.605323243 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.974600576 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.091599755 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.658425059 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.455375824 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.598819094 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.385819351 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.550656587 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.394726684 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.393338522 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.387035483 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386950001 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.383302414 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.396635267 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.978891767 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.658187048 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.390557751 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.396807486 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42353845 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.396953515 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.611549923 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.129224716 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.619491462 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.397750504 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.39174071 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.387725678 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.979349398 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.657664001 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390199403 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.390372625 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.626300739 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.387180921 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.412270319 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.077810037 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.385115397 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964437254 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.366473193 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409836823 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39638972 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.100445067 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.984749273 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.405517078 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910449719 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.394426212 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396557924 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.668870726 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.39406955 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.392843976 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.671470573 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.390512694 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.39646809 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.608703947 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.977099672 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.162082172 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.41382384 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403984532 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.396478217 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390382809 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.472129613 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39598966 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.388974968 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.800601352 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.410001163 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389476415 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.400916346 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.397625465 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408461806 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.393465739 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38969257 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.396099742 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.396532946 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.381958908 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.402991626 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.485267016 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.94289503 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407808829 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.083966227 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.717137188 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.647015627 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.402958583 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.380024566 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.394068923 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390340845 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391742454 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390503213 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.391310315 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.99116274 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.409812907 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.406081416 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.396153251 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.607414332 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.603661731 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.395781065 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.607888021 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40205413 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.412235695 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.375171795 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391417671 seconds)
  done (took 977.474092507 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.391191097 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.451487665 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.425226216 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.479280847 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.422502888 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.527493145 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.426426529 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.431666181 seconds)
  done (took 20.85719899 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.396184111 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.404569295 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.391173534 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.404341477 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.392484661 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.865604923 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.408522732 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.399357203 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.40663294 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.394808255 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.400176886 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.376340752 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.420554525 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.394611595 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.389023038 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.406431501 seconds)
  done (took 33.1657568 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.382951119 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.543266099 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.30796059 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.435596086 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.403283933 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.402179473 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.62134069 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.407556914 seconds)
  done (took 26.809258762 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.403337656 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.403914346 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.402357573 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.401936624 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.402848316 seconds)
  done (took 8.319620599 seconds)
done (took 1241.546754963 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.397772806 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.40120658 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.398623454 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.401316144 seconds)
  done (took 6.903156321 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.378829364 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.384156066 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.386226111 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.400830824 seconds)
  done (took 9.854340784 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.102492052 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.035429584 seconds)
  done (took 5.442535293 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.882430091 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.885385115 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.884950766 seconds)
  done (took 6.955841211 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.706287557 seconds)
  done (took 3.01097885 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.296356172 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.398586627 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.078549639 seconds)
  done (took 8.078820792 seconds)
done (took 41.550391809 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.405867252 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.732200946 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.550297925 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.391175536 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.597965919 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.548179141 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.133152476 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.398090869 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.402138756 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.399995418 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.395591977 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.5544889 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.179892265 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.732659518 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.186664333 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.640240029 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.57659102 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.394109803 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.392681205 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.395226805 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.132730314 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.403052107 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.395005829 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.391881544 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.555656015 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.537776429 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.392679432 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.640044525 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.400097061 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.394976614 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.539548975 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.401068995 seconds)
  done (took 83.497576739 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.401479695 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.399989348 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.403971113 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.393201728 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.412148862 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.420785297 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.394615284 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.401855899 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.405237458 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.403034442 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.394443018 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.410268857 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.395027171 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.395505089 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.395275214 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.392722635 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.396902255 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.393279871 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.410360145 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.394205025 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.39394654 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.406844501 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.396339943 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.40304061 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.393892051 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.395057738 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.421989632 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.393761359 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.409721716 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.406677951 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.395715078 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.413383057 seconds)
  done (took 78.152380344 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.394191437 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.411242639 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.397348308 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.393906214 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.397733802 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.396714111 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.394135706 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.395096039 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.394587754 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.39516557 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.39430929 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.395883528 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.397091714 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.396697642 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.398153793 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.396282225 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.396338964 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.396208685 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.405692654 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.396246973 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.399050738 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.39788169 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.404823327 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.401159201 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.394675973 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.396974833 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.396441687 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.396737169 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.397161535 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.39822877 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.396785595 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.395355154 seconds)
  done (took 78.026438214 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.679377011 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.405082274 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.407694596 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.386890744 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.406729249 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.405252029 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.398976896 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.681326313 seconds)
  done (took 15.083567881 seconds)
done (took 256.066375056 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.397908462 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.624619671 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.42724693 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.400518929 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.430965244 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.426566183 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.622865538 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.444398498 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.622492886 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.417107661 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.422392839 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.399424081 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.679777085 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.552081792 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.326116875 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.410509527 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.737265752 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.414444436 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.674080148 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.671407946 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.425565791 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.399106833 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.31041251 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 1.764046044 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.402388513 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.48520981 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.506864405 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.619268871 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.566430477 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.488504179 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.623479785 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.404313762 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.406056245 seconds)
  done (took 62.81398007 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.405125892 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.519905953 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.409004023 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.407677156 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.524858703 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.408646584 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.40759204 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.408136949 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.408782325 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.408418271 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.407846409 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.408735447 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.409311075 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.453214945 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.52951767 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.422462676 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.407685729 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.520413118 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.405918706 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.399664269 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.449594588 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.408550782 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.411623296 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.452798178 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.410719266 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.41143898 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.519863369 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.410646873 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.405753449 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.519129151 seconds)
  done (took 44.385799695 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.41077142 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.653240272 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.842766626 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.416752255 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.408018513 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.412640684 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.487374775 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.416802081 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.412317935 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.414346658 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.56343748 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.415686657 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.445430749 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.867722734 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.412933121 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.411427776 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.410584798 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.410432208 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.662226609 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.421286623 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.508016071 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.415156009 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.487944063 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.423465161 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.434238225 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.410812459 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.41603041 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.98327453 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.413153187 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.565070547 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.189815009 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.489586481 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.960890517 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.853470729 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.174575735 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.418582744 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.412419856 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.568594323 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.416355495 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.410535278 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.488754787 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.412040711 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.849810489 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.071618333 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.433997207 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.413328541 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.013234247 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.566253712 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.642409458 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.427714587 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.877620588 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.416658828 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.415538407 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.413723039 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.636853932 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.420737171 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.411289275 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.02332706 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.439009064 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.48705744 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.420145737 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.41308344 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.665933438 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.418252891 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.661489981 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.419208989 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.420243967 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.433577461 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.855977928 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.420108995 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.084327715 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.4376373 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.414100332 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.564451021 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.666819595 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.043925592 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.434775078 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.668256947 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.971643956 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.486945937 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.424470375 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.980048615 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.495644759 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.421489436 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.418086591 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.4171445 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.412799541 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.483196122 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.486692417 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.039040685 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.084749948 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.043133359 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.50674612 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.425088138 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.41492999 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.024588677 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.433184094 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.415699456 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.843099274 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.085685331 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.440530873 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.421559727 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.095158489 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.440956841 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.494317614 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.424375296 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.858261775 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.419042929 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.472618662 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.421288242 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.427527501 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.443082788 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.50050549 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.41939082 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.416446749 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.074679936 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.589008846 seconds)
  done (took 186.141856076 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.40768042 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.423543601 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.422219601 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.407411066 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.406935611 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.41848229 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.409765909 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.408541278 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.414852514 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.407613514 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.407518307 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.418769124 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.41723447 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.407450561 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.411379384 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.426085924 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.409462272 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.415792839 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.428730098 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.409044197 seconds)
  done (took 45.596640094 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.41868795 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.945379326 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.548863342 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.44357658 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.415918307 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.417259537 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.472053776 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.41987072 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.416709026 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.705621254 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.593022316 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.42263758 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.417011177 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.416330754 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.542207833 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.431655697 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.716822859 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.979506173 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.420203747 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.979884797 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.407591059 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.419558134 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.41600646 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.985284168 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.72117755 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.494241702 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.4753753 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.982140065 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.417892992 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.418122908 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.979222416 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.42076309 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.418092137 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.972066448 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.436011777 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.424283125 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.417584505 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.474453641 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.476789168 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.720411917 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.052301438 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.497781261 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.435703996 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.756389439 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.428419851 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.406922911 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.982115924 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.43915896 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.407544993 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.419912334 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.426570791 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.565623362 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.425094803 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.566454788 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.425403898 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.42267837 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.983912671 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.571204087 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.558267894 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.611030708 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.417841683 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.49229725 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.424279152 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.980948864 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.43868001 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.421544582 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.421511762 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.590870491 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.004449336 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.497751579 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.725639704 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.723847191 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.427823213 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.477853504 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.437916032 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.784418524 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.478851044 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.812513667 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.730167889 seconds)
  done (took 125.595754208 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.656863575 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.535447686 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.580009698 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.031484433 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.4178185 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.540907969 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.533797696 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.672644815 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.427342932 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.517504303 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.636086663 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.502323955 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.113670059 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.495973193 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.515127493 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.567552261 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.569969083 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.420422309 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.052081818 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.609939854 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.441686601 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.524031821 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.012197916 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.599873468 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.434450254 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.935019575 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.363648657 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.102584619 seconds)
  done (took 53.135458715 seconds)
done (took 518.978420017 seconds)
SAVING RESULT...
DONE!
