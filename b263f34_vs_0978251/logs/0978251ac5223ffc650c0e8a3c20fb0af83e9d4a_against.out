cset: moving following pidspec: 19169
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.970397631 seconds)
loading group "string"... done (took 0.563898836 seconds)
loading group "linalg"... done (took 8.884083701 seconds)
loading group "parallel"... done (took 0.172481092 seconds)
loading group "find"... done (took 1.453626394 seconds)
loading group "tuple"... done (took 2.087446742 seconds)
loading group "dates"... done (took 1.387543738 seconds)
loading group "micro"... done (took 0.22201099 seconds)
loading group "io"... done (took 0.624555869 seconds)
loading group "scalar"... done (took 43.212050062 seconds)
loading group "sparse"... done (took 13.386324899 seconds)
loading group "broadcast"... done (took 1.088235437 seconds)
loading group "union"... done (took 12.19430231 seconds)
loading group "simd"... done (took 2.530007113 seconds)
loading group "random"... done (took 10.405248886 seconds)
loading group "problem"... done (took 1833.588871581 seconds)
loading group "array"... done (took 25.878372945 seconds)
loading group "misc"... done (took 1.133259914 seconds)
loading group "sort"... done (took 3.809680872 seconds)
loading group "collection"... done (took 19.172196581 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.64059554 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.121322309 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.170278216 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.359344752 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.215554484 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.152231809 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.163425943 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.565315259 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.012794429 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.210119963 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.146694214 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.564435771 seconds)
done (took 6.050413204 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.260004325 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.437242026 seconds)
    (2/2) benchmarking "String"...
    done (took 0.113336246 seconds)
  done (took 1.206798135 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.09464482 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.177106213 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094158572 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.112971301 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.113282727 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.112880341 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.09593492 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.112722909 seconds)
  done (took 1.480051458 seconds)
done (took 3.706991251 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.501055315 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.864077185 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.519003399 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.129511834 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.160246952 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.152171055 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.315987 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.160579407 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.125788859 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.091230348 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.172362096 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.37608113 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.473274966 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.960131027 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.085290097 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.129864177 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.08416969 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.708418862 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.082789952 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.142311157 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.535033601 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.122484516 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.117915679 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.139664158 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.190263796 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.130253185 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.165445836 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.095682405 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.675184644 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.101859405 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.185012115 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.102553328 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.164701825 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.247838414 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.09509899 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.096992857 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.680722982 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.177248357 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.112084669 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.100731599 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.678174783 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.080715745 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.195686356 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.102282955 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.108028344 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.187236517 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.114954742 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.080009329 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.10452044 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.092793454 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.162801359 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.453461576 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.106024362 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.14635605 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.108664671 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.686806787 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.096866527 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.156283258 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.139702023 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.103600087 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.100657185 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.106528033 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.153054747 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.110333167 seconds)
  done (took 19.608165342 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.117105503 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.141687656 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.095709428 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140674107 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.142237121 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.098528119 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.085254613 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.095547941 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.110795961 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.188273291 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.13571419 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.145569476 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.093334052 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.083369952 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.119729638 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.250797082 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.107042818 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.125037876 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.081701582 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.10738068 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.143224986 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.09664728 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.110445857 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.111432697 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.17084554 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.206885797 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.108916645 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.122046595 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.092336646 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.098293726 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144441118 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.163761287 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.07700915 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.097498158 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.186654889 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.120461774 seconds)
  done (took 5.189643932 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.198377759 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.11615922 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.191047798 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.178530065 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.14700111 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.165764631 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117687385 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.265624809 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.281316578 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.177764084 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114080126 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.112560818 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.077613578 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.096467636 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.077515662 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.671813706 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.179689383 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.148541778 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.124166309 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102073345 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.081478569 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.380737772 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102355043 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.082635406 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.104295723 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.073826303 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.176178794 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10277017 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.289826615 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.118490845 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.088393012 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134359976 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.215328395 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.115823493 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.140131482 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101519578 seconds)
    (37/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.16565815 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.080344682 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.234456266 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.091188365 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.096469151 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.107027497 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133321735 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.132109392 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.097657138 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.092472386 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.23831314 seconds)
    (48/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.082476909 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.096943779 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.101539223 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.079734945 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.200511461 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.095508774 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.096662577 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.353238225 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.11682625 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084176087 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.098396484 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.283884149 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.13208822 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.081921963 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.076784188 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102260616 seconds)
    (64/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.098282384 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.078138626 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.400038991 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.107158616 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.924703688 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.082788527 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.157925336 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099467373 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.104734658 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083792845 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102021625 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.100322427 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.096873063 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.07753938 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.096235284 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.077437778 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.101224231 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.112164137 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.084334435 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.095900739 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.146510389 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.114174721 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.115838186 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109813251 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.099405298 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.077734633 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.12840664 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096054681 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.081988887 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.145702095 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.102985148 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.1139921 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083909897 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142664394 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.095812535 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.178503986 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.084981663 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.096925618 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.107645943 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100535546 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128891174 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.12085542 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07918454 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101709345 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.076973548 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.097235955 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.145473704 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.094787253 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.079925771 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.099554295 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.092626691 seconds)
  done (took 23.627822807 seconds)
done (took 49.085498887 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.459438648 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.093750664 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.112935721 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.111834218 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.110996165 seconds)
  done (took 1.620240849 seconds)
done (took 2.326736473 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.334913349 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.189702176 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.101646759 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.195860505 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.087571042 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.203749642 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.165258543 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.117393683 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.196491492 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.099324239 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.175558029 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.098713633 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087875965 seconds)
  done (took 2.786026061 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093991551 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117322601 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081864472 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111429073 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076420324 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111299161 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092994988 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.136870176 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.091641532 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.103691688 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.076290363 seconds)
  done (took 1.797122863 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.089702041 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114597605 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082316936 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.10814594 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077248724 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.090525377 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.10916533 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117835032 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.091908885 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.104669088 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.077224707 seconds)
  done (took 1.767907619 seconds)
done (took 7.047724676 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.045065937 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.27828462 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.118343873 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.165103287 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.337632821 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.209283458 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.519993224 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.131631645 seconds)
  done (took 11.690466964 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.131482744 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.101233656 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.080152077 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.099516733 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.080451675 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.098802219 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.08155714 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.096352125 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.081528639 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.096956148 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.078445679 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.097360725 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.078671781 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.094922089 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.07949309 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.096299019 seconds)
  done (took 2.240004467 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.11661336 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.116413993 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.102805579 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.106846493 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.083628078 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.100459657 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.085919063 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.101436688 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.082514006 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.099102023 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.105871774 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.088200566 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.103759183 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.082570221 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.102177521 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.09065857 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.098822057 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.101791115 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.087208514 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.102692564 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.089528536 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.099340702 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.103394704 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.088789757 seconds)
  done (took 3.155993202 seconds)
done (took 17.790986373 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.167620685 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083807887 seconds)
  done (took 0.958423641 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.100431952 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.118815638 seconds)
  done (took 0.933762277 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.106432884 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.096267048 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.134242676 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.113423062 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.081369704 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.096833743 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.112684657 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.097367342 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.080271916 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.097602563 seconds)
  done (took 1.73255714 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.084494555 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.100788771 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.088487236 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.117939589 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.107829523 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.08268905 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.101496327 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.084461658 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.103072889 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.079126458 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.105165946 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.116022683 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.08720965 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.117793734 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.085694092 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.103198912 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.10634164 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.084837028 seconds)
  done (took 2.474069847 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.080295718 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.082225786 seconds)
  done (took 0.882972816 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.083159897 seconds)
    (2/7) benchmarking "second"...
    done (took 0.095060858 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082990188 seconds)
    (4/7) benchmarking "year"...
    done (took 0.098891282 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.078566797 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.095591211 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.079012052 seconds)
  done (took 1.332579032 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.505790705 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.256762093 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.333066134 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.097089458 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.150933995 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.366503878 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.134422857 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.112207224 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.112792938 seconds)
  done (took 2.829936714 seconds)
done (took 11.858494846 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.091250185 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.187318359 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.541327404 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.117508395 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.078496835 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.158116184 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.262059458 seconds)
done (took 2.15488756 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.358574077 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.123790234 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.090179707 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.081152689 seconds)
  done (took 1.371406333 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079071025 seconds)
    (2/2) benchmarking "read"...
    done (took 0.103533827 seconds)
  done (took 0.906161083 seconds)
done (took 3.003205316 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078671201 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.130981255 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.078252151 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.094681782 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.078321101 seconds)
    (6/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.093900704 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.075945948 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.075421307 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.096620901 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.07896839 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.095054544 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.078514094 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094405148 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.075573154 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075749687 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095252442 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.075445178 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092188786 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.076441782 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092221918 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.078481354 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094181101 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.076114573 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.076504381 seconds)
  done (took 2.81475831 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.217664361 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.09653732 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.084657401 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.100170175 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.083299213 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.101145999 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.10031849 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.079001837 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.1010689 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.080672916 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099680304 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.0830045 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.097147202 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.083022926 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097851432 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.099525546 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.084359602 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09644964 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080649297 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.100170184 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.084432306 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095639523 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.083097066 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.100949877 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.099323854 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.082984944 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.097127022 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.079222523 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101374343 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.082927181 seconds)
  done (took 3.600718194 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.087053966 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.076913401 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.093038612 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.088032768 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.092956278 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.080266756 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.09305067 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.076966604 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.094525558 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.07649078 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.095312486 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.076181032 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.09354156 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.078179318 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.077076631 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.101652066 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.111878931 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.0771147 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.076646945 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.09542255 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.08286508 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.092805463 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.079695276 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.094067887 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.076395251 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.093333919 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.078212749 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.076322054 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.094344745 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.076551847 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.098656841 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.083278976 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.093516935 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.090308103 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.100214045 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.076695042 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.102967234 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.077009857 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.094443435 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.07603479 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.093231313 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.077298599 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.076707362 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.106465011 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.079527398 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.094189102 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.077156405 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.09480974 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.078099186 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.097165188 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.075718571 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.093120999 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.0792237 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.094566987 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.08287774 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.075911194 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.094053973 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.075858531 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095240515 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.076435314 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.09318288 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.075774834 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.100265419 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.07698353 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.117396632 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.088356476 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.093636051 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.077977553 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.097834824 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.084452228 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.095533645 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.095733501 seconds)
  done (took 7.024695155 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.08166021 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104139191 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079134385 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.09549356 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074561173 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.077331447 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.101498236 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094256833 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079191075 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.112101953 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077462013 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.095426519 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079096157 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.097695043 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077162325 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.095603065 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.087611148 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091869788 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.077497503 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.097417623 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078278295 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.10038856 seconds)
  done (took 2.687519926 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.223126228 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.1037833 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.142309474 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.113564245 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096416468 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.111984801 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.100832241 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086567377 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101468458 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088531003 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104562298 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084366448 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.114814384 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103165981 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086635815 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.105572498 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101716678 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.08832684 seconds)
  done (took 2.688837452 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.093173438 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.097145463 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.104546106 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.09674279 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.080498183 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.100399385 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086609526 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.112489867 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.099312033 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.079876511 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.107600539 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082950337 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.099783399 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0800384 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099885594 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080120652 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.09948023 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08054571 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106904157 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103542803 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086857201 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.108226299 seconds)
  done (took 2.823556197 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096908427 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099194634 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.110385677 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.101033634 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.075862255 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.096944607 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.086708549 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.096376746 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.105659041 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.082319681 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096877146 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.079072238 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.104438481 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.080383672 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.103300812 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080702672 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.099869644 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.080572015 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099638058 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.075730512 seconds)
  done (took 2.585568043 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.124464228 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113950952 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.096279496 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.124326267 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114276909 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.096561666 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.124854507 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.114260336 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.097150686 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.126837412 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.096465037 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.114478337 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.125363406 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.104097136 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.114136125 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.125790903 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.10759285 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.124857854 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.11386142 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.096459776 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.126266913 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.114122442 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108627613 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.114030534 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.096569822 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.116121311 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114475761 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.103554879 seconds)
  done (took 3.888574219 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079967863 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.079981424 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.095565858 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.079278823 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.094763676 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.077215557 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.094782758 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.078030852 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.079859921 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.094798897 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.079887597 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.097349707 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.0795954 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.096978833 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.080790565 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.096691538 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079821707 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.07809655 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095823964 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07814974 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.098057934 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080042653 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.097168816 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.077613014 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078006541 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.09732032 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077793623 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.094353271 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079422144 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.094424797 seconds)
  done (took 3.332288852 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.088835322 seconds)
    (2/2) benchmarking "in"...
    done (took 0.103040439 seconds)
  done (took 0.929988269 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.078746771 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114954375 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.077150871 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.100901398 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086372161 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.09831789 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.09066871 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104416707 seconds)
  done (took 1.490551941 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.104758257 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.118583834 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.086796878 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.109264644 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.099550298 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.116428278 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.165960924 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.086112539 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.105321211 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.081553205 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.117728918 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.08053394 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.108502598 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103666366 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.090382026 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.114035337 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.079449287 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.108043831 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.089003567 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.101119959 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08688193 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115511072 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.092777264 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.106919415 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.083434058 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.111035833 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.113030716 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.093708466 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.104851202 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.093430452 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.105738988 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.075623938 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.103525109 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.086839542 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.096743523 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.099744476 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115677242 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086677181 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.108689586 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104901746 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.092203551 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.094203395 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.092474583 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.106349565 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096491826 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.105251799 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.087272938 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.094554912 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.082493889 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.102219358 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.077257013 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102602301 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.076101214 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107722299 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.091176642 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.117507239 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.084652091 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.103508745 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.086843493 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.10219429 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.089256803 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.103325342 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.108968361 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.085543908 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108555913 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.091233249 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106390695 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.076935039 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.092849721 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.079620722 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.107202455 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106343802 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.110104081 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.087282016 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104909137 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.079540702 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104962442 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087169181 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106925196 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.109790653 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.086686808 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106195223 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09232615 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102266387 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.085621493 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.106593429 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.083455943 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.102391276 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.081732471 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118936624 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.084173608 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.096687844 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.082043365 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.110776703 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.086257805 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.102821705 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.084533846 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108903862 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.076180739 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.104720335 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088235138 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105491465 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.094056608 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10493836 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10456366 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.090414452 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.111187952 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087367227 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.102102541 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.078837749 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106145662 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.08328079 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.108058403 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.076265258 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.104660989 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.087100466 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.104243726 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.092886502 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.10178923 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.087727103 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.11071126 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.093830705 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.100883322 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.078978845 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.104022582 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.086681779 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10830571 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.093360614 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.102103423 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.076981456 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.094696105 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.09012842 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.10348055 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.088530646 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105745756 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.086696748 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.093837341 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.079864164 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.104612227 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.093543036 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.102664624 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.105343556 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.092030985 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.106600408 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.085164123 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.109401617 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.084430993 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.099944176 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.092030132 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.10417643 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.077834057 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108499855 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.087173675 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.101857397 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.086918853 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.1081978 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.086013624 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.105095523 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084506571 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.104447846 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086980121 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.09916389 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087235836 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.102161484 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.102344775 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.104461464 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.077036092 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.096732487 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.088574331 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.100584366 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.085827447 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.099731172 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.086727342 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.106040302 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.080122097 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.102546497 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.085796303 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.116479498 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.094338719 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105208409 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.108422811 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.094187985 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.104152524 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.08930333 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.103683565 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089315474 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.104120493 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.091223333 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.106664111 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087594368 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.10362189 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.078956182 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106148617 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092213567 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.099658439 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.080180251 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.099388723 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.086912879 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.1114345 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.087287641 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.105556429 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085196454 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.106797642 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.091280908 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.103714221 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.086002622 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.099716787 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.087348488 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.10889347 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.087884309 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106239089 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.094032776 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106045947 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.077817974 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.108378314 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084024606 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.107997351 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.077838443 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.100607921 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.083217534 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.10610433 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.084752018 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.103867249 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.077229957 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109798498 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.093189232 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.105853784 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.082841929 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.105178759 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.11382105 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.085270077 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.108910216 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.087506177 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.107213443 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.101811953 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.101138528 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.086927006 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.11281413 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.087899927 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.09468447 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.090410044 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.102313048 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.082523226 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.103209393 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.084801915 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105462856 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.090069009 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.106799022 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.076804981 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.10349999 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.085120752 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.100616496 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.079052861 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.109632597 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.091791399 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.104907565 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096419388 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105734161 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.088250692 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.10739295 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.085711735 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.10630205 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.088360833 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105979817 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.107247473 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.084900612 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.082369235 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.105268511 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.082010383 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.09913904 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.085848001 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.105674966 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.087340183 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106987113 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.084954586 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.109894691 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.105270303 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.088731303 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.123657014 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.101334024 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.083010087 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105352603 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089776619 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.103568834 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.087064598 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.095168919 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092469716 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.104366925 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093536965 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.103878518 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.079200016 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.105408351 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.087586853 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.106356487 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.088708126 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.106421443 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.08555717 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.104182019 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.087740742 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.113706512 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.083875946 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.112358998 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089756732 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.107394148 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.087313858 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.105654867 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.086240345 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.100308075 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.086525215 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.106188254 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.087378712 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.104736593 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.088486396 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.106366739 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.10428544 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085995392 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.105967633 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.088699922 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.107527317 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.078128627 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.082502058 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.102151037 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.087187418 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109936924 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.105964378 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.085801148 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.084932278 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10720524 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.085311761 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.097928152 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.091453512 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.108253251 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.088181112 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114710416 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.100896534 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.088300682 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115541342 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.077524063 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.1027544 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.081272382 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.101805344 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093840939 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.105498523 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.09400138 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.105843162 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.084143526 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.097958259 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.08904 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.102671395 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.078056201 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.0990693 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.091908575 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.102398558 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08568145 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.087818641 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.108372601 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106616141 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092253108 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.103780987 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.088269085 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.106279791 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.081371501 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.101949186 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.08407383 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.105651653 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.090261 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.102242082 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.080806813 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.08699228 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.106617179 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.105987927 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.087398743 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.086389217 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.112131515 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105298955 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.088377825 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110669307 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.07855171 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.106908455 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.087610245 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.105348077 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.084796678 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.10649779 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089608773 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107577698 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.093090394 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.105168515 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091081315 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105467874 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.081711749 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.105397188 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.087994419 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.106369884 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.084327291 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.107284864 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095173565 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.099071602 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.088927524 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.106431038 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.085746033 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.107115034 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.089941456 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.106274808 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.092397535 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.107388551 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.088087429 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.109928313 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.088245322 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107873499 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088669667 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.104645408 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092013236 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.103176241 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.112449978 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.089459112 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.106870572 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.087194742 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.101632639 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.088381211 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.086358009 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104893206 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.112135632 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.089143835 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.101569015 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.084588074 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.080494819 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.106121448 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109611662 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095025127 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.105912026 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089982321 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.097643942 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.081259665 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107254957 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.084678756 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.103725464 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.091747117 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109918188 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.089017025 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.103053296 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.086596126 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.110908617 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093299327 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.108469038 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.084777073 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.10884726 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.089189792 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.106808012 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.085032848 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.106002305 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.090253121 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.108608659 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.086375812 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.103135829 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115011564 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.094172442 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.107143082 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.088072654 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.109208243 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.087893038 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.097617358 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.090413528 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.106105366 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091318133 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.106716768 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088007657 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116979857 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.082836684 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.105036604 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.093134528 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.105886072 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.111550628 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.080210206 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.089311905 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108791821 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107569333 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.080329111 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.083632487 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.103829602 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.08865516 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.103580308 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.080027841 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116902952 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.112309165 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.089715829 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105119992 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087099804 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.097837531 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.080012981 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.083965547 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109909989 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.086595321 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.115455123 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.101522735 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.084248698 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.078850464 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10696304 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088739588 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.109741646 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.081257357 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.098870004 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.084913094 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.107588815 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.113926778 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.088291719 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.105754164 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090790998 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.106319801 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.082656372 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.110828764 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.080604526 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.107660369 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099697178 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.107378256 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.091096001 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.11034717 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094438696 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.108828866 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.079713598 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.107553512 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.089495093 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.107614602 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.0900871 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.110238402 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.122270036 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089866221 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.102341925 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.087717255 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.106713907 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.085397448 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.11434029 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.091200495 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.107915913 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.091685694 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.104834882 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.091265477 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.113868341 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090803694 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.107998041 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.088019407 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.107040848 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.0875637 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.10630368 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.087027436 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.110040304 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.089235413 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.107824565 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.090673747 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.103786421 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117185535 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.095917008 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.109631756 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.08190468 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.102398415 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.085422429 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.079822418 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.110033577 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.081676059 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.106355893 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.085575785 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.105803885 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.090871806 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108637884 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.088154966 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.109458074 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.088139519 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.097469598 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.092545022 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.107521763 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.08998542 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.099788374 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.089537674 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.111201204 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.112353633 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.093780314 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.104045616 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.089027418 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.105648634 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.092758792 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.097971856 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.091816553 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105053682 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.087915953 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.103040845 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.089093817 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.10794085 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091655391 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108789856 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.091605978 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.106917309 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.09411357 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.109531941 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.082324853 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.100170391 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.092681558 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.100898106 seconds)
  done (took 58.599514633 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.149878747 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086936548 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.097836312 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080348954 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.124762215 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081833334 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098339816 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.081540216 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.099829668 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.09447902 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.09972883 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080058034 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.120199827 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.126393042 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.123425398 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.113022066 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079939566 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099012215 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.080298929 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098657207 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.101682167 seconds)
  done (took 2.901548136 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.104763167 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.117204115 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.115266274 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101436654 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10981067 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.116344421 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.096276238 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11710653 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.119728873 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110862072 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.102169812 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117676593 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.110520329 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.093194756 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.1111879 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113263636 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.102061945 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.109052749 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.117042561 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.096866157 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.114134757 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.115636086 seconds)
  done (took 3.198667571 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.093255357 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.08781705 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.111937218 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.082177834 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.106318987 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.083438037 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.111641968 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.084852565 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.11200227 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.088498549 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.104572642 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.08950784 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.112244214 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.082479046 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.105697444 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.085195989 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.111083687 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.088554275 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.108233086 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.082995272 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.127745313 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.101066815 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.083600471 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.085830245 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.117128265 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.088006559 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.107562364 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.087734544 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.104474939 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.08805113 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.10400433 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.090083068 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.110166501 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.085195864 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.104906807 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.088931634 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.107607049 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.082925811 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.103773294 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.092790822 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.101797477 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.089746416 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.113930758 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.085466703 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.103438211 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.091546124 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.10683431 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.083408866 seconds)
  done (took 5.458676105 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.123069743 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.157796555 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.092994589 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.155172192 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.127364377 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.11792338 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.093193049 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.147970966 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.106038355 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.088325736 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.12552701 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.123545064 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.090751019 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.116671616 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.092510294 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.109645499 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.111550967 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.093420931 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.117877875 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.088919591 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.116509187 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.112139614 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.103257516 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.120463213 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.112005073 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.088141485 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.107191918 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.097482994 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.11969007 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.113548641 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.09490881 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.118550518 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.127133109 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.092785085 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.110796278 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.110284363 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.105702466 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.108631902 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091344866 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.10651372 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.110434259 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.097728891 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.111691671 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.124048152 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.090990956 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.10945615 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.092643539 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.109822103 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.124401892 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.09553349 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.117375776 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.121433572 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.094673987 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.108459138 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.094363076 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.125666729 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.108422607 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.088285895 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.111749176 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.11903843 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.088998022 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.118198174 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.108511242 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.113532232 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.11643935 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.104064604 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.111532617 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.112234998 seconds)
  done (took 8.402474378 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.096272531 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.132225063 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.125247547 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106225515 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.113938433 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.112857048 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.09613675 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.113029152 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.094783151 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.120618193 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.113496987 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.164018223 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.088306727 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.119142954 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.094397687 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.114478784 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.112993457 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.094197134 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.113921224 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.094714511 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.113962767 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.123924337 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.093904431 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.124546046 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.12569896 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.105983815 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.095362019 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.113097178 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.105697515 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.114643734 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.125018362 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.112954377 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.095326091 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.123934792 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.126976447 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.09429073 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103748309 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093743882 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.113085223 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.112678351 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.088578151 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.124393382 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.093684413 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.107628327 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.11282881 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.094653672 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.125139469 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.126335014 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.119262003 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.102358426 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.11440278 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.125591751 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.095566652 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.114750377 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.124038785 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.132714196 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.105887451 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.125097369 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.113621051 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.10556046 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.125828678 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.132211317 seconds)
  done (took 7.747745557 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086270641 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.084757114 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.102868886 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.083393942 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.10465147 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084252076 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.104595556 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.086519886 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085147896 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.105482179 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085124923 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10204063 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0835045 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.1044682 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.084655657 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101848428 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084754258 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.082610703 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104627715 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.083627831 seconds)
  done (took 2.645538458 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.094539313 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.124760455 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.08711116 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.113190465 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.08904991 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.113605405 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.106684396 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089568985 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105370355 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090171418 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.117256961 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.098438023 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107005335 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.112245334 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.099374891 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.112894326 seconds)
  done (took 2.465680096 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.107170167 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.11893972 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.13153249 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.092625783 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.104252845 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.094729091 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.105771976 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.08280887 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.101855903 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.094922441 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.111929223 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.097447211 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.105970511 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.085658825 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.105622416 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.092449134 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101001451 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.091622912 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.105104346 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.112835496 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.111511379 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.108052495 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.088293158 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.108508097 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.089431616 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.110375993 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.093994128 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.105508672 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.084905366 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.105881101 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.089700687 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.11394715 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.08211775 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.111217364 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.084617452 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.102875707 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.086747588 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.105788844 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.092190627 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.107655519 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.084018887 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.109071931 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085552213 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.108659314 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.08138197 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.107806068 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.081777192 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.113748634 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.087714972 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.109642265 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.10443505 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.096060118 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.112941416 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.099326382 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.116992259 seconds)
  done (took 6.331270867 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.10154763 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109674027 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.091715094 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.102765197 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.089756468 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.114812638 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.090758037 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.108007431 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089379018 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.103400865 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.089105445 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.109798085 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088957102 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.110331634 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.088961787 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109787645 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081986764 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107562103 seconds)
  done (took 2.595570337 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.092090354 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105118226 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.094916671 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.10562327 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.086382664 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.087403322 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102731515 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.08469334 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104570868 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086471932 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106077436 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.088651227 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103838923 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.088586461 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106175282 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086885085 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.107730487 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085152758 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.105590697 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.082984756 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.107989188 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.086020564 seconds)
  done (took 2.914402115 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.10623658 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.139489651 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.100575375 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.149702333 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.110886324 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.090439067 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.121457809 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.091033714 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.129649411 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.109814982 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.090882518 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.109613221 seconds)
  done (took 2.162599601 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113025023 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144397703 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.084491651 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110145094 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119124243 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091983099 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111531331 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091723414 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123757053 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124710118 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091513227 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124645155 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123781304 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121644076 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099536929 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119607031 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11045026 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092279664 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106952336 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132640753 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092558411 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123855173 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110271759 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092730784 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111423652 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122355321 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104447192 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124890704 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111484956 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104384586 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121085186 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110883173 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104775637 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125318859 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108630444 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124492478 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092904736 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133675587 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118819165 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103292264 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.1101624 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119561216 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103901196 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12014255 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123562951 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092302112 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119713425 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111771689 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093846642 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139794763 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120046013 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122364224 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100335449 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125376241 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124478194 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.14052358 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125198703 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122511755 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100292801 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125051305 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122783913 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120461313 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103904518 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125874274 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119393182 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123660801 seconds)
  done (took 8.348759758 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127520219 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105959691 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091743793 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126794477 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123837778 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111802329 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092685724 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112451571 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091793457 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10908653 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.158989144 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111899519 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103899028 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123057809 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112015368 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093132945 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111891339 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123290288 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089463709 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139903959 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112208779 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123174628 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103962428 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123637985 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124666809 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119288908 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093560019 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111933564 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09276906 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113233752 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118724653 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093525751 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123454304 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105057887 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103668546 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112740076 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091803059 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120187731 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112324598 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100401126 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124146688 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13295569 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112215357 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092476406 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12660837 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112258353 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092362148 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108731022 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092202675 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109190909 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125709632 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125796483 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104810515 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12361426 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112830856 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092721761 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112757681 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111905715 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093028211 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1193146 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122512217 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093154142 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141059847 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112386414 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093322969 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124360751 seconds)
  done (took 8.19134232 seconds)
done (took 156.551035849 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.105837845 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.144192427 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.101789071 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.170893441 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.087602287 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.142786811 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.120587097 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.123865811 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.087133302 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.107629873 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.087705232 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.110809174 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.153282865 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.10739539 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.088214149 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.109885102 seconds)
  done (took 2.663808179 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.181229738 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.285091107 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.106380379 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.113064448 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.093878612 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.11079702 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.09189575 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.114727089 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.08874099 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.121266751 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.108480032 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.091408912 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.120876203 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.090509756 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.109052407 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.0906395 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.12096411 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.090093187 seconds)
  done (took 2.951201294 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.113369533 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.156337038 seconds)
  done (took 1.094166835 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.125147915 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.186694708 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.305577513 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.164462288 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.118706791 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.130609799 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.165114843 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.127276297 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.195457468 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.129292331 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.109446677 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.115665305 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.139204243 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.101193425 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.11813124 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.094325282 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.142369374 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.117193303 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.09783514 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.116234888 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.115398435 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.116322743 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.119381199 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.097866947 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.184394966 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.130105646 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.094327542 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.116947923 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.115881966 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.097473822 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.120100073 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.128003811 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.109508324 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.191027406 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.099716406 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.185999944 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.102452072 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.11498447 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.095501703 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.115130541 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.117781792 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.098374969 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.130927053 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.093864747 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.117129492 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.122493409 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.096769108 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.115313182 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.102259475 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.125004593 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.12180477 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.100317228 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.186615116 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.103085397 seconds)
  done (took 7.702829404 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.834927081 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.160334829 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.115016733 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.943524441 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.146473442 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.128933387 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.836168621 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.1156146 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.267827003 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.067491387 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.133253267 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.128688652 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.234082322 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.259186842 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.15329809 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.34288913 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.714420166 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.128033576 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.122600002 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.156919829 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121284743 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.142927295 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.112890905 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.445702339 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.116273437 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.091966683 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.124922072 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.127714208 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.166844568 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.113052672 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.097133758 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.206292792 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.271926483 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.185866563 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.115132049 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.091407505 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.114207252 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.174204041 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.271881485 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.222350853 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.180005756 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089116519 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.112725064 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.104975498 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.134706896 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.108597258 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.17153096 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.179008477 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.198717479 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.096798793 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.126586668 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.101488626 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.12527477 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.166569645 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.112296501 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.340050293 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.346659745 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.092861014 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123029538 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.111175816 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.268952182 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.114104779 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.206394565 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.141475843 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.217886599 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.091418536 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.790109865 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.172250634 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.113398984 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.12159764 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.099923788 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119063779 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.103653083 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.175086229 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.388917264 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129451671 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.117349198 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091745293 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.231482915 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.092480858 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112864984 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.170378148 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.113184285 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.101004598 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.12954954 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.125945057 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.177798676 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.250249896 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.128589545 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.100304746 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.119786922 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125500026 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.094578284 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.220189142 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.224912904 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.184120559 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.221626512 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.126509437 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.172424184 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.171283377 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.125290826 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.177106118 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120794591 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.130966986 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.105463747 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.219697645 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.147330015 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.092205159 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.119156828 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.120345911 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.149789802 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.097329029 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.12072638 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.176571756 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.473504443 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.193488475 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.089722586 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.116603973 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100996871 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.166683976 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121679459 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267167443 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101597606 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.19618476 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.100142699 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.111304373 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.100016054 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.191528492 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.106203339 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123135415 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.127032261 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.10003455 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.278588471 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.203287157 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.129579623 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.242201128 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.184755109 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.10229394 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.2011738 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.101304407 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.196050047 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.103180689 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.125474891 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09398906 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.784087663 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.127720015 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121555459 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09912243 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.19967556 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.113416956 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.095380517 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.091590127 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.112047134 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.810755551 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.09690938 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.110554561 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.095064672 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.123769404 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.100964283 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121187132 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.096801832 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.19083353 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.238807055 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.105970065 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.122069487 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.092136317 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.189157192 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.095261599 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.115689291 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.093510519 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.11437798 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.102986685 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.118753954 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.095009711 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.199614012 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.165546005 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.226090981 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.532787907 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.114733386 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.094198528 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.236326612 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113323601 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.289317901 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122764404 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.231730007 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.173905993 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.111447626 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.340471708 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.176957372 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.198910128 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.096391998 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.198789477 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090789319 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.120802197 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.169099114 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.092369898 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122313744 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.16530567 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.13173153 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.128262268 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.137241141 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.114836175 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.23483282 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.11178245 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.17668433 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.115237171 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10524343 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.313179808 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.113662767 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.113770896 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.188148358 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.098552026 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.114040489 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.790458162 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.114551947 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.104288732 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.12455076 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.227714305 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.174055245 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121680467 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.100939954 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.128447836 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.169562347 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.236497756 seconds)
  done (took 45.523462194 seconds)
done (took 60.755027039 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.309167015 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.273400057 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.311284114 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.202783975 seconds)
  done (took 2.023574417 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.184187655 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.159201736 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.130717943 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.114077073 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.160036243 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.091660893 seconds)
  done (took 1.691546839 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.491752935 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.381754274 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.348096895 seconds)
  done (took 2.075526571 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.267680973 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.290878855 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.364828784 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.456330377 seconds)
  done (took 2.338887295 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.211604764 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.129249256 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.105423113 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.143655372 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.177141373 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.182204623 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.147910414 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.156773684 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.133672981 seconds)
  done (took 2.290023404 seconds)
done (took 11.273133541 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.232936685 seconds)
    (2/224) benchmarking ("map", abs, Int64, true)...
    done (took 0.281140746 seconds)
    (3/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.169694414 seconds)
    (4/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.171327894 seconds)
    (5/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.264598318 seconds)
    (6/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.246043714 seconds)
    (7/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.173202102 seconds)
    (8/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.272619362 seconds)
    (9/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.119706673 seconds)
    (10/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.095770856 seconds)
    (11/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.182804851 seconds)
    (12/224) benchmarking ("map", abs, Bool, false)...
    done (took 0.185916262 seconds)
    (13/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.127811488 seconds)
    (14/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.125918945 seconds)
    (15/224) benchmarking ("map", abs, BigInt, true)...
    done (took 0.216528254 seconds)
    (16/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.152614365 seconds)
    (17/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.148358409 seconds)
    (18/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.227050056 seconds)
    (19/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.113424319 seconds)
    (20/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.23572202 seconds)
    (21/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.201098805 seconds)
    (22/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.165150551 seconds)
    (23/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.121033148 seconds)
    (24/224) benchmarking ("map", identity, Float64, false)...
    done (took 0.18692721 seconds)
    (25/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.214394602 seconds)
    (26/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.212151126 seconds)
    (27/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.196943669 seconds)
    (28/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.111240207 seconds)
    (29/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.224481757 seconds)
    (30/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.123109434 seconds)
    (31/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.195271306 seconds)
    (32/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.19126266 seconds)
    (33/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.209497358 seconds)
    (34/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.161309073 seconds)
    (35/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.091785006 seconds)
    (36/224) benchmarking ("perf_sum", Bool, true)...
    done (took 0.130215948 seconds)
    (37/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.22793469 seconds)
    (38/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.265858763 seconds)
    (39/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.272737247 seconds)
    (40/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.120301666 seconds)
    (41/224) benchmarking ("map", identity, BigInt, false)...
    done (took 0.133403925 seconds)
    (42/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.120902435 seconds)
    (43/224) benchmarking ("map", identity, Bool, true)...
    done (took 0.142787387 seconds)
    (44/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.14512985 seconds)
    (45/224) benchmarking ("perf_countequals", "Int8")...
    done (took 0.125382814 seconds)
    (46/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.121389812 seconds)
    (47/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.120240754 seconds)
    (48/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.090116695 seconds)
    (49/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.234242699 seconds)
    (50/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.134099598 seconds)
    (51/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.20268032 seconds)
    (52/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.09907903 seconds)
    (53/224) benchmarking ("perf_sum", Bool, false)...
    done (took 0.117279055 seconds)
    (54/224) benchmarking ("map", identity, Int8, false)...
    done (took 0.158411736 seconds)
    (55/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.172652617 seconds)
    (56/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.133712336 seconds)
    (57/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.146218994 seconds)
    (58/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.080391327 seconds)
    (59/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.181712306 seconds)
    (60/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.140703464 seconds)
    (61/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.080655664 seconds)
    (62/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.138397031 seconds)
    (63/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.225690426 seconds)
    (64/224) benchmarking ("map", abs, Float64, false)...
    done (took 0.136958931 seconds)
    (65/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.102274009 seconds)
    (66/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.098407658 seconds)
    (67/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.100672763 seconds)
    (68/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.103985681 seconds)
    (69/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.151507277 seconds)
    (70/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.078779137 seconds)
    (71/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.139861807 seconds)
    (72/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.224403025 seconds)
    (73/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.113802458 seconds)
    (74/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.106846334 seconds)
    (75/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.140931278 seconds)
    (76/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.095214981 seconds)
    (77/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.101484948 seconds)
    (78/224) benchmarking ("map", identity, Int8, true)...
    done (took 0.087494516 seconds)
    (79/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.14245403 seconds)
    (80/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.125998134 seconds)
    (81/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.161449147 seconds)
    (82/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.194041385 seconds)
    (83/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.204400625 seconds)
    (84/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.126283709 seconds)
    (85/224) benchmarking ("perf_countequals", "Float32")...
    done (took 0.129816018 seconds)
    (86/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.116882337 seconds)
    (87/224) benchmarking ("perf_sum", Float32, true)...
    done (took 0.11056638 seconds)
    (88/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.101373766 seconds)
    (89/224) benchmarking ("perf_sum", Float64, true)...
    done (took 0.108666694 seconds)
    (90/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.197882626 seconds)
    (91/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.180518722 seconds)
    (92/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.202903782 seconds)
    (93/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.099599614 seconds)
    (94/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.101754798 seconds)
    (95/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.121476279 seconds)
    (96/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.104182829 seconds)
    (97/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.099007237 seconds)
    (98/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.198827625 seconds)
    (99/224) benchmarking ("perf_countequals", "Int64")...
    done (took 0.127402153 seconds)
    (100/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.098366277 seconds)
    (101/224) benchmarking ("perf_countequals", "Bool")...
    done (took 0.127694666 seconds)
    (102/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.079923779 seconds)
    (103/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.113413965 seconds)
    (104/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.110210473 seconds)
    (105/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.12115871 seconds)
    (106/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.104194161 seconds)
    (107/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.102889989 seconds)
    (108/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.090320233 seconds)
    (109/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.114049003 seconds)
    (110/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.096571648 seconds)
    (111/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.103490514 seconds)
    (112/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.110792845 seconds)
    (113/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.116075025 seconds)
    (114/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.22632609 seconds)
    (115/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.100169982 seconds)
    (116/224) benchmarking ("map", abs, Bool, true)...
    done (took 0.108428033 seconds)
    (117/224) benchmarking ("map", abs, Float32, false)...
    done (took 0.139692061 seconds)
    (118/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.143041927 seconds)
    (119/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.081035993 seconds)
    (120/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.101955401 seconds)
    (121/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.196844521 seconds)
    (122/224) benchmarking ("map", identity, Float64, true)...
    done (took 0.088543227 seconds)
    (123/224) benchmarking ("perf_sum", Int64, true)...
    done (took 0.12872201 seconds)
    (124/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.081627284 seconds)
    (125/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.079227711 seconds)
    (126/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.102566675 seconds)
    (127/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.212108603 seconds)
    (128/224) benchmarking ("map", identity, Float32, false)...
    done (took 0.136506489 seconds)
    (129/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.13207084 seconds)
    (130/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.089915427 seconds)
    (131/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.101956146 seconds)
    (132/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.120942575 seconds)
    (133/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.119005712 seconds)
    (134/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.096073387 seconds)
    (135/224) benchmarking ("map", abs, Int8, false)...
    done (took 0.159183663 seconds)
    (136/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.196694796 seconds)
    (137/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.209040272 seconds)
    (138/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.081453216 seconds)
    (139/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.125554453 seconds)
    (140/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.080587181 seconds)
    (141/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.102172913 seconds)
    (142/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.172496571 seconds)
    (143/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.118536645 seconds)
    (144/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.131695408 seconds)
    (145/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.080258663 seconds)
    (146/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.09582444 seconds)
    (147/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.122852799 seconds)
    (148/224) benchmarking ("map", identity, Int64, true)...
    done (took 0.165306975 seconds)
    (149/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.080707077 seconds)
    (150/224) benchmarking ("perf_sum", Float32, false)...
    done (took 0.119990526 seconds)
    (151/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.080569485 seconds)
    (152/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.079096787 seconds)
    (153/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.103283888 seconds)
    (154/224) benchmarking ("perf_sum", Int8, true)...
    done (took 0.148816877 seconds)
    (155/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.119890198 seconds)
    (156/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.121770994 seconds)
    (157/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.080260946 seconds)
    (158/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.135248693 seconds)
    (159/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.108401139 seconds)
    (160/224) benchmarking ("perf_countequals", "Float64")...
    done (took 0.128591647 seconds)
    (161/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.080040075 seconds)
    (162/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.117293562 seconds)
    (163/224) benchmarking ("map", abs, Int64, false)...
    done (took 0.079775144 seconds)
    (164/224) benchmarking ("map", abs, Int8, true)...
    done (took 0.109155259 seconds)
    (165/224) benchmarking ("perf_sum", Int64, false)...
    done (took 0.096124149 seconds)
    (166/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.13242202 seconds)
    (167/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.099521751 seconds)
    (168/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.10270593 seconds)
    (169/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.081235556 seconds)
    (170/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.143528238 seconds)
    (171/224) benchmarking ("map", abs, Float64, true)...
    done (took 0.088855717 seconds)
    (172/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.119167914 seconds)
    (173/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.095522605 seconds)
    (174/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.122669564 seconds)
    (175/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.099134271 seconds)
    (176/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.197005165 seconds)
    (177/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.102065225 seconds)
    (178/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.094174831 seconds)
    (179/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.079001663 seconds)
    (180/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.127886884 seconds)
    (181/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.095409016 seconds)
    (182/224) benchmarking ("map", abs, Float32, true)...
    done (took 0.112639044 seconds)
    (183/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.128730108 seconds)
    (184/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.103224136 seconds)
    (185/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.098687933 seconds)
    (186/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.102766028 seconds)
    (187/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.080677667 seconds)
    (188/224) benchmarking ("map", identity, Float32, true)...
    done (took 0.110298165 seconds)
    (189/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.093132799 seconds)
    (190/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.10097523 seconds)
    (191/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.096739894 seconds)
    (192/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.117283427 seconds)
    (193/224) benchmarking ("perf_sum", Float64, false)...
    done (took 0.09726741 seconds)
    (194/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.07972024 seconds)
    (195/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.130962203 seconds)
    (196/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.121610615 seconds)
    (197/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.097374098 seconds)
    (198/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.102571966 seconds)
    (199/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.081200883 seconds)
    (200/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.103594191 seconds)
    (201/224) benchmarking ("perf_sum", Int8, false)...
    done (took 0.121340773 seconds)
    (202/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.141564153 seconds)
    (203/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.099658378 seconds)
    (204/224) benchmarking ("map", identity, Int64, false)...
    done (took 0.101983126 seconds)
    (205/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.100084575 seconds)
    (206/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.101085302 seconds)
    (207/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.099975255 seconds)
    (208/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.115286045 seconds)
    (209/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.080690986 seconds)
    (210/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.080498964 seconds)
    (211/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.129883518 seconds)
    (212/224) benchmarking ("map", abs, BigInt, false)...
    done (took 0.079160221 seconds)
    (213/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.115222615 seconds)
    (214/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.110808305 seconds)
    (215/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.104112347 seconds)
    (216/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.096062392 seconds)
    (217/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.115654371 seconds)
    (218/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.080234396 seconds)
    (219/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.119356948 seconds)
    (220/224) benchmarking ("map", identity, BigInt, true)...
    done (took 0.089285832 seconds)
    (221/224) benchmarking ("map", identity, Bool, false)...
    done (took 0.102078426 seconds)
    (222/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.101039574 seconds)
    (223/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.118830282 seconds)
    (224/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.080774457 seconds)
  done (took 30.513669037 seconds)
done (took 31.373384552 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.40614352 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.134089901 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.127156086 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.104263331 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.146300263 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.106870685 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.12808247 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.106316989 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.125840998 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.093828228 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.116890408 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.127347781 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.104580684 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.144626673 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.105356187 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.11960998 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.095879111 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.128247953 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.104271499 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.12951739 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.146809208 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.097362551 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.126042414 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.095933221 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.146767271 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.096317211 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.126839364 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.103771793 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.12655657 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.094591895 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.12929658 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.118204777 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.105944038 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.12946605 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094560089 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.118818003 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09469617 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.108973341 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.096289997 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.119870865 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.103289856 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.118762389 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.10563483 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.118994488 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.098051581 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.117349943 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094511429 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.129320825 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.093555493 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.127914826 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.096407297 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.132238224 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.115987489 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.094147895 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.11653694 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.097901533 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.127194741 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095500961 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.127663303 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095410578 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.1191172 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095207767 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.122555096 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.094538521 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.118849416 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.096472683 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.118245819 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.097729853 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.116855419 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.098074401 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.115894966 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.0967156 seconds)
done (took 9.329887924 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.100827283 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.173198404 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.149470377 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.126924606 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.146653077 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.13280487 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.108440411 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.142677377 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.126528335 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.119191978 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.145631223 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.139588854 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.132867223 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.125610747 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.133214912 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.099251669 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.125100095 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.107054246 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.155108895 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.141221854 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.14901715 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.102956231 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.146541334 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.140013538 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.101901235 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.153775684 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.103294178 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.122853591 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.101180189 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.132717326 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.142781951 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.102602638 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.125541998 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.113714028 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.132682549 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.12309167 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.109980005 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.12151189 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.099971104 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.122420739 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.134764604 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.114990934 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.122300912 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.109567404 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.122381301 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.103864453 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.125334769 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.124033453 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.104500135 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.118826869 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.103680407 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.146910384 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.142150226 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.103026747 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.123819969 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.104159477 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.123744503 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.103417942 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.127461411 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.125397479 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.100770845 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.124382052 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.104215414 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.142658459 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.124768253 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.102656652 seconds)
  done (took 9.059766318 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.118309657 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.156780972 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.132160932 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.111037396 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.129053574 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.092063104 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.114618165 seconds)
  done (took 1.763896077 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.094796445 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.146696718 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.127463153 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.150281687 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.138390112 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.131229284 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.134350139 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.093957075 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.141024359 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.126649606 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.123279038 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.172197246 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.11749636 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.106878155 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.152540046 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.116524169 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.130367928 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.116760561 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.101839307 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.150447391 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.123514818 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.117535095 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.131436021 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.095103308 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.139731966 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.09630986 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.185815233 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.12947289 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.093733097 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.12403362 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.10011162 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.210694663 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.117046889 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.127990761 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.092738811 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.147732418 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.115777211 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.1240327 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.143515413 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.100141154 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.140635078 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.101045828 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.12518098 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.123420179 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.102040126 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.133294686 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.106369734 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.126413394 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.101033752 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.14645305 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.128005032 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.117580918 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.118871634 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.098878016 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.128051883 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.101783101 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.131773678 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.099691005 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.146557302 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.12540168 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.122868065 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.145154551 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.139989975 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.123152064 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.135881361 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.116686215 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.14154 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.123128016 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.102953752 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.125565014 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.122138491 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.121686135 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.10451818 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.134401479 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.126005941 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.123330493 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.145975411 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09911986 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.130993494 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.098514259 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.120924952 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.097122262 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.134360434 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.09815605 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.120710848 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.134350111 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.108187755 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.123242697 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.09937629 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.140196118 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.122607143 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.107857665 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.12932759 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.099267885 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.133504306 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.145946873 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.105376085 seconds)
  done (took 12.905902255 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.097340614 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.095930763 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.127454603 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.119911479 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.098017354 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.096380488 seconds)
  done (took 1.557701891 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.126757577 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.124582716 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.11254113 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.129544572 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.179264862 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.145808327 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.124798311 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.128940598 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.143150852 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.113547979 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.145525555 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.147025238 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.122041435 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.129897362 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.124427708 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.129148628 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.148351871 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.099926883 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.135155347 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.100265953 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.13534469 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.128528837 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.101504763 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.14183082 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.106272107 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.128824824 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.128809185 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.113649539 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.134151338 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.105995928 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.129233154 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.126953966 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.10385211 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.12870823 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.126065744 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.127199109 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.1227583 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.107921519 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.126744409 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.105228694 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.148631731 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.100113454 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.135254865 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.131843235 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.105677883 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.127133508 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.131202727 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.105798145 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.147767083 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.106424142 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.133002994 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.127430259 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.105632999 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.131313925 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.103158287 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.128767589 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.130365116 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.125047912 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.13032148 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.126805995 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.102332608 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.129154558 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.105650615 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.131295246 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.102125125 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.132321799 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.126796461 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.105002312 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12408427 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.104159466 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.131061612 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.125436452 seconds)
  done (took 9.864351327 seconds)
done (took 36.05741501 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.10188522 seconds)
  done (took 2.017232553 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.858418611 seconds)
  done (took 1.775891232 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.79339071 seconds)
  done (took 17.743339552 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.516786442 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.607649555 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.975396007 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.168869729 seconds)
  done (took 3.185064439 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.954242811 seconds)
  done (took 1.890725498 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.316914214 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.26671174 seconds)
  done (took 1.504958486 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.820270124 seconds)
  done (took 1.749834204 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.565632482 seconds)
  done (took 2.491496543 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.357861049 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.204554164 seconds)
  done (took 1.50204986 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.585744592 seconds)
  done (took 1.519946765 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.300815671 seconds)
  done (took 15.236267538 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.235718614 seconds)
  done (took 1.182622009 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.305743267 seconds)
  done (took 1.241192257 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.458843341 seconds)
  done (took 4.393725949 seconds)
done (took 58.355613314 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.106913042 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.133230813 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.110051594 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.129383617 seconds)
  done (took 1.408967767 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.111226001 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.126470412 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.107400862 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.127154259 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.113109499 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.127378631 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.102502552 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.133901567 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.102686159 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.130701031 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.126326599 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.103647826 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.128739642 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.102503843 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.125254044 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.10510284 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.130262793 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.102930272 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.127905494 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.103988576 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.127662073 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.128628047 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.107248562 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.127567818 seconds)
  done (took 3.767153051 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.10743845 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.099724251 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.126774846 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.099522247 seconds)
  done (took 1.372809991 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.111595126 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.142600934 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.117914863 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.134736392 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.142143768 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.118201808 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.124699746 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.100450034 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.125146246 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.110164433 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.125068521 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.118826724 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.142302618 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.120442335 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.113621912 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.117046397 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.096882422 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.141877867 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.110602076 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.135942038 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.099891543 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.134127413 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.107667504 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.138912083 seconds)
  done (took 3.874762026 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.176016258 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.138262954 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.147172025 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.173171367 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.125312564 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.122231873 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.125410382 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.131870696 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.127570584 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.099423817 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.123549844 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.155309313 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.129936592 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.125449567 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.100105574 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.129938597 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.105847423 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.12882391 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.101984578 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.13815024 seconds)
  done (took 3.548897718 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.107340541 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.123873067 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.0962748 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.122323563 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.107843207 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.125604287 seconds)
  done (took 1.63129404 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.096832075 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.094765856 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.119345073 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.094616115 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.124021152 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.095341179 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.117433181 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.095100785 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.094157367 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.119892857 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.094747205 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.117810864 seconds)
  done (took 2.206982253 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.220983224 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.122785189 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.12431501 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.10152421 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.128275286 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.098735619 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.138888404 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.099002229 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.179448438 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.124363577 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.114508415 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.176558507 seconds)
  done (took 2.574933193 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215692369 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104694357 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.279182576 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.378885324 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165410801 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172712339 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.282024759 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.174171314 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.193442725 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143503147 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212483453 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163322676 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136088165 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185565084 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146801912 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.191506547 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180987441 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208169843 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155904967 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.246118876 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172776579 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172860085 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.196856093 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133432289 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144067965 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164281536 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.123864232 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110291207 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17837927 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176170037 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178197636 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154711247 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144471971 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206357061 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244625931 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185010514 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.30692309 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139173454 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.196034608 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.199119434 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.280242559 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146801599 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20306475 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161467063 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112079011 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209976741 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138051669 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.210633295 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.11403933 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148080733 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190362289 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183280479 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.186377684 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144726185 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.303314383 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151497355 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.151829817 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186190311 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196221917 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205976323 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173763396 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.130199067 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.193064341 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197169773 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187198144 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.15189363 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.174002329 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132035866 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185032845 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.211389726 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18398008 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173867503 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.214912098 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114611544 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170864763 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18556312 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16121398 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186811662 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167720362 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.127377795 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130980321 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144703319 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133984288 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.191914912 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1058311 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218859993 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144217834 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.294563484 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238157522 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138996205 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168888432 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169918766 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17342113 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153898264 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.125742552 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152143886 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.151969671 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16425668 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13924958 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164118228 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1515846 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.106893329 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158601466 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.129500126 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164693169 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.115999891 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173180202 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171016085 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.134941331 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171666773 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130728478 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.164248774 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177422393 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228774433 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113598734 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139794928 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209726823 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165512181 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.141922834 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.192661531 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.204205056 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.181762101 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117675988 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201636631 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203215404 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123052152 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229883277 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121684908 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140219632 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.158236573 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164298617 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163929156 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.161475466 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110552322 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.158949929 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209496009 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.134212977 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142655867 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180609498 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106953439 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134123394 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124273199 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142977692 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.148645823 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.156096369 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.119479426 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161258372 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167088493 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160530179 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164859786 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150160463 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199302193 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140072632 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.165676871 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129168891 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.125815772 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.186562138 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201442303 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136086924 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194217164 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.175667343 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205060896 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169293537 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137852037 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.189755109 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110172878 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.127185642 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173392158 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166864684 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169454997 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.198505474 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200004545 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.173008624 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.16080131 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156571674 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174319638 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.192024232 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162897992 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.153185053 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169206747 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172714199 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.103082013 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.13105995 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.10758517 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148130028 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137186835 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113534048 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213843027 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17164987 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.195676265 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167960432 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146399078 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.199739806 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.106022433 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171404966 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.178491278 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146691283 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.201163842 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198655184 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17378842 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152482486 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177135898 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.126171561 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106735048 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.140180259 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.174030554 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113196504 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142570497 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151228865 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.200322778 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182454975 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158077643 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21066642 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173650884 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.234945813 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.101803895 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.17136217 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187834709 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165701733 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.169928663 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137344158 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.167629387 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.195644349 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151259071 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201375776 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169617773 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175283601 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206450787 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.164154282 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137672725 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155578119 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17706489 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119818952 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.178305127 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15400559 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142388848 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160417177 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.116766595 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133028531 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187548866 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150605998 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186036935 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.17350405 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180870798 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134280087 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151030297 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142742896 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15202324 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.124472798 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178120416 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203595525 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151384525 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16592278 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192046159 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137548815 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.320728312 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208382477 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191854417 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145455779 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150168961 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142398967 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179121801 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170364756 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.190373534 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150256952 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189163334 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167231396 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.150040474 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115597372 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155253141 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157766727 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.158330533 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.139345206 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.134079585 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.149758518 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191513245 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152010078 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166065883 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171408005 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.153596765 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.13675052 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147735414 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217701013 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167237781 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183896993 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.164729181 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.184212052 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19581039 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131380009 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108908027 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.134498287 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.191154424 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112479026 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166596728 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.216129142 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206015097 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166558226 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176618551 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117479409 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.132941431 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16708136 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155204629 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205468568 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149355888 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.142575032 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208690635 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.157211945 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111391612 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172900397 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.289992023 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151223342 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190691461 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.12810418 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.282399846 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108792796 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138034622 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17685558 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17897295 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.111501783 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.189723359 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172298334 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152084734 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178459699 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118421456 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.22319765 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216098802 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177991356 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182102413 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.152154686 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165739973 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170643955 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194194632 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149976566 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.124231118 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169521322 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199315667 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.227143505 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.113956863 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170757411 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17022375 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167986793 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18237866 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141137369 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196219135 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111415826 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171770758 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14713192 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131594467 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165429436 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.189923833 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114663672 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216252975 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138931308 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113091681 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133536025 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131158877 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166935176 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151204391 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.136503948 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18733613 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.107060305 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170327984 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189135169 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138007695 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162191028 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126296522 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138839407 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149812628 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124388824 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143697138 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.175849036 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201129303 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.110504816 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220302529 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181685311 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1733903 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167526631 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.124864507 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.669312206 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.134768586 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200705703 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130093972 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224648387 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128861094 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173957768 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168958313 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157119384 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175741583 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15674589 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.226602675 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173521205 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.164812968 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112740108 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152068936 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153286418 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.112025214 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159787272 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170017401 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147449461 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.116319814 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.164501335 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15405303 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.152912065 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11894488 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203075242 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156269084 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190321682 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192171005 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147496153 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173480686 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182399071 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13854033 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.169356821 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180261943 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149061633 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130341161 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.139333175 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.142458464 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187523371 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.105083154 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169831795 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168608074 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168772034 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17067361 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.114969741 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166701097 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150282809 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169196759 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105837362 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.162672552 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165128413 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138626938 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.107500816 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163337175 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165946744 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.166502814 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132346316 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.151767086 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198754244 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.13252993 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11383846 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.289251803 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163913957 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228623318 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.132676484 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143965633 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151107532 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160713172 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.134033767 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166500521 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.136353595 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112533643 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.138489882 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.189546369 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.172688654 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163944234 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190747059 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167841535 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197544055 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.114661965 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.271540644 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147364312 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161656588 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.111265107 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.136048298 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146884732 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114876297 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152384107 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.199184646 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186677333 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.161100444 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.151908434 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106551482 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.132843454 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112096762 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178827768 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162518704 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166625988 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150579699 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.09739715 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151927195 seconds)
  done (took 80.655599094 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.162003766 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.149554058 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.15404804 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.204623339 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.175317454 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.263650374 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.21248864 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.234452956 seconds)
  done (took 2.585743538 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.109328458 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.142137589 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.148323279 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.131711547 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.130687437 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.354895135 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.142484462 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.106450073 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.190750452 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.143237033 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.129398425 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.616846271 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.101561111 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.133056698 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.120220682 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.130333609 seconds)
  done (took 3.852715155 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.103230766 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.519386871 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.65670498 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.247065993 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.229986369 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.161920434 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.699544309 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.190162012 seconds)
  done (took 11.833839207 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.137727781 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.150189977 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.265964737 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.182916978 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.167354788 seconds)
  done (took 1.938138643 seconds)
done (took 122.182559856 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.103906829 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.13152627 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.103920875 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.132417485 seconds)
  done (took 1.492556886 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.118291009 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.08862602 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.120666853 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.0872143 seconds)
  done (took 1.442813052 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.491770572 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.087641896 seconds)
  done (took 1.648252094 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.128442553 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.143989117 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.125384475 seconds)
  done (took 1.438242248 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.111110236 seconds)
  done (took 1.148134507 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.112617749 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.108978919 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.148966001 seconds)
  done (took 1.406964808 seconds)
done (took 9.610911647 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.139854067 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.435368678 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.394166791 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.146733686 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.727213348 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.388813269 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.069099461 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.160988802 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.170808825 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.099901207 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.14465821 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.680661129 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.01903675 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.34857004 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.004335015 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.441496743 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.710022565 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.100918077 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.132608519 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.100334859 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.044467021 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.09901687 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.126783872 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.101343168 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.705320182 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.403098227 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.127536203 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.48021085 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.099293176 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.129610158 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.389437057 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.125143645 seconds)
  done (took 17.273268505 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.142869462 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.186681743 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.133433076 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.101917013 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.130735918 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.101880532 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.135216205 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.11269745 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.185775801 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.126139289 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.119374557 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.125966459 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.105108098 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.127214999 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.121102999 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.126109138 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.101837069 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.128733431 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.106119045 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.128691231 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.118762225 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.126202675 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.100652701 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.129190388 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.099301767 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.139257851 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.099327006 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.138442838 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.099265927 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.133075573 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.130000101 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.101521983 seconds)
  done (took 4.997121258 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.149539247 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.196289693 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.134975009 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.134296896 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.177083225 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.127826654 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.213308933 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.135690384 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.189877159 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.126923804 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.11857573 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.126474504 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.163484225 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.101241285 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.148565381 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.100495095 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.128407362 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.102078213 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.132860562 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.101928007 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.146201464 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.098502099 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.128624829 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.101700796 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.126229593 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.113526416 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.126308919 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.136263933 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.100584022 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.130707855 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.106194439 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.125457638 seconds)
  done (took 5.294720115 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.107263149 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.134196814 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.11849859 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.143215594 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.102968958 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.132235621 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.106965239 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.128734736 seconds)
  done (took 2.01412181 seconds)
done (took 30.616775192 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.122606358 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.139423803 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.114683326 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.135913005 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.136194749 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.124542593 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.112324494 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.098349447 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.137596257 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.116422896 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.127335677 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.101248746 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.140941172 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.104839596 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.143250354 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.109337636 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.149522925 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.11505476 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.128637112 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.109614093 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.128234317 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.120902313 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.133045579 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.100628044 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.153349051 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.129586953 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.119176203 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.131574925 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.1057283 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.102055833 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.145517483 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.105438226 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.128320848 seconds)
  done (took 5.106221687 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.12866829 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.173687314 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.098256939 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.125434954 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.1679058 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.099610334 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.154015904 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.098566388 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.12436409 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.099123984 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.097367073 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.152940906 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.157867041 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.130973982 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.174885055 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.16387002 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.124699261 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.164965676 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.149231494 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.138006833 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.155920478 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.097141935 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.16050205 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.16756684 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.097483581 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.124595042 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.142632732 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.157209704 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.169601646 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.159909727 seconds)
  done (took 5.208013204 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.109231565 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.14455828 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.127977774 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.200638365 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.168968549 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.116301134 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.141800382 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.119131196 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.156038156 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.100056665 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.139598463 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.158730292 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.118783017 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.139077712 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.107189435 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.141747237 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.121646354 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.129729982 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.108724641 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.14760198 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.118736155 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.141698237 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.115679454 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.138688623 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.099828585 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.137871808 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.105656115 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.142640068 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.13532824 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.110905947 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.131782692 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.105408346 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.129707915 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.111490944 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.131290877 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.109862451 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.149991389 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.11078982 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.142473028 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.162347216 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.111140893 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.131776046 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.123385959 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.176351223 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.102820914 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.136775089 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.111841987 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.139143375 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.100193408 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.148084127 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.115782421 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.12838956 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.143274575 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.100913652 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.12594389 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.109323784 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.102519641 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.131222794 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.136778118 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.106277478 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.148219217 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.110856975 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.135387882 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.1037071 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.136305724 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.101463817 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.127513183 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.107416239 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.15223932 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.107219902 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.162086531 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.101507913 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.135559575 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.109534961 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.135402483 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110908238 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.129443615 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.108800166 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.137451752 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.107228531 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.13796253 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.104041849 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.133731811 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.119563268 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.144276602 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.136839919 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.107182049 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.134817311 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.104518276 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.13050889 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.116312991 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.130442744 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.106411305 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.139260519 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.102313614 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.131350442 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.10819795 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.134148683 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.100025343 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.149808939 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.107114754 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.128884587 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.120158318 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.129834852 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.105716923 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.137827658 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.112943443 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.128589874 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.105614233 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.135240342 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.100806275 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.134743427 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.105055534 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.128676923 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.113692132 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.141706196 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.106106782 seconds)
  done (took 15.748930108 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.250986419 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.231425409 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.203496387 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.315989721 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.153075676 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.128250655 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.22603909 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.182871607 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.130142374 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.170053607 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.185802384 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.191667145 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.101990883 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.164049907 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.231834834 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.320361824 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.163483462 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.172008375 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.142997998 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.152913488 seconds)
  done (took 4.889011051 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.117973487 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.169956735 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.159827768 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.128533957 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.131586919 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.116987226 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.132903414 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.146800513 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.103653836 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.1365325 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.101948042 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.139227819 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.105274049 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.133429139 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.120222275 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.147325237 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.106019503 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.137436277 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.14708415 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.108710707 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.131788533 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.151994155 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.111457967 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.159168986 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.110453144 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.146776047 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.101680919 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.139519869 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.098775569 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.131254032 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.107553824 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.146680737 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.137277824 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.103806507 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.13559315 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.102804611 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.125415254 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.103954212 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.131475997 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.107040276 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.146535897 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.105062872 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.130369717 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.102984146 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.138271378 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.100043425 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.106779651 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.137254841 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.135156155 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.111317007 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.137829828 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.107058776 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.137788081 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.114456074 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.128055433 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.111727904 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.142697073 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.134292923 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.109918777 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.128220968 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.101489684 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.106227308 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.130334579 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.107514507 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.136551129 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.145899681 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.112045041 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.130485611 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.108219255 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.134241283 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.106520283 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.148793253 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.150253646 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.100883093 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.127018632 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.124842694 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.099699107 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.118789803 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.11263701 seconds)
  done (took 10.918469555 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.130719609 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.13033608 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.121774478 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.166221053 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.116931579 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.140392515 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.102888124 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.151835907 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.109509118 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.140762731 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.109084104 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.145715871 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.158616432 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.116429992 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.130310968 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.117966941 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.134738835 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.143469828 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.151814695 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.162285795 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.114378802 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.135961482 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.116312757 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.142130671 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.135396521 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.144912316 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.163292657 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.108879156 seconds)
  done (took 4.822783775 seconds)
done (took 47.73254707 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.166746926 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.348660845 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.139194836 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.138998577 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.177344356 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.149429928 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.13921123 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.336723751 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.759065251 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.128356878 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.138381206 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.140973282 seconds)
done (took 26.828169318 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.22079428 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.710127691 seconds)
    (2/2) benchmarking "String"...
    done (took 1.450296767 seconds)
  done (took 4.224514678 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.137845613 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.139029864 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.388287899 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.147758128 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.142241727 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.153604846 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.138326693 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.144090023 seconds)
  done (took 15.3169207 seconds)
done (took 24.962792043 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.167809247 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.330031138 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.405870003 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.159609983 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.144662497 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.142594723 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.128251154 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.16214876 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.141054127 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.131642862 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.149208016 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.433315337 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.131340529 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.533474053 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.130485591 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.169238386 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.140458254 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.366086042 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.144248328 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.176814029 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.126788866 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.146899869 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.179670653 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.159542059 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.148972184 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.155487756 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.181429416 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.132825765 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.332889653 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.162316185 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.177170803 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.142329925 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.197735042 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.144949833 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.243655011 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.16514347 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.328580722 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.128845551 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.126430493 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.145927483 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.330572482 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.507598649 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.14225641 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.130509297 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.145321493 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.201034512 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.131545198 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.837603461 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.147611369 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.127559189 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.180719654 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.518403627 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.154852462 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.157348692 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.145667559 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.37551971 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.151507417 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.154575845 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.163013529 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.165209573 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.139234021 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.139345339 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.182829578 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.152537377 seconds)
  done (took 139.364831324 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.138649081 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.143688004 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.141525277 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.201658963 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.144130549 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.14502216 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.138125062 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.138417142 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.143216283 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.169845478 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.144100945 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.14417337 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.142560412 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.102965552 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.140423758 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.159870114 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.143840543 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.138923155 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.142637976 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.140441969 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.163177424 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.142502422 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.155502356 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.139863132 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.166679105 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.214981382 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.181933015 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.155526583 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.138093158 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.139791355 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.166248303 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.198705123 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.66544808 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.99572962 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.151236913 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.161301538 seconds)
  done (took 77.905410614 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.1391579 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.138649842 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.140050911 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.167189887 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.139465675 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.61725983 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.619894954 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.84829644 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.390662433 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.197320968 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.312849494 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.139408167 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.226965112 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.152396353 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.138907258 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.153818404 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.165366541 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.1424029 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.138139516 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.615471717 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.156506836 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.174637668 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.312539269 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.153309158 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.166107585 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.533112866 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.139122421 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.166825511 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.460229893 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.181994182 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.139057983 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.416676939 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.688325512 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.248232089 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.141877826 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.166238116 seconds)
    (37/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.141290441 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.140337444 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.411626662 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.144274277 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.141084477 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.1427374 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.721382784 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.140606325 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.615313946 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.144097808 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.001516225 seconds)
    (48/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.139468697 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.139963132 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.139486709 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.408645987 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.644262021 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.15793586 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.139967878 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.144188174 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.141108469 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.140638734 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.167386883 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.449176972 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.246686642 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.144562666 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.144032668 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.1682489 seconds)
    (64/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.141271862 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.140588501 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.233433259 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.14488504 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.372760744 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.212897176 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.35558317 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.618780971 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.150658488 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.234793054 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.255557708 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.141826512 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.14084595 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.141591174 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.141783912 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.247525426 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.141911783 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.495932856 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.302960732 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.160172215 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.193786572 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.237577007 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.142901998 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.438177705 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.146319845 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.143794946 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.811336924 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.237427318 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.143134776 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.143836186 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.141823958 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.499402636 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.620322952 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.290260971 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.146470201 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.884011152 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.146418435 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.142334664 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.509115792 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.61182555 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.741046936 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.148865749 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.252156443 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.305015168 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.159054193 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.143266687 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.195619911 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.147768466 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.205070996 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.14477734 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.537918305 seconds)
  done (took 356.543487554 seconds)
done (took 574.876578614 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.855897026 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.797255715 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.922519094 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.829409541 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.794070181 seconds)
  done (took 10.266957048 seconds)
done (took 11.332179021 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.318188778 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.321357231 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.199974455 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.323736496 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.180612006 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.336967956 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.300658913 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.169853595 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.244261989 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.221920734 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.245238455 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.196431067 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.178226684 seconds)
  done (took 17.306079224 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.391449189 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.148521318 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.224565509 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.379266076 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.187264168 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.385907067 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.439349816 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.147673163 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.299706011 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.158719236 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.160400497 seconds)
  done (took 16.992282174 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.385676296 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.148191339 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.214091801 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.37181159 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.189897215 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.395438133 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.425729335 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.149558278 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.290905578 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.16201569 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.159004952 seconds)
  done (took 16.961830294 seconds)
done (took 52.326616411 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.184451167 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.304676229 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.177919363 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.160057753 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.157460132 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.158025971 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.161419922 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.156251677 seconds)
  done (took 10.530987213 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.155447921 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.156479418 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.153166921 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.155329358 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.153308303 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.154863894 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.154361477 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.153238699 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.156587206 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.155780903 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.15261827 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.157147134 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.152493888 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.154301647 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.153885851 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.153295727 seconds)
  done (took 19.543174102 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.156375052 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.154111863 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.154006589 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.153389159 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.152981844 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.154248196 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.155329288 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.15440526 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.154584837 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.154925265 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.155646435 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.154865708 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.154448989 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.156166975 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.15564661 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.154582046 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.154578906 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.154917209 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.160610393 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.155059106 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.154881174 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.156183689 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.155319421 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.155084884 seconds)
  done (took 28.796685392 seconds)
done (took 59.93951657 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.156449273 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.156149593 seconds)
  done (took 5.387542945 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.21812113 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.220332024 seconds)
  done (took 3.51450324 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.159237493 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.158157307 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.159184908 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.159188854 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.158866374 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.157883308 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.158172532 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.157727993 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.158428555 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.158411936 seconds)
  done (took 12.659120266 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.159797453 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.158508382 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.155871069 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.159261807 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.159211602 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.15557294 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.159328786 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.158836858 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.158897491 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.156226711 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.160218129 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.15752914 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.15921074 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.157009705 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.158957254 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.156317635 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.157295829 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.156903347 seconds)
  done (took 21.919189466 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.1736635 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.181496791 seconds)
  done (took 3.430751204 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.297461808 seconds)
    (2/7) benchmarking "second"...
    done (took 1.198986953 seconds)
    (3/7) benchmarking "month"...
    done (took 1.274224401 seconds)
    (4/7) benchmarking "year"...
    done (took 1.264558549 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.197527936 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.172975525 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.193404203 seconds)
  done (took 9.67447139 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.156125583 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.339033876 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.445924573 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.721216195 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.153110871 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.150157546 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.025047097 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.149932064 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.153186889 seconds)
  done (took 13.364634291 seconds)
done (took 71.021915901 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.137383849 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.187060504 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.138783813 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.146693185 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.474058848 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.151500605 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.135011616 seconds)
done (took 15.431898498 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.119178768 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.126490558 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.11875033 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.120275296 seconds)
  done (took 9.538140845 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.04273719 seconds)
    (2/2) benchmarking "read"...
    done (took 1.495328738 seconds)
  done (took 4.589839837 seconds)
done (took 15.179589441 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.139975919 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.133731526 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.133905523 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.133147963 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.133797453 seconds)
    (6/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.133373225 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.132317978 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.132922547 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.135760117 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.1357305 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.133129677 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.132608793 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.133439573 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.130956684 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.130876287 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.135222001 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.129930801 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.130428156 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.130244322 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.128535448 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.13059223 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.132015 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.128225327 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.128662912 seconds)
  done (took 28.235323422 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.131396669 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.130855362 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.132443101 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.130141569 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.127559255 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.130359692 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.129301897 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.127937848 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.131966045 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.129930671 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.127793895 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.125899459 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.126675203 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.125429603 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.127163281 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.12512197 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.128002429 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.124267289 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.12713259 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.126184509 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.127808599 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.12508815 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.124679404 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.127254386 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.124283572 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.125681938 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.127941553 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.125339819 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.128221826 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.124268654 seconds)
  done (took 34.876961627 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.131455336 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.134544173 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.129052 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.127508035 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.128234879 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.129001869 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.128864964 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.127742464 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.126898266 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.126535503 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.126976884 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.127199767 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.126392202 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.128073526 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.127607089 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.129793813 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.124752674 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.123248748 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.123586568 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.124052192 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.122520964 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.123545838 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.122942313 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.123570727 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.125333061 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.122873719 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.120771392 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.120618769 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.121484489 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.121060262 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.121429686 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.121120848 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.123553357 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.122033408 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.12116725 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.120720508 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.124093198 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.128168404 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.122135954 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.121696268 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.121784967 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.121262696 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.120815107 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.12212103 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.122177815 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.121497366 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.121303087 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.122362154 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.122541943 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.123061287 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.122055557 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.121089017 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.121900179 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.121804614 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.122715052 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.122116546 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.122530883 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.122512509 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.12289734 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.122283617 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.122121347 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.12324391 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.123628886 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.122966164 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.124402554 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.122131897 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.122680506 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.123037435 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.123238674 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.122772584 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.123200106 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.123174265 seconds)
  done (took 81.967192221 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.122991818 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.121369604 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.122903485 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.121675296 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.121774789 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.122936698 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.122225762 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.1243794 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.120419038 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.123713284 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.123926934 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.121826659 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.120849535 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.124244833 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.123260236 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.121288301 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.12442388 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.120944809 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.124408186 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.124804374 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.124676626 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.122083577 seconds)
  done (took 25.744301197 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.124128091 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.124395156 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.121494571 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.125040177 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.123204873 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.125562437 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.123497875 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.124790562 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.124423739 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.12170089 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.122004488 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.124989956 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.123241898 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.121747499 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.121754386 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.124593463 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.12491218 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.124316716 seconds)
  done (took 21.269807918 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.122693695 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.122796016 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.1252091 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.123690194 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.123450125 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.127535364 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.12265108 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.125744964 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.125466496 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.124148324 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.127709802 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.126241312 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.126830183 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.123792189 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.125669309 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.123753255 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.127712185 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.125380175 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.127174479 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.12536628 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.124884619 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.127177703 seconds)
  done (took 25.799349159 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.126889549 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.126747272 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.12466463 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.125453663 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.123737294 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.126828376 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.127789349 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.12357293 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.127963387 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.126322948 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.1251638 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.127027802 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.125831397 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.124248257 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.124391362 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.124490759 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.126959055 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.125285586 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.127497139 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.12578682 seconds)
  done (took 23.561844248 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.129102023 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.127581916 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.129325156 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.128877466 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.129265739 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.12950481 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.129470866 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.128969263 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.129381505 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.12922926 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.129344831 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.12954469 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.129205665 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.128602567 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.129548077 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.129980097 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.130944777 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.130242523 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.130280904 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.131081425 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.130550926 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.130742149 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.130197919 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.130745922 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.12943796 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.130971542 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.128456919 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.129631974 seconds)
  done (took 32.676634181 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.129716656 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.130099449 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.127630848 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.128013846 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.127430523 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.126903556 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.128580053 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.128515965 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.130474522 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.128648107 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.129644333 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.130551067 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.132503794 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.13231423 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.130707755 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.13102705 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.13015142 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.128466677 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.129112219 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.129180473 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.131794217 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.130482384 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.130838054 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.128941683 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.128455006 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.130953041 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.129138157 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.129381097 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.130913577 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.129870085 seconds)
  done (took 34.939062379 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.178272792 seconds)
    (2/2) benchmarking "in"...
    done (took 1.176762149 seconds)
  done (took 3.404126242 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.129879949 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.132811111 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.131157112 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.12994585 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.130141664 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.132040177 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.132718301 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.130380631 seconds)
  done (took 10.098420749 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.132940242 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.133241362 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.132677503 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.13393282 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.13242976 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.132759841 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.140080393 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.151448197 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.134389762 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.134559844 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.14112716 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.138547577 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.13568526 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.133692313 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.132706868 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.136571755 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.133735313 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.133144282 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.134244954 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.135043909 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.133960904 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.135982868 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.137988804 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.132605738 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.134897793 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.144901204 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.138292557 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.135864105 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.134100352 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.139094223 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.134085551 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.130991526 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.135404169 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.136942611 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.135344005 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.135688814 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.146081852 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.153709383 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.140443723 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.136276942 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.135880423 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.132017205 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.136021998 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.137097278 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.137738853 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.135519269 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.136542656 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.132672916 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.135702518 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.138784848 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.139009094 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.135649657 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.133375476 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.139849128 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.137659455 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.145149103 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.153214655 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.139806443 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.144468822 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.14764936 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.14951455 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.157887596 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.138886025 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.137038437 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.146633961 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.156575326 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.144525574 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.151586104 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.134903085 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.13884287 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.144946387 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.150490044 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.160867646 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.138608684 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.138314671 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.138372916 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.138443672 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.139725747 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.147053556 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.159303598 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.138073015 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.138642085 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.148131551 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.15731701 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.137688571 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.139112433 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.138527028 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.139437013 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.140882747 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.147726755 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.156239003 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.139671852 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.139393704 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.139329526 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.140380484 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.139065106 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.139118228 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.140523155 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.136495619 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.140912823 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.14013312 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.143022864 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.146920366 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.140150145 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.139985533 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.147656106 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.140072683 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.13991972 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.148860399 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.139273978 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.139183895 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.143791181 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.145725424 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.137501131 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.143917801 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.148971145 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.140174105 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.14185683 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.141307321 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.141663588 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.150832435 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.162696954 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.140927561 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.141160259 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.145402932 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.150016511 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.140530426 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.144199273 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.142016934 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.137863338 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.138879734 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.143589322 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.141037168 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.142751634 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.142379316 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.142977554 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.139285079 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.142495291 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.141498415 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.143464004 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.143394615 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.143235442 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.14233788 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.144372922 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.141609 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.143041771 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.150024071 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.141669427 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.144029132 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.142369264 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.140284481 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.144150562 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.143751049 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.144027348 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.143312611 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.141791157 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.143678885 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.143238661 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.144530361 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.143787689 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.143845609 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.143205934 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.146597025 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.143293849 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.148450025 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.143557158 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.140744397 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.14453877 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.144821816 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.143991925 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.143244542 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.143559325 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.145083139 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.150139525 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.144032504 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.142824008 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.146791691 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.143885947 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.143681189 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.144052506 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.148496771 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.151357607 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.145311461 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.153136191 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.144649852 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.144979343 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.145938162 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.144196474 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.144825271 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.144913477 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.148904486 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.151925461 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.157363592 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.167450276 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.146053786 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.148395701 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.146582398 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.150165007 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.15149996 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.146210818 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.148529489 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.146576243 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.146352724 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.145230009 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.147899291 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.145918717 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.146233559 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.146368453 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.146935952 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.146279705 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.147222149 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.147677458 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.148420422 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.143786912 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.147029806 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.147344797 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.147216648 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.144816508 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.147164477 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.14833316 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.147446758 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.147763631 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.154523478 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.145270782 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.148857368 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.148914587 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.148713721 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.148563132 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.148789834 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.151068091 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.149118475 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.156196131 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.166072638 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.150869196 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.156470223 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.166393383 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.149107592 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.151569707 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.151263768 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.145771191 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.154692563 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.158380864 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.148835285 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.147777617 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.148319228 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.148886931 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.149312715 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.155174664 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.145607306 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.148197283 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.149517824 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.150878825 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.147426017 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.150644231 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.15025668 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.149293029 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.151904087 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.150651824 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.150366976 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.1506988 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.14984408 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.150908379 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.149912912 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.153717699 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.155824274 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.155480367 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.151306708 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.153254209 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.15215588 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.153094024 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.150679145 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.14884092 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.149874062 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.161388921 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.171544041 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.156716013 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.168246357 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.150772945 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.157113963 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.168600051 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.154071124 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.151527453 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.152013919 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.150446997 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.151607862 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.148687873 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.152309871 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.151408763 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.152082278 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.153059167 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.154416728 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.152103995 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.151790003 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.151475471 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.151781211 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.152081232 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.151354061 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.152879462 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.154534426 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.153059248 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.151622863 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.152513242 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.159415297 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.1707682 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.152571338 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.152376237 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.152242448 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.150701189 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.154918695 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.152009017 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.157233087 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.158581266 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.156651297 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.160836776 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.15452526 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.161819082 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.153517848 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.155685321 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.159943392 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.151160867 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.154011393 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.154342396 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.153921689 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.162572587 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.170788178 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.155778443 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.157644325 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.155090578 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.155779042 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.154366863 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.155869308 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.155826715 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.153882307 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.165495784 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.174115817 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.157078647 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.155319247 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.150576492 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.15528858 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.155095537 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.154840825 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.158537288 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.154869215 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.15545863 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.154362545 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.153631964 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.155718127 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.155111251 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.155171147 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.15186306 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.155447363 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.162950821 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.174526536 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.158459783 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.155459502 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.164453591 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.155949422 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.163234653 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.173983291 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.156922621 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.155422194 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.155641489 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.157354803 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.15619338 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.156747161 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.157075207 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.157962786 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.16043805 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.156808682 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.158516085 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.157618911 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.156570045 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.156787393 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.166696505 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.176281217 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.158490578 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.160233969 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.153169748 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.159229806 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.160617337 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.156286112 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.15682831 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.15885305 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.166589133 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.163628913 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.158713157 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.156339213 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.158170864 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.157092237 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.157550232 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.156771206 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.157497155 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.158132783 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.157636706 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.158610187 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.607142472 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.159066737 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.158266304 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.159137133 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.159420976 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.166688858 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.158504539 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.158537282 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.159238413 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.160417555 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.159199445 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.160641919 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.158532349 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.160063809 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.159275043 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.160531926 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.164773163 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.165373599 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.163654393 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.159360024 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.159294712 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.160251745 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.160569274 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.159650749 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.15981522 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.16061755 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.16112521 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.161129917 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.161860619 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.160160632 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.160440609 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.160150819 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.160743723 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.163053944 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.165472789 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.160571761 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.158393151 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.158988262 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.15937259 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.158952029 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.161021363 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.168088491 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.163544807 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.169507748 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.166569281 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.165862803 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.162113289 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.162942747 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.168376142 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.159273891 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.161371589 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.160683106 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.163591059 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.162871621 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.163310077 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.161918986 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.168602119 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.161077948 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.160801962 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.170027188 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.181908115 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.159944183 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.162959411 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.164828791 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.161605004 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.160019143 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.160711348 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.162251959 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.170374082 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.181298813 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.163058973 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.164139244 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.162602176 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.163509834 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.164429089 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.162998219 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.163740854 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.16070022 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.163495428 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.162969938 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.16433735 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.16099905 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.163268687 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.163929067 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.16655657 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.169686395 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.160258014 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.165122128 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.164739845 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.165231863 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.163544143 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.16520067 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.161589414 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.16174075 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.162935428 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.163166546 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.165401103 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.167516104 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.164152147 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.165986041 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.165489675 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.163845977 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.168362619 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.173180828 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.170755237 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.163545825 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.16524949 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.165752672 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.167939768 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.165271108 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.164830451 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.166157309 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.166705642 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.166229441 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.168776216 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.168819698 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.169035763 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.181750687 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.184930912 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.166459435 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.167352336 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.169471071 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.167313949 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.163216235 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.165453636 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.163642388 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.161944013 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.165373767 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.159087228 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.16701234 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.177031389 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.160020873 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.16300436 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.163114772 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.165287796 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.160870866 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.159977211 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.159205368 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.164383106 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.173531176 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.161031423 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.169610268 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.185926095 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.177939785 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.160700338 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.160605592 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.160874882 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.161827679 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.163479882 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.160557904 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.161310554 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.160894829 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.160936058 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.161109397 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.166812012 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.161603406 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.162801054 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.161954609 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.160581627 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.163217796 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.159235951 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.161723411 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.161258984 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.161510506 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.16175631 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.161752094 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.162376856 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.173645767 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.184785774 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.1640272 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.161192605 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.159482602 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.165694704 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.164454671 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.171786657 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.169112513 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.16325685 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.16080379 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.163216433 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.16348802 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.161786968 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.162626542 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.162818163 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.164415102 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.161002872 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.173221836 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.185571673 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.169308296 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.164202572 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.164340201 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.163540983 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.164582322 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.164174759 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.164099524 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.165373314 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.16611769 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.168028569 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.164068168 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.165473919 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.167998487 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.170890476 seconds)
  done (took 689.126710263 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.163012707 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.161406269 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.162800511 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.162643923 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.163300497 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.162815423 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.161654233 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.162386909 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.162818053 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.162544972 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.163207487 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.162332458 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.162466721 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.162652309 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.163868134 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.166256218 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.165198636 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.167102183 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.167853309 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.166119615 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.166358197 seconds)
  done (took 25.516443472 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.16665533 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.163336365 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.16468634 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.165361997 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.163129378 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.166618517 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.16364609 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.167442486 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.166670539 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.1646024 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.165891166 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.1670113 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.163267382 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.164131859 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.163748216 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.16691117 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.167019202 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.164357715 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.166639185 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.165424214 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.166326104 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.164728209 seconds)
  done (took 26.718464648 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.167159914 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.167544763 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.168148225 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.164481445 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.16846145 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.165979803 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.166809274 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.167052996 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.168469729 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.168660157 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.167969601 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.169510078 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.174076192 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.171077421 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.17009087 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.168529047 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.168072127 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.167455019 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.16863589 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.166176504 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.173811737 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.185010754 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.165826085 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.168618089 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.168810619 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.170022083 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.16987114 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.167931141 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.170434797 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.172898167 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.169704423 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.170304491 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.171659769 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.169700789 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.171106831 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.174205301 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.169510935 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.167374408 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.169459521 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.17877194 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.187550417 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.170359489 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.177467057 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.18775921 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.169927497 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.1732888 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.176549554 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.168420827 seconds)
  done (took 57.280930359 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.741272116 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.754324764 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.754065437 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.757222282 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.759701042 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.7595403 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.761153649 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.763141882 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.754918279 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.754106344 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.759704168 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.757820395 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.755947036 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.757651856 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.758066124 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.757453191 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.757584638 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.753781405 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.762724356 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.763499138 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.75587725 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.759609355 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.758157065 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.758035636 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.755693146 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.755669854 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.755929511 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.757550821 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.756384301 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.755848984 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.759374589 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.764118403 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.759859871 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.751767629 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.754193349 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.754923266 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.759186028 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.757377522 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.763132658 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.756462191 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.760713848 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.761882378 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.762129558 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.765499525 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.763948306 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.757147606 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.756880683 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.753635939 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.755791834 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.76166539 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.761836544 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.757249766 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.760215426 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.759063741 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.76061468 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.763769557 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.763680023 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.760716736 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.760228726 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.76435958 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.765556623 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.762715748 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.7615011 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.765022632 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.765686731 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.760937095 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.756944794 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.766906777 seconds)
  done (took 120.694740351 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.175570587 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.175511334 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.176089442 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.1748106 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.17664702 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.174964493 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.175649165 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.177484097 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.176671154 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.175566845 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.177160715 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.17657642 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.17473647 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.175810086 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.177520411 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.175291608 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.175995961 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.175429011 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.176409141 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.176431529 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.176078256 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.176052102 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.175874982 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.176373938 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.176848437 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.175761215 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.17617682 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.177320047 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.177538323 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.177624862 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.178771205 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.176627567 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.176162655 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.177649717 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.177322862 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.175913163 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.176672153 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.176127573 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.176872157 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.17723945 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.178303587 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.1776153 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.178615396 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.178709266 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.178337258 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.177743295 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.176565768 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.178128855 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.17793455 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.178290816 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.178206349 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.179879367 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.178812944 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.177690513 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.177791217 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.178272655 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.176937938 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.179189389 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.177784091 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.178027338 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.180149122 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.180146319 seconds)
  done (took 74.068106073 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.179163598 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.178434939 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.175402705 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.175475995 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.177431686 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.176284136 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.179205865 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.179098582 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.182406334 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.180375459 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.179838612 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.176222422 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.178699039 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.179663961 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.177099156 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.176808532 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.176588474 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.176583183 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.178879974 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.17726405 seconds)
  done (took 24.650469602 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.176080599 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.179119479 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.176187787 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.177120045 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.180233486 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.176150763 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.18060603 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.180196871 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.177226784 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.180612152 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.180818092 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.18113974 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.177550479 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.17766833 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.181205853 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.178365682 seconds)
  done (took 19.950240135 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.177380886 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.180356446 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.180365569 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.180874173 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.178692806 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.178842333 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.181177928 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.180388114 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.180337651 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.182505877 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.183019577 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.18256076 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.181983649 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.181482807 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.180564605 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.183561712 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.179946459 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.179191334 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.182807785 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.184025411 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.183311 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.180950894 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.183200158 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.183167723 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.179701925 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.181422367 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.180711281 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.180363122 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.179877724 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.182778362 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.180344386 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.180691893 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.180761312 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.180144232 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.183072988 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.181087334 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.183464291 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.182993323 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.18315729 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.184105442 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.184356523 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.181634632 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.18324297 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.1832091 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.181315887 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.184344193 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.181126139 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.182183557 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.181803657 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.181939533 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.184230752 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.184132055 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.184584161 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.1843554 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.183460152 seconds)
  done (took 66.094501608 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.184731992 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.185065601 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.180792019 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.185091306 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.18614682 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.181077384 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.184869247 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.184660569 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.182051684 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.1839492 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.182122899 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.185422164 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.182388926 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.18496163 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.181607014 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.185694922 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.182939073 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.182137722 seconds)
  done (took 22.401464357 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.184013278 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.183270142 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.187594424 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.183272666 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.183206251 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.186065215 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.183164025 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.185401213 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.183939461 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.184079271 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.183526408 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.185456328 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.186850075 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.186417393 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.185726079 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.184847984 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.186331075 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.186414389 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.184243393 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.183514926 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.187141045 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.187068968 seconds)
  done (took 27.167847157 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.18633261 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.185919208 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.185760799 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.202055718 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.205319713 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.186245895 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.188046839 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.186989813 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.207381215 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.235436897 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.229685296 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.204305787 seconds)
  done (took 15.500160102 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.184684227 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.188389928 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.184028254 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.187728841 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.189039149 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.185376096 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.18611141 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.184781396 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.188193158 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.186353003 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.18532101 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.187212141 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.187473572 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.186197151 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.188351226 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.190137156 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.185546622 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.186453308 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.186638295 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.187641041 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.186511236 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.189178895 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.186698583 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.186744298 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.186769226 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.185797778 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.190194291 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.187521757 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.186599939 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.189833138 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.189494859 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.187096836 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.187695822 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.188912794 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.190188557 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.190127475 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.187212022 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.190048134 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.189905465 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.187488133 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.189343723 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.189021427 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.189725817 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.187061542 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.189596297 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.187525371 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.187566593 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.187775733 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.188684815 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.19136537 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.190303861 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.189358205 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.190732969 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.191222091 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.189901573 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.192243103 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.188805211 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.188590837 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.19076212 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.18874275 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.188346728 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.190980895 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.188595465 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.188847084 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.190577737 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.187326209 seconds)
  done (took 79.522650726 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.189155584 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.189264756 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.188917592 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.189784257 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.188499705 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.189718934 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.190086974 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.190150099 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.189874853 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.18864004 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.192153453 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.190506814 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.192303055 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.190265981 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.191005116 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.189807883 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.189813179 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.190769703 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.19116097 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.195145078 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.191464277 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.190467138 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.190134865 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.19194972 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.190237769 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.194165513 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.19098304 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.191538034 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.19187451 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.191792478 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.192212072 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.192060099 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.191928569 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.191721248 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.191661975 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.191163444 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.191308269 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.191946195 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.191128097 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.194387891 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.191218546 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.195894424 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.1908251 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.191611072 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.191931332 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.19220649 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.191548043 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.192242566 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.192494608 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.192686092 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.193237064 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.192402257 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.192724074 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.192894331 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.192051096 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.193255735 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.19295909 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.193657964 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.191687821 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.195610973 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.19246027 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.19354439 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.197065523 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.193096167 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.193305008 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.192709142 seconds)
  done (took 79.760497646 seconds)
done (took 1652.080076007 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.359224302 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.312730149 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.195742538 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.205795602 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.195836822 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.188956731 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.207099622 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.196451305 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.195532678 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.194727692 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.195576525 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.386509802 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.190350775 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.195396689 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.195684279 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.292250929 seconds)
  done (took 24.816149601 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.21808247 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.207778219 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.307855237 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.222697858 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.226236183 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.377532696 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.259336069 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.205755314 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.358408913 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.226476509 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.19528063 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.226534819 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.207250219 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.201765341 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.222754761 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.375923196 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.43665266 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.201108937 seconds)
  done (took 26.783428921 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.612696722 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.205784341 seconds)
  done (took 4.930219778 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.222856365 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.208147099 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.206872776 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.204216881 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.196986299 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.197164798 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.203997245 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.200053499 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.206742415 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.323779066 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.209395313 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.213534249 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.223666482 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.206040267 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.201505542 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.244692406 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.358437845 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.207474395 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.201655791 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.210309571 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.204416876 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.288854971 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.247394628 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.206161463 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.319357093 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.207722399 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.212591823 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.213172359 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.340391495 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.206814157 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.204232575 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.205513608 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.207411513 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.059230783 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.65424522 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.221290711 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.234196746 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.214719932 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.202308029 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.356802045 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.211680674 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.212172701 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.209844447 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.641647434 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.36066113 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.322348607 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.214385551 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.212457781 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.208465349 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.270183445 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.20950749 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.208687237 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.247672866 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.999478693 seconds)
  done (took 78.106773036 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.216534672 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.200867133 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.380042757 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.224181255 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.200339974 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.204889707 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.204587881 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.46464425 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.239656094 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.200816514 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.527490898 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.746026203 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.222623209 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.251747358 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.051672832 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.269177001 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.202651638 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.218352551 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.203537593 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.201313134 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.732765901 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.206112491 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.201862953 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.380626739 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.241279926 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.693952451 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.203582472 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.204708771 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.221674095 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.202349171 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.705847961 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.223654121 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.257400404 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.203954346 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.461138874 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.55626305 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.521318732 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.201907855 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.23780322 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.204920131 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.214263729 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.683245498 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.536773636 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.201167344 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.205642557 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.692933908 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.203697963 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.210286323 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.208747826 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.449927381 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.207500417 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.206159709 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.21756789 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.208702199 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.202175441 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.274038361 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.276879979 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.697634118 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.201703934 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.204827467 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.207904165 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.203878043 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.210592359 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.207537074 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.204852711 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.54223158 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.351311487 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.204208459 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.538816271 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.700624028 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.223251516 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.769627423 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.223029917 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.233522552 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.421358164 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.204380476 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.203829035 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.70757565 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.207826574 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.204908023 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.523907739 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.208084873 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.521361472 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.22241192 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.204285326 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.752122145 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.21173785 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.27501085 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.206061212 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.221632888 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.20881912 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.206479775 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.471753777 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.255975871 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.207165364 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.205214195 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.255799981 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.206493088 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.206634601 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.213537659 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.770349593 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.229287102 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.206451894 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.209884765 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.207745382 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.206279639 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.206236534 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.209478899 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.470766957 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.210769248 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.21185825 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.209633423 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.211203154 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.226294829 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.387024302 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.211716493 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.492718693 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.211969675 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.207704752 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.211169058 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.207386737 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.215587464 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.207972541 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.207945118 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.079430652 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.53022444 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.225205489 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.20873335 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.209962992 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.208087209 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.206847721 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.207682854 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.245071202 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.212572372 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.946519463 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.229857076 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.230441262 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.207155495 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.218506006 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.209435638 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.210950691 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.209209447 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.495391116 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.484901666 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.35485031 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.213018242 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.20891349 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.959341395 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.233272436 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.387633224 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.22591469 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.209173534 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.457765192 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.443222782 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.212741307 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.20933754 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.209342013 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.466293337 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.213207811 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.525118575 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.739896951 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.226112507 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.212205802 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.962221372 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.900588712 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.216012065 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.214848085 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.527746441 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.226735295 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.209585024 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.210730584 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.210806688 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.210777078 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.230906969 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.214679261 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.209722488 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.211285226 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.255863863 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.400633987 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.226731217 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.219877247 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.697945715 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.222238569 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.219324137 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.21839284 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.212249764 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.209915627 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.276012887 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.215745402 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.238796787 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.213316431 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.222346638 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.757842599 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.211054367 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.217214374 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.403023641 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.881049056 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.23146605 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.212193304 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.230542361 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.144754791 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.733504209 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.268285946 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.503913591 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.225850256 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.252358194 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.214178173 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.25166734 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.729645844 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.223382977 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.229893361 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.86332876 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.23370851 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.82333766 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.21349673 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.214508432 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.816904365 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.233879352 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.218791756 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.213349017 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.21453335 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.515328214 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.218598264 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.226890917 seconds)
  done (took 469.843667191 seconds)
done (took 605.586265741 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.212986828 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.213684246 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.205647271 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.218185749 seconds)
  done (took 9.978968072 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.222403948 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.221937547 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.221031892 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.220552585 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.22159537 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.219949117 seconds)
  done (took 8.456476391 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.213005534 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.215901009 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.218577434 seconds)
  done (took 7.776516096 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.410847258 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.242626223 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.528997742 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.236185426 seconds)
  done (took 8.547374775 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.221139652 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.222604943 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.221507932 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.222789075 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.226108221 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.226482483 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.225127121 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.22446697 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.227082589 seconds)
  done (took 12.14565207 seconds)
done (took 48.032326767 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.363828522 seconds)
    (2/224) benchmarking ("map", abs, Int64, true)...
    done (took 1.355238145 seconds)
    (3/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.264517028 seconds)
    (4/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.258400185 seconds)
    (5/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.294447714 seconds)
    (6/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.23036206 seconds)
    (7/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.221716233 seconds)
    (8/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.870522543 seconds)
    (9/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.255824943 seconds)
    (10/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.231243767 seconds)
    (11/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.298513074 seconds)
    (12/224) benchmarking ("map", abs, Bool, false)...
    done (took 1.23814687 seconds)
    (13/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.281256898 seconds)
    (14/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.277358069 seconds)
    (15/224) benchmarking ("map", abs, BigInt, true)...
    done (took 2.2512387 seconds)
    (16/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.426054094 seconds)
    (17/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.313894959 seconds)
    (18/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.205694221 seconds)
    (19/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.304072448 seconds)
    (20/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.956887678 seconds)
    (21/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.304960429 seconds)
    (22/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.298850052 seconds)
    (23/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.290757265 seconds)
    (24/224) benchmarking ("map", identity, Float64, false)...
    done (took 1.28247042 seconds)
    (25/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.387092601 seconds)
    (26/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.968431428 seconds)
    (27/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.965559248 seconds)
    (28/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.313802539 seconds)
    (29/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.205385572 seconds)
    (30/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.328184235 seconds)
    (31/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.028193529 seconds)
    (32/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.8749545 seconds)
    (33/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.387501742 seconds)
    (34/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.248877186 seconds)
    (35/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.205008497 seconds)
    (36/224) benchmarking ("perf_sum", Bool, true)...
    done (took 1.249463536 seconds)
    (37/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.449278413 seconds)
    (38/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.333225677 seconds)
    (39/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.344359769 seconds)
    (40/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.223478981 seconds)
    (41/224) benchmarking ("map", identity, BigInt, false)...
    done (took 1.312438389 seconds)
    (42/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.311552951 seconds)
    (43/224) benchmarking ("map", identity, Bool, true)...
    done (took 1.267562511 seconds)
    (44/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.273673919 seconds)
    (45/224) benchmarking ("perf_countequals", "Int8")...
    done (took 1.256830825 seconds)
    (46/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.323328231 seconds)
    (47/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.220750815 seconds)
    (48/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.364509246 seconds)
    (49/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.264790793 seconds)
    (50/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.23492877 seconds)
    (51/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.32448111 seconds)
    (52/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.237446604 seconds)
    (53/224) benchmarking ("perf_sum", Bool, false)...
    done (took 1.234459774 seconds)
    (54/224) benchmarking ("map", identity, Int8, false)...
    done (took 1.239914273 seconds)
    (55/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.956231192 seconds)
    (56/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.253038703 seconds)
    (57/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.268052711 seconds)
    (58/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.385715756 seconds)
    (59/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.413551773 seconds)
    (60/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.268446708 seconds)
    (61/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.207311439 seconds)
    (62/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.422322974 seconds)
    (63/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.353343837 seconds)
    (64/224) benchmarking ("map", abs, Float64, false)...
    done (took 1.282616537 seconds)
    (65/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.390198639 seconds)
    (66/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.294322002 seconds)
    (67/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.341995983 seconds)
    (68/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.431741168 seconds)
    (69/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.277809217 seconds)
    (70/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.96542627 seconds)
    (71/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.244998043 seconds)
    (72/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.078517064 seconds)
    (73/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.313472477 seconds)
    (74/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.436707657 seconds)
    (75/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.248411243 seconds)
    (76/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.231303485 seconds)
    (77/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.871608805 seconds)
    (78/224) benchmarking ("map", identity, Int8, true)...
    done (took 1.268092678 seconds)
    (79/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.415250686 seconds)
    (80/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.317061251 seconds)
    (81/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.212983901 seconds)
    (82/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.964778605 seconds)
    (83/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.229227978 seconds)
    (84/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.606054162 seconds)
    (85/224) benchmarking ("perf_countequals", "Float32")...
    done (took 1.24500901 seconds)
    (86/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.236656402 seconds)
    (87/224) benchmarking ("perf_sum", Float32, true)...
    done (took 1.231893441 seconds)
    (88/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.962932211 seconds)
    (89/224) benchmarking ("perf_sum", Float64, true)...
    done (took 1.249930833 seconds)
    (90/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.331517174 seconds)
    (91/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.08468502 seconds)
    (92/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.229482964 seconds)
    (93/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.290967816 seconds)
    (94/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.36079602 seconds)
    (95/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.237670102 seconds)
    (96/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.888161577 seconds)
    (97/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.357647736 seconds)
    (98/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.406329094 seconds)
    (99/224) benchmarking ("perf_countequals", "Int64")...
    done (took 1.254835044 seconds)
    (100/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.306279432 seconds)
    (101/224) benchmarking ("perf_countequals", "Bool")...
    done (took 1.255743006 seconds)
    (102/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.210031793 seconds)
    (103/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.283323581 seconds)
    (104/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.236658165 seconds)
    (105/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.269841804 seconds)
    (106/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.341293392 seconds)
    (107/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.299623113 seconds)
    (108/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.348428077 seconds)
    (109/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.323618179 seconds)
    (110/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.23781108 seconds)
    (111/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.914807934 seconds)
    (112/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.239496408 seconds)
    (113/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.309133012 seconds)
    (114/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.543547986 seconds)
    (115/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.298812822 seconds)
    (116/224) benchmarking ("map", abs, Bool, true)...
    done (took 1.271474429 seconds)
    (117/224) benchmarking ("map", abs, Float32, false)...
    done (took 1.276719891 seconds)
    (118/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.41636753 seconds)
    (119/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.87901064 seconds)
    (120/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.22358869 seconds)
    (121/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.216734308 seconds)
    (122/224) benchmarking ("map", identity, Float64, true)...
    done (took 1.400307582 seconds)
    (123/224) benchmarking ("perf_sum", Int64, true)...
    done (took 1.246998549 seconds)
    (124/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.315538289 seconds)
    (125/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.355461204 seconds)
    (126/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.303019372 seconds)
    (127/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.312445835 seconds)
    (128/224) benchmarking ("map", identity, Float32, false)...
    done (took 1.277120834 seconds)
    (129/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.423455055 seconds)
    (130/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.216946281 seconds)
    (131/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.216664808 seconds)
    (132/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.40309934 seconds)
    (133/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.261980717 seconds)
    (134/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.235598937 seconds)
    (135/224) benchmarking ("map", abs, Int8, false)...
    done (took 1.248066314 seconds)
    (136/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.369927791 seconds)
    (137/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.899573705 seconds)
    (138/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.304444389 seconds)
    (139/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.405715291 seconds)
    (140/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.042716524 seconds)
    (141/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.247872538 seconds)
    (142/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.925331118 seconds)
    (143/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.245728986 seconds)
    (144/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.234508565 seconds)
    (145/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.340059494 seconds)
    (146/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.244166818 seconds)
    (147/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.225947893 seconds)
    (148/224) benchmarking ("map", identity, Int64, true)...
    done (took 1.388857183 seconds)
    (149/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.876475561 seconds)
    (150/224) benchmarking ("perf_sum", Float32, false)...
    done (took 1.239179601 seconds)
    (151/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.543351008 seconds)
    (152/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.325166141 seconds)
    (153/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.23901508 seconds)
    (154/224) benchmarking ("perf_sum", Int8, true)...
    done (took 1.241619506 seconds)
    (155/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.250303038 seconds)
    (156/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.329018413 seconds)
    (157/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.413014638 seconds)
    (158/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.531835588 seconds)
    (159/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.324290484 seconds)
    (160/224) benchmarking ("perf_countequals", "Float64")...
    done (took 1.251065027 seconds)
    (161/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.8852341 seconds)
    (162/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.238655903 seconds)
    (163/224) benchmarking ("map", abs, Int64, false)...
    done (took 1.294694948 seconds)
    (164/224) benchmarking ("map", abs, Int8, true)...
    done (took 1.274870278 seconds)
    (165/224) benchmarking ("perf_sum", Int64, false)...
    done (took 1.238333399 seconds)
    (166/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.243738603 seconds)
    (167/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.327226637 seconds)
    (168/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.350825213 seconds)
    (169/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.923923424 seconds)
    (170/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.257707414 seconds)
    (171/224) benchmarking ("map", abs, Float64, true)...
    done (took 1.36731322 seconds)
    (172/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.318610041 seconds)
    (173/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.241122761 seconds)
    (174/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.379017323 seconds)
    (175/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.334025819 seconds)
    (176/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.965876014 seconds)
    (177/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.35516288 seconds)
    (178/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.361487775 seconds)
    (179/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.353624024 seconds)
    (180/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.419412079 seconds)
    (181/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.241438178 seconds)
    (182/224) benchmarking ("map", abs, Float32, true)...
    done (took 1.322762622 seconds)
    (183/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.307778068 seconds)
    (184/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.928013621 seconds)
    (185/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.285747363 seconds)
    (186/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.316500222 seconds)
    (187/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.220079508 seconds)
    (188/224) benchmarking ("map", identity, Float32, true)...
    done (took 1.330585782 seconds)
    (189/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.270601928 seconds)
    (190/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.368339985 seconds)
    (191/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.25945697 seconds)
    (192/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.24207522 seconds)
    (193/224) benchmarking ("perf_sum", Float64, false)...
    done (took 1.236371019 seconds)
    (194/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.310001288 seconds)
    (195/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.271938087 seconds)
    (196/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.248282009 seconds)
    (197/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.242823456 seconds)
    (198/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.421504352 seconds)
    (199/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.084611996 seconds)
    (200/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.329815344 seconds)
    (201/224) benchmarking ("perf_sum", Int8, false)...
    done (took 1.238839269 seconds)
    (202/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.251757622 seconds)
    (203/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.282845833 seconds)
    (204/224) benchmarking ("map", identity, Int64, false)...
    done (took 1.294690613 seconds)
    (205/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.338694771 seconds)
    (206/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.350939876 seconds)
    (207/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.31313634 seconds)
    (208/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.316958692 seconds)
    (209/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.05656541 seconds)
    (210/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.23581571 seconds)
    (211/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.442203033 seconds)
    (212/224) benchmarking ("map", abs, BigInt, false)...
    done (took 2.265218854 seconds)
    (213/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.301394349 seconds)
    (214/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.24711467 seconds)
    (215/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.372640113 seconds)
    (216/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.258513611 seconds)
    (217/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.31075356 seconds)
    (218/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.217553024 seconds)
    (219/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.286682363 seconds)
    (220/224) benchmarking ("map", identity, BigInt, true)...
    done (took 1.379181749 seconds)
    (221/224) benchmarking ("map", identity, Bool, false)...
    done (took 1.250350324 seconds)
    (222/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.386840967 seconds)
    (223/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.248535323 seconds)
    (224/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.313604192 seconds)
  done (took 343.615132376 seconds)
done (took 344.745987583 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.287767215 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.417319412 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.258410285 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.257908998 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.282927342 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.238090702 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.277290612 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.247751562 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.243917281 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.2420172 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.236255596 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.246899769 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.262703737 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.275950549 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.353731008 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.254534748 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.258093176 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.243001322 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.281352348 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.301800035 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.284012829 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.28544259 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.253495481 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.259259582 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.288199699 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.288361651 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.262569811 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.241094058 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.240410297 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.281992467 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.243537147 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.262033475 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.289896977 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.292797143 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.285389139 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.244402937 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.284547813 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.41842015 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.279664239 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.278058325 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.246549963 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.291779776 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.252540438 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.252854004 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.294501201 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.254747965 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.289346983 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.369716092 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.244702808 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.232195578 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.292024134 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.305376935 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.247107932 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.232600431 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.238736152 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.366753905 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.245856397 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.293260928 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.246616342 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.287787983 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.357969476 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.294053088 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.307095948 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.292801517 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.24765686 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.265569171 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.248666585 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.305159597 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.244348376 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.289080314 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.289368571 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.251706555 seconds)
done (took 101.056311312 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.377294627 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.243367926 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.404009826 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.245975907 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.411502869 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.394181981 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.242999585 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.242119626 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.242886037 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.063564514 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.244536295 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.242992306 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.245525287 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.243484434 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.376696151 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.244806942 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.241515418 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.95463447 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.247792527 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.392428727 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.24767672 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.243572207 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.243671782 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.063651948 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.242444645 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.238607713 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.388969006 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.24383161 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.961258464 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.242997305 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.243175673 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.95932792 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.394524108 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.263521105 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.256144438 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.253426897 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.413823983 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.262083917 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.379237254 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.37909069 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.406549828 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.285658196 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.243346489 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.246993769 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.248854272 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.248766794 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.246336695 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.273114556 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.245862045 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.245574957 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.958431384 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.258371104 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.244790646 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.24766146 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.245887767 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.276582684 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.246594244 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.247264518 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.394069449 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.249312984 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.378617984 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.069351477 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.065249575 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.247810826 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.242716789 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.246557454 seconds)
  done (took 102.686138245 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.31588023 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.325038715 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.356781718 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.261326627 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.299362427 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.361832428 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.265157177 seconds)
  done (took 10.337468823 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.252701146 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.248128426 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.297282239 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.297472036 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.248087099 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.464673701 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.249321451 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.26058432 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.245651767 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.323924199 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.249010915 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.248873134 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.255518895 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.246145087 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.296850127 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.261336837 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.364769017 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.25010606 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.249498747 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.402679953 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.244999721 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.254928575 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.321839212 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.260004995 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.249405552 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.255592506 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.216015551 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.249137676 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.246373633 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.249043163 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.246455668 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.360470344 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.250703652 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.248498457 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.249252761 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.409772097 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.250131672 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.248172033 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.249077905 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.250133285 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.249609615 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.250565527 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.251578224 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.248110624 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.250123514 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.274537673 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.251064215 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.248698627 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.248953285 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.249655198 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.325076382 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.251458214 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.247023357 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.244952759 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.329197832 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.256673897 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.250272772 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.248220008 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.251069232 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.246490069 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.404935305 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.297682614 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.251630132 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.296966062 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.251024647 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.251143116 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.249266992 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.249663976 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.34356676 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.251385301 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.298808035 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.247427688 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.477216192 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.274829769 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.253547767 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.253549507 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.254764856 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.253404036 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.250051402 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.257671315 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.2490472 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.252586489 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.260518427 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.250202792 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.249578244 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.437584408 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.408911461 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.252213822 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.264080917 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.261035597 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.250158735 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.328711642 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.25297714 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.249497083 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.304877065 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.367449282 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.330912137 seconds)
  done (took 129.991619418 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.265346033 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.267025582 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.256815737 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.279357608 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.253699178 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.256755145 seconds)
  done (took 8.73674661 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.255984607 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.254646057 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.253243982 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.255584698 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.252789699 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.254328795 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.254425672 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.254741747 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.256119576 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.254189923 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.253632642 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.258356488 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.258183605 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.254989553 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.255358577 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.254826154 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.255091611 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.252962821 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.253515097 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.253697924 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.25559138 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.255593441 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.254634684 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.255574684 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.260896499 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.254789314 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.276749371 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.255584626 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.254593167 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.264014189 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.272919856 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.256497534 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.256791249 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.261479025 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.259620402 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.25733576 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.258608019 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.25567373 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.252162219 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.255195443 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.256998475 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.255206223 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.256302874 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.256509636 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.25886204 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.261965637 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.261791294 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.279577145 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.255961914 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.25765284 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.258449474 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.25813975 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.255925092 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.258278848 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.260430615 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.277808066 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.261926086 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.257322005 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.258939977 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.258654148 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.257419223 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.256922255 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.259909328 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.264183069 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.254635704 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.258945356 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.259128715 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.262409863 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.258554389 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.257814969 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.260089726 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.257351913 seconds)
  done (took 92.744956493 seconds)
done (took 345.645264909 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.01905083 seconds)
  done (took 4.182445773 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.3450474 seconds)
  done (took 3.505100361 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.412743688 seconds)
  done (took 21.577687757 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.276633636 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.372208092 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.271712861 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.261784914 seconds)
  done (took 10.345311509 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.484729003 seconds)
  done (took 3.646760535 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.251193824 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.251828242 seconds)
  done (took 5.667173533 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.487943515 seconds)
  done (took 3.651214028 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.585943788 seconds)
  done (took 3.752145318 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.279333719 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.267761264 seconds)
  done (took 5.718571862 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.241040081 seconds)
  done (took 3.403852261 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.736034493 seconds)
  done (took 15.899306243 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.255609502 seconds)
  done (took 3.422568988 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.283342538 seconds)
  done (took 3.447707059 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.670622536 seconds)
  done (took 5.833361371 seconds)
done (took 95.215364379 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.253292431 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.253275792 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.254963311 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.253215724 seconds)
  done (took 10.178182321 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.312659461 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.311525719 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.313213678 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.312123728 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.312213212 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.312371351 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.286449662 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.301372097 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.312313916 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.313691994 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.315044281 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.3124561 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.313879344 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.287368116 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.312364194 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.315981746 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.313867113 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.313871783 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.288037213 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.313943007 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.262203706 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.313880185 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.312458708 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.262220873 seconds)
  done (took 32.489635253 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.755254675 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.334196096 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.417030294 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.31427516 seconds)
  done (took 6.985431627 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.337417539 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.33954813 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.353910648 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.392482482 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.404338629 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.352445665 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.288574755 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.282687591 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.268881881 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.338549479 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.389710709 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.329775025 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.417174923 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.262722824 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.470094002 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.26240809 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.263783583 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.340065282 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.391038811 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.398636804 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.262922855 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.34170771 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.341063 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.332435611 seconds)
  done (took 33.328793103 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.270039691 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.276397746 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.263190411 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.278236764 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.263291433 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.262871017 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.265485436 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.270434122 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.263273053 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.262085723 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.264278474 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.278234556 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.266964152 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.262759879 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.271072706 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.263716087 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.269825559 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.268022849 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.263467877 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.269825611 seconds)
  done (took 26.52053033 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.258836029 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.257295958 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.609774629 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.513744801 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.259392655 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.263456309 seconds)
  done (took 13.330029311 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.333048264 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.487915082 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.271185527 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.600688009 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.691146458 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.27238916 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.268980918 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.507328539 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.799266664 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.779180339 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.324352526 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.336847842 seconds)
  done (took 18.841507227 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.268196785 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.263857037 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.277324545 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.281806997 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.317650743 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.289472075 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.273373319 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.260757076 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.3237195 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.34347704 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.290316379 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.320815117 seconds)
  done (took 20.680322007 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.357294749 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.262178165 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.275351562 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336566221 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.261548726 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.10553781 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.269372856 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.947929622 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.282339376 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.537107348 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.265283561 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.365144047 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.517196303 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.270845664 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.265346821 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.233753545 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.496338698 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.738387041 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.265098022 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.261741049 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.318192903 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.266665056 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.27997515 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.469936753 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.26896628 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.262052972 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.557800997 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.262334678 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.535414481 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.283158416 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.274317467 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.262877114 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.537220612 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.899090233 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.37978849 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.465365925 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.268276633 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.279551533 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.252201645 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.264795491 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.28729548 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.266563762 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.274208578 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.263819881 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.26596492 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.26625345 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.96983758 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.287335275 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.260731882 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.265199906 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.509985498 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.367549389 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.270293444 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.264283091 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.291035542 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.264852603 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.270063243 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.357929881 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.846365608 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.264212202 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.288558062 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.269982028 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.269081302 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.283718563 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.874338457 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.271363319 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.269727432 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.270205048 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.265325381 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.266546054 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.300316623 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.266739837 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.290368564 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.265754712 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.977138277 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.270105919 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.267425686 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.802160992 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.275133134 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.271073454 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.499717496 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.267274667 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.267708461 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.266176799 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.267707342 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.945726876 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.276284875 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.266470564 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.288436326 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.95587101 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.487225501 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.290725178 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.297811929 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.491179748 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.254322351 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.267229037 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.27564261 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.269013178 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.288054693 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.965993719 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.283937133 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.270401177 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.524898694 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.478872208 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.270315015 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.247332187 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.729557525 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.293844928 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.288184646 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.271911318 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.474744768 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.839366373 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.286734773 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.267418528 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.288510758 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.267762912 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987412141 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.277479955 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.374046188 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.26908695 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.53801018 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.03217253 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.269525977 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.337644744 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.273072261 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.269426186 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.26988191 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.270084997 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.268642397 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.464132895 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.294137104 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.283985878 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.269582746 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.269621392 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.270836999 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.277067443 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.271130452 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.493872659 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.276363007 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.550104612 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.269414158 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.269821929 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.27019893 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.493526588 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.276985969 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.610954511 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.533282332 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.274081803 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.276804697 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.285987485 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.291396873 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.375673916 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.2937746 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.273078172 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.529763615 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.275025223 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.275158169 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.269332172 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.275867438 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.275753425 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.277974897 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.277219656 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.841797625 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.250814112 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.281086812 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.162702651 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.287168363 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.342547328 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.279068034 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.47706615 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.287253139 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.290604863 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.27939606 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.279352421 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.502078531 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.28281156 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.273668472 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.356719117 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.732155975 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.85886134 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.288351851 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.274938352 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.270907598 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.2726896 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.27288557 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.274713326 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.274020927 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.478314481 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.294535239 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.281613553 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.849932593 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.277389942 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.275016343 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.286185394 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.287448864 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.280360717 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.276141774 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.272111813 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.29617612 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.281069637 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.29211199 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.419682223 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.289672767 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.275483167 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.793964604 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.281644208 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.276453037 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.275679695 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.312167682 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.274485729 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.069063833 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.539437678 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.290147642 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.524099851 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.281497598 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.293656596 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.276672851 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.277112786 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.293927307 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.299115154 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.301025144 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.287828294 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.275561832 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.282465474 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.853347451 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.993743176 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.797460369 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.290812138 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.279796272 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.280763558 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.982656728 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.295324668 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.278375538 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.508606663 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.979276923 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.295482238 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.741266019 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.304054153 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.013689415 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.53249078 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.516484735 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.289707239 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.278760478 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.545582977 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.494763243 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.314349702 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.280886568 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.283605466 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.264537387 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.818330963 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.306928975 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.361056134 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.9777085 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.294806514 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.2802286 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.331897005 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.279077636 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.667651269 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.295830616 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.278025353 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.282131359 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.288956776 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.070833127 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.28652329 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.279696201 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.879573488 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.281540197 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.759706695 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.298945724 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.485334369 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.295680773 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.285038953 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.277141225 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.30109497 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.540583394 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.530743493 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.286404149 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.292136167 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.811725568 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.152223422 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.286451927 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.281574088 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.999262929 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.290028496 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.560924744 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.286927754 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.28411379 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.287824886 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.283536961 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.28238339 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.278361902 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.290552383 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.256986874 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.761897211 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.285105086 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.29576121 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.288280987 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.284739841 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.539423177 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.297692207 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.856385904 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.513348096 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.295592085 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.307079844 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.286451032 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.28538326 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.275290706 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.283290457 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.281771732 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.310092094 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.50831781 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.282707017 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.269190262 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.295549711 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.494763714 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.283831084 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.289381341 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.522334935 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.286593662 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.296364411 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.016990377 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.317999658 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.290643228 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.29026763 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.288643708 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.306456322 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.355795701 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.489797901 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.300036827 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.294257057 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.673328282 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.309906663 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.292743569 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.299124288 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.381607659 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.289446462 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.290710455 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.062352273 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.861911422 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.998712623 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.860179608 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.541471318 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.293321525 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.295129446 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.285757512 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.447935944 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.287640708 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.560333342 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.286849574 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.303602326 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.313344036 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.289974338 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.292233764 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.503376471 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.562359774 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.286673048 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.295378133 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.292437486 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.287043699 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.297777032 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.498303166 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.764943475 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.827497924 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.289983812 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.289313953 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.999868742 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.579948578 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.288816748 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.289541195 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.287957783 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.301639816 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.311787868 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.293361512 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.288470098 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.455480303 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.538771314 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.945639827 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.317070373 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.315918204 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.804357376 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.290614709 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.547266268 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.286765325 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.516254903 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.869147783 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.979899273 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.555786592 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.360272152 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.495337245 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.292021801 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.452856505 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.288545907 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.296111523 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.291574088 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.290125328 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.289548918 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.300585948 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.872303621 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.557152219 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.295400626 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.287887259 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.326203878 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.30120699 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.513909001 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.989601681 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.515291648 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.300710598 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.297699125 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.291855654 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.870791196 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.546109818 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.295972037 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.294346544 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.524435643 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.297385837 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.314347788 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.809191681 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.289447362 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.834695056 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.263573384 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.313919086 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.295687208 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.985717074 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.870936481 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.300566862 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.781614695 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.293380465 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.299368889 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.571161811 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.297642763 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.298801635 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.571655595 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.296753959 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.295387661 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.504327544 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.869427619 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.036166209 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.302431171 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.313273671 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.299441286 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.294359319 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357143914 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.309865906 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.293845465 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.701331426 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.313356861 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.29420563 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.304763841 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.293262859 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.298463815 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.296910673 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.294253381 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.30005811 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.30520593 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.289204105 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.298882772 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388352596 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.840610598 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.312820473 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.964459513 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.620420665 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.551470128 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.299972188 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.286551558 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.299022572 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.294868425 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.295975647 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.295279943 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.298809409 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.852517804 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.300916197 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.310876615 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.299397409 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.295300759 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.50735201 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.310152976 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.508985083 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.307029751 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.314444184 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.28349843 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.296913366 seconds)
  done (took 929.488187603 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.349400019 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.322034657 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.334966044 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.303999798 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.30705896 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.375404363 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.349455108 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.404240991 seconds)
  done (took 19.950042183 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.299965348 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.310862472 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.301858925 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.311087407 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.303892014 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.756270071 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.320746785 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.306757213 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.313955548 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.302634426 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.306743083 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.283681614 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.311729201 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.300172854 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.298722986 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.313825382 seconds)
  done (took 31.552309529 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.178553228 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.402458693 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.037770024 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.30150942 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.313441409 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.302277254 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.482601856 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.324145406 seconds)
  done (took 25.548511761 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.310634116 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.30926532 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.310724502 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.310951741 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.309654719 seconds)
  done (took 7.755490977 seconds)
done (took 1177.812633794 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.304219804 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.305588305 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.304176038 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.307051014 seconds)
  done (took 6.426167345 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.285290597 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.287015974 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.287171873 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.305754365 seconds)
  done (took 9.371273705 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.968088415 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.919467365 seconds)
  done (took 5.094554122 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.779796844 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.780039378 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.778444893 seconds)
  done (took 6.545911599 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.601758961 seconds)
  done (took 2.811117905 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.192101708 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.307663935 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.972457718 seconds)
  done (took 7.680591557 seconds)
done (took 39.136297876 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.303833833 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.551473436 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.460993931 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.317007724 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.464546576 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.460250916 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.11082889 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.305308314 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.309881921 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.308810993 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.307956551 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.465567541 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.028546539 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.550156389 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.027465129 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.646119101 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.464930344 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.313581305 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.304023136 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.304275241 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.113073019 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.306842684 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.302470167 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.30430863 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.471603067 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.455386947 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.311774219 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.649712755 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.316298845 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.305578338 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.455175024 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.306449196 seconds)
  done (took 80.514118259 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.306145192 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.306441613 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.316776144 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.309198065 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.313905607 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.320138611 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.308057953 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.306589846 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.314341455 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.310551711 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.307126895 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.306145211 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.305544283 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.315704959 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.309556355 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.316531982 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.307971607 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.311454478 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.304850872 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.320106493 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.306988793 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.305312906 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.325430652 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.306028531 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.321893357 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.317513631 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.305735033 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.322973833 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.307002337 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.306123929 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.332753294 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.308980587 seconds)
  done (took 75.197132066 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.307675004 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.308101376 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.309767092 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.30945326 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.305910396 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.329024129 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.311474308 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.307423318 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.318540503 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.31968992 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.309355335 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.316362588 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.309982913 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.307894041 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.326165899 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.306372769 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.308082185 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.308222659 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.307673086 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.320084087 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.308267384 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.307899379 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.308601253 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.309014878 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.309572817 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.310925563 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.323422748 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.307043056 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.313133591 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.30826711 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.332100005 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.30776575 seconds)
  done (took 75.20646884 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.588411509 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.316006147 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.315467191 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.3092474 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.315537522 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.316435622 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.310065094 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.592044842 seconds)
  done (took 14.276844743 seconds)
done (took 246.404011422 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.309479477 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.828617935 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.359081538 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.309453117 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.337672119 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.336645173 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.532590673 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.353565458 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.528237444 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.329921092 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.355863295 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.309766842 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.086022675 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.469884828 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.172061813 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.265026828 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.172890555 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.314737391 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.891446784 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.588904895 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.34039792 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.320356519 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.156177125 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.19197045 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.301081061 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.410308879 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.412755127 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.532595932 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.472384713 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.397756141 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.829685259 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.328175744 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.323683169 seconds)
  done (took 62.084803912 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.31869861 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.43507209 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.317758169 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.319423611 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.441640939 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.318207315 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.318214567 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.318553568 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.320855493 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.319263393 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.318367 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.319925268 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.318807889 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.366707655 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.443774594 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.334736719 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.318722511 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.436759378 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.318706819 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.315785881 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.361380903 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.320009632 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.321634194 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.366801593 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.320592076 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.319040819 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.437870083 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.321431024 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.316400156 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.434374379 seconds)
  done (took 41.657564448 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.319381058 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.901426429 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.028092343 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.331755376 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.320023151 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.325543894 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.594642467 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.320923088 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.324574487 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.324492806 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.822188487 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.324051337 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.354015531 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.075550462 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.328890663 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.321459937 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.321465368 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.322921689 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.917775099 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.334681651 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.614762206 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.325846746 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.597253375 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.336614925 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.342973852 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.322335494 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.327377161 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.171268926 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.328001282 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.824628671 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.076926563 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.596461215 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.100825036 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.053047954 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.082200644 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.3279387 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.323179266 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.821120829 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.33170343 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.325851979 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.59749624 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.329491506 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.046298405 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.021982697 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.341352628 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.322264001 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.188142154 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.830018992 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.563168375 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.334889208 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.085466647 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.33167116 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.326333493 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.326317324 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.554532438 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.331647892 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.324573326 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.191403529 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.330069669 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.599187506 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.330093665 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.326721741 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.928769665 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.330259496 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.917609305 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.331254692 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.332508876 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.343608547 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.059190648 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.333184804 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.046722982 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.342103244 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.32681932 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.831343134 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.918702543 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.239946279 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.332986154 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.92660005 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.133213168 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.603984361 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.334450526 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.156920591 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.608113584 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.334860337 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.328318023 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.328348529 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.327937164 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.440535787 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.599300346 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.969588657 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.024270974 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.220122859 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.607685306 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.340007793 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.326730026 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.204394473 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.330406122 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.326556296 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.057517224 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.037707602 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.345363964 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.334668309 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.039281398 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.347363354 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.605134488 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.337320671 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.070021054 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.335887086 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.404938999 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.328285647 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.336746558 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.349543091 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.60630142 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.336763598 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.328541581 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.014596812 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.872427927 seconds)
  done (took 187.176356582 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.322802311 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.328521625 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.322000455 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.322260316 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.321527189 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.330890903 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.321740292 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.320797449 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.32832852 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.327729293 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.325193243 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.332396682 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.330029892 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.323226685 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.335033995 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.323639134 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.324150281 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.328441348 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.341268516 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.325415754 seconds)
  done (took 43.764519509 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.329900811 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.867836623 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.836878988 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.335315626 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.32779301 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.331208898 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.384840392 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.32799738 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.330105131 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.623988981 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.502500735 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.348255204 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.328774009 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.329540075 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.836384682 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.325415848 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.6254541 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.878721789 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.336782419 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.874020935 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.32663096 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.331342229 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.331909287 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.870319783 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.620210424 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.607079969 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.391442517 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.872133971 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.331516773 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.331190028 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.874753015 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.337099181 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.33249224 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.867497259 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.351617191 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.348778101 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.329570325 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.386042962 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.389482882 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.625532986 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.950215654 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.609836846 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.347859576 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.516693307 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.335413062 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.321334405 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.875426844 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.353625041 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.322827166 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.333210275 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.340268757 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.841086034 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.355155279 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.842009018 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.351804171 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.333908726 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.880478961 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.846310443 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.863063321 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.503357383 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.353447562 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.607306072 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.336223206 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.878928652 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.353790565 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.33421431 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.333813063 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.500854231 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.895574065 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.614108359 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.630923854 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.631777419 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.33972658 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.390697832 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.350011426 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.689073798 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.391706448 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.773724054 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.630736397 seconds)
  done (took 121.328024206 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.60175961 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.438493269 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.731061206 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.943202144 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.332030509 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.453876342 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.439864675 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.585396944 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.334268582 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.421401913 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.96366743 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.426769654 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.078676139 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.400693875 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.427033557 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.475598723 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.717830628 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.309295528 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 1.980342708 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.944511073 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.333302002 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.433627641 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.901043325 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.536789991 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.330498704 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.883389717 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.236547674 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.987638344 seconds)
  done (took 51.881376429 seconds)
done (took 509.107121034 seconds)
SAVING RESULT...
DONE!
