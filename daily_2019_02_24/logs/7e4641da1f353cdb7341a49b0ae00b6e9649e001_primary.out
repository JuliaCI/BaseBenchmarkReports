cset: moving following pidspec: 19492
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.343389782 seconds)
loading group "string"... done (took 0.594816125 seconds)
loading group "linalg"... done (took 7.594912349 seconds)
loading group "parallel"... done (took 0.176466761 seconds)
loading group "find"... done (took 1.228377903 seconds)
loading group "tuple"... done (took 1.906508316 seconds)
loading group "dates"... done (took 1.299437549 seconds)
loading group "micro"... done (took 0.241977092 seconds)
loading group "io"... done (took 0.987945603 seconds)
loading group "scalar"... done (took 39.988376761 seconds)
loading group "sparse"... done (took 12.688607054 seconds)
loading group "broadcast"... done (took 1.001146365 seconds)
loading group "union"... done (took 13.776281347 seconds)
loading group "simd"... done (took 4.675800918 seconds)
loading group "random"... done (took 9.417052634 seconds)
loading group "problem"... done (took 1.958184437 seconds)
loading group "array"... done (took 22.271275096 seconds)
loading group "misc"... done (took 1.993160892 seconds)
loading group "sort"... done (took 3.398426008 seconds)
loading group "collection"... done (took 19.249610226 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.557369799 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.145251538 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.13781791 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.126354488 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.187918855 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.132722287 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.142322155 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.101082177 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.905930908 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.169124776 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.142725868 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.519916806 seconds)
done (took 4.990351683 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.196467355 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.090157109 seconds)
    (2/2) benchmarking "String"...
    done (took 0.099102336 seconds)
  done (took 0.852132124 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067146931 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.130366034 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.082408204 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068606376 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068326954 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.082582863 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068024621 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067709863 seconds)
  done (took 1.239021637 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075040016 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.07055304 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.084937017 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069365153 seconds)
  done (took 0.972528258 seconds)
done (took 4.004824769 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.940249148 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.254652797 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.19478069 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.488179835 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.134592322 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.19195264 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.67050629 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.38601618 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.21589858 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.102621799 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.108908169 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.392879196 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.109253317 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.747124252 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076585764 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.106907208 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.160163285 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.432226184 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082096777 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.0846587 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.105707431 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.141286181 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.101600886 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.079044629 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.16875265 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070272307 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.155959807 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.095519181 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069338786 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.252667202 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.190197706 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.68700748 seconds)
  done (took 10.708970465 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.10090115 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.121559686 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.071050731 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.142535831 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.121689272 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.072159918 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.074422463 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.083958519 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.094627713 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.163041405 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.118491815 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.126110482 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.06782252 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.071832296 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.102951943 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.232220773 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.092295688 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.103775207 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.072339289 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.093014208 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.110620413 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.099967578 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.082291981 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.096251658 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.150856689 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.193299283 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.099149135 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.112873969 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.070323255 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.098279684 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.13063291 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.134023947 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067093704 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.08399933 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.16033324 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.096195752 seconds)
  done (took 4.594919182 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.110123652 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.177197455 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.094223305 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.156586524 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.086523284 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.130377201 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.067338674 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101025481 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.2539502 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.160079638 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.495537298 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129574477 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.089090814 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069463894 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.088046149 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.06925853 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.628710433 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.145930987 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.124158932 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.087012287 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.092996277 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.072427858 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.361515241 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.083136296 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.068914584 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06998262 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.0763451 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.150987304 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070088071 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.280262063 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.090531153 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.089868132 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120617668 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.178366857 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098973234 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.100835853 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.128798289 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068344791 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.084937812 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.176255436 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.076093384 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.084733118 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.091688302 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.123392964 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.123660474 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.070302927 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.083393639 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.186253503 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.068558075 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.101354793 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.95556939 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.165813588 seconds)
    (52/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.09661848 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.111995177 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.067681225 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.30109657 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.092135454 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.08607237 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.066096339 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.259915134 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.188993762 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.085542746 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.068995159 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084297654 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.070785959 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.371044613 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.068579352 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.735824037 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.0732337 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078859292 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.087112045 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069366051 seconds)
    (72/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.081331736 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075628562 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.091071923 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.087268611 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.06831038 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.087223434 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.068464573 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.084269709 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.070166022 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.10459764 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.212703533 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.071077558 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.08543388 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.067469805 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.088714217 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11541801 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.08566049 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.067961805 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117924596 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071815758 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.069146068 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.122591063 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069479029 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.08297067 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.088087304 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.086652829 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.128906027 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.068924855 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.13039042 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.069844978 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.115334536 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.077845555 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11605606 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.097339241 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069458551 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.1586653 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.067308996 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.08316275 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068741075 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.083262418 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.07072205 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.070540985 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.100423619 seconds)
  done (took 21.564922459 seconds)
done (took 38.649786566 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.313730233 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.095801963 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.096686343 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.095333021 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.078902661 seconds)
  done (took 1.432607171 seconds)
done (took 2.154146498 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.151447634 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.103504164 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081936691 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.099282936 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.082601074 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.1046461 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.118859903 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.082765244 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.119645254 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064816861 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.116091142 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065184265 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.081680598 seconds)
  done (took 2.026058092 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08379764 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086224134 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.087499266 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083116736 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080242439 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083429346 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080833015 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106797496 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081115591 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089826522 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065564553 seconds)
  done (took 1.645987274 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082488436 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084274305 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086468885 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081832101 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.081387737 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082110027 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080914457 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.1028232 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082413554 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090343884 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064565244 seconds)
  done (took 1.642554484 seconds)
done (took 6.030440497 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.080301556 seconds)
  done (took 0.794751782 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.751259414 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.24246794 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.08557191 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.138065961 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.224131942 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.159379208 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.457456629 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.113063731 seconds)
  done (took 10.097107223 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.103423107 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.100357109 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.069821518 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.087675044 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.071180525 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.089982932 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.072949905 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.07399471 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.086276971 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.073917288 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.084606621 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.074696479 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.085379868 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.070984466 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.084256801 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.072514283 seconds)
  done (took 2.087555013 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.10572175 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.104812552 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.091771438 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.077033209 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.090144164 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.074574305 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.092633521 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.077269841 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.087180132 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.074872808 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.092468881 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.076404315 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.088444194 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.067803269 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.090921881 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.079548938 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.087939988 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.07733717 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.092290118 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.078155402 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.092047978 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066939921 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.08851642 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.090701935 seconds)
  done (took 2.879352598 seconds)
done (took 16.579914455 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.134534412 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.077432174 seconds)
  done (took 0.933225127 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.083579482 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.099600784 seconds)
  done (took 0.915159785 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.085882266 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.081860879 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.092950412 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.09443492 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.082571028 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.068722834 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.103709014 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.068126715 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.082068518 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.068619479 seconds)
  done (took 1.560387065 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.070653802 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.094777305 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.072227224 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.098069596 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.07577825 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.080112388 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.075402732 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.085351495 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.081354544 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.079637364 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.073224315 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.099517355 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072597704 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.100374219 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.090662323 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.071001761 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.08757928 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.07001794 seconds)
  done (took 2.211970479 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.067771235 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.069181228 seconds)
  done (took 0.87080826 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.069506234 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064951796 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082776663 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067829065 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.079911734 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063870861 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.080368052 seconds)
  done (took 1.242923144 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.412214878 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.10977951 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.265410198 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.073175893 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.10657303 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.297129363 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.068052836 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072410922 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.088509654 seconds)
  done (took 2.267902488 seconds)
done (took 10.726523765 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.082202439 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087093076 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.111681801 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.442662462 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.107214159 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.068173408 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.14477209 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.215317691 seconds)
done (took 1.992808531 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.127696086 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.631000168 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.416991481 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.232652921 seconds)
  done (took 2.017657194 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.386345044 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.091927172 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.073021957 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068194316 seconds)
  done (took 1.356614703 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.068082341 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071869532 seconds)
  done (took 0.882635413 seconds)
done (took 5.120689461 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.098942353 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084105984 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067259975 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.068465712 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.084803065 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 0.066500601 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.06809546 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.082707622 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064993655 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.082641775 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.068254053 seconds)
    (12/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.064816037 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.083025469 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.06736644 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067844596 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080047984 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066155117 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083107872 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065146489 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06605947 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080469144 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068306842 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.066103499 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.080932126 seconds)
  done (took 2.555206965 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.088222703 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.083911121 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073565019 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.088384191 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071882993 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.088941394 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.076879599 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067955734 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.08926355 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.070238458 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087529692 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.073221828 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.084306705 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.072696557 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085077301 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.073041936 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.088675871 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068785526 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084358922 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.072322697 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.073062458 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083320833 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071793452 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088282615 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071316913 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.086802612 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.070186282 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.084213878 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073716522 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.086856147 seconds)
  done (took 3.121403416 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.072916304 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.065720661 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.081441884 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072978145 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065230403 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.083171898 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.065130955 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.08140641 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.066485872 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.066509875 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.082926123 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.064896102 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.066353366 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.081145677 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066515427 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.085106451 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.082762866 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.066001661 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.081552576 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.065897083 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.084702948 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.065487109 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.065593213 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.08147658 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.065744327 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.065772779 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.08104954 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.064959103 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.081506925 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.065652937 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068815828 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.085460163 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.065762904 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071914207 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.085110019 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.065158145 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.085001801 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.065490073 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.066283482 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.081065291 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.065441371 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.066253928 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.080880206 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.072798626 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.065781074 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.083478356 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065713216 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.083052861 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.066406451 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.06812649 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.080716882 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.065748778 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.082498134 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.066228627 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.069894744 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.080502085 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.065857647 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.065426604 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.081909646 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.065005315 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.08026868 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.06506683 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.067929392 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.082091724 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.081567044 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.08766586 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.066260991 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.067779636 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.082428458 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.067667886 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.067052923 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.095390099 seconds)
  done (took 6.024560665 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.120457937 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.095046423 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.083626425 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067773987 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080242152 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.066164215 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069538104 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081491936 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068094135 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.087212039 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066466384 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.083030576 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068101598 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.081289389 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081840292 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067173649 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.087917159 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064252041 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065901587 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.085015571 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066850169 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.085257928 seconds)
  done (took 2.471717781 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.191741464 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.088969618 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.112739893 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.093454532 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.08704365 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.076913289 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.087570638 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072192988 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072378012 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085999354 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070278942 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0878254 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070382733 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086454988 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071113471 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.087069513 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071773081 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086971724 seconds)
  done (took 2.348431971 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079250391 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.068207968 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.108063531 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068617842 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.084395803 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070430713 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090122817 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076383001 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.086481426 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068910171 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.093055298 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.181105409 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.086353056 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068737796 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086407957 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068877177 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.070321479 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083882287 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076299689 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088875504 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073959422 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093270427 seconds)
  done (took 2.620989004 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083975992 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070422246 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.103576035 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086541319 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063807288 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066431136 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.091805734 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068875477 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.09105759 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.069667033 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084275187 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.068123538 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.073220663 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.083749024 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.073247418 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084519144 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070672703 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.084508445 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069873654 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064753508 seconds)
  done (took 2.302393504 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090529257 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085313024 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069708511 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094481954 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069809776 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.086160024 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078584655 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.086004991 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.06970017 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.110573962 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069348794 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.086830497 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079380556 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.091709122 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070669467 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094632906 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.093663048 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078168793 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.085485805 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069455657 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.110968033 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069859176 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.093639611 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069085459 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.086531598 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069679468 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084922176 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074927068 seconds)
  done (took 3.07530141 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068428375 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068130847 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.08174859 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.06559279 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.066177814 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.0826174 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065762807 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.066005143 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083989713 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065724623 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.083823647 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.068601622 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067660578 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.084262578 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067535326 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.068430012 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0844038 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065655127 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065462741 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081651482 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.067636762 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084052253 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.067882256 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066110923 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082185044 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.068402958 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066177807 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.082166014 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068386612 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066434927 seconds)
  done (took 2.928012398 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.078520338 seconds)
    (2/2) benchmarking "in"...
    done (took 0.092584947 seconds)
  done (took 0.928915802 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.067118405 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08326842 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.081730124 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072091539 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089319105 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06907313 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.094147319 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073528816 seconds)
  done (took 1.385197809 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.084488535 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079703643 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.086210108 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.097291451 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.079580907 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.086302955 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.159718341 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.08519889 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.075375718 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.084040054 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.082056129 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.083869452 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.07381199 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068499659 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.091011499 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075200514 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.082727774 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.075598726 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.071185132 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.084196272 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069473702 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096863922 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071560394 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.082159444 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.069831534 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.077785592 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.097611738 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.070075809 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.08780303 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.07618922 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089685772 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.063132468 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.084930611 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.06930483 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.066656296 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.095080642 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085278791 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088626268 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.079053404 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086061644 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.079651292 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.080933177 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.074082291 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.091467855 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078636243 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.070277984 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.085339229 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.063910017 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.082390446 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.07108331 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.064305451 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08507837 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.063587529 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09283833 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.072041499 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096027209 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.067351153 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069851479 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.087207916 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.072231563 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.091441267 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.070504343 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071729324 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.084035265 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075609841 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.08917638 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079027417 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.081100801 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062476368 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.066594201 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.095157645 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092699606 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.090554728 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.070227416 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.086310412 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.066302475 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088179707 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070405313 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07551172 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.091278228 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.069230224 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.091151539 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077144987 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08535665 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.071734862 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.092955061 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.066035375 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.07172847 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.083286894 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085788226 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.084319334 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.067021164 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.082535845 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.07992913 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.072723176 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.084557251 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066671342 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092924633 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062426371 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.070572075 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086390367 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069885848 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.096298637 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.07372118 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090623338 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.078632387 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.093250153 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069423934 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.088665175 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.065088955 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069490921 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.083889461 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.076665932 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.079249424 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071792443 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.069960123 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.085775327 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.077435642 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.083564855 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.068749224 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092892756 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074085283 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.067755117 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.08176769 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071290944 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.085701209 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.07309064 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.093696103 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.06740399 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.064730762 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.080364598 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.07214592 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.085282652 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.072769411 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.090568496 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072616543 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.063641943 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.082751074 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.073576944 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.095749156 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.069129445 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.086626285 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.075793465 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070829434 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.084461386 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075908264 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.087975931 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.068130742 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074716273 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.085695003 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063973856 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088528723 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071851349 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.083887557 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.072101042 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072651698 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.088211105 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.069815088 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.08382138 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074043965 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.085873588 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.06831324 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068610642 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.084112906 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.080426226 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.088062122 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.064023267 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.066114146 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.093338795 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066594723 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.085082428 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.068291978 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.071312327 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.085882862 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066597095 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.084402977 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.07101057 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.096389212 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.07328141 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087075838 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.074302669 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.097008099 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.068908132 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.071063573 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.085314346 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070495172 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.086634647 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.078388164 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074399272 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.090411312 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070916087 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.08215491 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074892178 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093001082 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.068088724 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.066590876 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.084146632 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.072285881 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.091389897 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.073337481 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.086611883 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067580485 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069285629 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089114958 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.072092384 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.085365906 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.06825742 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.090684558 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.068189363 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.093034258 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070867614 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.079697525 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088391128 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.065240033 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088853287 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06658149 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.091628278 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.064080585 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.067411148 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.084988831 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.069964573 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.067685657 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.089214937 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.063004143 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093037796 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076760292 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.085472194 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.068710254 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.069546658 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091727642 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.071583601 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.089028368 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.072457704 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.091991273 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079311808 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.068592925 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.088311493 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.079701646 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.08626064 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.062970758 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.091300111 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.067850451 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.068019042 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.084824501 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.066859575 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089513122 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.077783373 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.093904719 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.063144072 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.071983996 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.084361109 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.068046866 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.080016239 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.074747818 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.072694134 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.086724378 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076499138 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086939698 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.070734828 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072758442 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.085234237 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.070084075 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.087475509 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072493788 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.086076753 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.071332352 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.068236089 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.088794212 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.068246478 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.082963669 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070803452 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.069382996 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.085486691 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075123018 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.085434943 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069079016 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.07157664 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.085903213 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069699115 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.086186646 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.068436321 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089554456 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070318051 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.069572336 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.088244662 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.065520408 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093021918 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.068953618 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077037784 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.085848523 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.065702196 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.091597422 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.071717495 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.091272627 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.069828783 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.07027021 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.087426393 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.069060279 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.088352929 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07649451 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066533821 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.096264871 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077764577 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087062326 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.07226296 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.086810773 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.070467261 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.068661718 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.086611346 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.07027476 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.086440102 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.068988148 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.090826328 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.071876389 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.069501416 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088357085 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.069753269 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.085628727 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.07050429 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063964843 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.085526118 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.068299205 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.085103884 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.080516618 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.069455066 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.086035549 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.06867171 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087272061 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.067806586 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.065191307 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.094280151 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.094203779 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.069912409 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076520508 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.08468601 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.070973644 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097481897 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.066678062 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.083139756 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.067025692 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.067327961 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093704454 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.069577901 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.095542176 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.06946738 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.067780577 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.083502654 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.069971006 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.08459079 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.063879813 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.067906096 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090308551 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.06795636 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085157212 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.069283511 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.071829036 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087091056 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.079483569 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.086222491 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.070041808 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.086673144 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.066470041 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.06875245 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.08591993 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.071781126 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.08675326 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.067380179 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.066543169 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.086118996 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.07024354 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.070375651 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.085429063 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.070752944 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093462002 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.0683597 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.088890663 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.072957404 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063522021 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.089083272 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.06942843 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.085300342 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067780447 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.072472134 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089986692 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069852271 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.095323575 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.068718972 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087374965 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06930459 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.067239664 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.086893999 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.068748951 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.08706772 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067834235 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.070567068 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094846733 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.066960245 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.090005583 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069279588 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.08650976 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.076927682 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.069951402 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.089665255 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.077275338 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.086618997 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.071251644 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.094914779 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.073416384 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088804674 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070645948 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.071019308 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093213217 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.068480845 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.092702896 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069299418 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.070544475 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.088550078 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.067628949 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085695643 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.06935328 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068197926 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.093226499 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.070906511 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.08612915 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.068091334 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.067986645 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.087358738 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.072797211 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094037577 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.072052295 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.08992812 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.065470714 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.06647051 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087409723 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.067150806 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.088111276 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.07275822 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074247407 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.089821076 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068951189 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.084758019 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.078345433 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092062548 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.073789616 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066303102 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.090615296 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.070376782 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.089034828 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.070343002 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.069219931 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088714533 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.073962809 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.089010695 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.068409167 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094024671 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.0734128 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069708131 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.088599014 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.070436095 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.086911549 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.064842555 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.069004544 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.088612552 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074914898 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.089181681 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069332693 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097790657 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.066390297 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.069082252 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090698504 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068919094 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.090815356 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.064361993 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.07019422 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088182672 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070404921 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.081955815 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.069250076 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.068098696 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.088494272 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.067610972 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.081572979 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079676784 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.096159723 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.072681458 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068766904 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085096474 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.064740928 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.081872854 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.068718695 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070257488 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.088377549 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.07914476 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.086125916 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.068247534 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.081737065 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069288208 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071692609 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.089510417 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.066622372 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.0821379 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.068768396 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.072272212 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.092442601 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068330079 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.086766178 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073387501 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.0707919 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.08508071 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073154155 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.083135255 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.072878099 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.1004296 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.069478035 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069009033 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.09402665 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076737416 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.087658448 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.064176789 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.08706878 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.073152139 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069591514 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.088117092 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.069925833 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.104044927 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072414362 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.087039444 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.067559883 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.071725314 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.08657511 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077437102 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087905839 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.070670677 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.09169222 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.071123906 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.095931079 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072189221 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094817077 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.073193042 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.072524555 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.085936057 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069666413 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.084955202 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.068695853 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.070987102 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.087828034 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.073759325 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.095124153 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.069485358 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098954963 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.078181984 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.08861173 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.065803466 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.068609796 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.086484045 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.06473266 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.070014433 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.08554172 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.067690998 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.085048221 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.068876851 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.070248628 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092776942 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.071208104 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.088324813 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.069855042 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.063363908 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.090240811 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.072151009 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.088723267 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.067210842 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.06946199 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.088462123 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.073952515 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.091565045 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.066934154 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.088968694 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.070922035 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070058772 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.08329133 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.076499431 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.08684505 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.072247168 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.068754973 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087415888 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.069996935 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090581352 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07511844 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.088001591 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.071355463 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.078491717 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.090094331 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.067000648 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.084778554 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.074803946 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.067343997 seconds)
  done (took 47.476556446 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.112086448 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084317099 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064114898 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.082861913 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078365625 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083953291 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064596727 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065326978 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.083828173 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067988448 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.082504475 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065332787 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.09223659 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.090369129 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096834131 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.087096978 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065427966 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066666161 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.08233436 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066104345 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.092630359 seconds)
  done (took 2.477086082 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.090330326 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.103266115 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.079917283 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.102065512 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092303092 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.081831084 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.097289672 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080683191 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.102671306 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094200334 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083396185 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097951579 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.075895389 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.094802921 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075577794 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095766295 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.101085786 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075623455 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.098987731 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079815871 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.096594675 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.097673094 seconds)
  done (took 2.795599557 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.068965779 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067727756 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.088778683 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063719009 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.06819184 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.082050448 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.07279384 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.08493106 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.072061707 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.067953606 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.094348597 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067850549 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.088781105 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.066429203 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067528704 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.085234219 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.134692305 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.071659138 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.086534971 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.070620191 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063724266 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.089367484 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.064346717 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.08235202 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.067330634 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.072890561 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.088802176 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.06777604 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.086723233 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.067915139 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.068263455 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.085095385 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.070175322 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068552978 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.085623148 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066772166 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.086282786 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.068571609 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063816123 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.085564691 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068739065 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.082693457 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.069582578 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.070414935 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.084508725 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.066927464 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.087820137 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.068306739 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.064374302 seconds)
  done (took 4.534047526 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.089049077 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.143304587 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.089120172 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.124476229 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.084466184 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.095095083 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.072552504 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.124476232 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.085809968 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.067595795 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.105805844 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.084669857 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.087580923 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.0746963 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.093552943 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069916706 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.089166044 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067778774 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.091311894 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.069718246 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.091945874 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.076974853 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.102546537 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.101747843 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073726375 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068566067 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.086897743 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.074193047 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.100708984 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.092317847 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.074022844 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.093266478 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.085602603 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.093352152 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068547217 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.09008945 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.087176774 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.088253143 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.071096546 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.08459629 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.07191594 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.092327531 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.076387294 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.104595114 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.070028315 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.093818155 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069732356 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.085424384 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.083822504 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.090083235 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.077818905 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.103259093 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.090708951 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.070245498 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.092563031 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.085957928 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.088250338 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.067621318 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.090359151 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.083764068 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.0852168 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.074147746 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.10201117 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.070633906 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.095528944 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.084780557 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.093114886 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.07289403 seconds)
  done (took 6.821065662 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.078510461 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.093872821 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084922207 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.104178089 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.09376371 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.076621565 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.09454343 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.076849363 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.09544416 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.081640279 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.093922992 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.117902324 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.0708792 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.097290257 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.076505769 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.095030861 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.075359622 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.094879734 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.093882702 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075888138 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.094663791 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.084956018 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.094119029 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.103839903 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.106998273 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.088960616 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075358609 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.09426242 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10342253 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.076494041 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.106452421 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.076065463 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.094738878 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.10328086 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.088832524 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.093819825 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068038869 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094657618 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075854965 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.094814859 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070348113 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.104604475 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.094548514 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070952258 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.094408045 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.076287878 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.103603585 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.106715658 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.079657474 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.098911102 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.0755153 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.104388186 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.095225048 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.076468089 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.103255368 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.128987095 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.084906351 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.103698278 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.094577917 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.085777313 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.103678779 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.110926552 seconds)
  done (took 6.47401502 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092250154 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097506811 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.100050055 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.065537836 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06713962 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.093145543 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067394646 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.086210105 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.079000157 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.096609155 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082532397 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092554315 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077887322 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099680344 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.09217351 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077017357 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091127133 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.074410693 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095579731 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073612592 seconds)
  done (took 2.515263584 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.078172141 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.10637608 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.069933271 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.094199407 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.072613959 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.075163551 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.090558404 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071290236 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088975408 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073042402 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099486857 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.080926466 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089252379 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.076504618 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.098514738 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.076383692 seconds)
  done (took 2.160710574 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.083093614 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.09946357 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.08496099 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.089496881 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.069112898 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.085315636 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.069104185 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.065751169 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.085644683 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.084089599 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.089703794 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.070918679 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.088732148 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.067653525 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.066051083 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.091714827 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.065308554 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.086264968 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.069616686 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.104207474 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.08083091 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.086860876 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.069997797 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.090823661 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.070639702 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.094724532 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.070177629 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.067418983 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.086524468 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.070007577 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.08860913 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.07693138 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.085514665 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.06788361 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.086761344 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.067842392 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.069351959 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.088048263 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.072371695 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.087761332 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.068557436 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.088081537 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.069813102 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.07100809 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.084595043 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.069857163 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.084508017 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.076544065 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.068313737 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.089716286 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.069339399 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.090854728 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.070196631 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.098608293 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.073080994 seconds)
  done (took 5.189822087 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083349264 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.072250316 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.084340819 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067671888 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.091938795 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.071761585 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.072745428 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090440654 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070894848 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.08599611 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071933755 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.09165826 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072075693 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072253862 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.090943099 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073124092 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.083719155 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071358038 seconds)
  done (took 2.242066664 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.075680925 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069334299 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.09631052 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069117469 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.089033084 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072029326 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064466712 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.087231713 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068202995 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.088948072 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070352015 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.071599808 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086881433 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.071969601 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088332959 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070197649 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.071245173 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086708664 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069182577 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084522629 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.072843837 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067602957 seconds)
  done (took 2.516567941 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.07520946 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.096937946 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.169237437 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.11154522 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.085655393 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.102995406 seconds)
  done (took 1.467805994 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093733766 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104015748 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070369497 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109740414 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078698343 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090613235 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071041922 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090007601 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081412569 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104557138 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071906563 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100146176 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099824498 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083910411 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096832524 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07761629 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091201934 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070719444 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08953168 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110613903 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072630309 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099850987 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072667041 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09064506 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071573711 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100035115 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100438777 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085509721 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089425954 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081520387 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096520918 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070507051 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100584286 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105152354 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073152753 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100570701 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071684823 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110266609 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096817648 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080641393 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.0915719 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0785965 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099772317 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077097573 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10072849 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091094776 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077803219 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09052606 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072195023 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118031562 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09667009 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080937846 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096826626 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100629216 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082772937 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115960989 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104318425 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081211241 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098059574 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104846448 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080709003 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096291305 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099362715 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087165192 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098036186 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080764185 seconds)
  done (took 6.785074028 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086700212 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.108062652 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072164406 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105324084 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099917052 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072049159 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090787638 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072048964 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090740043 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071890863 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133959342 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071903029 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099699071 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099397741 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071863261 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091252454 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071844544 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09954945 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071348517 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117075487 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09093138 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081104861 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099170282 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099666061 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087126204 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097067775 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071414175 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091445851 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089710576 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072770587 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096130736 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073374471 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099784343 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.07109768 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09904862 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072237217 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090435006 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076778105 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091269794 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095644007 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081564833 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110014403 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071338675 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091124503 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10517531 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071771826 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091093783 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071173063 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090564466 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071481535 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105473167 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086451655 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104891408 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099425534 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071923585 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091833909 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071356283 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091096865 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071864611 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09755022 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098868637 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072526898 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118151429 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090898772 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072530625 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10037765 seconds)
  done (took 6.678336647 seconds)
done (took 130.636670022 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.202167718 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.185868063 seconds)
  done (took 1.214424883 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071633556 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.119256432 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.081157326 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.130709641 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.090012543 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.103200502 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.121233258 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.082661701 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.069429314 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.089041127 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.070405944 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.090931755 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.134538813 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.069879073 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.090210328 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.070670856 seconds)
  done (took 2.31780176 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.106409651 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.202672652 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.113751757 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.067817739 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.103455686 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.081360869 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.089005212 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.080896552 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.095383984 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.067749083 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.101211234 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.079573951 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.067714499 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.099005207 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.09496586 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.082508972 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.068191578 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.101587327 seconds)
  done (took 2.540594086 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.098301886 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.111238491 seconds)
  done (took 1.045703546 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.205036961 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.125222593 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.211108212 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.483995153 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.247805637 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.29457468 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.177229992 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.177265725 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.159235305 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.175705012 seconds)
  done (took 3.09055982 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.103501215 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.176791696 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.323747793 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.143655423 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.091035466 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.120678949 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.143888958 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.113251558 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.085934591 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.105534325 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.105520147 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.081173128 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.121210175 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.078532994 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.098479124 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.079396614 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.125118631 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.076844294 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.097706775 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.079324599 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.121728367 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.069245802 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.098199732 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.076399707 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.101816589 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.082098843 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.088589312 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.069268108 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.097719853 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.077918094 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.102216017 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.118379242 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.082974322 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.136839686 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.106028288 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.137744285 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.100958102 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.075910631 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.077761098 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.095163817 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.081393593 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.101374908 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.107663277 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.081685415 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.069013305 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.100017214 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.06828632 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.088753577 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.08355344 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.101697047 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.083800603 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.10177024 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.135862325 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.100644619 seconds)
  done (took 6.410063931 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.769954524 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.138634313 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074862695 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.832989699 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118295744 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086535455 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.757225899 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.096440486 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.244909754 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.775750297 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.114788161 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.080685783 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.214490755 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.224686024 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.963651721 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.300784983 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.660719642 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.111337184 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.113011374 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.136774804 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.165975176 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.15999147 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.154857555 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.444054046 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.09887155 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.074898701 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.142007242 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.100530167 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.144453701 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.108397278 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.076293201 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.161808842 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.255651565 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.166671202 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.098428326 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073028542 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073821916 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.175318766 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.235728181 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.19805896 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.16273155 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069778547 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.093292907 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.146162178 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.136507111 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070433725 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.14789829 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.178941209 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.155393194 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.076927099 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.101738794 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.147793102 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.147004347 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.149425899 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.103194371 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.304076696 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.300438522 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.074502858 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125921017 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.107930084 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.231659263 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.106683468 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.189139499 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.142918051 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.196540885 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073697724 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.807202758 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.152765839 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.0937398 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.078800744 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.12501696 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097505347 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.148518346 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.148536492 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.374640349 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.150143477 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.076915207 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093540487 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.216211111 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.107146942 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073610462 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.14639206 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.098971178 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.127935942 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.152137888 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.154270256 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.155397995 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.240261691 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.151843649 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.147419238 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.097575207 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.12926579 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.07920357 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.201073997 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.202707544 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.146941393 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.197066355 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.168354792 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.148152314 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.154148652 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.080485635 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.177022665 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.125389363 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.085339541 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.144352536 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.200477026 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.128828767 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.106166515 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.077820881 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.145033913 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.131591928 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.109893204 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.146959306 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.156580011 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.487503891 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.153833764 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.070497932 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.110375018 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.146824486 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.147759261 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098917672 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.225831982 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128718412 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.154103574 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.127022112 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.090797205 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.12541307 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.148218147 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.083662647 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.127511429 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.166512346 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.080256288 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.222076039 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.199930146 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.082720058 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.225016368 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.16683709 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.079966181 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.156150715 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12496426 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.152249537 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100928312 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.143761985 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099167805 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.798238536 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.170744892 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.127388196 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.076775528 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.182850875 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074044532 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.106539726 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.086833181 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.09075944 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.78422563 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.110635811 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.10370794 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.086563192 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098574448 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.128372392 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.143632332 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.07698048 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.166809797 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.191913316 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.101067088 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.12452095 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.08779232 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.144920603 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.09924055 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.107692372 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.087599568 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.107224307 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.128513274 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.076407788 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.107094076 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.154785651 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.14710308 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.202577415 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.550435571 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.094021408 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.087196558 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.211764717 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09378985 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.252794235 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.143763431 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.207440889 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.150117696 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.104172801 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.296386209 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.151424102 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.181142617 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.089127167 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.157227837 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090966489 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.14192519 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.148175343 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.094563311 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.079188276 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.147063233 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.173131775 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.150921989 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.96649974 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.074668327 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.215810541 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.091547671 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.157202097 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.079016689 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101435147 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.280905767 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.074498103 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.155023047 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.149312696 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097182247 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.107669843 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.678666017 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.086699093 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.165668067 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.078991135 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.204381954 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.149317226 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.14257103 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.164687449 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.080521645 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.146631742 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.195716932 seconds)
  done (took 42.121507083 seconds)
done (took 59.569882223 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.284205378 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.196719763 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.259521116 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.150568696 seconds)
  done (took 1.825804169 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.150390163 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.109653375 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.126562036 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.088090656 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.129577177 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.068387322 seconds)
  done (took 1.530647212 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.433840401 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.282223389 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.242648505 seconds)
  done (took 1.821506025 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.307591149 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.238025718 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.463306014 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.308159107 seconds)
  done (took 2.286245831 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.198637888 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.118512451 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.09153538 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.087610494 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.189529684 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.248939871 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.131839869 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.193829054 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.103109417 seconds)
  done (took 2.270359271 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.184197773 seconds)
done (took 10.778143342 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.270372562 seconds)
    (2/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.109643673 seconds)
    (3/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.196324944 seconds)
    (4/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.20493325 seconds)
    (5/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.126625237 seconds)
    (6/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.106883291 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.236934829 seconds)
    (8/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.168792267 seconds)
    (9/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.20522098 seconds)
    (10/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.142236345 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.085504377 seconds)
    (12/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.116043731 seconds)
    (13/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.251322145 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.080682763 seconds)
    (15/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.092911913 seconds)
    (16/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.114458141 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.130779225 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.078745977 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.122370641 seconds)
    (20/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.216847429 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.122381643 seconds)
    (22/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.146841997 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.109986935 seconds)
    (24/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.100615125 seconds)
    (25/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.0767954 seconds)
    (26/309) benchmarking ("sort", Float64, false)...
    done (took 0.152925764 seconds)
    (27/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.174049025 seconds)
    (28/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.071074977 seconds)
    (29/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.084136677 seconds)
    (30/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.177667479 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.067685434 seconds)
    (32/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.099945666 seconds)
    (33/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.223940118 seconds)
    (34/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.074005986 seconds)
    (35/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.141274464 seconds)
    (36/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.118652655 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.122818727 seconds)
    (38/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.075467943 seconds)
    (39/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.122389629 seconds)
    (40/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.118956268 seconds)
    (41/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.070011962 seconds)
    (42/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.190138905 seconds)
    (43/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.081467571 seconds)
    (44/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.183071284 seconds)
    (45/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.101418469 seconds)
    (46/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.092740056 seconds)
    (47/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.175309349 seconds)
    (48/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.230929342 seconds)
    (49/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.055476639 seconds)
    (50/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.097901833 seconds)
    (51/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.121279469 seconds)
    (52/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.164583454 seconds)
    (53/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.096790871 seconds)
    (54/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.102302031 seconds)
    (55/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.186413136 seconds)
    (56/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.103736776 seconds)
    (57/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.100547391 seconds)
    (58/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.198741754 seconds)
    (59/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.090155096 seconds)
    (60/309) benchmarking ("sort", Int8, false)...
    done (took 0.17021027 seconds)
    (61/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.190583984 seconds)
    (62/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.124391256 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.116939024 seconds)
    (64/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.071068677 seconds)
    (65/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.127564142 seconds)
    (66/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.063266446 seconds)
    (67/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.221539036 seconds)
    (68/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.132734802 seconds)
    (69/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.073203004 seconds)
    (70/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.218610851 seconds)
    (71/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.053610252 seconds)
    (72/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.096726866 seconds)
    (73/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.063644555 seconds)
    (74/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.07676703 seconds)
    (75/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.077800207 seconds)
    (76/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.203934629 seconds)
    (77/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.139387224 seconds)
    (78/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.075766863 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.149460649 seconds)
    (80/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.075216387 seconds)
    (81/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.15219677 seconds)
    (82/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.102215517 seconds)
    (83/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.069771065 seconds)
    (84/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.127293396 seconds)
    (85/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.137894674 seconds)
    (86/309) benchmarking ("sort", BigInt, false)...
    done (took 0.214422695 seconds)
    (87/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.078512178 seconds)
    (88/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.097235565 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.108693306 seconds)
    (90/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.203150911 seconds)
    (91/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.189656467 seconds)
    (92/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.069715377 seconds)
    (93/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.053944195 seconds)
    (94/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.105642808 seconds)
    (95/309) benchmarking ("sort", Int64, false)...
    done (took 0.069461341 seconds)
    (96/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.10301821 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.123953536 seconds)
    (98/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.116234866 seconds)
    (99/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.085466154 seconds)
    (100/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.165092057 seconds)
    (101/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.078637506 seconds)
    (102/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.163194736 seconds)
    (103/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.096361769 seconds)
    (104/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.076754574 seconds)
    (105/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.12725046 seconds)
    (106/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.171490929 seconds)
    (107/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.07608215 seconds)
    (108/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.092748429 seconds)
    (109/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.094236806 seconds)
    (110/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.104275298 seconds)
    (111/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.074441797 seconds)
    (112/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.090330826 seconds)
    (113/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.073856429 seconds)
    (114/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.123077468 seconds)
    (115/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.103863459 seconds)
    (116/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.074923747 seconds)
    (117/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.134105839 seconds)
    (118/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.07758714 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.185434297 seconds)
    (120/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.192207632 seconds)
    (121/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.146603902 seconds)
    (122/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.101733441 seconds)
    (123/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.117920755 seconds)
    (124/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.099477218 seconds)
    (125/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.07627805 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.111488005 seconds)
    (127/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.053804969 seconds)
    (128/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.078696646 seconds)
    (129/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.171735836 seconds)
    (130/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.128436994 seconds)
    (131/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.143043704 seconds)
    (132/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.098223235 seconds)
    (133/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.07066308 seconds)
    (134/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.090727728 seconds)
    (135/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.198640243 seconds)
    (136/309) benchmarking ("sort", Bool, false)...
    done (took 0.163811693 seconds)
    (137/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.07745767 seconds)
    (138/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.090606877 seconds)
    (139/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.076889705 seconds)
    (140/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.167175824 seconds)
    (141/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.076411661 seconds)
    (142/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.102664904 seconds)
    (143/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.079343759 seconds)
    (144/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.09618469 seconds)
    (145/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.076560917 seconds)
    (146/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.076673491 seconds)
    (147/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.161717098 seconds)
    (148/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.054167365 seconds)
    (149/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.106200784 seconds)
    (150/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.115032468 seconds)
    (151/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.093622261 seconds)
    (152/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.077620176 seconds)
    (153/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.070305011 seconds)
    (154/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.085053389 seconds)
    (155/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.074839712 seconds)
    (156/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.068597395 seconds)
    (157/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.414990036 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.090597517 seconds)
    (159/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.070936772 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.151609305 seconds)
    (161/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.141320326 seconds)
    (162/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.091024267 seconds)
    (163/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.077076542 seconds)
    (164/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.175235122 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.119343805 seconds)
    (166/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.091243977 seconds)
    (167/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.088974453 seconds)
    (168/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.121577022 seconds)
    (169/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.055159338 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.069292105 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.123857861 seconds)
    (172/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.077140606 seconds)
    (173/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.176451563 seconds)
    (174/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.068797861 seconds)
    (175/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.096585915 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.118159118 seconds)
    (177/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.089972998 seconds)
    (178/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.104582691 seconds)
    (179/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.075992119 seconds)
    (180/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.06953778 seconds)
    (181/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.054592384 seconds)
    (182/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.100720753 seconds)
    (183/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.102110028 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.123359974 seconds)
    (185/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.159694708 seconds)
    (186/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.0558923 seconds)
    (187/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.069638198 seconds)
    (188/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.090227439 seconds)
    (189/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.069538044 seconds)
    (190/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.064477026 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.091534936 seconds)
    (192/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.143824492 seconds)
    (193/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.098134025 seconds)
    (194/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.075100081 seconds)
    (195/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.06469869 seconds)
    (196/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.172664654 seconds)
    (197/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.078211561 seconds)
    (198/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.099466824 seconds)
    (199/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.053849486 seconds)
    (200/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.054039096 seconds)
    (201/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.076390279 seconds)
    (202/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.150907312 seconds)
    (203/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.116640616 seconds)
    (204/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.056585258 seconds)
    (205/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.077922058 seconds)
    (206/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.068371493 seconds)
    (207/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.081657902 seconds)
    (208/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.078320838 seconds)
    (209/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.074899723 seconds)
    (210/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.067500556 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.090281695 seconds)
    (212/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.159150603 seconds)
    (213/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.093846102 seconds)
    (214/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.098125197 seconds)
    (215/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.05461116 seconds)
    (216/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.053820235 seconds)
    (217/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.054235133 seconds)
    (218/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.076660854 seconds)
    (219/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.091214493 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.098541835 seconds)
    (221/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.078076247 seconds)
    (222/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.054862435 seconds)
    (223/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.206171176 seconds)
    (224/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.102660037 seconds)
    (225/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.09425471 seconds)
    (226/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.05527089 seconds)
    (227/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.098590999 seconds)
    (228/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.053338023 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.06864821 seconds)
    (230/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.077851284 seconds)
    (231/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.053947555 seconds)
    (232/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.055026496 seconds)
    (233/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.091774271 seconds)
    (234/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073846205 seconds)
    (235/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.068496074 seconds)
    (236/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.085747762 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.068332318 seconds)
    (238/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.071578112 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.152452848 seconds)
    (240/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.064575501 seconds)
    (241/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.105051257 seconds)
    (242/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.067488355 seconds)
    (243/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.097620588 seconds)
    (244/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.054194913 seconds)
    (245/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.076566741 seconds)
    (246/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.076643479 seconds)
    (247/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.054057601 seconds)
    (248/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.053700782 seconds)
    (249/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.053277973 seconds)
    (250/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.075304067 seconds)
    (251/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.143424908 seconds)
    (252/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.077342457 seconds)
    (253/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.064823608 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.095906365 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.117120662 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.078754744 seconds)
    (257/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.092473626 seconds)
    (258/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.067806976 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.114356275 seconds)
    (260/309) benchmarking ("sort", Float32, false)...
    done (took 0.13218046 seconds)
    (261/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.077339877 seconds)
    (262/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.070862479 seconds)
    (263/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.054812176 seconds)
    (264/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.092672706 seconds)
    (265/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.068299385 seconds)
    (266/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.075826127 seconds)
    (267/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.076903961 seconds)
    (268/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.074233279 seconds)
    (269/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.053758908 seconds)
    (270/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.097450447 seconds)
    (271/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.074673246 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.077204007 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.163210884 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.067795384 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.157009009 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.141912108 seconds)
    (277/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.053834183 seconds)
    (278/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.117406823 seconds)
    (279/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.065138646 seconds)
    (280/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.054632467 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.091509768 seconds)
    (282/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.055465909 seconds)
    (283/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.068619147 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.092752642 seconds)
    (285/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.072275067 seconds)
    (286/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.054381251 seconds)
    (287/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.097346568 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.076632992 seconds)
    (289/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.076880497 seconds)
    (290/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.114864311 seconds)
    (291/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.054559858 seconds)
    (292/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.089070068 seconds)
    (293/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.055515152 seconds)
    (294/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.068589203 seconds)
    (295/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.076348159 seconds)
    (296/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.079061609 seconds)
    (297/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.197554211 seconds)
    (298/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.077555882 seconds)
    (299/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.05553253 seconds)
    (300/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.091941897 seconds)
    (301/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.054732441 seconds)
    (302/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.092663798 seconds)
    (303/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.074859104 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.094711823 seconds)
    (305/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.160740382 seconds)
    (306/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.070173951 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.09667954 seconds)
    (308/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.065240337 seconds)
    (309/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.198753105 seconds)
  done (took 34.062005829 seconds)
done (took 34.922184203 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.08490135 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.118926507 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.078480583 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.119641942 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.085067188 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.105311116 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.076744906 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.104576705 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.085284946 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.108689386 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.082980143 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.057068609 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.100566866 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.078961461 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.101105907 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.097233341 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.104904342 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.076151131 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.098729182 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.067531379 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.076692465 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.090968697 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.070331005 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.056984221 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.103207365 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.07553708 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.098254774 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.078417234 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.068783405 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.090531071 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071553537 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.097901207 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.0687606 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.082818101 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.096995696 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.077352839 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.100199852 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.079836847 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.070456193 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.090146562 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.076777603 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.091037777 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.075046403 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.076495844 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.096513585 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.074167608 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.098957219 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.082990348 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.119500916 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071066539 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.07797262 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.103044045 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.0807939 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.098241193 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.073114359 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.099997057 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.074503078 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.119439485 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.077445748 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071542861 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.101331611 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.078352009 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.097676388 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.076746603 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.077977691 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.104165941 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.080100802 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.096334494 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.079238631 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.074681015 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.091171188 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.077150546 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.094717266 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.069020171 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.079422012 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.101796557 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.067869262 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.096148093 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.076357473 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.076017824 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.090293288 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070942758 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.070064821 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.097547779 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071576442 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.057648987 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.094817486 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.075005097 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.08986487 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.078128969 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.075530877 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.097803683 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.071337651 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.102383691 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.068516284 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.073954327 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.09080754 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.069175291 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.070317068 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.094442372 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.067996311 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092650261 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.078290789 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.070807013 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.097233877 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.083135017 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.090421443 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.075827008 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.068002435 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.090107268 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.085805244 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.100765415 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.069017017 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071508758 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.09070623 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.075662338 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.068504289 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.091513359 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.068671858 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.090698117 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.075055497 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.069095006 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093517884 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.076388012 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.083398703 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.093647627 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.072003167 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093119268 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.068632527 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074348219 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.091310464 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.068951995 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.071529048 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.088825338 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071237161 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.069288223 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.098391017 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071067793 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.099139399 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.070921296 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.079186209 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.095509214 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.075374757 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.095764139 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.068802344 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.061957556 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093741406 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071276817 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.071213377 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.090949748 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.071048159 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.068452123 seconds)
done (took 13.610689427 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069361086 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.177275101 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.132505044 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.101230311 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.113859932 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.069674177 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.103551761 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.134467239 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.070670401 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.133538036 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.091664477 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.11278709 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.143913712 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.06873635 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068918728 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.095858012 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.070363319 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.117911962 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.107176166 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.114190833 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.148866583 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.067843077 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.125974661 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.117184053 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.095247146 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.121867969 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.070235812 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.095338629 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.072850164 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.130959843 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.089895903 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.073150192 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.09218257 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.128426189 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.100665579 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.113818372 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.069826893 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.11144506 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.070361178 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.090776438 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.098108282 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.127822271 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.109670268 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.087054498 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.094525783 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.071922723 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.070578426 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.113794388 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.11862832 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.085121412 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.1152338 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.140553884 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.072218925 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.110412113 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.067773755 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.115380391 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.086948502 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.093588516 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.070132952 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.071801006 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.091327938 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.072624465 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.116912432 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.121899437 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.073768669 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.111174246 seconds)
  done (took 7.506178618 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.088396189 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.119479873 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.088797517 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.111913833 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.069189273 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.069848964 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.092851948 seconds)
  done (took 1.561220864 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.070187493 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.0926712 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.116132305 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.094150691 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.111489126 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.091578561 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.101609332 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.069987689 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.111293208 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.070375085 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.115326263 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.109518544 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.09456159 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.077222112 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.118764758 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.070619882 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.09475466 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.09344972 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072955489 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.117727464 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072807974 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.114298268 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.071849447 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.070481424 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.108708265 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.070557073 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.143334215 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07501617 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.094171435 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.072608786 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068368997 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.146100781 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.107907018 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.08127163 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.092832382 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.086222488 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.108740411 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069061414 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.08702608 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.098229638 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.08568433 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.093844501 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.070802135 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068228464 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.097876771 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.082321877 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.093115536 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.070708095 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.072460156 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.114315823 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.071077187 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.108034489 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070412467 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.074456093 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.094207399 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076328788 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.103494028 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.071570432 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.091215999 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.094487872 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088757627 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.110738626 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.084800113 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.110756455 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073218349 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.107941627 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.085028858 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.073375929 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094693654 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.073351561 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.111135295 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.067979702 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.072149056 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.105167565 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072319814 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.117916537 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.094004936 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094630775 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.080727774 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.07084768 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.093577327 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.07044158 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.118595019 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073722301 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.092926886 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.074194409 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073551775 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.092296592 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.070257978 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.073938082 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.092290309 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.0716592 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.09635646 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.071111764 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072715059 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.111342212 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.071271884 seconds)
  done (took 9.573502425 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.071442164 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.071319512 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.095207454 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.071178403 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.071467668 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.093992547 seconds)
  done (took 1.409779923 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.10225794 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.095766564 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.085767389 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.099519737 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.111746749 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.108661027 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086846715 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.110067435 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.088919514 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.106563995 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.087396038 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.110256665 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.115450961 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.077958054 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085574832 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.099293936 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086668927 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.103630051 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.083603362 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.100258304 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.092428832 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.099973545 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077800672 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.110874754 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.074465443 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.100086224 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.081130653 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.106761332 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.083443531 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.110604257 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.076259862 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.097078141 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.075890245 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.1108767 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087279722 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.099022732 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077011603 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.098218742 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.080977403 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.074258942 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.109392038 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07749026 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.104705985 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.074640164 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.110514932 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.076096503 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.097831379 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.082298141 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.109006933 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.074802497 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.097838045 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.075577478 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.097774889 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.074552265 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.098379791 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.087269997 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.096886333 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086523534 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.099621745 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.076246519 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.074455277 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.097584504 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.109231686 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.073807145 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.107404955 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.074963555 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075368769 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.100050787 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077033707 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.098950115 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.074777143 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.096138322 seconds)
  done (took 7.563247414 seconds)
done (took 28.531937463 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.658760441 seconds)
  done (took 1.586702718 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.804433846 seconds)
  done (took 1.733597246 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.539830106 seconds)
  done (took 16.474092206 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.658967059 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.811021635 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.831642408 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.159941574 seconds)
  done (took 3.391729735 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.889499645 seconds)
  done (took 1.839527027 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.24652743 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.257563629 seconds)
  done (took 1.44011168 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.724292792 seconds)
  done (took 1.662774241 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.301039496 seconds)
  done (took 2.234171528 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.343189983 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.190816925 seconds)
  done (took 1.477870693 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.533251868 seconds)
  done (took 1.47721039 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.520846361 seconds)
  done (took 7.468948117 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.236185087 seconds)
  done (took 1.190993162 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.277350127 seconds)
  done (took 1.221931644 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.238575181 seconds)
  done (took 4.184636941 seconds)
done (took 48.317835827 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.081957675 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.085152872 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.108754857 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.082534097 seconds)
  done (took 1.299030035 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.080957156 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.076462407 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.10383596 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.075325531 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.105674248 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.076171648 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.101943153 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.081295748 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.099048272 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.076638181 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.076956029 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.098750479 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.078645874 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.101893443 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.073842415 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.079233815 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.103926002 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.075885964 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.102314128 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.077417344 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.096693545 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.079410241 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.104136542 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.075755865 seconds)
  done (took 3.055490173 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.080607167 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.076118525 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.100718927 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.075652374 seconds)
  done (took 1.287445817 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.080599542 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.119235417 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.093418993 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.105019927 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.097530294 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.115243634 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.072795978 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.072578106 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.097601264 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.080405849 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.094438424 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.10349568 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.115843193 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.079726276 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.106005544 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.07007778 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.095981802 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.091735739 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.080519446 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.103970548 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.074657216 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.103107315 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.071167522 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.118521655 seconds)
  done (took 3.198490264 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.080051558 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.130114631 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.082982383 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.117991653 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.095142723 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.069132877 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.103335463 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.093981488 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.15410871 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.092518909 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.073929715 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.068261571 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.098711326 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.068329592 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.080283674 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.136547011 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.141277881 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.071715025 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.125482654 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.068658337 seconds)
  done (took 2.905819358 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.077972707 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.073080029 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.092511695 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.071960903 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.080386847 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.099049989 seconds)
  done (took 1.454946633 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070784936 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.070337781 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.093955312 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.06965482 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.075050977 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.093313179 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.069086225 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.070965941 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.09321583 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.070728477 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.093651191 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.069360839 seconds)
  done (took 1.898190073 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.460850828 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.072268242 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.095326406 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.069548323 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.074226684 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.093536214 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.084070887 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.072548406 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.117826042 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.070273636 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.093826001 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.071640427 seconds)
  done (took 2.336671492 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.274918474 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081109749 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.338627435 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172778839 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1435193 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162336986 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133324511 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121479319 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.205065968 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14426331 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237546018 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23188536 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115529814 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1999967 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092543992 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.138423877 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219727486 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204586594 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135566045 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233554724 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191705569 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162217204 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.212236923 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132864794 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140629126 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151836805 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.074820913 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109976978 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244494163 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168424266 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211212774 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143607288 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10030605 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241592739 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229802891 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202843871 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167963281 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.090109256 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.163224503 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.170762842 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.269748089 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117430334 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229635675 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114310548 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109530613 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178237822 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15176301 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.151576287 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.141454196 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117393735 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20647245 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248685147 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.174808014 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.091853691 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140795743 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144748745 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.149317285 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131410674 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254400295 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227444634 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165284124 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.074172956 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125712515 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220003692 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167049075 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.147058735 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.160392829 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122640888 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177814389 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.220528275 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150833247 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182195628 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.191249226 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093916175 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15229643 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.203594384 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161666282 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241113243 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161656586 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.076209042 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15985723 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132657377 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110973976 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.150256366 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10320675 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244161223 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105425585 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.145108534 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142123867 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141448147 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14295773 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230547501 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187927255 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135871331 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.069575548 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133642749 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.155057896 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209799612 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092416222 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139299289 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15317375 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.106784349 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173723528 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.103717374 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158452944 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.08269116 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183482788 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169550849 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.079467643 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158846169 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13177798 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.132152964 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170807202 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228273682 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094666095 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111045443 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234737833 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162347452 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.137408473 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.185076684 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.223292319 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.13128022 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108537973 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211092401 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255771029 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11870518 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206875937 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135681843 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112487985 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.092362398 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185499682 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121315464 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.154372313 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111946688 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.159807018 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235102843 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.078851024 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124715765 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173104557 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111652181 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110082961 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146604721 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107208602 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.123974566 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.131683309 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.136922366 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176557258 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159473286 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138485701 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161014125 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130611022 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229807186 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119427465 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.134722317 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109339943 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.097459706 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.171659131 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225923592 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084414131 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239701093 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.161727264 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135052039 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153339935 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111184997 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17792666 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083430594 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.099075676 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181927564 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143035398 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143112568 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.192874153 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134116884 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.161072115 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.180260512 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169711219 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167852882 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.168170957 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137988536 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.1168629 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145206019 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162393767 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.078141118 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.125065812 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.111410691 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134444853 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101609117 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11397742 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180637835 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187531728 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104035538 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145596759 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128572449 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.188793856 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.105722981 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166754266 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.154328331 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125543468 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.194828902 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222573261 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171331468 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131326255 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209410318 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.075661665 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077724837 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.120403454 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16351144 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112119095 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.089232262 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174071147 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.187415447 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162843573 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199993566 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119211344 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180867767 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.197809484 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.075239619 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.147193915 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214055114 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161469893 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.136646047 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114329066 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.128796264 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.18533583 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137430982 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258769347 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147635977 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158790591 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216409334 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.134622155 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084883817 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1349923 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176336334 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13663099 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.217837745 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131148385 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094157958 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143091996 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.110503194 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135485728 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163131644 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153848892 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198087519 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.150745056 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170051559 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08109441 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17352909 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158798995 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161105981 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.067854365 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154112897 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232660558 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125569946 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152608466 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196902466 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10847825 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.15513427 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.251009325 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183650884 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114456778 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142226041 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155310656 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163910321 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152698943 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17720555 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141888366 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196067316 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118882166 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.114420294 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118202213 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105328558 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139542807 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.126435063 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.145857125 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.151893618 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.125292509 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16722528 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14458949 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142827927 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152230187 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.127639951 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.097666202 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128537478 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245380133 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156651816 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246171262 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.132116659 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.190178176 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237676683 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078824941 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109499518 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.108472432 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179350156 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08962478 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196895604 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.101759809 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135054057 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16257974 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206445012 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100639082 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.097533131 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117032211 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195361128 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142137133 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105297911 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.13714951 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230550243 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.136152921 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083322299 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158664919 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137960191 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133586245 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246954853 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.064676813 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128210174 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080051804 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111061597 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166295757 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223886346 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.087335568 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.157073279 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153107221 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156785111 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166067905 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132285984 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127702019 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144633772 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188635366 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1645139 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.121752177 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145852241 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166751801 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225726292 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139196205 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.125982239 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214513415 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221969567 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.232800444 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.094053835 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148194042 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14761592 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143098887 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207765669 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11304375 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210436109 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113533714 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174330089 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13607165 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122702585 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164809182 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.126253928 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119444318 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206385277 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15443125 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111932591 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084921175 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146998929 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182220439 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11005322 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.103710295 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176548354 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.102091448 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174535402 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236666887 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086068157 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137888105 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127520276 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087011469 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139154735 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134814475 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117130808 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.125747379 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23860642 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.122355507 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217700717 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17925206 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14846626 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202776947 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132141913 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.668921996 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.082938571 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222868262 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153063059 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249651944 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130713218 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154263642 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144036871 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156936912 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182308889 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138365406 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.208098809 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168754474 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.156443012 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109043207 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135361273 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146636032 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.120334464 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114669684 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14927708 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148766305 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.131375603 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.155414828 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190908686 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.086058239 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126472314 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201262798 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178112742 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182945734 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178518722 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115531546 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153265687 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207042489 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085745178 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.157363845 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225521526 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14138156 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131868302 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.086102835 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.139068434 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241019378 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.077132017 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229245655 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159092604 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142857568 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148506241 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.182574888 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17222001 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141299747 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160624787 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126323226 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.147244332 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150989823 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115990839 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.082815749 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139078861 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146573881 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.130207211 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134903826 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.125392556 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219139244 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.075344699 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125729064 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109500713 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207463967 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251281468 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.119196737 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088235234 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152719405 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146832315 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.149086847 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159873105 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.111579421 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086947985 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.112515819 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.139113673 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.119338492 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147997655 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134337789 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143301006 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237135433 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.114346965 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.23108936 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125903719 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14149967 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.07415748 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.109635794 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102923929 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127416399 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137773938 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128499555 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241942467 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.102938526 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.120085428 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125189306 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.077468355 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113435393 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167040288 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145118894 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156886491 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127859517 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.066388397 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14187474 seconds)
  done (took 74.286238223 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.136041861 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.106328846 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.120966878 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.176305494 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.150496768 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.244011578 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.183210116 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.228543456 seconds)
  done (took 2.377128378 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.071789877 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.121216977 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.106313555 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.11817022 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.092484283 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.071733226 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.308827547 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.112212216 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.093170243 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.094275528 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.123329222 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.094043647 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.483655808 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.069299891 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.096202787 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.087550453 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.070757042 seconds)
  done (took 3.237746057 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.447790915 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.62815609 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.44956877 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.099976076 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.814950966 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.110403533 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.201408665 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.16226269 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.093074628 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.420246138 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.731777592 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.150743628 seconds)
  done (took 17.342267901 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.077682641 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.072704279 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.112707801 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.087731992 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.10107486 seconds)
  done (took 1.485694092 seconds)
done (took 117.106856559 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.083183761 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.382203899 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.056314715 seconds)
  done (took 1.504641437 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.087021307 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.08944661 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.114906049 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.088024447 seconds)
  done (took 1.420674547 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.077769478 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080196077 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.113762702 seconds)
  done (took 1.310112172 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.298982441 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.172390502 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.092725455 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.086667907 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.08041922 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.10663843 seconds)
  done (took 1.311125924 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.075473846 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.078230712 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.102088311 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.080097266 seconds)
  done (took 1.366183672 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.079161082 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.055237074 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.057478464 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.084992848 seconds)
  done (took 1.312535053 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.093515061 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.109062208 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.084381506 seconds)
  done (took 1.320221455 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.112581057 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.116626458 seconds)
  done (took 1.265663689 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.08523406 seconds)
  done (took 1.116659709 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.09683369 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.146592276 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.168043988 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.142415347 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.177995532 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.143499152 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.118703485 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.092596886 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.107047467 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.120861796 seconds)
  done (took 2.35389859 seconds)
done (took 15.957391561 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.082134255 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.398670699 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.365257888 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.121716676 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.673409277 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.386693214 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.981240698 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.122544093 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.112658699 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.09667706 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087213912 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.679620603 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.0090102 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.353592322 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.995905629 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.326252233 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.678859801 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071339795 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.096160822 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070918966 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.964649181 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.096530901 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.07080003 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.09730921 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.652910781 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.374580313 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.0969432 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.326363235 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.096057615 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072673137 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.358068777 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096695609 seconds)
  done (took 16.043102752 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073213257 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.147813423 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078143042 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.087316794 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.100073984 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.07268845 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.100667276 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.073573087 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.153627009 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071881814 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.115557663 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071230514 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.102117683 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071690955 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091308017 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.097314459 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072391201 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.098069631 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071705543 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.07205799 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.11623124 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070922167 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.097201038 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072112237 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071840238 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.109305329 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072622156 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.096949678 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071580334 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073475846 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100486172 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072280426 seconds)
  done (took 3.888936757 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119755363 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.157142564 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078097122 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.131591173 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.145243555 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073337522 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.175674205 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.096570929 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.155762133 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072087645 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.114162953 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071532283 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.131618781 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071969965 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.117977396 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072217211 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097593035 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071981365 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071730329 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.097376247 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090083932 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.097042686 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071977785 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072461201 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.097430791 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084610325 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.097782955 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.074099415 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.097284296 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07428739 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074417063 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.097247764 seconds)
  done (took 4.197744351 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075931131 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.078195356 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.112467379 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.087484447 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.099327204 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.075817869 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.075807115 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.099170835 seconds)
  done (took 1.74714759 seconds)
done (took 26.907579795 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.082371352 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.072962771 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.102495656 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.084445073 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.102668457 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.082838386 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.070012523 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.104099728 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.078598006 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.101985402 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.07882647 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070234994 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.100631095 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.07004158 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.078278462 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097963322 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.084140743 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.101206409 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.083338236 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.110462083 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.07308368 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.078420734 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103860827 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.082603436 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.109798427 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.083288694 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.108606117 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.077125362 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.072639003 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.099143452 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.079782065 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.115647791 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.072535918 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.109770249 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.07192126 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.071027413 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.096923293 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.071239059 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.083361467 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.103893899 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.074050921 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.103847414 seconds)
  done (took 4.738869123 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.093354802 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.096967332 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.11626205 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.065698527 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.098310398 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064513009 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.120744519 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.06369515 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.065684231 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.119949979 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.057979173 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060908627 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.088901778 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.057210758 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.060118783 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.059383515 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.089235705 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.059342252 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060079325 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.086893716 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.063269423 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.05590099 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.089221736 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062447556 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.058906924 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.065403985 seconds)
  done (took 3.028785674 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.077943322 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085020692 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.116590021 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132178124 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.135771414 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.078121298 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.108259787 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.08926985 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.113450981 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.070123321 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.100941587 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.099554625 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.08886834 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.104229475 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.071092958 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.113329701 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084940617 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.072217361 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.103998229 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091694478 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.114996053 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.081902696 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.11984325 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.082867776 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.071362511 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.099336105 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.075109976 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.111406878 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.076567919 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.079830698 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.101237221 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.07432872 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.099280196 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.082770878 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.10146494 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.073823135 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090628764 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.107360279 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.079735622 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.097764622 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.075301765 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.072684109 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.11972922 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.11586268 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.096925963 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.0775317 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.1060295 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.080778482 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.070865837 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.116104653 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080702949 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.097529007 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.07475667 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.070257712 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.097877533 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084993855 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.099806886 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.07383671 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.080282883 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.100501329 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.085031123 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.101409575 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.087230654 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.070964822 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.106442895 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.071291531 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.099018492 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.070519971 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.09430576 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.099290832 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112282602 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.098916009 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.071994832 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.107177046 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.078832383 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.077769353 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.097739118 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086717369 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.10678232 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.074304835 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.080313598 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.101656238 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.075375011 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.115540877 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.073020846 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.072614677 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.098413648 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.078826035 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.100812203 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.072679312 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085183279 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.09819195 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.074675484 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.1154431 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.071114174 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.072774998 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.104194238 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.075950166 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.097103455 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083838088 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.103214309 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.07205421 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.0811379 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.097630051 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.075490198 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081904809 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.102051131 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.070734732 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.103140969 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.078132433 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.072563353 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.098561763 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.073587165 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.099054932 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.081565655 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076681673 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.102688419 seconds)
  done (took 11.626986048 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.201747097 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.19207238 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.073600235 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.18579588 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.082934253 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.110990328 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.187175399 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.10365541 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.09935179 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.071856488 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.099478935 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.112168137 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.141338804 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.14146864 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.083223843 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070676998 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.116518666 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.140658877 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.190911261 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.153682612 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.118668349 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.079225468 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.100098288 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.072206849 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.099822289 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.082007142 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.115760057 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.082613807 seconds)
  done (took 4.368702731 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.085829457 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.131151311 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.077258237 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.120166859 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.096584046 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.098306155 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.077069058 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.073067169 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.111301316 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.084239324 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.097623445 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.077928677 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.105254632 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.080737659 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.071739741 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.10823407 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.081267369 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.09981376 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.075505516 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.075884807 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.105324209 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.084718437 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.102904175 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.071030655 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.078522354 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.098213292 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.069032027 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.117167351 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.071439532 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.121221391 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.069228491 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.105348138 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081416125 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.071712651 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.098300596 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.074177935 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.101261618 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.073953559 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.072376192 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.097196477 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.070177123 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.060867408 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.097138827 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.084921836 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.103989008 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.06277977 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.076966517 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.103492803 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.077043467 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.096428331 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.074222923 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.074075563 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.101107839 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.078504447 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.076604706 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.103025838 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.074208512 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.097777778 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.077200771 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.073868077 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.094619332 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.070635673 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.07543529 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.097983098 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.079050386 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.102586161 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.07011236 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.072898738 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.103110686 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.078170965 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.100014855 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.074420173 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.068538151 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.100445784 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.076064119 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.075601442 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.100661426 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.06968088 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.097640698 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.072187615 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.057864417 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.097759693 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.057380288 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.074397288 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.096046445 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.06969636 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.072813298 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.106128252 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.085930662 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.098761832 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.077737355 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.098473035 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.071041054 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.074663153 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.093098719 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.075417592 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.086354587 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.115895675 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.097706195 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.069480022 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.084678625 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.103948687 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.071351826 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.060018133 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.105577916 seconds)
  done (took 10.111588573 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.095464324 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.123245238 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.073394875 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085762526 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.125745506 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.096979347 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.107347864 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077669061 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.073271334 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.115424559 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.071885526 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.107401033 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.076152547 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.080707423 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.122818588 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.079085053 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.100475927 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.080080004 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.106142543 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.10786962 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.085350772 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.112598899 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.081913303 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.099243145 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076393834 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.11073074 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.099697382 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.081405999 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.107748252 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.085533435 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108253989 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.098234366 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.113551824 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.076191236 seconds)
  done (took 4.313380279 seconds)
done (took 39.227425625 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.134737599 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.32393539 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.116933703 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.976321026 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.165385896 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.139633506 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.131537124 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.115468961 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.506792925 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.115312226 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.348411983 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.641079507 seconds)
done (took 58.778577315 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.25920563 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.260123049 seconds)
    (2/2) benchmarking "String"...
    done (took 1.386614046 seconds)
  done (took 3.716097207 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.461860546 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.053787775 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.400926576 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.113573849 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.11426149 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.571498457 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.607940111 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.92493544 seconds)
  done (took 26.846313195 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.120694139 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.460031097 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.269442075 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.265890994 seconds)
  done (took 17.178740143 seconds)
done (took 57.523798272 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.104230941 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.187554575 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.130649388 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.099345506 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.216059876 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.14430229 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.410313954 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.120331395 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.115787937 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.110040737 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.114764826 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.123405428 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.1418524 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.443358507 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.122115106 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.116150712 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.163192739 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.618473708 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.478615296 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.122099782 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.12189333 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.140151631 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.11536832 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.119775255 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.185624078 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.115122837 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.115135129 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.114583311 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.135932559 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.121069518 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.191637006 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.15661482 seconds)
  done (took 186.776636505 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.115891385 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.963315717 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.078189935 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.129755608 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.445519661 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.317275532 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.249399164 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.579073813 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.131281987 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.138613416 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.279949707 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.117002086 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.358914365 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.104918979 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.12535988 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.2014082 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.320484417 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.362141988 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.131907222 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.372230485 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.123448696 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.190024751 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.097158951 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.238612519 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.159410526 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.205202763 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.120823247 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.135043975 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.306434721 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.24407663 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.144189057 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.139468036 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.648100134 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.977425486 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.143269329 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.143699832 seconds)
  done (took 145.600121357 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.371928113 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.117041303 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.117093402 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.117752634 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.145268886 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.117812001 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.615821892 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.617337941 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.611824679 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.46659488 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.178271249 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.298680452 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.117549048 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.207828598 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.131208332 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.117493948 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.132629396 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.14335238 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.119364823 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.118300816 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.616263139 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.132211382 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.359743193 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.126741222 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.118246146 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.146977098 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.507883617 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.118438844 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.146031276 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.426352218 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.156613168 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.118875079 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.378442389 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.849605144 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.224137689 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.118941289 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.120526275 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.145940932 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.118889117 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.381113078 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.119614807 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.118240843 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.121662189 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.665340524 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.119777676 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.617963835 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.121901521 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 3.976431253 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.119497522 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.119823176 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.964852415 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.496564675 seconds)
    (52/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.119716287 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.118526934 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.118772639 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.121675019 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.119432845 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.118628535 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.147723478 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.032564053 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.214222775 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.120900775 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.123168144 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.146636197 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.120611673 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.351931966 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.121500758 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.992387013 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.177956534 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.33652827 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.620078288 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.12198103 seconds)
    (72/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.120379467 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.211068498 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.236313591 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.120068868 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.119832984 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.120357657 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.119718792 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.224340661 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.121506376 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.492019562 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.126955697 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.122162138 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.177938905 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.212001502 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.121555338 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.386656103 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.120523862 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.121445004 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.774928331 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.210413045 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.12204175 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.121488433 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.120775869 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.121045064 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.494602823 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.621491477 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.267617172 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.123596725 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.986128964 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.11981989 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.507675842 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.601543196 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.658440932 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.121668724 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.225681661 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.125998249 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.123630942 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.122111557 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.150920281 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.12260044 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.181137811 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.123667767 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.518099338 seconds)
  done (took 336.721492672 seconds)
done (took 671.533351584 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.805532405 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.757584613 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.875679041 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.769855193 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.750703829 seconds)
  done (took 10.025717621 seconds)
done (took 11.092961662 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.291543877 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.293756526 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.177110826 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.294508512 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.151659589 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.308036888 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.274866227 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.144317684 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.216490584 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.189911202 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.216585691 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.16944956 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.145326968 seconds)
  done (took 16.941346105 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.431149527 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.415058354 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.189403424 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.42426924 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.166386363 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.433352315 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.317274939 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.321972181 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.313074209 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.140077014 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.13817065 seconds)
  done (took 15.358261893 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.430504069 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.416842814 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.193251828 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.428657443 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.168464661 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.438477771 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.319537292 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.326147938 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.315661045 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.138374596 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.13885719 seconds)
  done (took 15.383041659 seconds)
done (took 48.75087903 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.134914823 seconds)
  done (took 2.204339054 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.166540175 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.324833023 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.145348731 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.139882392 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.135043424 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.138335283 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.139104002 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.13547912 seconds)
  done (took 10.393780654 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.131296875 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.134497255 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.130916341 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.130690626 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.131211759 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.134055895 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.133360908 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.134200037 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.133290172 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.133046358 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.131011478 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.134064757 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.131327534 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.13180504 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.131494558 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.13318669 seconds)
  done (took 19.18841043 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.133633261 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.130730124 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.131423902 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.132638582 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.132699966 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.133221106 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.132849655 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.132066766 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.131663918 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.132405516 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.131842971 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.132133311 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.133173803 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.132196812 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.131591893 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.133702011 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.130937725 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.131843314 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.137417459 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.131475071 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.132623997 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.132067913 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.132321129 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.133791677 seconds)
  done (took 28.253100601 seconds)
done (took 61.108686183 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.080231542 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.609596225 seconds)
  done (took 8.760575309 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.13487254 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.134498474 seconds)
  done (took 3.341137178 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.133214446 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.134997772 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.135143896 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.134543163 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.134531264 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.135581066 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.135724371 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.136197013 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.135277748 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.134664304 seconds)
  done (took 12.420874418 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.135335965 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.135842904 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.132969487 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.136071282 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.1352713 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.134131188 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.135161677 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.136029186 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.135958339 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.133708238 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.136482446 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.133316964 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.135692679 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.133783775 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.135979895 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.133988229 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.133985729 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.134085186 seconds)
  done (took 21.499861769 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.137044847 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.136542089 seconds)
  done (took 3.346295605 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.134675386 seconds)
    (2/7) benchmarking "second"...
    done (took 1.134825829 seconds)
    (3/7) benchmarking "month"...
    done (took 1.133266416 seconds)
    (4/7) benchmarking "year"...
    done (took 1.133856618 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.134767496 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.133870909 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.134894064 seconds)
  done (took 9.012644538 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.137626774 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.31738406 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.390556968 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.701209443 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.138992541 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.141111522 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.018373424 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.140411554 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.142546846 seconds)
  done (took 13.200861495 seconds)
done (took 72.654152695 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.093963636 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.128636587 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.968981222 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.149649098 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.144397015 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.428884631 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.128787311 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.246394199 seconds)
done (took 36.362929906 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.149556107 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.836312031 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.842856932 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.134536222 seconds)
  done (took 10.886711268 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.119575734 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.003318283 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.126660055 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.123181244 seconds)
  done (took 17.449291141 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.717534926 seconds)
    (2/2) benchmarking "read"...
    done (took 1.464884311 seconds)
  done (took 4.25738614 seconds)
done (took 39.816365602 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.137044533 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.139430177 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.138304941 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.140526166 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.139473725 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 1.136198833 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.139108095 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.13607323 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.136484975 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.138940134 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.139793025 seconds)
    (12/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.136081186 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.138093783 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.139748321 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.140081892 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.136650022 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.137203413 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.138652907 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.137564048 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.136526246 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.137167449 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.140053971 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.137614432 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.137010067 seconds)
  done (took 28.389009899 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.139517985 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.138298402 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.138867868 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.139464574 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.135748027 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.139769667 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.139749118 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.137490972 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.140890484 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.141079695 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.13692214 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.138474287 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.140095155 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.137445209 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.140266584 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.138306975 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.140450637 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.137518678 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.140554423 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.138233528 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.141025238 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.137932919 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.138606856 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.141212945 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.137406537 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.138499431 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.141067285 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.138560782 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.140848094 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.139015579 seconds)
  done (took 35.249292945 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.1450145 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.148793718 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.14045917 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.14092589 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.141724177 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.141122595 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.141395275 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.142160612 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.141845819 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.141421853 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.141369131 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.141374917 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.142437641 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.141415484 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.141113087 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.14239784 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.141526046 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.142356361 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.142049124 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.14141364 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.141997179 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.14164412 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.141536555 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.142191123 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.141108415 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.14237399 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.141149397 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.142076527 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.142190285 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.142078532 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.142432962 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.141418358 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.142204983 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.141779751 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.142726344 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.142404764 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.146936939 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.148756484 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.142624508 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.141992765 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.142509724 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.142987378 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.142717413 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.143110523 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.142280324 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.143045104 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.142582302 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.141571137 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.143746636 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.143348891 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.142610534 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.142730865 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.143758095 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.142791883 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.142656299 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.143556971 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.142621216 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.143482401 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.142379416 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.143006019 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.141938718 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.143222491 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.144310172 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.142905569 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.143532609 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.144032608 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.144701295 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.143825495 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.142862317 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.143466104 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.143202782 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.144491312 seconds)
  done (took 83.353755422 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.144591994 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.141874488 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.141838802 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.142525946 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.141787902 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.143715573 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.141712968 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.14450051 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.142172583 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.145022955 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.144750282 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.143024154 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.142983728 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.144803261 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.145146412 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.141654284 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.14540653 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.142865547 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.144289462 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.145422523 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.144762968 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.142750051 seconds)
  done (took 26.237501749 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.14595806 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.145506221 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.142770224 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.144297518 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.142750085 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.145792198 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.145765073 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.145832696 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.145611316 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.143773128 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.14367628 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.144731563 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.143943153 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.143782635 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.144425597 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.143373886 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.145765876 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.144060468 seconds)
  done (took 21.683226198 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.144353975 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.1435965 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.146423249 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.144563379 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.143909814 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.145744779 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.143314358 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.1456339 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.145446884 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.144158543 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.147897347 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.146664762 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.146246245 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.144419468 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.147854719 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.145553896 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.147016203 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.14464475 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.146874515 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.145137345 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.144218932 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.147112542 seconds)
  done (took 26.283115474 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.146734618 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.147656475 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.145353662 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.144282805 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.144827113 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.146885299 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.147858963 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.14455567 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.147000414 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.14752674 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.145101299 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.149736376 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.144728329 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.146625312 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.145253569 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.144631467 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.147620669 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.145930251 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.147805363 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.145567483 seconds)
  done (took 24.008190046 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.149062927 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.149286073 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.149448878 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.149391768 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.148039724 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.148713432 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.148642837 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.149579823 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.149461329 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.148461376 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.149237769 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.149187118 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.149539882 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.150165134 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.150206401 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.150762171 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.148540345 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.15029676 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.149336833 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.149521934 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.150851496 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.150232034 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.149699929 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.150674479 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.149906041 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.150140586 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.149745416 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.150506361 seconds)
  done (took 33.273135613 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.149734074 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.149198397 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.147330009 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.14667667 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.147951636 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.147733573 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.148785806 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.147026497 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.149708861 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.148282273 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.150704229 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.150242083 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.14992431 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.150769959 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.151623368 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.151174893 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.150475599 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.148428245 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.148475014 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.148053309 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.151208831 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.150410597 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.150865337 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.148915367 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.148444721 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.150712659 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.149575019 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.149184047 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.150844304 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.147428967 seconds)
  done (took 35.566465066 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.16888103 seconds)
    (2/2) benchmarking "in"...
    done (took 1.170088948 seconds)
  done (took 3.424473055 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.148397193 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.151157579 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.149990818 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.149241217 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.148604748 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.150633529 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.15091152 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.148785697 seconds)
  done (took 10.284540728 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.148418822 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.151569095 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.151242288 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.151309687 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.151898707 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.150413066 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.157090171 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.166335246 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.151972255 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.151930052 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.156712623 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.156566958 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.152925989 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.149944903 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.150501388 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.151969619 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.152461632 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.151394373 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.152658027 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.153028595 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.152697253 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.153369796 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.152934136 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.150607548 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.152637116 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.160908065 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.154990014 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.152294697 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.151530639 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.15570527 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.151558762 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.15073961 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.153254266 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.152648561 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.153206532 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.15365888 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.15938873 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.167967787 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.157420395 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.15454306 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.154220898 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.151349209 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.152950577 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.153048303 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.154711942 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.153543465 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.154134994 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.152434396 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.151600738 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.155595925 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.158436516 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.15209187 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.150887747 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.15606802 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.15401406 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.160230018 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.170202914 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.156444568 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.16127878 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.162923125 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.16554187 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.160713084 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.154951528 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.154773505 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.163052083 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.175658903 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.160562325 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.168154675 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.153599122 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.154048373 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.160631276 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.166634651 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.161846737 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.155900979 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.156586699 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.154471738 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.154406381 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.154732579 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.160602003 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.17305682 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.155781403 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.155937319 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.163123624 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.176829632 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.154578628 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.155493468 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.156063815 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.1563709 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.155966614 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.165293835 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.171885053 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.156626406 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.153720184 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.154853306 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.156007391 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.15619156 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.153848511 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.155708739 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.154801379 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.156165872 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.156716327 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.158881035 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.16361355 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.156448305 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.156849386 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.162037437 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.156252769 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.15575319 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.162943663 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.156821779 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.156781743 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.156572879 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.161279616 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.155396817 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.15845964 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.163880813 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.15702649 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.157712397 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.156628711 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.157875823 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.16520022 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.180849624 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.157723071 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.156671091 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.160114871 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.167904391 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.156699803 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.159945371 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.15797514 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.155590556 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.156129039 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.157763069 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.158882386 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.157668833 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.158796003 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.158351104 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.156467234 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.15915845 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.157853008 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.158296717 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.158575423 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.157956788 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.158914005 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.159691884 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.159042942 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.158983151 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.163782221 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.156945186 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.158186234 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.157977801 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.158523292 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.160145115 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.158802431 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.159702852 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.158442424 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.158792249 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.158460461 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.158326435 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.160168942 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.161058463 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.160493065 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.158718512 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.16271772 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.159463147 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.162525281 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.158055089 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.157970543 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.160449685 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.159596722 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.158204604 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.160912671 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.15860506 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.161520807 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.167268916 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.160747003 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.160312927 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.161647169 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.160702254 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.159656177 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.161105403 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.162064045 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.166124142 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.161412711 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.165869182 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.160664814 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.160362948 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.160316115 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.160148526 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.159137315 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.160678402 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.162337249 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.168225197 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.170745433 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.168623764 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.160589923 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.165396826 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.161402155 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.164801551 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.164657119 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.160616075 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.162678422 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.160783006 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.160370808 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.161053037 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.162264178 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.160851534 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.159930339 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.161925505 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.161409766 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.16238622 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.163757556 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.162896215 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.16183827 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.159340853 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.162675974 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.16195897 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.159905259 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.159563474 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.161212748 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.158798303 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.163591598 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.163149596 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.168027426 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.159647659 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.162972242 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.163157597 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.160988655 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.160384353 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.163445348 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.163901164 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.162432086 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.168594246 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.177460818 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.162060326 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.16850386 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.177376044 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.161541106 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.164242931 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.164348164 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.161166193 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.16536605 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.170162294 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.163781293 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.164010579 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.16355954 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.162472881 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.16497003 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.168799481 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.162023989 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.162715895 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.164391645 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.164564919 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.161561812 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.163546395 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.163605231 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.163094079 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.164458857 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.165069619 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.164795118 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.163792673 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.165236568 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.165193482 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.164344839 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.165827846 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.171366998 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.168330009 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.163798819 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.164355933 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.164775115 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.167857501 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.164441923 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.164652302 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.163340903 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.176533246 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.17271974 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.169214813 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.16497758 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.165507161 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.1692629 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.165517039 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.168012499 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.163262407 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.164846689 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.1649912 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.163845295 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.163184184 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.165772194 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.16586939 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.165350617 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.166704224 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.170476383 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.165854063 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.165083413 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.166116844 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.167058789 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.166778128 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.164728161 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.166441721 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.165987841 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.167393183 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.163683462 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.164344768 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.171325408 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.18135952 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.166504533 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.164870107 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.166344635 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.165071075 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.166514964 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.166811879 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.169059345 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.174497438 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.168242081 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.175135118 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.166457898 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.175880333 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.168774359 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.169798495 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.174528735 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.166153287 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.165927463 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.167385657 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.168374619 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.172886224 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.183092522 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.166993837 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.171688765 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.168584904 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.167310795 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.168186815 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.168388127 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.168537886 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.168107508 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.175561942 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.183997624 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.170823656 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.169196172 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.166299776 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.167537146 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.168640321 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.16589735 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.171189121 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.16842056 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.168252622 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.16775254 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.168049895 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.168991267 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.167552306 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.169829842 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.166759956 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.169108759 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.172406967 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.184986613 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.173608806 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.169043631 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.17666215 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.169625897 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.173770836 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.184910133 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.168772852 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.167944899 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.170051703 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.169013012 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.167676837 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.16889531 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.16982754 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.170741045 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.1742607 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.16850513 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.170862578 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.167623732 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.169850598 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.168525409 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.178580494 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.19146151 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.17161139 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.174049514 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.168351124 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.170563833 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.174273281 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.17123331 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.169279054 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.171735589 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.179104141 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.177604072 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.170030938 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.171860455 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.169130274 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.170379948 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.170350887 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.171391371 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.171825691 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.171720498 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.17065588 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.171663502 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.175279351 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.170468745 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.17123862 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.171502361 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.171762135 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.179692226 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.172780705 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.172006087 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.171007315 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.171882078 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.17006864 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.17040303 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.170807723 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.17081347 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.172543398 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.172947088 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.176581951 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.177539021 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.173151679 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.170825431 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.172834549 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.170676701 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.172300013 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.172230262 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.172324736 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.173153737 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.172696977 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.173395409 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.17216315 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.169938245 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.172260419 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.171165995 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.171779753 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.173775592 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.177390145 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.170817364 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.169667881 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.173435447 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.173050381 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.170732864 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.172449152 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.179997936 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.175005758 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.182347273 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.179791445 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.176910005 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.172309676 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.175012013 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.179337587 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.171707186 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.172346027 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.174114879 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.173480586 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.173801689 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.176094234 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.173899402 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.17868358 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.172479334 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.17276174 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.18134544 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.188522102 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.173885492 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.174800607 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.17650902 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.173685194 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.172028413 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.174175253 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.173848989 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.179406995 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.191415933 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.174741278 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.17569657 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.171634188 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.175063015 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.178841849 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.175363965 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.17481251 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.171879982 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.175116989 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.17549436 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.17660344 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.173014247 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.174190736 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.173958677 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.17658191 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.181795311 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.174328305 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.176205044 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.174265688 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.174992771 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.175357495 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.177028165 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.173306589 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.173874658 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.175151048 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.176252139 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.17613062 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.177522389 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.174812113 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.176293689 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.177413773 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.176688749 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.177075814 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.185033059 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.183533123 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.173631141 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.175024441 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.175828976 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.17944024 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.175549936 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.177670708 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.176111017 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.177280623 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.17723868 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.176850231 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.177352965 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.178748998 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.190622009 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.191181235 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.175677923 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.175478831 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.178857686 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.176573254 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.173835368 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.17713569 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.177220039 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.179755565 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.185110725 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.177901846 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.181941472 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.190996297 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.177894678 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.181781923 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.179797315 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.184426056 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.178111722 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.177513585 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.177080423 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.181704422 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.191617725 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.177885156 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.186549501 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.205024937 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.193076195 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.178093549 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.177920164 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.175829316 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.178149773 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.179063245 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.177985921 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.177674556 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.178087548 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.178274456 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.178162081 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.183025828 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.179715028 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.179905136 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.178371548 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.178001025 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.178821897 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.177205865 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.179389996 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.178882195 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.178994298 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.179094548 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.179490108 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.17916848 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.189138153 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.187281355 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.180377726 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.180260037 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.177683883 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.181992764 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.180683004 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.187795576 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.187230371 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.179246136 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.18020735 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.180129005 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.180761191 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.178286925 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.179498 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.179348213 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.179523403 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.178328258 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.191282672 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.189614197 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.183809039 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.179924323 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.18126743 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.180455074 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.181396256 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.180171772 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.180729211 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.180760188 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.179797068 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.184535315 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.181074727 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.18032158 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.183122911 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.18870171 seconds)
  done (took 697.170370557 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.17831283 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.17893682 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.179035548 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.178917462 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.177867618 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.178626324 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.17824011 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.179624947 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.179469372 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.179428123 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.178925519 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.178667864 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.178763555 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.178316221 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.179873631 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.178797951 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.179573544 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.17889405 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.179774224 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.179420331 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.179833707 seconds)
  done (took 25.874642634 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.182725483 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.180375772 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.179912922 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.182673891 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.179441322 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.181980408 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.179277535 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.183373716 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.183161448 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.179966749 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.181467382 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.182610627 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.180184868 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.179849325 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.180710299 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.184156695 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.182479919 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.180828505 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.183117371 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.181095569 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.182165691 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.180734752 seconds)
  done (took 27.109585451 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.183359142 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.183373068 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.181044443 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.181003422 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.18395496 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.18118687 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.183689287 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.18332523 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.184547866 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.182530945 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.181717959 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.183289033 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.190210458 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.189127729 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.185091583 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.18393368 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.327889208 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.184462299 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.18283308 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.183754805 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.180698368 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.188213446 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.18247483 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.18143733 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.18226382 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.183641484 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.184644776 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.184670741 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.185083696 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.184484951 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.18865383 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.185135054 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.183778055 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.184781618 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.18443313 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.185260792 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.189865861 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.184145649 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.182642207 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.184356801 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.193147142 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.204516409 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.184921392 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.190587564 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.185490439 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.185406764 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.188209989 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.19186613 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.182531668 seconds)
  done (took 59.336448115 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.184876588 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.185803712 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.18242568 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.185663019 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.185974213 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.185338562 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.18546998 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.185694344 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.183971469 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.183371311 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.18586892 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.183119302 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.183387601 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.18664288 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.187266987 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.183990926 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.184181306 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.18368592 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.18543122 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.18333034 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.182955507 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.186473471 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.187132333 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.18458784 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.185760706 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.184295653 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.184538618 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.187538168 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.184784029 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.185016145 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.187959019 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.186890494 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.187377959 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.185730437 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.185952235 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.187195112 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.187500708 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.186892553 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.18712744 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.186365162 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.187616104 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.188486227 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.187729978 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.187928811 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.185061461 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.185631408 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.185703937 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.186158057 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.186341592 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.188114062 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.188210719 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.186301377 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.188119897 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.186437997 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.188880921 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.18819461 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.186469271 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.185135196 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.189297202 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.18579934 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.186280553 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.189288046 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.186580577 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.188589008 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.189009871 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.187924192 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.187357566 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.188827793 seconds)
  done (took 81.785825019 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.188707544 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.188996378 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.188941818 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.188974345 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.188294418 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.188411884 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.189555425 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.188478719 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.188550204 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.188678639 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.189890391 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.189252921 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.188607257 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.189853016 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.188835514 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.189151863 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.189647356 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.188842903 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.188806232 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.189579365 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.188626688 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.190263336 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.189305582 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.188805879 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.190012008 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.189903795 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.190271559 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.188644286 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.189845141 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.189166848 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.190066101 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.189424931 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.190752149 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.19094203 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.190956772 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.18941865 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.189813971 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.190320108 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.190534424 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.190538597 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.191256528 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.190700464 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.190428683 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.190532903 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.190958814 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.190990111 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.190337809 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.191432631 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.191550824 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.191047511 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.19045589 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.190251527 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.191199392 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.188704474 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.191350322 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.190600351 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.191446978 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.191357732 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.191588443 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.191863565 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.191633964 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.191023732 seconds)
  done (took 74.903809572 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.191823054 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.192404572 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.191016483 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.189381228 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.192157708 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.189224545 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.191541549 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.192444348 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.193321806 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.193259498 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.192310524 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.189313093 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.189292323 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.193137728 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.190680371 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.189773394 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.190182095 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.190187221 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.193828702 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.189993325 seconds)
  done (took 24.951804562 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.190296663 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.193187684 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.191013967 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.191384782 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.193321572 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.190701677 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.192882138 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.192921675 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.190942594 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.193587778 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.194035739 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.193622668 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.190673418 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.190986166 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.193271742 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.191610191 seconds)
  done (took 20.201080644 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.190744359 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.194331745 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.19181138 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.191982385 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.191288411 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.190780193 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.193560295 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.191511939 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.191286468 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.194679973 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.194386635 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.194629926 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.19412642 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.195039372 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.191484704 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.193404001 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.192675313 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.191948179 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.193943286 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.19408045 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.192455202 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.192952814 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.195160736 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.194377153 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.191845492 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.193008661 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.191937556 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.192112758 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.19271827 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.194938918 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.19211711 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.192379056 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.192181592 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.192747585 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.194329097 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.192798572 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.194998433 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.195240794 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.196259574 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.1950794 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.194587545 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.192476073 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.195985001 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.19624888 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.193212717 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.196143577 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.192677672 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.194435196 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.19354034 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.192654798 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.196500113 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.194727939 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.196107078 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.196765757 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.195871288 seconds)
  done (took 66.778496942 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.196719277 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.197775677 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.193852916 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.197225916 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.196463659 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.19480336 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.196331401 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.194168692 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.195146908 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.197647451 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.195586091 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.197079071 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.194301194 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.198022394 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.196007994 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.196579402 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.195173372 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.1943903 seconds)
  done (took 22.658101932 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.195572349 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.19505965 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.197836002 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.194761234 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.194172428 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.19864782 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.194089955 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.197230153 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.197660807 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.195554551 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.195713958 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.198671289 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.197465754 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.198816066 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.19642844 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.195478608 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.197287748 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.198665938 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.195168212 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.195319232 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.197700412 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.19818055 seconds)
  done (took 27.457041474 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.195089423 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.196234207 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.21268388 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.236424918 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.225022854 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.196239777 seconds)
  done (took 8.393757327 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.197011585 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.198815859 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.196168345 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.199404535 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.198003574 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.196926093 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.196375876 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.196677997 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.197763789 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.196649337 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.196133083 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.199121828 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.200159229 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.197103529 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.199385872 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.199272598 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.197890916 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.197000277 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.198063867 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.200071247 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.197254078 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.19997856 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.197671286 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.196988368 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.197263093 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.19801426 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.199310308 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.197892299 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.197363783 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.199747033 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.200620633 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.197392093 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.19977996 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.197929044 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.201041486 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.20018375 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.197874953 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.200701582 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.200039658 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.198116489 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.200420094 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.200606845 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.201227895 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.197987608 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.202129791 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.198762214 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.198493801 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.198654889 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.197687546 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.20074348 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.200908441 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.198624904 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.200568741 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.200988772 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.200790337 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.201186594 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.199147764 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.19942558 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.200896962 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.199251024 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.198780518 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.201323073 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.199174705 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.199386963 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.20178999 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.19927224 seconds)
  done (took 80.265893498 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.199158969 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.198855614 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.199659788 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.20140662 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.200226478 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.20049987 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.200020461 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.200893735 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.199608477 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.199465468 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.202519663 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.200573909 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.20041154 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.199916532 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.201002056 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.20081867 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.199859593 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.201003353 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.200474315 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.204076718 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.200989625 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.201281349 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.200473812 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.200459919 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.201577589 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.204285517 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.201694468 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.200420767 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.201221589 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.199752835 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.20086597 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.200654829 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.200969121 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.201284007 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.201122171 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.201365023 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.201530572 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.202011907 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.202139788 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.203906289 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.202394323 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.204636291 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.202479189 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.200887719 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.202423112 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.201981312 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.200981808 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.202337797 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.202421342 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.202361431 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.203518511 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.203593049 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.202677135 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.201870022 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.201676465 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.201811024 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.202989332 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.202936763 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.20189421 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.205430858 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.201693414 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.201848315 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.204612969 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.20290728 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.203137801 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.202710135 seconds)
  done (took 80.443579077 seconds)
done (took 1626.157913193 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.232341594 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.20145552 seconds)
  done (took 13.571932783 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.364179865 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.319622687 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.20254531 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.250941452 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.202741281 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.222901618 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.202468306 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.202527504 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.202306377 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.203617209 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.202978055 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.390751292 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.201361684 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.20277294 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.203756457 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.296449345 seconds)
  done (took 41.017094256 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.230575443 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.209547365 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.313437384 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.221684604 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.229164213 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.38065637 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.258714467 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.208366626 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.367331633 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.246345529 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.678405791 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.230971381 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.20703712 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.250722694 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.224316414 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.381761205 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.440301555 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.686913819 seconds)
  done (took 27.906362966 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.628167485 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.231905912 seconds)
  done (took 9.001655242 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.209128691 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.21610594 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.227771953 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.214756944 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.218122908 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.262395141 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.267141521 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.275381046 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.246161659 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.255155145 seconds)
  done (took 63.539350145 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.225316788 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.207814328 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.210171522 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.207705692 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.200259172 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.199683414 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.207883473 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.204478578 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.616116535 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.328071221 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.220809546 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.215346266 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.209309306 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.209872452 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.208230019 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.242729907 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.38257684 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.207779877 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.206242299 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.214526662 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.209885046 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.314639179 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.245718139 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.206604277 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.325527231 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.632485264 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.214037011 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.21611919 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.325373366 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.207500964 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.207111443 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.209006516 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.211063056 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.772460511 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.641172613 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.214334344 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.245131995 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.216626716 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.208320003 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.345596275 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.209566062 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.216086521 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.203156395 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.614698438 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.362476029 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.314721647 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.353052634 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.211499969 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.21137366 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.269965141 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.210284536 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.210603695 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.23743847 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.952051724 seconds)
  done (took 103.813848594 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.236442742 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.696552267 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.372186161 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.222105677 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.071356311 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.882221411 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.204062053 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.474203575 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.208978073 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.200866388 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.47333259 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.69974257 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.211857988 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.272571604 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.786499349 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.272964626 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.206038373 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.131610848 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.204391555 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.203914643 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.622659759 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.220075272 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.215937781 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.253972135 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.241362977 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.650536995 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.590804032 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.721919522 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.205989154 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.203837728 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.665584648 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.21402073 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.257185772 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.203913643 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.468725799 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.541934971 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.519305423 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.21260933 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.232019072 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.20847643 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.231542774 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.64706575 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.531134297 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.204371514 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.204477614 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.651888558 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.205353937 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.21400857 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.21199087 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.410680438 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.947632191 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.205606278 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.597861333 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.20597412 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.462243591 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.252492867 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.224974116 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.678538073 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.205230145 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.334485319 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.234162471 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.207679514 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.208546629 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.206513743 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.209842587 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.53539766 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.31087408 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.209813408 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.536332909 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.656545948 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.206279132 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.724047315 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.139850027 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.209760042 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.271115223 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.20533082 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.917149257 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.680014614 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.264554928 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.205832548 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.523702103 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.209261875 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.481382905 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.222406322 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.208156232 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.63882812 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.231201525 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.246381264 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.207702535 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.208118167 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.018161969 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.211144684 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.468579913 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.223756292 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.207524949 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.207368617 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.240584458 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.206285679 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.208406511 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.208679354 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.720720525 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.20806657 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.334193614 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.228510018 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.207341339 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.209213634 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.20659461 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.207652741 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.430713382 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.812640513 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.211889422 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.20772256 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.208564803 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.213574276 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.207422123 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.215067772 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.498350539 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.210051898 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.2076533 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.226332809 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.934312517 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.237067747 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.207904527 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.209374195 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.035302708 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.416802747 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.226228357 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.209762372 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.209403594 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.230482637 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.511998364 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.210425451 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.272698345 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.211211767 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.90437071 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.24076794 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.222630337 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.611604761 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.209594218 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.165397734 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.228621235 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.211437574 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.513110973 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.479442227 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.240967965 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.212656118 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.223837083 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.882385546 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.211527322 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.341766795 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.22619623 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.243060453 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.407536221 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.811906561 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.210750691 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.756776348 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.210741462 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.424789561 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.210823674 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.528466011 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.691504165 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.210172969 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.21518396 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.907235125 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.85758356 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.972878916 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.213619974 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.48380303 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.182042068 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.661958141 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.211041263 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.212305641 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.82087432 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.211699357 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.214938907 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.213112049 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.212499881 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.27891938 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.385695019 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.838204462 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.219845549 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.654405832 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.256884667 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.211368493 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.217967175 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.213904166 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.564260649 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.26882676 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.21615943 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.26077919 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.214616537 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.211812017 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.667126302 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.181327886 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.214879297 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.365379238 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.831229592 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.211712678 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.21448081 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.991950089 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.57966633 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.743467093 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.226061055 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.50495774 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.221984814 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.252987322 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.008561385 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.269320664 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.668640664 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.212353417 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.212296979 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.801300399 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.213698296 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.282212566 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.212650917 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.214555234 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.742148805 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.212967217 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.215061949 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.526900067 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.213241711 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.466257371 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.214577628 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.235427669 seconds)
  done (took 1083.441867127 seconds)
done (took 1343.430930568 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.213477871 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.213354736 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.202914737 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.218291623 seconds)
  done (took 26.003799 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.227701473 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.221162236 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.22873655 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.220748231 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.224678374 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.221176392 seconds)
  done (took 8.502087599 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.244879733 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.216160579 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.217234705 seconds)
  done (took 18.834231546 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.428522955 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.43812746 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.570803011 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.313503157 seconds)
  done (took 9.910341198 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.223201665 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.223655526 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.222626706 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.225604873 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.227518536 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.230305964 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.225693124 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.226985401 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.229519985 seconds)
  done (took 12.191086124 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.053982282 seconds)
done (took 81.650018368 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.955221055 seconds)
    (2/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.281532414 seconds)
    (3/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.781102444 seconds)
    (4/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.588458355 seconds)
    (5/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.602030635 seconds)
    (6/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.222331455 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.131054779 seconds)
    (8/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.207693306 seconds)
    (9/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.576419137 seconds)
    (10/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.560000208 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.469808792 seconds)
    (12/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.601996667 seconds)
    (13/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.221546293 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.258982677 seconds)
    (15/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.280582192 seconds)
    (16/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.221583486 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.127559995 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.248289361 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.078669512 seconds)
    (20/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.810989928 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.836203626 seconds)
    (22/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.235187281 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.061046232 seconds)
    (24/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.354089831 seconds)
    (25/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.244724976 seconds)
    (26/309) benchmarking ("sort", Float64, false)...
    done (took 5.509099111 seconds)
    (27/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.401071149 seconds)
    (28/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.238353805 seconds)
    (29/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.30284255 seconds)
    (30/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.426615349 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.143979248 seconds)
    (32/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.230608697 seconds)
    (33/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.021917645 seconds)
    (34/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.71236866 seconds)
    (35/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.202713819 seconds)
    (36/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.577544777 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.565416448 seconds)
    (38/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.361277197 seconds)
    (39/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.532497278 seconds)
    (40/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.109794736 seconds)
    (41/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.219801845 seconds)
    (42/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.07075531 seconds)
    (43/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.244029538 seconds)
    (44/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.400279775 seconds)
    (45/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.426932187 seconds)
    (46/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.327738765 seconds)
    (47/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.087091856 seconds)
    (48/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.307661984 seconds)
    (49/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.252129339 seconds)
    (50/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.331837517 seconds)
    (51/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.219637176 seconds)
    (52/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.375665575 seconds)
    (53/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.47656746 seconds)
    (54/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.327122104 seconds)
    (55/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.047155061 seconds)
    (56/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.809717488 seconds)
    (57/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.26119829 seconds)
    (58/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.636036518 seconds)
    (59/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.147274591 seconds)
    (60/309) benchmarking ("sort", Int8, false)...
    done (took 4.306663214 seconds)
    (61/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.205370963 seconds)
    (62/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.204760748 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.298017941 seconds)
    (64/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.292301015 seconds)
    (65/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.582770519 seconds)
    (66/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.570864533 seconds)
    (67/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.024026878 seconds)
    (68/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.686465363 seconds)
    (69/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.304309467 seconds)
    (70/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.799346728 seconds)
    (71/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.354578111 seconds)
    (72/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.568942371 seconds)
    (73/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.594397715 seconds)
    (74/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.251076439 seconds)
    (75/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.767008645 seconds)
    (76/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.205374007 seconds)
    (77/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.530261161 seconds)
    (78/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.503458812 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.320054582 seconds)
    (80/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.610850444 seconds)
    (81/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.779886366 seconds)
    (82/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.236419721 seconds)
    (83/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.248233083 seconds)
    (84/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.273775922 seconds)
    (85/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.2199076 seconds)
    (86/309) benchmarking ("sort", BigInt, false)...
    done (took 6.225263309 seconds)
    (87/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.364943503 seconds)
    (88/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.306973584 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.2940134 seconds)
    (90/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.219629098 seconds)
    (91/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.445901732 seconds)
    (92/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.226961898 seconds)
    (93/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.410725971 seconds)
    (94/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.77481847 seconds)
    (95/309) benchmarking ("sort", Int64, false)...
    done (took 5.377855866 seconds)
    (96/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.810546436 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.819496426 seconds)
    (98/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.254315169 seconds)
    (99/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.927181004 seconds)
    (100/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.516415615 seconds)
    (101/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.309559777 seconds)
    (102/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.4705735 seconds)
    (103/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.250142714 seconds)
    (104/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.739379956 seconds)
    (105/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.029429921 seconds)
    (106/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.544855077 seconds)
    (107/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.24921719 seconds)
    (108/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.323259444 seconds)
    (109/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.232667369 seconds)
    (110/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.590461225 seconds)
    (111/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.966564314 seconds)
    (112/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.2358747 seconds)
    (113/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.308834659 seconds)
    (114/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.625684776 seconds)
    (115/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.366564051 seconds)
    (116/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.248985003 seconds)
    (117/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.946828634 seconds)
    (118/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.357378964 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.244007333 seconds)
    (120/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.530296201 seconds)
    (121/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.214093326 seconds)
    (122/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.224532468 seconds)
    (123/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.339703981 seconds)
    (124/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.447315717 seconds)
    (125/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.239869186 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.65501073 seconds)
    (127/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.465764917 seconds)
    (128/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.233029029 seconds)
    (129/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.225875782 seconds)
    (130/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.206919024 seconds)
    (131/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.51926106 seconds)
    (132/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.490918357 seconds)
    (133/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.285371829 seconds)
    (134/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.588638407 seconds)
    (135/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.240561968 seconds)
    (136/309) benchmarking ("sort", Bool, false)...
    done (took 1.736451466 seconds)
    (137/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.250353224 seconds)
    (138/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.817978315 seconds)
    (139/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.250872945 seconds)
    (140/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.222012289 seconds)
    (141/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.480551786 seconds)
    (142/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.363779151 seconds)
    (143/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.359593093 seconds)
    (144/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.964833798 seconds)
    (145/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.989701261 seconds)
    (146/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.481769065 seconds)
    (147/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.226774419 seconds)
    (148/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.604396491 seconds)
    (149/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.932855873 seconds)
    (150/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.473215404 seconds)
    (151/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.288727813 seconds)
    (152/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.32812152 seconds)
    (153/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.821160914 seconds)
    (154/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.578265668 seconds)
    (155/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.244064474 seconds)
    (156/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.427144514 seconds)
    (157/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.236475798 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.778501982 seconds)
    (159/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.285727235 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.248612635 seconds)
    (161/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.337289781 seconds)
    (162/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.990382728 seconds)
    (163/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.251589761 seconds)
    (164/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.544717822 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.240588862 seconds)
    (166/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.313435115 seconds)
    (167/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.643847016 seconds)
    (168/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.274978818 seconds)
    (169/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.128964751 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.061548493 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.196790606 seconds)
    (172/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.248076609 seconds)
    (173/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.757764146 seconds)
    (174/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.663709712 seconds)
    (175/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.252786012 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.298447654 seconds)
    (177/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.043623952 seconds)
    (178/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.223956279 seconds)
    (179/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.860446056 seconds)
    (180/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.239128223 seconds)
    (181/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.024067235 seconds)
    (182/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.308600452 seconds)
    (183/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.821683579 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.682787785 seconds)
    (185/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.231315918 seconds)
    (186/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.209974078 seconds)
    (187/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.238329883 seconds)
    (188/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.959987907 seconds)
    (189/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.211084007 seconds)
    (190/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.999445977 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.636803116 seconds)
    (192/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.689608541 seconds)
    (193/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.963070631 seconds)
    (194/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.253010982 seconds)
    (195/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.012797752 seconds)
    (196/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.229149232 seconds)
    (197/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.26938589 seconds)
    (198/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.252895079 seconds)
    (199/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.781870851 seconds)
    (200/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.592409319 seconds)
    (201/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.231413374 seconds)
    (202/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.242807437 seconds)
    (203/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.310008735 seconds)
    (204/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.217241973 seconds)
    (205/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.216428518 seconds)
    (206/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.615191894 seconds)
    (207/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.39824113 seconds)
    (208/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.540617845 seconds)
    (209/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.313757598 seconds)
    (210/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.284765945 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.113032817 seconds)
    (212/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.225012539 seconds)
    (213/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.236525076 seconds)
    (214/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.256580808 seconds)
    (215/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.224513824 seconds)
    (216/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.870781074 seconds)
    (217/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.711899676 seconds)
    (218/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.982880386 seconds)
    (219/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.255749945 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.435162791 seconds)
    (221/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.872236348 seconds)
    (222/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.212844788 seconds)
    (223/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.228764772 seconds)
    (224/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.237907527 seconds)
    (225/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.738798201 seconds)
    (226/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.656443711 seconds)
    (227/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.440812484 seconds)
    (228/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.790477973 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.794819047 seconds)
    (230/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.213087034 seconds)
    (231/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.704335793 seconds)
    (232/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.798978929 seconds)
    (233/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.313787581 seconds)
    (234/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.249995704 seconds)
    (235/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.026762468 seconds)
    (236/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.462908052 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.627637016 seconds)
    (238/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.260777078 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.309607029 seconds)
    (240/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.514220864 seconds)
    (241/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.404849881 seconds)
    (242/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.269737856 seconds)
    (243/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.239328658 seconds)
    (244/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.708106642 seconds)
    (245/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.256303234 seconds)
    (246/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.2250685 seconds)
    (247/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.976921814 seconds)
    (248/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.517777875 seconds)
    (249/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.428606405 seconds)
    (250/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.597638422 seconds)
    (251/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.230583637 seconds)
    (252/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.06346798 seconds)
    (253/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.604386183 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.575956944 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.069291599 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.589810789 seconds)
    (257/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.347729411 seconds)
    (258/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.312385786 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.649580443 seconds)
    (260/309) benchmarking ("sort", Float32, false)...
    done (took 5.228520812 seconds)
    (261/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.257440257 seconds)
    (262/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.414887426 seconds)
    (263/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.841472256 seconds)
    (264/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.236233969 seconds)
    (265/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.437299386 seconds)
    (266/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.269585412 seconds)
    (267/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.453305535 seconds)
    (268/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.316467727 seconds)
    (269/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.516688965 seconds)
    (270/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.273836319 seconds)
    (271/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.257570044 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.62051629 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.328727397 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.638804989 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.337796479 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.332388095 seconds)
    (277/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.650191844 seconds)
    (278/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.527443799 seconds)
    (279/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.215746059 seconds)
    (280/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.015830039 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.861250387 seconds)
    (282/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.214211858 seconds)
    (283/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.262889016 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.632161951 seconds)
    (285/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.363602263 seconds)
    (286/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.093757866 seconds)
    (287/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.256860636 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.323327833 seconds)
    (289/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.239862748 seconds)
    (290/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.182708258 seconds)
    (291/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.564057407 seconds)
    (292/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.314333797 seconds)
    (293/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.808344139 seconds)
    (294/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.347908193 seconds)
    (295/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.658911133 seconds)
    (296/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.357794676 seconds)
    (297/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.231296527 seconds)
    (298/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.048555431 seconds)
    (299/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.052766599 seconds)
    (300/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.230953119 seconds)
    (301/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.600483942 seconds)
    (302/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.281881479 seconds)
    (303/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.272786362 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.275572098 seconds)
    (305/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.230645361 seconds)
    (306/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.245364038 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.271704398 seconds)
    (308/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.470917385 seconds)
    (309/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.230957691 seconds)
  done (took 885.740292933 seconds)
done (took 886.89884507 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.263680929 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.258075081 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.242496824 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.264319614 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.353796445 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.271283774 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.253323225 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.244603091 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.291000324 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.292614795 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.23942478 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.268136126 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.244635746 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.241751414 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.242431985 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.256660511 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.273829886 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.245017636 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.260635301 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.252238731 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.258719546 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.242473552 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.292411904 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.269797077 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.247310928 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.246585602 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.245595635 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.263706042 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.355197726 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.247435995 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.245676717 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.254447153 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.273645511 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.243797538 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.239289822 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.263446025 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.254864118 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.254347616 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.248192723 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.276646544 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.635640304 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.243553111 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.245590854 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.245126059 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.245689976 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.249401267 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.245245764 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.251673656 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.258096518 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.258009078 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.696291266 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.260567217 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.247442748 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.246263859 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.256445865 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.244344145 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.249200182 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.260414885 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.266087385 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.261348254 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.270507878 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.251845748 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.248154567 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.26152099 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.252480895 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.743608319 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.243945067 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.250226814 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.695308798 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.254210138 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.668385555 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.254159786 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.248269812 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.261386665 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.278673575 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.283613276 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.244090863 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.245527048 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.254596573 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.245506623 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.25756333 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.259353889 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.252973294 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.24733487 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.260126504 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.275075002 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.256517906 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.24851581 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.255896645 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.266448248 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.253628103 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.258242374 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.251017471 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.243291321 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.256662182 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.251677681 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.250225575 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.251043583 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.252768251 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.258533834 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.684093414 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.2662199 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.245671077 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.244674503 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.247355592 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.260637653 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.644469132 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.248836513 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.26923428 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.295384667 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.249461334 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.264942479 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.251488715 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.264753618 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.257714927 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.251533856 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.244568398 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.255729583 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.637224498 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.262946848 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.251213588 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.247203638 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.265808422 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.250720373 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.246342954 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.25642185 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.25081277 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.262247822 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.370446876 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.259284909 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.281404098 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.24795745 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.253531954 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.277617997 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.2652789 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.281937817 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.253350697 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.268132479 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.26567446 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.246606811 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.259988106 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.261081316 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.251118777 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.256317587 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.244441081 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.282299535 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.263115962 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.262944043 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.271404845 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.370661175 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.24734317 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.242428658 seconds)
done (took 211.953568082 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.308470302 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.24238801 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.330292582 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.248159452 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.345968286 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.344583194 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.245747197 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.244815136 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.244751892 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.624007281 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.246318237 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.246214001 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.244655906 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.2462576 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.329716387 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.248421802 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.245744259 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.586634333 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.248142836 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.317905133 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.246286221 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.246429593 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.248215877 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.632183991 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.241369205 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.242821925 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.319131343 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.248992023 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.59248527 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.249023906 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.241262825 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.593446211 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.337444646 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.266783141 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.258638861 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.256999428 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.345309897 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.266116149 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.328979907 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.328707714 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.333875521 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.287883694 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.242329646 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.246655337 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.250840947 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.250053344 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.247957539 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.276754063 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.243633674 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.248053532 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.587718733 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.259051687 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.257391124 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.246956542 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.248658484 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.269948627 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.24845727 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.250703942 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.337173154 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.250133449 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.311825574 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.6296595 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.627362236 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.250909554 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.24315335 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.248739578 seconds)
  done (took 142.707367106 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.315403306 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.3229422 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.358809714 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.250997464 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.298317044 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.361514825 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.250220383 seconds)
  done (took 10.339143163 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.254606419 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.251456474 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.299693251 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.299462763 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.252051669 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.39802304 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.252888869 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.260706433 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.248870026 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.303318656 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.25290195 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.252445757 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.260184927 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.251401551 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.298347146 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.26268724 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.365114702 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.252719075 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.252541031 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.401778171 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.249305045 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.259842126 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.302387408 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.263919148 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.254360506 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.257049448 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.819125605 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.251893113 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.251155095 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.252824943 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.25090692 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.289333359 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.252815252 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.250629813 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.250462524 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.366604565 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.252633938 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.251892702 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.253743284 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.247660463 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.252516161 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.252380742 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.253451416 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.251063626 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.253802134 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.274291053 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.252005276 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.254927197 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.253911276 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.254157429 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.303883933 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.254140868 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.252111339 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.250899511 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.307727265 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.260155765 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.254046534 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.252018301 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.25443798 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.252006767 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.403989997 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.301427484 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.253781484 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.301720896 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.255176168 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.254292032 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.254568404 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.253579481 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.307954291 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.255427755 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.301752951 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.252426648 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.407290674 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.277198918 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.257055806 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.256016956 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.257678328 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.254883603 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.24889813 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.258920518 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.252464883 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.25415203 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.259261281 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.253065419 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.253338015 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.359017533 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.361754213 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.252838761 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.265636447 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.260217884 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.253329618 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.307382844 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.257276458 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.253156348 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.306026833 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.369199246 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.307314727 seconds)
  done (took 145.319230604 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.25969745 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.262997713 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.256091215 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.271046535 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.254857592 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.25545811 seconds)
  done (took 8.746857588 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.257948029 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.257330978 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.257155146 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.258132557 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.255422975 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.256963031 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.256342563 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.257332937 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.260201565 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.256952981 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.257678003 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.26087684 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.259218688 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.257483685 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.2566519 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.258300105 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.257246324 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.254273895 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.256950032 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.257127723 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.350389285 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.257146021 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.258212194 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.257881815 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.262941888 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.257517661 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.263665533 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.257854022 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.257751686 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.264013084 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.26067061 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.259372597 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.258314705 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.262622006 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.261981166 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.258220665 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.262118939 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.261097248 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.255209864 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.259847593 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.262496757 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.258813774 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.259130381 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.261851018 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.260051417 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.263248351 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.26587596 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.265175861 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.259642495 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.262019785 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.26194506 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.258853028 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.259871907 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.262055766 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.25974263 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.261326817 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.266209433 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.260868057 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.258872405 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.260115927 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.260519565 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.260817582 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.261612702 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.263908258 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.267746645 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.262691012 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.260305527 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.264058393 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.259729263 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.259811778 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.262946381 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.257443057 seconds)
  done (took 92.995600701 seconds)
done (took 401.286885616 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.601658825 seconds)
  done (took 7.79292383 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.264456479 seconds)
  done (took 7.457171915 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.088936678 seconds)
  done (took 22.286922598 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.323354498 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.310838358 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.282735914 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.259649207 seconds)
  done (took 26.371014581 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.816696453 seconds)
  done (took 8.009976056 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.254344836 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.254410026 seconds)
  done (took 13.704627404 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.735730038 seconds)
  done (took 7.928765833 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.804307537 seconds)
  done (took 8.001948705 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.279482043 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.276984592 seconds)
  done (took 14.001045498 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.238921848 seconds)
  done (took 7.432601255 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.09958729 seconds)
  done (took 8.295926632 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.26632613 seconds)
  done (took 7.461155265 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.337933054 seconds)
  done (took 7.531327169 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.289677485 seconds)
  done (took 9.483631797 seconds)
done (took 156.949748649 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.254140009 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.253986592 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.256475256 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.254484322 seconds)
  done (took 26.211952364 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.295550799 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.296514268 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.2976344 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.306271516 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.299994575 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.297882897 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.288969701 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.288679098 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.307338568 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.300901893 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.297789923 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.298542069 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.296281853 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.288818679 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.299560793 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.298286742 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.307957111 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.298272534 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.287976547 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.299862625 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.264611397 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.307723755 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.300932573 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.264370954 seconds)
  done (took 32.286004294 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.461152145 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.333849408 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.415471353 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.314787813 seconds)
  done (took 6.721183907 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.315452472 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.318340921 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.329205519 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.367989367 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.392960276 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.32729555 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.289576992 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.286627756 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.27115133 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.31763875 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.392625594 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.333473016 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.40044392 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.265424032 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.449239985 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.264279563 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.26437985 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.316563637 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.368287406 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.427219323 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.264884333 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.316770642 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.320187567 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.334441212 seconds)
  done (took 33.130025244 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.263251821 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.27216974 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.270238689 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.264768533 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.264954119 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.265683961 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.270680484 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.265878598 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.286342607 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.266849416 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.263515465 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.264847936 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.265006086 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.266747376 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.264007431 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.278193618 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.279110485 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.265762269 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.268232415 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.271300187 seconds)
  done (took 26.575501005 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.257124821 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.112167736 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.610171239 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.514332145 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.258351442 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.260668146 seconds)
  done (took 27.21092229 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.331452781 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.472785678 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.26762755 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.614195997 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.688651631 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.265694125 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.266727319 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.506874155 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.807557782 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.800170242 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.321537094 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.332621818 seconds)
  done (took 18.874400559 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.259220005 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.260790842 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.264286029 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.277881655 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.318885567 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.271331887 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.272775706 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.258499764 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.321480504 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.324980292 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.272525377 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.320183528 seconds)
  done (took 36.622795039 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.349295259 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.305358369 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.312723206 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.017069123 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.983319062 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.475172996 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.025648371 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.688206043 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.267345358 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.535167834 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.263127273 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.35078648 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.518596242 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.261850468 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.264811675 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.217184231 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.490479292 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.766710396 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.267150744 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.203790088 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.289859885 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.26711629 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.378985911 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.293342676 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.474906558 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.240558443 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.524416863 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.040140584 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.546123758 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.275933782 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.27355029 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.263054229 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.537207334 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.919507557 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.35879898 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.274350695 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.947901218 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.810642351 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.261711967 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.286654231 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.193690297 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.266460076 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.273781158 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.26276601 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.198381723 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.273616814 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.70162208 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.271269217 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.975971012 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.264033589 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.275259488 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.358622107 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.267056512 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.83492292 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.265298668 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.270396951 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.262479638 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.270741383 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.833379052 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.186996561 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.269320742 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.214788263 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.628516534 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.187399113 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.892405848 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.36835842 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.268097677 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.26815392 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.198903768 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.282524107 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.282869649 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411195519 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.290300004 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.914773752 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.966329435 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.274953801 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.198756594 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.834776689 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.270126405 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.201611223 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.492130492 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.043131272 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.200820439 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.212023118 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.199197134 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.986355998 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.277070986 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.694881463 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.275810377 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.684575865 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.281130376 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.28345652 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.289866877 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.487834434 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.151249059 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.265924681 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.234304586 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410575377 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.287983693 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.68472554 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.203279619 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.269888236 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.52162091 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.477508323 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.265978405 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.230757263 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.462614953 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.27002732 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.29795523 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.270404495 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.279054191 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.834518275 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.282028107 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.726645856 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.285870724 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.042997886 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.026953771 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.271581741 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.370220037 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.267024582 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.512072241 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.052067339 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.152072535 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.334760761 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.271205929 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.267346894 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.293636683 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.118682583 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.149168383 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.269592397 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.282373777 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.279836115 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.268527819 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.213060506 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.276957342 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.277567683 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.049492811 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.49094118 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.270647765 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.544950131 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.201840289 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414687797 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.276860135 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.489747191 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.482311553 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.268652391 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.526989702 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.274447424 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.277926506 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.281122525 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.287519414 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.365904281 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.290425095 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.268602824 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.528333918 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.272712043 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.273619665 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.31032012 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.048947587 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.276317233 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.274757279 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.087725391 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.842347882 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.248508074 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.272217832 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.159786408 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.283017622 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.336746197 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.275839306 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.280707843 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.08155374 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.068359682 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.276453322 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.278103277 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.495441917 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.279393671 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.214985185 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.352314559 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.460814129 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.850369076 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.285027532 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.204425506 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.980977279 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.962697648 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.270659178 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.471514794 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.269625108 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.279148481 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.281804733 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.784131242 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.846295082 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.275037483 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.218224492 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.27935452 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.282018895 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.276780364 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.270761746 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.065453265 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.747450035 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.283274259 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.285654698 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.41444616 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.285162594 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.20528696 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.789052135 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.276587205 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.271145373 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.049696113 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.306722768 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.247943237 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.744116822 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.532335629 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.945514468 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.286231008 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.388407831 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.305910491 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.270819126 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.284598984 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.276564797 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.291115515 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.282644307 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.283002221 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.289447438 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.7131831 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.838230697 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.991197011 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.800629031 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.174633792 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.289656282 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.157308343 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.700989768 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.210565692 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.928856294 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.460989775 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.698680367 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.220808814 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.466346581 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.494806697 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.044464971 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.286192246 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.501160631 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.167664698 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.279586233 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.287300317 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.48600523 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.308113706 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.273349934 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.206122848 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.558164199 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.506319601 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.28548945 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.357882027 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.696415326 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.278612284 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.05483657 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.272280098 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.688194069 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.447536818 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.82256877 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.660444355 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.273493199 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.297701075 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.743684191 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.279426748 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.800218715 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.906286449 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.286660356 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.469608177 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.213487668 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.286544868 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.286298059 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.27478984 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.591329394 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.286520205 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.531530393 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.285945219 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.208828049 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.278251635 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.801170618 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.132649806 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.279647332 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.276163204 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.03836138 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.28340536 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.561451724 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.278674777 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.082129661 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.280450666 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.209635831 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.210223482 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.970672561 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.285132806 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.251938287 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.785673282 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.628429092 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.260894661 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.307944467 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.122544618 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.532346551 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.290942625 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.857795438 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.50412895 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.056514982 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.301186141 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.376760603 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.276429787 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.263715735 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.158987418 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.512797876 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.099037845 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.500927612 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.329340681 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.19146683 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.27486617 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.491994256 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.170054759 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.292576615 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.528828404 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.990558761 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.286471255 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.990064051 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.305237188 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.290029695 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.290227338 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.644587743 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.285120781 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.349285074 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.289209057 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.289644425 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.289041892 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.44834926 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.282338486 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.28214885 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.292399458 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.372395569 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.784091927 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.072373341 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.053632793 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.864389249 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.023661506 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.862193728 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.293022402 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.277949875 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.280200476 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.212620225 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.428924665 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.806045242 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.552308773 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409554783 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.711306395 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.30270395 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.281991297 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.290851414 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.492221764 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.553993571 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.149542192 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.291475226 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.939799219 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.162089749 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.291119069 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.491516848 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.795727748 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.861885322 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397581651 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.285551909 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.714507067 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.555304039 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.371365055 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.279113266 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.870083496 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.301282386 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.695121876 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.28832139 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.285317931 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.429583568 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.290315743 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.943736475 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.291104695 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.436833818 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.054635779 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.265413322 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.538758697 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.754458066 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.291671722 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.866685233 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.985422593 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.544804873 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.351350447 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.291324998 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.382848885 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.427590982 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.291439755 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.164292024 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.281527009 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.127617898 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.992094986 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.291285334 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.865038286 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.54731942 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.278717516 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.289944268 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.307145992 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.292546685 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.505544916 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.009390935 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.507781538 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.292316465 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.290559948 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.851360757 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.865662913 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.29625984 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.215988351 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.285813207 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.52224315 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.51843192 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.308594477 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.735186924 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.994325291 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.843298417 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.254518053 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.303965422 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.282494486 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.005998363 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.868059145 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.084432253 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.797478974 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.942747666 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.290459263 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.557798518 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.28807667 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.284780732 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.55987299 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.287071965 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.291281763 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.29535905 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.869248857 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.06339059 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.309127813 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.278069632 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.221599992 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.509220504 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.912145802 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.223617423 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.283896473 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.465611395 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.28704523 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415226252 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.295809472 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.280805409 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.294628651 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.042664623 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.563771916 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.289146325 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.267773951 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.277083 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.294131556 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.291025471 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.507847952 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.289754535 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.95763482 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.633045448 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.541977961 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.299519054 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.268896767 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.289141566 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.286308423 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.002472778 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.255038496 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.786948639 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.868727226 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.288398491 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.297715796 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.290259808 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.501757871 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.497391768 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.299330402 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.296461457 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.288383634 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.30119864 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.19008422 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.052308865 seconds)
  done (took 1555.609921209 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.288744492 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.301149277 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.317293519 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.362573261 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.31678362 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.405869445 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.348699694 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.36004352 seconds)
  done (took 51.923493334 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.293898749 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.437639982 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.315229665 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.2953876 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.296436407 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.284936556 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.73561476 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.298309948 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.293695168 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.296193624 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.292925212 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.298373513 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.930001939 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.295054728 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.296801746 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.272628793 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.293734866 seconds)
  done (took 64.458313913 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.285172751 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.871390279 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.382067756 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.291857319 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.352891984 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.293454411 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.29198494 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.286468856 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.285564775 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.564369657 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.942978525 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.292539665 seconds)
  done (took 79.366344523 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.29505149 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.294726893 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.293480245 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.294412203 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.294172989 seconds)
  done (took 7.696010096 seconds)
done (took 1967.884105988 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.529090669 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.971219844 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.937527335 seconds)
  done (took 5.132699615 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.431394816 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.480945203 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.602757997 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.606972613 seconds)
  done (took 7.346451725 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.570990109 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.664244607 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.480952694 seconds)
  done (took 5.938813582 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.693875501 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.295589646 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.407189174 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.285434407 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.28734569 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.285754908 seconds)
  done (took 20.081689036 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.290866049 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.292482051 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.290982186 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.292948274 seconds)
  done (took 6.391471505 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.2704631 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.984461507 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.274207993 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.293249141 seconds)
  done (took 18.046415335 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.036102447 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.050188612 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.034694903 seconds)
  done (took 7.344268227 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.29568302 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.129380323 seconds)
  done (took 9.649188418 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.593875538 seconds)
  done (took 2.817329409 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.42300729 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.619851105 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.384753803 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.299346729 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.372047712 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.175342855 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.956100835 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.50311375 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.296630844 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.499372356 seconds)
  done (took 27.755616836 seconds)
done (took 123.653018558 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.086569224 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.530168614 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.487710152 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.060391038 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.520559507 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.487877311 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.497438203 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.025641308 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.568591932 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.557535507 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.062462498 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.521933492 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.655131316 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.286269014 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.654656199 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.532734218 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.518147234 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.127959589 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.741500997 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.97621674 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.496306286 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.694246819 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.887086942 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.707502994 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.516390961 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.436230439 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.272087538 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.287645653 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.913720889 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.284623253 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.434919831 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.1489718 seconds)
  done (took 190.204800827 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.287523285 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.298073077 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.28763016 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.286961692 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.287294592 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.287215675 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.287500264 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.305140945 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.295104825 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.287730832 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.288190541 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.288073443 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.287489646 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.290025867 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.289317203 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.289059494 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.289004752 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.288275375 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.287129925 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.297639562 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.287127843 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.301516506 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.288458852 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.288403431 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.288478653 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.287077355 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.292739629 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.2882432 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.288053133 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.298544126 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.288702661 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.288701847 seconds)
  done (took 202.51623385 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.300285744 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.288021707 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.287825297 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.290795178 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.28871129 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.292093384 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.291455801 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.288794213 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.289095653 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.287377028 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.288120244 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.303032637 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.28973206 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.303409913 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.290662943 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.290896284 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.309193672 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.287921867 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.287865871 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.290204051 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.289841318 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.300722233 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.302778221 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.289390414 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.290877452 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.2877458 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.307513721 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.289526853 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.28896084 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.301702806 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.289073436 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.30323961 seconds)
  done (took 202.616247482 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.485564655 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.298618466 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.299445804 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.232533346 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.299051666 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.299254809 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.293961199 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.496170763 seconds)
  done (took 13.93212686 seconds)
done (took 610.494731236 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.639345024 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.353064474 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.502573518 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.321419368 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.090189717 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.322532591 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.320460029 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.486524954 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.232005936 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.490240781 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.563763578 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.315691303 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.723280898 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.318969801 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.565507558 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.416493939 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.171481636 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.289679205 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.633038351 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.835878371 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.580371105 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.787035499 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.485497096 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.238849321 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.705675229 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.810385469 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.038562046 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.172721993 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.319912645 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.631382341 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.993488709 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.285883848 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.377944645 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.356723822 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.412813214 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.393935597 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.266060794 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.357484352 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.498453192 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.551026635 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.821478306 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.034473553 seconds)
  done (took 89.943668211 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.288759055 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.288086651 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.288403612 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.288921366 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.290145972 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.287718865 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.287474489 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.288378065 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.289314158 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.288440236 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.287346386 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.288629184 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.287954876 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.290004967 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.289479607 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.287006834 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.288800316 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.290968284 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.288077609 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.287962738 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.287552718 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.288942781 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.289059873 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.289297453 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.288679906 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.289103932 seconds)
  done (took 34.737737857 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.303638364 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.552682442 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.712956983 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.308577169 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.301614977 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.306633656 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.377967864 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.304799243 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.305532646 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.305920998 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.456311877 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.306063989 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.337669857 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.739207254 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.303963554 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.30526455 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.304178499 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.304835444 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.565072532 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.311737462 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.401113543 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.305186352 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.379577702 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.312632328 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.324157332 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.304714526 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.307848351 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.823390186 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.305929286 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.457051267 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.083086976 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.377465346 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.77653576 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.727263471 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.077720029 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.309057511 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.305681205 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.460946173 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.306500715 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.305083245 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.380153011 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.305197177 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.730515471 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.929327061 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.32070085 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.307655276 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.842418255 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.461962509 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.548217587 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.312276936 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.750238995 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.308689735 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.307331873 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.307449093 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.54576221 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.312464679 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.306081021 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.836277385 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.325951784 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.38285932 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.309594525 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.305453383 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.566444264 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.304683636 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.554111626 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.306771136 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.315546305 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.307323914 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.733965692 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.310424763 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.952476251 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.321736051 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.30863098 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.459347455 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.562560927 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.876501579 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.310560607 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.574045287 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.796185681 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.384719968 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.312954007 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.814825085 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.388535484 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.312082938 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.311513312 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.311083515 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.30826028 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.35468208 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.383292665 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.89107514 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.942183264 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.851145892 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.400234924 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.319887437 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.30835507 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.837824135 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.325094847 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.308953218 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.728649271 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.954746947 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.324691483 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.315658133 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.936886301 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.326945963 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.384755062 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.31424106 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.737595151 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.312052861 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.354515969 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.309274027 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.314819732 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.311618964 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.383383258 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.312483397 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.310488642 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.91913555 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.481384327 seconds)
  done (took 172.399804743 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.3016986 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.301808723 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.301387528 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.31554978 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.302292438 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.307452127 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.30299096 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.302283035 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.306648458 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.304097139 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.302564334 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.303037821 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.312833728 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.306169334 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.312922983 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.310369985 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.913246705 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.304048899 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.303742739 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.301333071 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.09690905 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.304387003 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.303843705 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.301719633 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.301509516 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.304446947 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.306496456 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.305526211 seconds)
  done (took 151.181679388 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.310839387 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.882832069 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.313990577 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.439704361 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.331825835 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.309705599 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.436368181 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.366178646 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.310976209 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.309379088 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.309168418 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.607372287 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.314926671 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.817354445 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.497681047 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.439791765 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.817437796 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.314238032 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.31027928 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.309702419 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.440716668 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.318419015 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.609925587 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.869099683 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.313482178 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.869082278 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.300249094 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.313720719 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.310716005 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.873065013 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.310154171 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.611807473 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.385024795 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.369176504 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.873270332 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.827021413 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.832172178 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.456978284 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.309679803 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.31129183 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.31149531 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.30124864 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.874102304 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.314162665 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.312985993 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.866937111 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.328524582 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.315010033 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.323000155 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.311404544 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.369613106 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.370874873 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.616929874 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.880438922 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.387782367 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.333523017 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.440396127 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.030911759 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.315886796 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.826519943 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.302393892 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.880004656 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.316415605 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.301603849 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.313721596 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.320091602 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.459621603 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.441990464 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.821576731 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.314644991 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.821360576 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.461173986 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.313019844 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.31250298 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.314509078 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.87614949 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.821967691 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.459061816 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.4437602 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.504919117 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.303267122 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.311450686 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.302240879 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.387450405 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.314653492 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.880118413 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.823741308 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.315720421 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.316387712 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.315099162 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.315828185 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.48805858 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.879689026 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.389885427 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.814125061 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.629161146 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.616332339 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.316774388 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.372324155 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.313956489 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.618800717 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.316318915 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.371244865 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.150629389 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.618692461 seconds)
  done (took 157.613746573 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.555057956 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.483143426 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.405357287 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.424925035 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.901657388 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.877374986 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.628223482 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.444750658 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.421227939 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.557810438 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.462758613 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.405536219 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.478972963 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.402307614 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.039470552 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.377540227 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.405722184 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.438322206 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.408998413 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.350888349 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.956508333 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.612096365 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.482035793 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.275858446 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.407850372 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.058154883 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.859989447 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.881407467 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.490589555 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.614131304 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.853021924 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.447365884 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.26837273 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 1.965349026 seconds)
  done (took 63.888986147 seconds)
done (took 670.994050551 seconds)
SAVING RESULT...
DONE!
