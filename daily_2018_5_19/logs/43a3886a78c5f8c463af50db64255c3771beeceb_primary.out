cset: moving following pidspec: 25625
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.673108841 seconds)
loading group "string"... done (took 0.58007657 seconds)
loading group "linalg"... done (took 9.651441536 seconds)
loading group "parallel"... done (took 0.180844649 seconds)
loading group "find"... done (took 1.625525956 seconds)
loading group "tuple"... done (took 2.170453895 seconds)
loading group "dates"... done (took 1.485516028 seconds)
loading group "micro"... done (took 0.217685006 seconds)
loading group "io"... done (took 0.616139363 seconds)
loading group "scalar"... done (took 47.079340508 seconds)
loading group "sparse"... done (took 14.572594026 seconds)
loading group "broadcast"... done (took 1.282210883 seconds)
loading group "union"... done (took 11.413554348 seconds)
loading group "simd"... done (took 2.798859141 seconds)
loading group "random"... done (took 10.917633805 seconds)
loading group "problem"... done (took 1832.696864717 seconds)
loading group "array"... done (took 25.848593153 seconds)
loading group "misc"... done (took 1.200866721 seconds)
loading group "sort"... done (took 4.004614589 seconds)
loading group "collection"... done (took 20.42024244 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.755276569 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.148996204 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.251638137 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.35425264 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.246201485 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.147072697 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.16615863 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.647361683 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.016763055 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.232162353 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.149666914 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.585872743 seconds)
done (took 6.366246949 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.256882829 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.325115161 seconds)
    (2/2) benchmarking "String"...
    done (took 0.172605788 seconds)
  done (took 1.10715908 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.088104499 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.180898175 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.108589535 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.094325651 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.10930117 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.108704549 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.108598213 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.107622638 seconds)
  done (took 1.429439219 seconds)
done (took 3.498711394 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.529184886 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.86455748 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.574624773 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.16175536 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.316659115 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.421477564 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.337062771 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.204037153 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.105505983 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.102949512 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.173553441 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.433344395 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.474133185 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.054402369 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.104448152 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.092504412 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.1286582 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.809895502 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.075944141 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.130742965 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.574284823 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.212816157 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.1084691 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.114490314 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.195093038 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.114200589 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.173551445 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.102248711 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.668624958 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.128801519 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.197208494 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.095344562 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.156508812 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.243343568 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.221698525 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.104773708 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.677779966 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.19710212 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.09936612 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.098318819 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.678593079 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.132663773 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.163256438 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.10132601 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.088551796 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.195070388 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.117666033 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.090156477 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.111249189 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.084208241 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.165337481 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.483334678 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.08883702 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.165166656 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.088747459 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.69689333 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.09683989 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.283224463 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.134536412 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.101396993 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.073011318 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.101649111 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.154123306 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.108292981 seconds)
  done (took 20.73871437 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.156391637 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.163062771 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.088712499 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.139047226 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.140393806 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.093223129 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.079366372 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.088831548 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.125239663 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.234315614 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.136810221 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.166776511 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.086363252 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.083045393 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.141695192 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.247933742 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.117492118 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.102825931 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.097064775 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.100941568 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.122965381 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.110522104 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.106283366 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092605199 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.1825435 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.200578084 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.103003695 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.118718293 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.095465749 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.111732538 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.136438517 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.14395596 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.086325448 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080502596 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.182395517 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.116613389 seconds)
  done (took 5.212943245 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.223008976 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.121898744 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.233940213 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.185302334 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.175879766 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.16176951 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.164449261 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.14068353 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.307577434 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.246916056 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.159015721 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124857412 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.108541588 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074516341 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.096523343 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.074955964 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.638777928 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.181746875 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.146191318 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.146401387 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100973851 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.098195368 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.40353245 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.08145572 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.092329273 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081753191 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.088868263 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.201134474 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098949316 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.209309297 seconds)
    (31/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.097871725 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.079378042 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.105061032 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.125981987 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.194935598 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.130697171 seconds)
    (37/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.092898459 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082422482 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.141709916 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.093830238 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.217433766 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.105559303 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.073130822 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.1314073 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128828469 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.132410367 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.095078938 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.090647852 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.234912977 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.078972047 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.118074013 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.12986027 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.208501305 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.115834848 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.0936117 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.331744277 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.11103706 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084360807 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.094625948 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.298515909 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.129374469 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.076650759 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.09159751 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081876033 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.090557803 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.434931041 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.10557101 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.975868298 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.094701997 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.163134183 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096165187 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103364723 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080699489 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098371207 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.11317297 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.075559326 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.090940706 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.075271216 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.091194356 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.080864071 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.117209665 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.098224019 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.076334489 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.095100164 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.153657111 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.092643854 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.111717997 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.119961674 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.082858524 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.09120086 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.122596894 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07706782 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.095411495 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.168026894 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098382399 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.101060086 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099215878 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.137598587 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.092237781 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.194792009 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.076684312 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.120474693 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.094844008 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.108189711 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.111326981 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.091513895 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.078456374 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.089869828 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.074916548 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.160323261 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.078476135 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.093530565 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.093949121 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.090989883 seconds)
  done (took 23.700124753 seconds)
done (took 50.260666123 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.558636827 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.118327945 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.115409568 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.116223373 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.09866712 seconds)
  done (took 1.700706539 seconds)
done (took 2.366420647 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.379082153 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.183578631 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.124172717 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.181306041 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.101917371 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.18764999 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.190172044 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.098394061 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.219232416 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.095493972 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.181051207 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.095577652 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.084596003 seconds)
  done (took 2.81801607 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095784446 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.12677093 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.095144488 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110268671 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075035074 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110501581 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.107328795 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108264601 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109150572 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085991488 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092326856 seconds)
  done (took 1.778974989 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.092436548 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.119375548 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081644081 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.107833798 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07476205 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.107485106 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.089554641 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.121087739 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.105837478 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087644205 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.090371098 seconds)
  done (took 1.74046181 seconds)
done (took 6.996830913 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.173820051 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.559997414 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.14580679 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.197439944 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.373536115 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.244718606 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.613747308 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.162081648 seconds)
  done (took 12.34150419 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.175918607 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.081593122 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.099133803 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.097999411 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.083766455 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.096654702 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.083084393 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.09659541 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.081159225 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.097182319 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.08125288 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.096636195 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.08196233 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.095891179 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.095689401 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.083220337 seconds)
  done (took 2.264236803 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.12075948 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.120727525 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.104638852 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.107569466 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086666708 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.103196897 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.105174663 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.08958169 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.100750471 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.087661273 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.107012745 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.105659615 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.091256346 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.100400274 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.10402398 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.092863834 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.100615059 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.088508201 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.105567997 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.104916806 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.091897519 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.103671985 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.10524313 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.092831193 seconds)
  done (took 3.201739474 seconds)
done (took 18.468940951 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.17444802 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.096612409 seconds)
  done (took 0.953941147 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.146623848 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.14944997 seconds)
  done (took 0.972855506 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.111521547 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.094457471 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.138794773 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.115641566 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.081168148 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.095018423 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.1333571 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.080714969 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.095603375 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.080227731 seconds)
  done (took 1.711580473 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.085856385 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.099711473 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.093546043 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.145489001 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.109312519 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.101105322 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.085543876 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.101184347 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.085549692 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.097876802 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.105469807 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.120536521 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.088119415 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.123451932 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.09959508 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.090829049 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.111485117 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.102905073 seconds)
  done (took 2.534418763 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.080377695 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.09661859 seconds)
  done (took 0.863549039 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.087226316 seconds)
    (2/7) benchmarking "second"...
    done (took 0.096164598 seconds)
    (3/7) benchmarking "month"...
    done (took 0.085863085 seconds)
    (4/7) benchmarking "year"...
    done (took 0.10088457 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.081532385 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.095950199 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.096334021 seconds)
  done (took 1.334223849 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.566369194 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.276409619 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.380751768 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.118792607 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.142444893 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.403626376 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.143631108 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.113422917 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.097291347 seconds)
  done (took 2.973452868 seconds)
done (took 12.028328786 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.088556565 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.219836537 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.685029804 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.103373036 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.096832492 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.140036467 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.325224775 seconds)
done (took 2.357081008 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.350234681 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.15443718 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.088060887 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.094065186 seconds)
  done (took 1.378937341 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.076876936 seconds)
    (2/2) benchmarking "read"...
    done (took 0.103885587 seconds)
  done (took 0.875025406 seconds)
done (took 2.960645163 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079006696 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.129685869 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.076797526 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.094885079 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.076612715 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.09503125 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.077216865 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.095488315 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.077375509 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.091811421 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.077019263 seconds)
    (12/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.092536723 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.078623461 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092515992 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077649117 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092452661 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077683856 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.093916769 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077716406 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093297016 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077764182 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.093896299 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.077599388 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.092109711 seconds)
  done (took 2.823768897 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.103582869 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.097767521 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.100257855 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.085040964 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.102857869 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.084990252 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.100894615 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.097479959 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.085164347 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.096765588 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085403967 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.101702325 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.097036862 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.086279581 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095866313 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.086969067 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.100500279 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095871054 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082165164 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.102588074 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.085326882 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097265695 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.10058356 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085479622 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.102450828 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101716308 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.08199781 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.096790173 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.085556644 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.100741483 seconds)
  done (took 3.526478731 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.088114486 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.08922565 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079427184 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.101009555 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.076229982 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.094087109 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.076181274 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.090877886 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.081442981 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.093366783 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.081688456 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.094261361 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.075638662 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.095709014 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.081479213 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.097868476 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.089493522 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.092355498 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.076147145 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.096398985 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.080765419 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.092598242 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.078877269 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.094453617 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.079187313 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.091169461 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.080754813 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.094294277 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.079441035 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.093539375 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.080547965 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.098077076 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.078996225 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.103776661 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.082931669 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.09397141 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.083044056 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.090789626 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.080327613 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.090951941 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.074470975 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.095002668 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.074812971 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.103246304 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.079369102 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.095711321 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.075488431 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.097072684 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079251467 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.099092171 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.090235243 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.076385468 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.095976852 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.082499008 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.097514997 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.076121214 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.09528193 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.076116615 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095667701 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.079637968 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.089865246 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.075424646 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.096843348 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.080142242 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.111945559 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.086054491 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.091431498 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.081127636 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.095911544 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.083820707 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.096643077 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.10655344 seconds)
  done (took 7.039787209 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.095646343 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106939902 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.081046772 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096111653 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079969062 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.095147507 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.087181416 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096440044 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095331478 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.088189282 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0948173 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.082276309 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096477133 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.081119993 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095298741 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.081632819 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.103292349 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095342538 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.080492484 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.096085967 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080558641 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.102819913 seconds)
  done (took 2.71767156 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.25791947 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.08772113 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.149275028 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.113974516 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.117431897 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.095707882 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.10151961 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.101269216 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086459784 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106040856 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10597011 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085432588 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.120587041 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10691121 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091801954 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.108359698 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100397469 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.093581296 seconds)
  done (took 2.736567762 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.100130313 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.098985697 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.106570875 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.09933712 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.098388539 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083059831 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106206554 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.114209838 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.082233925 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.097391496 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.093494913 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099093091 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.083101263 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099327495 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098424129 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083991842 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.098735529 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083487293 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.108787294 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.228217788 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.090887836 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.109968951 seconds)
  done (took 2.974390652 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100282849 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.098574015 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.132437692 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087018403 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.098239969 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.08091747 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.104659266 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.082079747 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.106494229 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.09714508 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082715627 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.097845515 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.091361533 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.09859523 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.105132936 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084018311 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.097220775 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.082842822 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098584861 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.0805308 seconds)
  done (took 2.61689198 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.177469552 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.097741199 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.112792605 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12774305 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098003351 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.113781298 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.126768617 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.096775331 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.113577043 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.130131801 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.096467113 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.113857482 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.127729047 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.121240067 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.098701686 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.126518054 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.128239188 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.126836486 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.09885086 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.113824775 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.130820497 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.097040889 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.125881185 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.11351784 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097061107 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.113407885 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.097165689 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.12257945 seconds)
  done (took 3.959733021 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081103072 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.078290463 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.096258291 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.078705513 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.095229732 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.080579495 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.095808972 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.078867772 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.094266614 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.078980793 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.094951233 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.078865413 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.09608368 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.07848156 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.094557573 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.080430077 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097217582 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.078993622 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095593004 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079342058 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.095540031 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078124857 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.095886854 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.079787589 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095288348 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.079921329 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094914594 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.0789693 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09499244 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.079910768 seconds)
  done (took 3.320775342 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.096286599 seconds)
    (2/2) benchmarking "in"...
    done (took 0.121528791 seconds)
  done (took 0.935118868 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.091555349 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115780795 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.079407471 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.09675485 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.08945551 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.098151128 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108306358 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091156419 seconds)
  done (took 1.484904752 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.147253592 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.146709866 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.087636588 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.110136185 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.146073249 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.141383691 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.143367981 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.086971635 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.099724987 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.073849933 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.139678071 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.092652244 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.084472469 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100080236 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.083898571 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.108455926 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.097522038 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.091844899 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.104492146 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.082623779 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.104129821 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091699783 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103299276 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.108287518 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.077238409 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.105563935 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.090282489 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.111403065 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.098195934 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.087703581 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.099898017 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.081552902 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.101336882 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.086155181 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.099006178 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.146640764 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112625788 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.082413115 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.102005605 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086757911 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.108448378 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.080952248 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.105900453 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.098572736 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089886248 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.104186263 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.087294002 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.097898219 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.076847752 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.095078673 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.082167533 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.096970705 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.08075927 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10381395 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.102537416 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.094408428 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.099385942 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.078371819 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.09699341 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.080085197 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.102349267 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.080711074 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105163243 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.101176406 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.082616583 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.102030593 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085757986 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.099776736 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.083782402 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.098739112 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.084505458 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.117932729 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.105157728 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.086278078 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104856872 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.081071396 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.099639199 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104984274 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.08445838 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.104640503 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.085727127 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106094142 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.082387 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.098162045 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.09730286 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.089427048 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.10019443 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.084276242 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.09162704 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095290152 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.100047632 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.081179062 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.095461144 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.083143403 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.098774321 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.100785066 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.078365515 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.102972088 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.080002506 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.10392176 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088037675 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096601117 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.086686694 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104021288 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103679897 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.085535222 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.144117074 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.09946623 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.081565671 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.100914537 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.0870302 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.097334435 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.084460806 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.097134692 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.079235982 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.098111032 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.086518588 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.103097056 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.099068116 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.086072097 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.099660684 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.08843896 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.101118781 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.079698799 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.097228165 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.085035721 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.108462241 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.105572632 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.08415191 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.099067821 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.081765687 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.103803841 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.086180293 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.103955059 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.08675361 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.103827621 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.080794039 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.09976365 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.103842313 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.087418151 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.098974245 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.084768369 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.105851894 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.102816267 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.085631722 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.104276881 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.08090885 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.095725432 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.087127514 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.098466135 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.08275961 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.110108825 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.099140308 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.083675025 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.099477981 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.091859288 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.101297861 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.087014557 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101613052 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.087386481 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10586156 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.075837813 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101403918 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.101441397 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.089173801 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.099619266 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.082448525 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.098838339 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.088430979 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.09747769 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.084837001 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.095588507 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.078904538 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.105856235 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.083246794 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.102769182 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.099538401 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.099664633 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.114203382 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086979585 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.102667037 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.102295566 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.085225907 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.102774287 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.085751605 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10564095 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.087875042 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.101131114 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.084777528 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104734449 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.095749948 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.086994278 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.103171371 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.086274186 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.093664478 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.082246041 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.094696571 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.086569776 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.106561568 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.086722623 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.106330209 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083594374 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.102819861 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.110419831 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.082820202 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.104413114 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.077915294 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.104292256 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.091590915 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.105372772 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087948358 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.105293312 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.101347288 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.083674832 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.11079497 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084322627 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.103180076 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.083514657 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.096607151 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.088650001 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.106219506 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.083999875 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.099554329 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.098088214 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088305344 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107003444 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.083886146 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.096653739 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.085954601 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.108175353 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.098053103 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086995748 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.098932519 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.084768397 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112627403 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.078777094 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.099443595 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.106726702 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.087848723 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.100072432 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.08358949 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.101928702 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.09688607 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.10298214 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.083151332 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.102016601 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.090508234 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.10201942 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.079917754 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.100302475 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.101094643 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.079308175 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.100654995 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.086536259 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.100375568 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.082435317 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110121614 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088462573 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.106602147 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.103185244 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.086984966 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.106582493 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.088648251 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.097659263 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.088808256 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.098934209 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.078158054 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.100568421 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.075582974 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.100663239 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.099739665 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.088437794 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.101936002 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08463724 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.103912342 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.08747917 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.101267481 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.105499057 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.098796952 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.096858725 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.078495052 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.102638903 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085378791 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.100124957 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.100809543 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.083500439 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.105611292 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.086443295 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107885955 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.080240605 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.099924837 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.088020172 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.100276074 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.087679841 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.105714793 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.106291178 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.08161461 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.104817152 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.083719542 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109750227 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.079091761 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.103462321 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.103057149 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085866354 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.100657867 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.084469727 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.099677639 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.079235699 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.10026884 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.088867523 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.097674503 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.103431421 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.084042104 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.102709932 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.079762321 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099285715 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.089482808 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.097555232 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.088280459 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.100140329 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.077803336 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.097311959 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.087998922 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.104836722 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.106348167 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.082146738 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.103048016 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.089635749 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.104386588 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.081893254 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.110347849 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.090695571 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.106465231 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110138148 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.078559759 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.101110366 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.092977843 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.099722964 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.084396404 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.101105402 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.079830694 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107203008 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.088409344 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.105424652 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.1011442 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.078629023 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.101855207 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.089251163 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.104395883 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.085967356 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.10223235 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086933322 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.100060722 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087075144 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.107202696 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.08797737 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107718632 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.104613041 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.087267196 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.101918893 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.088503023 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.100379697 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.080110486 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.097849917 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.082690757 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.106684398 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.07725148 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.105063699 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.085742807 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.100557174 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.102552894 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.086426023 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.09971157 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.084644456 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105503 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.082307511 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.112144289 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.082827019 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.100543737 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.086076883 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.105844494 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.078159179 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.101019663 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.100290271 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.089849997 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.103508656 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.087019879 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104987523 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087132372 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.102581649 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.086649638 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.105321099 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.105377207 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.080530707 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.108505607 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091388528 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.103138384 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.084586288 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102780693 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.078955207 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.103343336 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.089640302 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.102269293 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.109889475 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.088089832 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.103043136 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.084080033 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.106584549 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.084746565 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.108103038 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.079642848 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.106608114 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.097606584 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.090406762 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.103863281 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.089605725 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.101963255 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.080889817 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105352821 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.087035985 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103586694 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.108004982 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.089478291 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.098285949 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.079454819 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.102478056 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.083703245 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.112936002 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.081891046 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.102888817 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.102071402 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.084313588 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.101077015 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.090253384 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.097940815 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.082823669 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.105452482 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.085549955 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.100066084 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.079917427 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.105152144 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.08563582 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.104819302 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.103552423 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.081949964 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.103753787 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.090333835 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.102420042 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.078004191 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.102735367 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.089936002 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.104371125 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.100786178 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.080488981 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111691653 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.089204065 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.108741582 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.081022951 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.105664152 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.101956929 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.084679227 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.108964733 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.084923566 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106340295 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.085074164 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.107004729 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.092693977 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.098574415 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.098188028 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.093423322 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.105253015 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.088551478 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.103581073 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.084405965 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108365374 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.092404109 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.103950066 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.097367402 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.081287236 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.100446565 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.079550855 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.103134305 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.093930034 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.104690622 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.084530861 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104370172 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086276403 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.103207406 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.084111329 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.099682565 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10833024 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.084155797 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.10914476 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.08008206 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.096430366 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.084360176 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.106393106 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081011353 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.101635734 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.08288018 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.104603165 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.080881109 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.103497165 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.090939527 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.105621011 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.105942875 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.08604021 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.104012296 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.085808419 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.113891883 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.082473211 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.103312877 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113845046 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.089694784 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.105194014 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.08709338 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109811888 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.090050046 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.103687099 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.089421905 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.103271754 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.099941799 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.089702526 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.109791657 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097999484 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.104320886 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.078477684 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.106398517 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.080433033 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.099086021 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.11092068 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.091525864 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.108843956 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.086614288 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.102391223 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.091340203 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103653814 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086483682 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.103676799 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.104393473 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.087190493 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102924806 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.086533278 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.102043266 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.090224231 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.109808783 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.08755907 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.111383617 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.077851268 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112584973 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.109190687 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.090722507 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.101381058 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.080292466 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.099917218 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.086559755 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.110030529 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.088938299 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.1063775 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.085996838 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.10664521 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.087989928 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.105718391 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.103081034 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.091098387 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.106296843 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.084312453 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.107020111 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.08150607 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10037082 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.083269423 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.107943946 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.090007757 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.107879456 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.113419106 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.090569208 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.103987964 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.084406441 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.106822285 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.084714449 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.106809278 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087365116 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.102990844 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.080812488 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.107925016 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.109075244 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.086690132 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.110145614 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.093345894 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.105051494 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.089437669 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.11181747 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.106612078 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.084354648 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.106792024 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.085146219 seconds)
  done (took 57.885735553 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.164019599 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092871619 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104356694 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.084558319 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.133071134 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105568255 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.084992831 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.106077646 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.086337794 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.118499938 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.103380143 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084833681 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.128500404 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.135648563 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.132098534 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.118446475 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084953536 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.105581996 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.085099271 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106099321 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.107360747 seconds)
  done (took 3.039916557 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.110832329 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.124747922 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.121736672 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.125542376 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095873225 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.120191236 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.122468136 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.120472703 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.104530631 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.116481316 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.124876773 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.12109646 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.097272022 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.117645319 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.118175509 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116449307 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.106631592 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.114493903 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.121900519 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.122158661 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.097956931 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.122066249 seconds)
  done (took 3.31050288 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.098100236 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.106445516 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.090089801 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.104231954 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.088453991 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.105138091 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.094785253 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.104170412 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.093830115 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.104920323 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.081866539 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.103598288 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.08625005 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.105426845 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.082296965 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.103151113 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.11253274 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.088770957 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.109049029 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.085353769 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.120896863 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.084492911 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.105338867 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.081431649 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.118747433 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.109410126 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.085496967 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.10793852 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.080341862 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.108029794 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.08445641 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.106633431 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.087952003 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.101675674 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.081154478 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.109293802 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.088558565 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.105156578 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.084164198 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.102015104 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.085195554 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.109165836 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.110396903 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.0847733 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.103541434 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.082799696 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.108090939 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.084509045 seconds)
  done (took 5.438796607 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.126636717 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.162718099 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.09005376 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.153580588 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.126856282 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.120047153 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.088698761 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.130265091 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.109404605 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.111136335 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.108603191 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.128227313 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.11142 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.115037069 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.089393947 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.110903612 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.093348264 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.110564983 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.119596274 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.09098912 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.11842314 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.112462381 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.106250037 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.12530385 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.114555958 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.090311882 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.111982728 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.116620845 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.124778463 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.09916847 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.116065488 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.117510799 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.106578331 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.111054042 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.109914595 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.092846372 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.130043133 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.11229309 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.092977274 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.109770206 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.09147549 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.115330209 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.113135684 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.128637868 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.094449554 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.114776035 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.112317186 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.089080048 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.128178659 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.092302959 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.122394401 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.129280016 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.115023028 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.093200022 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.116178847 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.127915242 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.091978493 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.109982648 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.11310284 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.106096463 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.108532918 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.114156814 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.10815173 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.112364479 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.119413307 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.130271474 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.095936933 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.115324656 seconds)
  done (took 8.570484721 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126408229 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.116333871 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12942386 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.128582946 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.099009254 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.115532798 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.114946464 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.09661083 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.115926619 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.124191486 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.096514399 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.223336302 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.091470191 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.124601422 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.116263952 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.0962056 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.11603168 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.116771559 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097624993 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.116993521 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.115661788 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.109444028 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.116851548 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.130526757 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.132534227 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.092425617 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.116281611 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.115744428 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109686529 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.115986236 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.132975141 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.115944232 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.09635775 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.129764084 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.133214239 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.116288355 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.089374545 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.116282316 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.11571706 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.097643904 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.112113854 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.130077672 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.097803797 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.113166349 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.097304084 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.116111669 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.130066204 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.132798196 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.124233249 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.103652465 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.116340131 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.130648682 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.096695504 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.118360843 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.127967176 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.139912258 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.13060328 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.129987063 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097534566 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.13009503 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.129448141 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.140684337 seconds)
  done (took 8.086084472 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088732358 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.085197099 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.106388061 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.085822163 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.106499883 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085699944 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.105602232 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.085409826 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.105756174 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.085200731 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105473414 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084806929 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105625141 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085620249 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.106538051 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085776505 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106095633 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085779215 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.106031077 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086091863 seconds)
  done (took 2.678680478 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.103614209 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.129658779 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.08921703 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.119868518 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.109080631 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.098200517 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.108653039 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089544673 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111046502 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10908681 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101855411 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.122068027 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110580977 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.098486241 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.122320041 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.118707007 seconds)
  done (took 2.528027423 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.118121849 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.131278873 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.167223003 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.113569598 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.089859526 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.118945672 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.089343529 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.112531576 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.107556122 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.096789495 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.114020307 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.093968335 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.109226714 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.090521809 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.110883183 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.113438048 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.089242388 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.114505034 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.091162375 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.166903157 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.116856166 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.092459382 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.111448678 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.114059914 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.092857677 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.116526967 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.097354094 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.111482303 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.112576628 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.09113823 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.112908914 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.099894481 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.109959654 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.115225552 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.090569453 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.110858734 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.089722674 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.111030841 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.094533001 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.110091146 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.090671508 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.112457 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.109442053 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.094271869 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.107885537 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.091107483 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.107239209 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.097236689 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.111753183 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.113245825 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.091283043 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.115698622 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.095816494 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.121174457 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.118352655 seconds)
  done (took 6.702366119 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.109157277 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.11236737 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.105850093 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.107497785 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.089782462 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.113301278 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.111857241 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.09338209 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.11334819 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.087254751 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.113563885 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.09208206 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.112728948 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.111259926 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.092412751 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111373782 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.087106444 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.112179504 seconds)
  done (took 2.661849883 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.100459028 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.110726322 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.095541113 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.11041751 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.088700434 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.111879692 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087215899 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.108119981 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087503251 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.110133129 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089536302 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.109757894 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087361258 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.110569358 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.109235607 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090491209 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.109411236 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088491886 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.11035394 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087993775 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.110097342 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.087483806 seconds)
  done (took 2.990891982 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.108705427 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.168628811 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.121316557 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.177754854 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.110645304 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.088779204 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.120645903 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.109637578 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.109048773 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.107971864 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.08609902 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.108797362 seconds)
  done (took 2.210934139 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123542917 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.150720182 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.11266819 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091806653 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124437869 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096135544 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117947574 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116741354 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126979714 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113970284 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117567328 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127719767 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127933995 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129524209 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102808495 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12454707 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116928496 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097682539 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11215889 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.14083251 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096301574 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128507628 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116746377 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116555814 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097830807 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132434381 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128849212 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13508256 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098522088 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128982871 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123550485 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117717901 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107563208 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133103549 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111713927 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12889039 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096975994 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139464476 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123350511 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130751903 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.090243874 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123756639 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129235627 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125918139 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108604437 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118035663 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124535886 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096409351 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118266411 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.149809534 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123362693 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130820017 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103165538 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128551876 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128989855 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.148612077 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134204501 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131238145 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123121501 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113411469 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.13184053 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124366701 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131282762 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134829511 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101851032 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130999755 seconds)
  done (took 8.769093675 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141621902 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.113558815 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117273537 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134141413 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111312974 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118364603 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117477265 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097962293 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116722737 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112048738 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.169263762 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098912215 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13222491 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131362126 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117511827 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098661847 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120764275 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130804011 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092959313 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.148017603 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117734864 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130895125 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131150817 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131013716 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11301572 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124859997 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118046298 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097292445 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118404274 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118039824 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105761315 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118220741 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130372634 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.09159319 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130522588 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118039827 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118893071 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105439747 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118962827 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123514958 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130174617 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.140940396 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098508783 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118567177 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134899114 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097786658 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117238458 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113283314 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098658095 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11380337 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135895304 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134318692 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114004927 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131961999 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118159784 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11787806 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097685516 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119072009 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118188509 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103866874 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131872962 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118574959 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.149621161 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09785592 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119643411 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131660184 seconds)
  done (took 8.689885331 seconds)
done (took 158.391504952 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.156850876 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.17247369 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.148301172 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.147594025 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.10547525 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.120053988 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138304167 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.151035468 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.084591136 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.104675899 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.084304184 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.109655495 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.15010629 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.105353527 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.083635944 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.108673936 seconds)
  done (took 2.766116981 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.211577785 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.320404937 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.126044337 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.115250147 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.093837601 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.109110011 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.094178759 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.117503106 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.109572581 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.099987447 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.109078633 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.087887373 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.120344658 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.107733645 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.088944482 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.108282088 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.119605286 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.087424118 seconds)
  done (took 3.030793097 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.116643634 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.149927844 seconds)
  done (took 1.071529331 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.128804286 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.192921534 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.327833192 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.159981641 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.137440343 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.112454971 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.162210598 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.127554815 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.20143408 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.131042698 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.129981499 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.090947576 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.140147582 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.118902346 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.124036506 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.091796047 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.141414252 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.121678955 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.101872641 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.114659945 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.137978523 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.094497313 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.11965329 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.100249319 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.212477274 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.109230248 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.115052452 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.113476102 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.094157172 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.121860203 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.09275175 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.132308969 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.129802756 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.200484099 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.09783418 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.197063906 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.101068992 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.112678848 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.122673389 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.092742678 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.118837828 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.117948375 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.10982561 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.112602926 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.113418206 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.100593734 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.114816368 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.09208658 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.117615425 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.123925983 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.116806396 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.09352808 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.194592102 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.102196958 seconds)
  done (took 7.784856826 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.932193227 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.155757374 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.091165823 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.053225081 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.140938569 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.12855959 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.903601294 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.138115892 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.276272106 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.922878064 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.106309846 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.127041528 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.26028969 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.293648801 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.190675809 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.370883385 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.771202527 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.126654271 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.122406757 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.160352496 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122656302 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.14019842 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.135454113 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.439704406 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.091512164 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112421158 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.121653537 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.102520622 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.199916613 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.089898405 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.11728833 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.220895623 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.289486295 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.22831944 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.111578575 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.088960332 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.108421192 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.189458678 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.300365275 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.245835247 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.182793189 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107045015 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.087970138 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.12110802 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.133662877 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.08482985 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.203961739 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.190730497 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.213682946 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.114663541 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.103825592 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.123589467 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.118051004 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.179366235 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.106798149 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.368538214 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.374434842 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.109177639 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101566405 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.126752295 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.293949741 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.108868314 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.259851703 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.140167857 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.240827166 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090077785 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.812983244 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.205445549 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.088993948 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.118149883 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.097233706 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118827454 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.118667064 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.176246138 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.393027919 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122917233 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.095045377 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110214475 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.264417066 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.089529526 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.109667063 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.182962337 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.112961012 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.100873669 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.125176688 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122777347 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.188392912 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.288619086 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.103018439 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.122855398 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.117678587 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.102903564 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.114849271 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.229444743 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.271288931 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.176987094 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.251362551 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.099260486 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.202788078 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.18365991 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118501593 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.187887316 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121961019 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.125465697 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099018283 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.268664957 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.152573797 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.090740764 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.117706662 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.100383288 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.178082399 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.094188185 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.121578117 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.188820498 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.501020356 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.184360582 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.108533276 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.092833808 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12394318 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.199090759 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10111454 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.291751504 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123544439 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.185137738 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.122679097 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.106172357 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.103241083 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.204303245 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.099796794 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12401971 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.119884714 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100994178 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.290901461 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.249198923 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.125133356 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.265600044 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.191741233 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.09826713 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.214301589 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.101555255 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.21128938 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122599024 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.10029314 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.113574207 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.808856349 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.126359758 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.101107817 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.118592883 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.201752218 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.110713206 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.091661785 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.109847345 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.086677705 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.835164207 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.113247218 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.08775247 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.110865527 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097768481 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121422883 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120249911 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.098565372 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.201441715 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.265185312 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.124615367 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.099685442 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.111670389 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.178317788 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.11555782 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.089257265 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.112438944 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.088096203 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.12441212 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.117194719 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.091032132 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.215963592 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.176319624 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.252074776 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.574620154 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.111243562 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.088511774 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.283325839 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090534316 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.345037973 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123797239 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.256497704 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.205531375 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.087503585 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.368124898 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.210872183 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.20059296 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.09198745 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.213171463 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087139833 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.123847462 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.198656842 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090975143 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120179239 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.177951979 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.128164491 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.124995183 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.20064054 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.08903682 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.269527971 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.085948557 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.209861184 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.092071763 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121104365 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.340251507 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.11209091 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.107211772 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.20273283 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11671641 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.092292288 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.741502172 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.090307784 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.12558106 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118551662 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.255592778 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.184687869 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.123185879 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.123188025 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.124798305 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.186276484 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.249121726 seconds)
  done (took 47.172393171 seconds)
done (took 62.626982956 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.327106755 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.281905837 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.337015887 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.230941907 seconds)
  done (took 2.089866354 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.232293869 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.161719621 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.190049841 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.111577251 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.198813598 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.110577351 seconds)
  done (took 1.835009235 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.541565916 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.412619502 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.373785931 seconds)
  done (took 2.159429186 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.283893925 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.2727317 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.366606738 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.496131627 seconds)
  done (took 2.389787647 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.25878909 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.13533805 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.128569932 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.181950332 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.221134261 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.222702794 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.151810214 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.168087159 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.113365957 seconds)
  done (took 2.468095063 seconds)
done (took 11.773313891 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.351111486 seconds)
    (2/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.264693982 seconds)
    (3/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.248597563 seconds)
    (4/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.379512597 seconds)
    (5/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.217849443 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.208801918 seconds)
    (7/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.119827105 seconds)
    (8/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.102460478 seconds)
    (9/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.127689228 seconds)
    (10/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.30543604 seconds)
    (11/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.31001092 seconds)
    (12/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.274930835 seconds)
    (13/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.329204773 seconds)
    (14/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.219005593 seconds)
    (15/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.313319734 seconds)
    (16/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.097534044 seconds)
    (17/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.115528735 seconds)
    (18/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.195731354 seconds)
    (19/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.251493838 seconds)
    (20/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.177141845 seconds)
    (21/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.081052537 seconds)
    (22/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.171398456 seconds)
    (23/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.151931927 seconds)
    (24/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.10587209 seconds)
    (25/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.10980565 seconds)
    (26/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.096354691 seconds)
    (27/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.213314281 seconds)
    (28/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.224049381 seconds)
    (29/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.220115202 seconds)
    (30/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.154499912 seconds)
    (31/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.34884808 seconds)
    (32/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.213920837 seconds)
    (33/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.150673067 seconds)
    (34/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.203258068 seconds)
    (35/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.30706114 seconds)
    (36/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.126927654 seconds)
    (37/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.277930926 seconds)
    (38/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.173606963 seconds)
    (39/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.265344245 seconds)
    (40/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.096248232 seconds)
    (41/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.159090158 seconds)
    (42/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.103413576 seconds)
    (43/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.228236057 seconds)
    (44/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.195395301 seconds)
    (45/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.232198258 seconds)
    (46/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.120773662 seconds)
    (47/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.12036263 seconds)
    (48/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.098353671 seconds)
    (49/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.102930097 seconds)
    (50/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.173786903 seconds)
    (51/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.154512789 seconds)
    (52/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.118822451 seconds)
    (53/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.201589683 seconds)
    (54/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.080139217 seconds)
    (55/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.217763539 seconds)
    (56/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.337677567 seconds)
    (57/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.103752447 seconds)
    (58/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.219592781 seconds)
    (59/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.218876898 seconds)
    (60/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.081308132 seconds)
    (61/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.225451153 seconds)
    (62/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.183241715 seconds)
    (63/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.178408517 seconds)
    (64/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.203979401 seconds)
    (65/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.130171431 seconds)
    (66/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.096193876 seconds)
    (67/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.117174613 seconds)
    (68/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.098989285 seconds)
    (69/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.126374858 seconds)
    (70/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.079895035 seconds)
    (71/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.102049556 seconds)
    (72/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.113063235 seconds)
    (73/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.220841017 seconds)
    (74/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.103159406 seconds)
    (75/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.097316393 seconds)
    (76/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.222063842 seconds)
    (77/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.181624931 seconds)
    (78/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.081381371 seconds)
    (79/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.186583413 seconds)
    (80/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.097611022 seconds)
    (81/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.118844186 seconds)
    (82/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.120645494 seconds)
    (83/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.1130077 seconds)
    (84/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.13180643 seconds)
    (85/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.081510251 seconds)
    (86/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.103013089 seconds)
    (87/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.096682597 seconds)
    (88/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.136901807 seconds)
    (89/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.201848551 seconds)
    (90/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.096309406 seconds)
    (91/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.101630935 seconds)
    (92/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.080542249 seconds)
    (93/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.080404978 seconds)
    (94/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.103870018 seconds)
    (95/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.079825701 seconds)
    (96/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.129795664 seconds)
    (97/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.099038297 seconds)
    (98/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.18439167 seconds)
    (99/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.111685059 seconds)
    (100/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.099354978 seconds)
    (101/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.101716877 seconds)
    (102/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.081835217 seconds)
    (103/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.080583678 seconds)
    (104/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.17724478 seconds)
    (105/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.086069536 seconds)
    (106/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.128435408 seconds)
    (107/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.080069569 seconds)
    (108/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.202427373 seconds)
    (109/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.080563196 seconds)
    (110/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.080885988 seconds)
    (111/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.110404424 seconds)
    (112/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.096575914 seconds)
    (113/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.104209389 seconds)
    (114/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.09857239 seconds)
    (115/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.111879744 seconds)
    (116/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.10626729 seconds)
    (117/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.120987589 seconds)
    (118/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.081214326 seconds)
    (119/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.120238208 seconds)
    (120/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.219597536 seconds)
    (121/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.09671025 seconds)
    (122/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.103577787 seconds)
    (123/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.079721012 seconds)
    (124/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.150167001 seconds)
    (125/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.081050781 seconds)
    (126/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.120543167 seconds)
    (127/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.137816552 seconds)
    (128/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.113429754 seconds)
    (129/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.120851739 seconds)
    (130/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.081155954 seconds)
    (131/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.111736895 seconds)
    (132/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.081562526 seconds)
    (133/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.1037447 seconds)
    (134/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.092867715 seconds)
    (135/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.080589875 seconds)
    (136/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.102603748 seconds)
    (137/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.097570351 seconds)
    (138/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.120210223 seconds)
    (139/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.079817735 seconds)
    (140/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.120863035 seconds)
    (141/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.081632528 seconds)
    (142/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.112126014 seconds)
    (143/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.080862174 seconds)
    (144/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.119446128 seconds)
    (145/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.07985541 seconds)
    (146/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.17753386 seconds)
    (147/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.089246286 seconds)
    (148/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.116174268 seconds)
    (149/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.120570246 seconds)
    (150/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.098083791 seconds)
    (151/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.183152537 seconds)
    (152/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.097854478 seconds)
    (153/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.120571921 seconds)
    (154/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.153530415 seconds)
    (155/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.089397613 seconds)
    (156/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.103342076 seconds)
    (157/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.1016429 seconds)
    (158/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.111511672 seconds)
    (159/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.150369538 seconds)
    (160/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.12041852 seconds)
    (161/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.139480453 seconds)
    (162/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.097826565 seconds)
    (163/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.103933901 seconds)
    (164/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.098654783 seconds)
    (165/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.105009723 seconds)
    (166/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.096745251 seconds)
    (167/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.102191482 seconds)
    (168/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.080843838 seconds)
    (169/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.087437232 seconds)
    (170/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.121686921 seconds)
    (171/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.080239669 seconds)
    (172/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.103983504 seconds)
    (173/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.081866566 seconds)
    (174/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.19782068 seconds)
    (175/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.083133301 seconds)
    (176/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.104320234 seconds)
    (177/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.098410971 seconds)
    (178/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.103379607 seconds)
    (179/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.079862223 seconds)
    (180/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.136474861 seconds)
    (181/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.082340349 seconds)
    (182/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.10316598 seconds)
    (183/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.082145185 seconds)
    (184/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.082787417 seconds)
    (185/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.12203623 seconds)
    (186/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.097299309 seconds)
    (187/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.105110752 seconds)
    (188/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.087170882 seconds)
    (189/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.109528118 seconds)
    (190/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.081657143 seconds)
    (191/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.119794636 seconds)
    (192/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.089742001 seconds)
  done (took 27.730107459 seconds)
done (took 28.574363974 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.233874767 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.105358605 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.125799927 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.123788507 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.184546027 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.104569812 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.134841851 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.126895004 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.106608804 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.120156643 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.08990868 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.130767062 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.100810517 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.205213156 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.104414284 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.115899406 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.092031178 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.369863206 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.131728048 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.111738115 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.180909604 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.11612224 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.105329222 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.116430979 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.184286457 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093120355 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.124034986 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.123754125 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.107609662 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.121687737 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.099499882 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.115344306 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.13201118 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.109378341 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.112810722 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.098185351 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112870735 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.088650726 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.121412342 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.099157848 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.131053127 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.122345489 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.103889654 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.116066899 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.098306026 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.12020019 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090275775 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.127230179 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.113125177 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.100467822 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116882011 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.109845026 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.119395783 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.090158891 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.113251347 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.115481511 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.105756112 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113421147 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.108663277 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.113267693 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.093570734 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.1126928 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.100011208 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113850206 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.096511673 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.116448466 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.120125207 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.100172223 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.11939128 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093249077 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.112913795 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.097888684 seconds)
done (took 9.572578112 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.103659104 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.176333044 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.180580878 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.186663142 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.147281533 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.133398883 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.137876548 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.121207286 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.131981432 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.139202989 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.130073289 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.14486409 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.192041128 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.129772386 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.132954149 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.099232894 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.130140639 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.124093456 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.188549379 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.118067814 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.151323055 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.127954466 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.151346593 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.114028448 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.122129149 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.154824851 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.101147547 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.123544111 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.121472454 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.107074707 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.141325495 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.097899842 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.123518264 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.136635057 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.110159009 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.128504174 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.133619012 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.099722263 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.121384723 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.097892889 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.135936125 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.131766608 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.09774568 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.132469301 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.123530298 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.106855007 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.128865087 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.105095311 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.124570379 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.123267231 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.100987562 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.151457267 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.129484253 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.110006177 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.129667299 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.126693724 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.105684022 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.12740264 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.099863325 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.128722606 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.119883067 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.098379734 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.123679866 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.148089888 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.101357712 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.128619865 seconds)
  done (took 9.329489723 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.124443473 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.156992216 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.131535435 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.107340574 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.128544427 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.11056309 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.088175123 seconds)
  done (took 1.737757854 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.095569071 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.18537482 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.181732066 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.182513071 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.181187562 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.216320923 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.113242252 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.114380424 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.149461267 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.102208033 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.182784617 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.239816667 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.097474017 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.132642412 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.188819706 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.089419191 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.210520053 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.09097032 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.126658254 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.186065933 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.10545342 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.147557291 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.130392307 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.091134749 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.177668914 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.11719466 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.241197771 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.131829638 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.119828641 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.101786199 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.126992952 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.200521781 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.181080029 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.12978539 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.094262737 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.180018929 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.178440064 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.127394616 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.193292063 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.118816166 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.179362734 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.102365864 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.128438507 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.103091499 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.12652225 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.165700898 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.133268059 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.104952092 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.125553493 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.187184662 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.126336854 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.180261132 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.099427956 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.126029366 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.102785787 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.128810472 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.133217314 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.104027916 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.186153818 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.130272752 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.179724787 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.18069563 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.180491069 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.179513491 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.13747844 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.180825412 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.179572515 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.100773355 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.125141855 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.127486536 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.181737369 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.102015889 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.127969922 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.168851626 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.130656248 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.179810607 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.181442496 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.100021433 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.127995304 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.095418772 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.125225741 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.09045126 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.175861451 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.126665287 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.099482168 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.136416816 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.130217615 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.104306761 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.120112605 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.142427388 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.102792287 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.128983608 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.132567243 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.102977278 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.13296319 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.183249874 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.128010131 seconds)
  done (took 14.664433575 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.097261188 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.115644161 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.098784636 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.117739739 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.095331966 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.117307899 seconds)
  done (took 1.547476862 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.128323348 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.128708882 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.13949905 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.106019624 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.18567184 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.18636179 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.188911166 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.125562079 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.146178745 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.115426767 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.187581815 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.214987795 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.187097285 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.108991078 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.190637253 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.13284062 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.188583558 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.127709688 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.113194577 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.125203924 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.13368377 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.109021877 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124844286 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.178019405 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.131092104 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.107175888 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.127972816 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.114859318 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.137796466 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.124366756 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.107937019 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.130504603 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.120715169 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.101404764 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.188405259 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.121980146 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124191295 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.110939178 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.132277412 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.131146549 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.19140277 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.101571283 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.136857069 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.134100943 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.101131628 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.121632565 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.109447602 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.128880689 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.188371501 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.151694503 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.134418109 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.105664527 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.131969744 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.10975585 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.121833721 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124714788 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.109935367 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.213913341 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.107584366 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.121990249 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.106236231 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.132720674 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.125337484 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.109720971 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.131363562 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.132718096 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.098994481 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.130845063 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.100802062 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.129738182 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.133991075 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.105989729 seconds)
  done (took 10.579699191 seconds)
done (took 38.744650482 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.187280366 seconds)
  done (took 2.090498371 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.926632001 seconds)
  done (took 1.832391095 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.299143555 seconds)
  done (took 18.24174913 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.579016663 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.643975964 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.991678963 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.168603499 seconds)
  done (took 3.287167238 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.003668819 seconds)
  done (took 1.930356644 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.357816723 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.283063564 seconds)
  done (took 1.550483354 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.714305274 seconds)
  done (took 1.631941238 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.265334215 seconds)
  done (took 3.176487409 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.383447634 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.19678593 seconds)
  done (took 1.509359009 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.694362383 seconds)
  done (took 1.617394875 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 30.000785443 seconds)
  done (took 30.923399962 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.249466427 seconds)
  done (took 1.184379327 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.321239317 seconds)
  done (took 1.24776388 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.624172606 seconds)
  done (took 4.550473004 seconds)
done (took 75.688752555 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.107608017 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.132191907 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.107497017 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.129780589 seconds)
  done (took 1.39890882 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.116675131 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.129274924 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.108982072 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.129679196 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.138260769 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.10567347 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.128136598 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.111303297 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.129717116 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.130778986 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.105170872 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.129540625 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.105642418 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.128650197 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.126395426 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.106646205 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.132743387 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.104566943 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.130436155 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.129701517 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.104894435 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.130400163 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.130551682 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.10693006 seconds)
  done (took 3.830390396 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.107844892 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.121128304 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.099229021 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.120777108 seconds)
  done (took 1.384781122 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.116267826 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.145717369 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.143372367 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.112366637 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.145480298 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.143884922 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.102931469 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.123857288 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.102536308 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.136063083 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.152029925 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.124091305 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.144720159 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.130612476 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.115168841 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.12172607 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.107297929 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.14511507 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.135427289 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.113785423 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.128146719 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.135921399 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.101818736 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.141021094 seconds)
  done (took 3.999448623 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.218891694 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.116369279 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.152571534 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.182291461 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.161449089 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.102196579 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.155384891 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.134365968 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.110905638 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.140802892 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.130179883 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.191922342 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.106507121 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.129114991 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.105222154 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.13530925 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.143367599 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.134447218 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.175788103 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.108590155 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.132361746 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.141017734 seconds)
  done (took 4.043782999 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.109153482 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.120562121 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.092090963 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.121152053 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.104258225 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.124231393 seconds)
  done (took 1.602765994 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.103362797 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.114440936 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.095884388 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.116561804 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.096847379 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.113423405 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.089435057 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.114982533 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090755402 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.114961354 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.092859877 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.088301819 seconds)
  done (took 2.164811865 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.314630606 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.095735676 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.124266796 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.120261849 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.104491446 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.120552658 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.138050907 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.096678361 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.263004532 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.09218399 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.139011612 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.199685892 seconds)
  done (took 2.750694515 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231292178 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104422299 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.321703837 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.389087358 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173175379 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180565614 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.286597392 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180890596 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.205906553 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150427373 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236185027 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14390071 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165655624 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192477415 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153402265 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.22329356 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190577404 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217608264 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160249426 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.246951542 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176812039 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179911771 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.197471109 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16218576 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122148554 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172332912 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.131834902 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11120418 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214088203 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185367328 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189921825 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160491025 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150672548 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220803064 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250486732 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196883175 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.313943966 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142790236 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.205042407 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.198867806 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.288731223 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12529237 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24135006 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165252189 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114514849 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195141262 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168906016 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.22192672 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.116580748 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151713354 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201065141 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190472145 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.226577901 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121098386 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.332582117 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15877553 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.15962786 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189325878 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203326987 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204569692 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179511791 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.129712142 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.197824439 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195589306 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194729405 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.158145878 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.183665101 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135377175 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188206153 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.211566174 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196532227 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175882213 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.228316078 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142643797 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174245034 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.185224421 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164763112 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190469272 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145059112 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.12875398 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161949167 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148668021 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109546701 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.200973702 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131864292 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222805871 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145211699 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.397899971 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221266156 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171015467 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175051265 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177607079 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178216485 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158907576 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.130281475 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13165317 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.175498813 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170471062 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142711848 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171792771 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153540417 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.111163562 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164125544 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.131827263 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171139274 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.135401193 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208219682 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174982324 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.116005771 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176987987 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1615721 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.170241491 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187448311 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199253652 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141472025 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139707806 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208496558 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169355413 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.119569431 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.190807612 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.232942568 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.178291673 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121369238 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18168582 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23504021 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126541669 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230157339 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129588801 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1447821 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.168745088 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170482588 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170627662 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.163185934 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110022031 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.166320095 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23601677 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.110938729 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146301286 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187178419 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135970807 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109361994 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15198726 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145420258 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.124501995 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.15865353 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.148207728 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168801353 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172687385 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164189449 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172244616 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153370959 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211368937 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141058349 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.144746804 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15720515 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.127742014 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.199498479 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19930058 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138979418 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213541309 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.184376142 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234669246 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17573884 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11128483 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.191481441 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140404561 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.129578314 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178686851 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.174974052 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175415671 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.200256759 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204662574 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.182575602 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.167091175 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160997907 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181267116 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.189025365 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17125429 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.155761096 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175021702 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184885042 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.129516403 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.10864381 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.139181236 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150722583 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114171612 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142614828 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199784751 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177818491 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.225125746 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174936063 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123275543 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.197320923 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.137038959 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17868203 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.186621258 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149326356 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.202824751 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196154068 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178710713 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153065063 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182384532 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.130383206 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107463519 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.146621465 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.18427575 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141489639 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116254425 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156214558 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.197005955 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217265942 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134528658 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244943524 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18341939 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.208574378 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.131783514 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.174634958 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184386925 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168724852 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.172757415 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141360086 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.174352419 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.194150103 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156496093 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209531988 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173415588 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18138057 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24409377 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.16677576 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113160577 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161956118 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177826469 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150901084 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.177855349 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157076049 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118223755 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166539385 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.147619104 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137115799 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200297571 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152225132 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199118237 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.170021762 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191138921 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134223429 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154680774 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171303093 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129139093 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.12905493 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185566213 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208003432 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158096556 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173461507 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190350702 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143090237 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.336132709 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208174108 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227402567 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121613322 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154591061 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.174497299 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173236417 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179226845 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.193568567 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154859153 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194715584 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16962648 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.153191297 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117375618 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160386941 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162669062 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.167111837 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.146219821 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.165799463 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.12549105 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228241328 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123225202 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172132972 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176263458 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.159371006 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.168196029 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122675238 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243469851 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169230648 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194747594 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.167311971 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.182993241 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216248244 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105022699 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137666151 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.137685941 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.194486603 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111948198 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170837543 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.218832436 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211303744 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172318574 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180656059 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147279149 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.106754462 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171178574 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16065126 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237219748 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127749512 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.149381602 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207626002 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.168135517 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140553455 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176805684 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.293432108 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156091465 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191643757 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.102449982 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.286698616 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132641168 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141473189 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173426194 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187025462 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.158777138 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.167542076 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178267519 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156280129 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175134272 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147136644 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.202721584 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225441949 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183350563 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219471816 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.127457863 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174287691 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176655937 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220935395 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126524899 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.159768608 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174347446 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197836795 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.203752239 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.14591597 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17594094 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175139358 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171137149 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192854383 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1434273 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215567601 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140293031 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179472241 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149152812 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108705796 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173057039 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.193874851 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145360026 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192542714 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169656116 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1407352 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109429417 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164212539 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169545939 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15488445 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.139383946 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197716175 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.107134844 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17507036 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193337864 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14044692 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165541459 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155955717 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115887178 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155361982 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15533269 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144617248 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.152778964 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201500423 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.14434586 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190964077 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183498862 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180154402 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173630585 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154813522 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.673998386 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.110926251 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22563171 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131358495 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230875291 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133587442 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180545789 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172985774 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160374252 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18053382 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161622194 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.237007149 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177614781 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.175975206 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112587925 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154726226 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153362211 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.143182858 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164129044 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174712746 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12469745 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.150124959 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.171553417 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155906855 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.155675264 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122385228 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199654158 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159623806 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200896049 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.195870776 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149678943 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178090512 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193178597 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139112126 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.178813947 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187080351 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15326976 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165295528 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.113301965 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.148898811 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193443484 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.131437357 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173712304 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171537262 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147000283 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174997373 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.148670848 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172957392 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153953426 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172883215 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110686003 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.168507082 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169661671 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142837481 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.138242497 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140209044 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173159092 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.169785846 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137808039 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.155872347 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221052071 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.105358273 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143942031 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.29073963 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174560989 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207617233 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.169784762 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143774921 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125873391 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170185044 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.167198089 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170839749 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.140005875 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113006726 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.143755428 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.195547536 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.171725063 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167356924 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194529939 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174567565 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215830095 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.15665352 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.282974307 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123048315 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16663615 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.143963386 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.113022601 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15239237 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147120814 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157294887 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.203428845 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195881149 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.163486099 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.155948978 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111916619 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.133678812 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114422089 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176128734 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168526982 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168894872 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159177683 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.129548972 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127975843 seconds)
  done (took 83.587670452 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.155509287 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.142040347 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.155042235 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.202522975 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.170728236 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.264125676 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.210588776 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.233099946 seconds)
  done (took 2.561330167 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.11113494 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.144606111 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.149019181 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.133420089 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.129292398 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.406822531 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.143158887 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.129772237 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.191594308 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.140745547 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.125662669 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.609259532 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.126714843 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.102676135 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.126187041 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.131731009 seconds)
  done (took 3.917157342 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.521371165 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.551350793 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.015464445 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.25873847 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.241534548 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.189122256 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.751778497 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.178037856 seconds)
  done (took 12.73322383 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.138444399 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.149408911 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.355447965 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.223318021 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.168619967 seconds)
  done (took 2.068552139 seconds)
done (took 126.966302146 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.10881694 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.149133255 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.107505359 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.151890263 seconds)
  done (took 1.533402536 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.158109879 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.11884037 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.092929715 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.116244976 seconds)
  done (took 1.514984059 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.53526897 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.088198873 seconds)
  done (took 1.685580807 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.140301179 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.152895537 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.150549875 seconds)
  done (took 1.48302448 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.11877112 seconds)
  done (took 1.144643911 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.118395735 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.128765015 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.197335437 seconds)
  done (took 1.478236389 seconds)
done (took 9.870823527 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.111592299 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.433414191 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.420843925 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.116020633 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.739363219 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.381590646 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.079199279 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.164695095 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.215105688 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122041162 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.115527115 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.719980131 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.031251025 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.343569956 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.013588644 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.341156529 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.705203207 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.094275368 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.131008208 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.12282512 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.028858883 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.12197901 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.096640527 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.122370227 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.67825511 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.443682756 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093368399 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.384771968 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121209958 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.103045707 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.410002305 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095138323 seconds)
  done (took 17.122982886 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.108182025 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.192113649 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.134116345 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.097433703 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.131304946 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.096738977 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.134479993 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.109636138 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.232456392 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094885267 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.144609752 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.094135184 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.128965579 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095748455 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.148390677 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.094375479 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.124763213 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120847718 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.105093089 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.124989638 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.117399372 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.122895545 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.09739405 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.124463291 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.093711218 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.155371099 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123377499 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.110651379 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.124061107 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.102989422 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.126367309 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095752453 seconds)
  done (took 4.946803265 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.150555009 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.200461511 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.13678288 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.129643954 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.184508881 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.126058866 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.214674762 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.164235326 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.203868276 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.121755038 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.117816528 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.123274536 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.138677809 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.124226557 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.147227971 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.095404693 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.123555686 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.095240149 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.131513433 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.097458787 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.144540592 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120850995 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.098261868 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.122883082 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.096484191 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.157088323 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094113333 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.13849786 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.122454811 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.104331656 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.126470407 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096839033 seconds)
  done (took 5.290110436 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.112498228 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.137324609 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.121490127 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.149896788 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.101851917 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.137388957 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.135745489 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.103832315 seconds)
  done (took 2.044142269 seconds)
done (took 30.432853989 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.126786045 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.142282035 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.115961186 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.137355217 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.201658717 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.09798778 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.14239565 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.099207655 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.138843192 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.117249407 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.124018003 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.101338147 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.145162872 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.105077756 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.183826157 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.140543497 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.192059154 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.184705894 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.100532126 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.140350578 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.100845003 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.19092334 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.137443919 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.130372183 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.167345607 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.129099747 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.179161463 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.104034759 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.134481442 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.131742191 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.155835206 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.137196324 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.129220694 seconds)
  done (took 5.598003352 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.209171993 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.211210832 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.101444814 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.129758449 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.202769737 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.102638726 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.203574514 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.129467801 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.100669557 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.129157771 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.101338904 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.203941331 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.215380094 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.225922896 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.2414063 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.212783735 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.200784545 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.209795931 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.197655201 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.217485492 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.20119806 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.129159157 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.215307329 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.21522582 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.100797341 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.130089702 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.238341667 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.213337362 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.236352153 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.197796581 seconds)
  done (took 6.471012826 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.113682639 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.145156133 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.122183761 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.200970848 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.164662509 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.105378353 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.144431449 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.149214116 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.124180929 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.123759826 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.112911736 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.163013023 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.11381538 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.108469825 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.129964316 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.116931256 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.15351363 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.098271149 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.133264655 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.116209563 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.147320416 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.145244813 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.112108128 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.137408208 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.095232651 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.133874448 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.101177027 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.139692194 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.134890493 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.111069071 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.132319073 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.101943178 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.130582952 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.106017299 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.133367953 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.13485053 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.125840862 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.136226958 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.107206117 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.156081726 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.105211308 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.132088433 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.150697818 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.149495318 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.127685085 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.109071994 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.139386562 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.138196159 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.098141254 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.145986635 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.113934912 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.126763951 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.117721689 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.127077624 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.096937011 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138982106 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.125837599 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.101543779 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.138266267 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.102155312 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.153671432 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.10350456 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136238991 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.098765746 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.133132569 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.097353988 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.127397451 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.128577706 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.123828382 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.133483038 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.131979774 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.127736244 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.108834182 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.135269998 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.104141029 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.135356701 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.12491639 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.104957224 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.13332159 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.103555865 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.138794011 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.0999876 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.130683074 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.116483707 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.148515436 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.136716382 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.109665903 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.138649757 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.100310229 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.128700604 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.139001541 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.099807 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.130821728 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.111351469 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.126238736 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.101301502 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.137312987 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.106069543 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.12588102 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.117125274 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.133562515 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.096155135 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.145113084 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.12705185 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.102157916 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.136330337 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.110611361 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.125870782 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.106949709 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.139074294 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.096406052 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.132327338 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.102114104 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.125872084 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.143532521 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.108456629 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.130178303 seconds)
  done (took 15.689569475 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.308607188 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.311938642 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.20644261 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.372922496 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.154241032 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.204964211 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.308173804 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.325972218 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.10448381 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.173124267 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.188691246 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.280077714 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.098677171 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.163387079 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.31083725 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.377533086 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.160497652 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.174321292 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.142087215 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.154097538 seconds)
  done (took 5.581435924 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.124800028 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.173924973 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.159801573 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.160835412 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.104768249 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.142645905 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.09822179 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.153446898 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.135455011 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.10646574 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.126755471 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.123778544 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.138256086 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.108011829 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.148271039 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.175598094 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.103116538 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.134827908 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.151479013 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.105196435 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.138430249 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.157892898 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.109747827 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.159124238 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.143577535 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.114032971 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.12621673 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.105328937 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.131152518 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.103528628 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.135061859 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.147960782 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.104175727 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.134316673 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.107843698 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.140335019 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.099968652 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.131083736 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.099257652 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.131971764 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.144805895 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.110701177 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.130650894 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.095830568 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.139992378 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.100812355 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.11050111 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.138753672 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.138601891 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.113282194 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.138157037 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.110311131 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.135215302 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.14778405 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.10250748 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.143741441 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.111617494 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.140423732 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.134706631 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.097892467 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.125045567 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.102785178 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.131777468 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.111167054 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.136501586 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.150341365 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.114231845 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.126841726 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.104528868 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.132383994 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.101630991 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.147523348 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.153897865 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.102647259 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.131210875 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.115093344 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.13204595 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.090763005 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.139093656 seconds)
  done (took 11.109410925 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.133280732 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.133347654 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.120084641 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.168647009 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.141484195 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.104450581 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.132867482 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.119039096 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.141712969 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.110998941 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.140886834 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.141329787 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.124795113 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.142031852 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.102670015 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.144957334 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.107089919 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.172809725 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.148896039 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.161916206 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.111635412 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.133726928 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.111910999 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.142166586 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.163942624 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.111642507 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.162891553 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.13836795 seconds)
  done (took 4.845885689 seconds)
done (took 50.338929861 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.201313661 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.364888868 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.147078075 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.14479156 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.178395642 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.175157712 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.142374035 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.361089606 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.871445853 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.140117889 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.150060499 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.144664141 seconds)
done (took 27.088887343 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.431231419 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.649593246 seconds)
    (2/2) benchmarking "String"...
    done (took 1.438679335 seconds)
  done (took 4.151244364 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.140189334 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.139879816 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.388008624 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.141506931 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.157791264 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.158446253 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.139875105 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.142452431 seconds)
  done (took 15.330786794 seconds)
done (took 25.117001385 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.183130349 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.325458946 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.39825326 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.153786039 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.161230317 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.141025221 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.152570768 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.158149933 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.147723747 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.146297586 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.550730316 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.403706152 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.157382904 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.530046986 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.137635157 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.181413619 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.138909718 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.368223683 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.140888339 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.182886851 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.130641262 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.134862577 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.153996617 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.157050171 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.145214062 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.154349492 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.163119667 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.152569538 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.325428339 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.173917475 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.185135797 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.144657587 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.163501566 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.141700862 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.137470432 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.142837353 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.32656008 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.145286308 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.136713981 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.144531847 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.325564305 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.157395448 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.138026873 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.139046819 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.15635203 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.193023016 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.139557321 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.252870292 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.165201053 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.138583398 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.207045893 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.532868295 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.144544624 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.144160012 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.172560123 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.364689165 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.153561564 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.195468746 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.166923004 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.148301238 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.157391165 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.140975948 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.17177635 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.148507875 seconds)
  done (took 139.83763138 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.14669512 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.143905869 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.139730682 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.202841488 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.146432274 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.139923921 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.145716177 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.144918272 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.140965552 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.170591771 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.145087444 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.140029954 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.154297271 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.092486447 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.153628101 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.162257912 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.144845064 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.156115901 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.149693405 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.147867626 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.152363009 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.148421376 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.157918071 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.143026756 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.188200191 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.239880259 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.194173477 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.173485694 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.150604357 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.148323863 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.186454295 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.213739056 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.751329395 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.017715716 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.159660853 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.163950317 seconds)
  done (took 78.228179494 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.145290921 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.148190694 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.150212633 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.14940162 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.180990305 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.147685498 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.724630707 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.722341199 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.865510337 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.474890733 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.508924031 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.394543681 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.144232175 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.245990688 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.158582712 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.146714644 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.165957541 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.1904644 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.145730896 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.152798272 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.727569688 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.163240631 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.208042845 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.321121471 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.162173336 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.187135921 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.552403706 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.14469772 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.182236663 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.484193592 seconds)
    (31/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.161754321 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.183657835 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.145425874 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.521670556 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.859656336 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.260624629 seconds)
    (37/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.14631922 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.184095173 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.153037126 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.151341065 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.432347182 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.145836634 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.150028493 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.153247979 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.823488949 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.149798441 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.714901175 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.146865113 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.090323867 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.146280214 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.150850055 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.343634285 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.806517662 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.165744717 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.151512984 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.153872537 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.151182096 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.150659983 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.184947631 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.404819174 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.261707333 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.168695705 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.156573298 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.186655234 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.150181501 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.372097436 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.148636026 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.230936608 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.213681368 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.262531724 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.730746012 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.152725039 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.251990579 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.269689924 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.149702535 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.15189563 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.15276607 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.15214566 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.264221372 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.150173614 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.570563995 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.323942339 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.166442987 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.153886594 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.52627572 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.251091457 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.148373848 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.520782698 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.153439713 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.154719306 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.900940692 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.248112165 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.150426564 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.156029857 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.154445781 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.575455633 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.72999232 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.398687964 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.154326018 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.792440472 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.153604613 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.579536956 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.702826932 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.831935016 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.156539083 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.268258481 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.33101024 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.171026928 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.156313587 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.531676286 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.153428797 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.213371915 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.148611577 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.554027014 seconds)
  done (took 360.317492897 seconds)
done (took 579.448366243 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.876045401 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.826950218 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.960332939 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.850410058 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.822020201 seconds)
  done (took 10.40825065 seconds)
done (took 11.482064051 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.348078528 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.345058272 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.216561952 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.349579358 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.187516338 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.364429664 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.32275537 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.173010942 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.261060045 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.235893548 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.257593766 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.206765344 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.185877569 seconds)
  done (took 17.527491072 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.432349236 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.160772878 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.239292147 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.40876263 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.198618747 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.438376925 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.470841634 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.161678556 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.298257972 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.173394555 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.174816719 seconds)
  done (took 17.234866902 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.439473509 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.159397562 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.22726521 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.437101015 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.20012123 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.439764205 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.466862596 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.160012652 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.301346326 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.172911871 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.173202924 seconds)
  done (took 17.254207043 seconds)
done (took 53.095044544 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.197710027 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.324845387 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.187068972 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.177774117 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.170614245 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.171749536 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.181181903 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.170308426 seconds)
  done (took 10.658805544 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.168148773 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.169154925 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.170236258 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.167241193 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.170302424 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.169644444 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.169416655 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.171198784 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.166492229 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.169523977 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.169098194 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.170328857 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.167919615 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.170540362 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.17025786 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.169061371 seconds)
  done (took 19.785697392 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.172791333 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.168630987 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.167852724 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.168362927 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.170500554 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.168346458 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.170534461 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.170886048 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.171719129 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.169133689 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.170993053 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.170711825 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.171285258 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.170004068 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.166663621 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.171803263 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.172113662 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.171691257 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.175076939 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.170983123 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.169083087 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.169088942 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.171865662 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.170918458 seconds)
  done (took 29.170768773 seconds)
done (took 60.691840245 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.160810671 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.154074593 seconds)
  done (took 5.393264455 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.230885388 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.232658641 seconds)
  done (took 3.544870105 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.171289681 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.172277007 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.171503784 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.172704432 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.171674495 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.171449551 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.173595474 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.171987439 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.171689266 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.172573711 seconds)
  done (took 12.800824465 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.17166411 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.170523285 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.171250328 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.170322209 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.173300655 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.172309938 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.172251335 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.174217312 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.172968707 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.170608174 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.175276794 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.173980645 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.173033271 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.170476638 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.172460937 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.174036581 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.174188546 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.171809552 seconds)
  done (took 22.18554459 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.189742348 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.195724094 seconds)
  done (took 3.463924587 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.317454938 seconds)
    (2/7) benchmarking "second"...
    done (took 1.215259906 seconds)
    (3/7) benchmarking "month"...
    done (took 1.290349727 seconds)
    (4/7) benchmarking "year"...
    done (took 1.280155211 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.216682531 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.196012854 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.212688167 seconds)
  done (took 9.808854527 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.176863146 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.37306177 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.481302687 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.745852794 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.174933002 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.198874054 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.994260665 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.198564626 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.193051388 seconds)
  done (took 13.617317733 seconds)
done (took 71.895639638 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.162207217 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.213101027 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.200511622 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.183528351 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.469534661 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.181327193 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.162264683 seconds)
done (took 15.664630007 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.166145406 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.156619023 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.171750953 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.167292416 seconds)
  done (took 9.742798302 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.175433618 seconds)
    (2/2) benchmarking "read"...
    done (took 1.452169782 seconds)
  done (took 4.71067813 seconds)
done (took 15.534888296 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.173262018 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.170536385 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.171252766 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.17300467 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.173861619 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.173067563 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.173828806 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.172886225 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.173444548 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.172967152 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.171194778 seconds)
    (12/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.17139493 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.172577063 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.172740694 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.171956039 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.171415989 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.173783072 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.171455913 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.176936333 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.176999381 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.173178228 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.173159227 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.174725574 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.171791784 seconds)
  done (took 29.232266168 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.174853592 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.174138825 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.172522381 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.173167318 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.172826196 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.173032008 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.175451414 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.173718954 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.174755271 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.173903455 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.171790256 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.175007758 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.175128622 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.174908922 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.172456626 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.176523732 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.173535853 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.172920711 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.174597415 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.17259111 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.175503639 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.173874472 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.17536653 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.175374467 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.174020943 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.174539195 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.173888824 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.173212019 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.174182331 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.172643782 seconds)
  done (took 36.302690827 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.180159967 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.183392224 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.174288344 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.17646671 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.17299905 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.175446428 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.174035519 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.175554249 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.17458522 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.177430502 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.172470409 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.173762799 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.174248254 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.175273923 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.175782939 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.173782406 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.17756562 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.174167133 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.176591635 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.175616347 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.176547778 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.174658681 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.175176867 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.176043022 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.174891432 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.175244592 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.176332357 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.17357448 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.177180881 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.176707203 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.172845027 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.174912583 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.178249623 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.172894725 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.174225428 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.177544315 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.180165216 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.180546232 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.176494084 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.176172967 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.177310809 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.175576813 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.177214884 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.175921934 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.174887299 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.176097537 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.176074193 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.176244332 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.176323057 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.175785589 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.177473983 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.174853717 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.175972428 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.17686036 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.177384106 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.176349165 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.175927667 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.177506036 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.173533784 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.177021516 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.173896381 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.179015012 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.176042281 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.177671946 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.177950022 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.175637748 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.178385827 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.177538901 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.177976506 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.176357167 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.178653341 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.176383219 seconds)
  done (took 85.770598102 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.178646293 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.178346067 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.17778657 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.176943364 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.178342267 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.176889955 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.180938378 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.178493212 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.178079609 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.179009356 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.176677062 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.177827231 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.177167176 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.179286715 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.17810488 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.178620842 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.177901509 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.178520093 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.178534526 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.180324153 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.180515111 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.178359741 seconds)
  done (took 27.010465789 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.178218665 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.181680899 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.177343726 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.179133142 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.179322215 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.178559777 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.179147917 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.177448058 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.180342101 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.180689271 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.179361929 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.179889599 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.18190324 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.180235487 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.181267291 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.180887789 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.177772388 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.179554067 seconds)
  done (took 22.320896766 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.178286428 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.180285638 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.179787674 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.179794873 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.179007093 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.179705563 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.17991356 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.182550413 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.17999567 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.181027105 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.182797114 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.181046012 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.181833875 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.180356025 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.18493051 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.180937913 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.180618692 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.181411027 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.179575422 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.181453181 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.178961987 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.18086012 seconds)
  done (took 27.062411647 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.181876104 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.181883578 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.182886448 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.180745325 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.179800645 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.179013838 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.180522609 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.17820864 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.182489777 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.181664027 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.181707725 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.181020093 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.183455864 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.180273182 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.182040583 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.182322452 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.183625824 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.184459534 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.181157363 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.184890132 seconds)
  done (took 24.722715657 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.184605503 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.183500906 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.185641342 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.185970848 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.183675813 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.185706396 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.185187077 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.184334337 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.184035753 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.184948594 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.186473901 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.184780415 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.186065563 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.184275328 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.184206366 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.184335996 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.186808263 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.186240469 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.186366069 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.187222386 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.185451892 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.185833488 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.18602801 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.187435104 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.185829854 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.185665408 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.185875283 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.185440946 seconds)
  done (took 34.280234732 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.186283375 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.18353287 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.185892567 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.183686855 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.183319319 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.184327774 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.18472832 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.184511441 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.183587443 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.18359521 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.185170204 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.184577783 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.183536572 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.185172254 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.186949957 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.186853996 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.186457711 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.186470611 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.186627932 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.18696324 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.185530109 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.18687661 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.186744383 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.1859956 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.186429971 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.186891504 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.188834686 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.187255466 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.187844258 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.187287092 seconds)
  done (took 36.665459679 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.233649348 seconds)
    (2/2) benchmarking "in"...
    done (took 1.233297513 seconds)
  done (took 3.559893433 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.186171789 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.185861246 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.18563042 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.186208351 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.186736679 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.188745151 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.186812756 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.185259793 seconds)
  done (took 10.582253937 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.183132897 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.188369746 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.186114617 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.190077307 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.187614961 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.183189599 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.192843789 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.193252586 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.183254064 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.184091745 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.186708362 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.187007965 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.185873981 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.184800984 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.183363372 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.187884308 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.191979405 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.186270904 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.190505712 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.187702532 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.188491417 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.185947669 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.187584565 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.191293835 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.185970548 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.190372865 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.192375415 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.191637794 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.182434828 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.185786898 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.184279249 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.1883982 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.187853703 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.186174922 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.186021481 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.186830749 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.192887075 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.209869292 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.19115904 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.191178356 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.188982786 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.18804319 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.18515528 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.188815059 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.186363606 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.190272106 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.187516322 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.188065973 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.184673893 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.186790723 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.194593277 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.186508973 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.187705113 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.18656998 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.187092381 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.19478324 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.211080725 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.188217368 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.191312211 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.194303628 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.200523607 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.197760547 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.187883303 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.1923028 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.193656706 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.203880297 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.194240983 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.19499548 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.191038379 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.189035638 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.190406959 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.202626991 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.199835057 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.189921274 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.190235787 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.190844472 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.185084024 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.189908189 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.193217696 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.195215486 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.192286617 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.187669571 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.192706946 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.20240456 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.187116683 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.190841349 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.189812881 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.188355885 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.187051071 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.195641377 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.214321344 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.190169366 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.187182175 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.187645736 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.187679463 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.193295934 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.185505516 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.188809646 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.191634096 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.191271763 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.191544528 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.18784283 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.193944745 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.192117531 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.191320797 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.193030153 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.195708153 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.185498909 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.195441774 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.194216475 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.192832404 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.188362075 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.192222285 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.192479512 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.188157518 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.194342146 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.191897724 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.189083647 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.191022778 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.190714594 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.194915261 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.207615053 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.194401141 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.19005209 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.190525152 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.201306069 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.192450285 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.189832425 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.193994491 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.19140078 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.19421195 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.190694281 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.193396008 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.188660954 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.192134438 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.188202887 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.19417237 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.192795236 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.192252051 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.189485827 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.188430745 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.188342963 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.191815273 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.192849682 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.194383095 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.18819823 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.196807375 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.192301675 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.189909905 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.189632577 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.191491551 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.190437344 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.186238824 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.192587663 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.186579835 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.190788383 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.187491194 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.194505618 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.193873124 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.19385987 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.192426364 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.188164186 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.191085408 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.192113936 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.192205978 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.191330902 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.195040741 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.1932838 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.193717874 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.188356068 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.195381759 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.189342796 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.193404087 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.198323466 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.194243589 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.191273952 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.194545972 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.195905782 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.191517457 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.191611732 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.192044627 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.195210141 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.194964039 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.196442877 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.200623047 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.193986552 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.192390276 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.190133371 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.189319783 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.194126597 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.190943555 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.201658497 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.200522341 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.202707575 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.190180005 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.194707543 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.188133972 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.197389594 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.192690073 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.197149764 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.19242774 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.192339191 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.188501412 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.194984039 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.191905986 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.194424614 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.189116583 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.1963528 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.193809069 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.194552899 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.1947876 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.18882241 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.191544975 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.194498552 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.192485873 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.192601526 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.189560485 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.195539384 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.189115075 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.191008593 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.194747166 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.19748255 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.19838605 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.198834185 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.195386748 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.199455231 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.196847919 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.19523132 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.199468287 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.195791225 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.195104057 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.203020741 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.198948001 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.192383919 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.199584406 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.213827516 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.189817999 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.196541048 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.199079681 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.195370551 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.192889953 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.202378233 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.197061641 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.196264537 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.196761777 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.192964466 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.197971004 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.201071805 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.20207636 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.192242028 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.197737752 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.194043786 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.197413577 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.194124257 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.196198747 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.194792937 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.197653521 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.200193188 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.198249823 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.193813949 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.197005994 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.196811575 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.197721133 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.194453707 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.199705105 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.199465318 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.196917639 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.196235887 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.192627299 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.200341353 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.192591298 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.196229091 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.190885597 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.207183175 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.21229188 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.199949074 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.198870115 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.197024472 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.196716303 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.199050448 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.194791399 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.191982928 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.193274787 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.193767792 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.195806364 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.197372385 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.192414957 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.195509492 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.192042315 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.195170255 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.199307222 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.194868848 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.191452198 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.196942915 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.196388229 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.195512348 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.190535644 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.196651632 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.193431425 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.196046211 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.19529535 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.193236593 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.201563073 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.198346753 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.193423795 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.193556499 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.194096639 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.192891205 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.193743517 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.200971745 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.194161554 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.199889613 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.193644277 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.198442116 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.192463799 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.200484886 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.200806097 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.196110484 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.1997413 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.194596168 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.187920117 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.19124335 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.195709921 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.200924999 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.203337658 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.1920073 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.20066187 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.19623606 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.196245473 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.194653899 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.197745262 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.196490218 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.194588325 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.205317757 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.219515384 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.195655787 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.194613123 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.200745673 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.196188706 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.201320118 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.192953614 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.198180135 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.200908613 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.198688639 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.195945905 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.195270623 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.198349858 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.198253581 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.196479928 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.199234646 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.198026541 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.20285688 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.200718145 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.20235939 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.196816937 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.199888721 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.199435297 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.202179701 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.202829601 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.196717556 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.196123871 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.196188474 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.191821086 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.195637536 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.19318549 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.199126739 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.192642621 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.200632641 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.195817662 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.195477135 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.194491715 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.198027376 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.191223429 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.200945341 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.210543272 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.194094575 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.20089228 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.193006296 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.192102807 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.201349594 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.197817301 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.192190344 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.193115475 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.199232509 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.203157586 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.192106127 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.197481607 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.192007243 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.197396401 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.196800226 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.195730329 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.196381698 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.19372 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.195121385 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.198527902 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.197180664 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.199741566 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.193362758 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.197338096 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.194589074 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.204822354 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.203885641 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.193187234 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.198397547 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.198141392 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.192637791 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.195390295 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.198440989 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.195320639 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.198964761 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.194085036 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.196030044 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.196575051 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.197269824 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.196535771 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.19785515 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.193799517 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.19335652 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.200748095 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.196374679 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.197423254 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.193812621 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.197646422 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.19251689 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.192772463 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.197845456 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.194248507 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.198278528 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.194743965 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.19800525 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.194332802 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.199742337 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.1972871 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.197992414 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.193283043 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.194130925 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.200980196 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.199422905 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.199157303 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.19774888 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.199105191 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.193784863 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.197716003 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.19802234 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.192198282 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.195274571 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.197662569 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.196113433 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.195824429 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.194903885 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.198946014 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.202045918 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.197556538 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.192900765 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.204122272 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.218766077 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.20066624 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.193045317 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.195954425 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.196364538 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.198578233 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.197193618 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.195339018 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.204800632 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.200870498 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.20027326 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.196606136 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.199395589 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.196078104 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.200790942 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.197769787 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.193716369 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.200747291 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.197746552 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.200754331 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.199163411 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.199510255 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.194625461 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.196005861 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.195736039 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.198548138 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.199270068 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.197877074 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.199031145 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.194914956 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.201032873 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.198593742 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.197967697 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.198476794 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.194143025 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.202654012 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.195155151 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.198711265 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.199158286 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.19752403 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.203788425 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.199656636 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.197529163 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.20360009 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.204894131 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.200487879 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.199100523 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.198359727 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.201410942 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.204534523 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.20021174 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.196432758 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.198119979 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.203312616 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.198356878 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.20063425 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.196806288 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.209589597 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.222340902 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.19588607 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.198737038 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.201844088 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.205803987 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.202973793 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.200146294 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.200377523 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.201329872 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.205342621 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.199624329 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.204576155 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.221440493 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.198266345 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.203537075 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.199571413 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.19981439 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.201895871 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.205681641 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.202600114 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.200764888 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.207344207 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.20781374 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.205149293 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.218957837 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.206183992 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.202782081 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.203359828 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.198855914 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.203328607 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.200497692 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.203713011 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.202630174 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.202697288 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.202673144 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.198976399 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.203953308 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.204033765 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.206571542 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.204660655 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.198871789 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.197892555 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.203116245 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.203154982 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.205057759 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.202475916 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.202221835 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.203088529 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.198122519 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.211586685 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.21601511 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.204236466 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.205845904 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.203135096 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.203732022 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.20464852 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.204974356 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.206706802 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.204073104 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.203662092 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.202163732 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.208341338 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.203807238 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.200128828 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.199194173 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.200968279 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.205894425 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.211470583 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.216962472 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.207114925 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.204487924 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.205237925 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.205923096 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.202738433 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.203537636 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.203941008 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.198760516 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.200937926 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.206558814 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.206835912 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.20594667 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.203170495 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.207809883 seconds)
  done (took 714.075417621 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.206200246 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.20531117 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.206775122 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.204995856 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.204864881 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.203523441 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.207130673 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.205397966 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.205431237 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.205727924 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.204100932 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.204752455 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.203667978 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.205630728 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.205321928 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.206804658 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.204479375 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.205097068 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.208115797 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.208110688 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.206492932 seconds)
  done (took 26.42776595 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.20774555 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.207052411 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.206136694 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.203885525 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.20392316 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.203909573 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.204811111 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.203318071 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.205129332 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.204561672 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.206684137 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.205028779 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.20487894 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.206729444 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.205710121 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.207650639 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.206489109 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.208369054 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.207973943 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.20661786 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.208198947 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.207243929 seconds)
  done (took 27.641161804 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.207305062 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.206792154 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.205817672 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.20892946 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.20900157 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.20788411 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.206590049 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.206823456 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.20639168 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.204291473 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.20644438 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.204532724 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.206876878 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.213607678 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.205172588 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.211489878 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.207544571 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.208439945 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.208515818 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.206241929 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.20926306 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.214414604 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.207914268 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.202840168 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.208472731 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.210033791 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.209183598 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.209196022 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.205673839 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.212686077 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.207676349 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.205129042 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.208564856 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.208059108 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.207089609 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.214159917 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.209136396 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.210815973 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.208996157 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.214411178 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.223343967 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.210275849 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.213521679 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.21673324 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.208622444 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.208791868 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.214339744 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.208841224 seconds)
  done (took 59.147219022 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.209325114 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.209238671 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.210442533 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.208417545 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.209715321 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.208734222 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.20943014 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.211387615 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.211182976 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.211304176 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.212346085 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.210572039 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.211933798 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.212133502 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.210483515 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.212402313 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.211453397 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.209203064 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.213372202 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.209426608 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.21237306 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.211227985 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.212546336 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.212127123 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.208288441 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.211168973 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.214553663 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.212635967 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.2154458 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.21165716 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.210534509 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.208400767 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.209029799 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.212882677 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.209312419 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.211667869 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.212219542 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.212123836 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.212041466 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.210244232 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.214706873 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.211998537 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.213480879 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.214982371 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.213599349 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.212912286 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.212497272 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.213626872 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.213265762 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.214116606 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.214543549 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.213281832 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.214704076 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.214619299 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.212066045 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.213163647 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.214985427 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.213661002 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.214526527 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.213341568 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.213210308 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.212843763 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.213080553 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.214724808 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.21573751 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.214642878 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.215970847 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.213504366 seconds)
  done (took 83.547072262 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.21447286 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.21514637 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.216789101 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.215723368 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.216387137 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.212741754 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.216912214 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.216122773 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.216737747 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.214871643 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.214610329 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.216303278 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.216479473 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.214641082 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.216619689 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.215676913 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.216683324 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.216267539 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.216799209 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.216394549 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.215463962 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.215131626 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.215397626 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.21680739 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.217415205 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.217859195 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.215909266 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.215810068 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.216462113 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.216092645 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.219323791 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.217832878 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.218125867 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.216743895 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.217074177 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.21697113 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.214176316 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.215450095 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.216472388 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.217284564 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.216786686 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.217428062 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.217861196 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.216506643 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.214632767 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.218047756 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.21764926 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.217917579 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.218130226 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.216744768 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.217466404 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.215490548 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.21702466 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.216217309 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.215847476 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.218928583 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.216897157 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.219292312 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.217135206 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.220531444 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.217758719 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.218136197 seconds)
  done (took 76.549886402 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.219084375 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.218318855 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.218987119 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.218191492 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.217440727 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.218508326 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.220451657 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.21905706 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.220660865 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.216743626 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.219503964 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.218518108 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.221534839 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.2197621 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.219090553 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.220124663 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.220350492 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.218046442 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.219779553 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.218393088 seconds)
  done (took 25.503078454 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.220121885 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.22072547 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.220284093 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.219112037 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.222351369 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.218566937 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.221098911 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.220111408 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.219352124 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.220346265 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.219758943 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.218989386 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.219813519 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.219231858 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.217271284 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.216952905 seconds)
  done (took 20.637758419 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.219748272 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.218500897 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.221989308 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.218576302 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.218975291 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.211121578 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.209965484 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.209140279 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.209058807 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.207823195 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.209694585 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.208916772 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.207941238 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.203844318 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.198233852 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.198702231 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.198093754 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.197078509 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.197618437 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.199128209 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.199811959 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.198683482 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.187586867 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.186100441 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.185238575 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.185993589 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.186779022 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.183298698 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.186977117 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.186344767 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.186369958 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.185357269 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.185069471 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.186330716 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.183093847 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.184920842 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.18471008 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.185635889 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.185335664 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.182132873 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.184771852 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.183260346 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.18066044 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.184624423 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.184971482 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.182451986 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.1862215 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.17796317 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.182556108 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.182836053 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.180702557 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.179447692 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.180227202 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.179803063 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.180791242 seconds)
  done (took 66.755582559 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.176683086 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.174010338 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.171847817 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.174429328 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.173338586 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.17280344 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.174398157 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.174829171 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.171432767 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.166589425 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.166537526 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.168970107 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.167776822 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.16663542 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.166559805 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.166676875 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.168314992 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.166851288 seconds)
  done (took 22.162101546 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.166921046 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.167396754 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.166318387 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.166069943 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.165470579 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.165168886 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.167851415 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.163523783 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.164902027 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.163724508 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.165486829 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.16656499 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.166006298 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.167157159 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.167537685 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.166592795 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.16906761 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.167781609 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.166459314 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.165510788 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.166764051 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.167003871 seconds)
  done (took 26.740372298 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.161772913 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.158576946 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.156304593 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.172038909 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.172591434 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.158202067 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.1575214 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.158753916 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.176770877 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.200252906 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.195169203 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.172272539 seconds)
  done (took 15.122225483 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.164821555 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.164856216 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.165445142 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.165160253 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.164395643 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.166027292 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.167267557 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.166623075 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.165335532 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.165512906 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.165306942 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.167056035 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.167611997 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.165237069 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.166332943 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.164345796 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.166211055 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.165751077 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.16623753 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.166215524 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.166510012 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.166937089 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.168034701 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.168424095 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.16700955 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.16419209 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.167549476 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.167176996 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.167062041 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.166065326 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.167412055 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.164290894 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.168365931 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.167823103 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.168870735 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.168800409 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.167396314 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.168833731 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.168587904 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.16509944 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.164705885 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.167443856 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.16692269 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.169053324 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.164945011 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.169693998 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.168439215 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.168825276 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.169536064 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.170796105 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.165903222 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.168101813 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.169547724 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.168505086 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.168984049 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.169445988 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.171565905 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.167978249 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.170710101 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.168029055 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.170784137 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.170458471 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.169534331 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.169073631 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.168795847 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.168510616 seconds)
  done (took 78.129658975 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.169666327 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.166613894 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.170723484 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.170692492 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.169725321 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.169512639 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.16920455 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.170082968 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.169450478 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.171040434 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.170233404 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.16957608 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.169494412 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.169431292 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.167551707 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.167546605 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.17088649 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.169210585 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.170966203 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.17203015 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.173042378 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.170412604 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.171725116 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.171068806 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.171624775 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.173092249 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.17009301 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.168738338 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.169948342 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.171614855 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.167106138 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.173192529 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.171956605 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.172378587 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.169914222 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.168703827 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.173007743 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.17201496 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.172469716 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.173091732 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.173360763 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.169508822 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.170254429 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.170574309 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.174344755 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.170972072 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.174265874 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.173984083 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.171492217 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.171370424 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.170299369 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.169206833 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.173501666 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.171761737 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.171863794 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.173394914 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.173528862 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.172194576 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.172286006 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.174960591 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.175433154 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.171389013 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.173569172 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.175684486 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.174029268 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.171975689 seconds)
  done (took 78.388830286 seconds)
done (took 1659.420509238 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.336611947 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.286764494 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.168002226 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.183633131 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.166597022 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.163907663 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.18063687 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.167790424 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.168018629 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.168893493 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.171716989 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.357015592 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.164589369 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.167855038 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.164958339 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.265092873 seconds)
  done (took 24.370465575 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.192240362 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.180128995 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.284758796 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.192896896 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.201986274 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.352434769 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.23355455 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.182682942 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.334771418 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.197995168 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.172505971 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.197947619 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.178737498 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.172954541 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.192769879 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.357901221 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.41004068 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.174818474 seconds)
  done (took 26.296431649 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.585677924 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.179429963 seconds)
  done (took 4.856110439 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.193951754 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.174484391 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.175134149 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.173475195 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.168228831 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.168508546 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.174440797 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.17229205 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.17294735 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.28853415 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.18218687 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.190879466 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.193173217 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.177302233 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.179525447 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.217800945 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.332268556 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.183754816 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.180245754 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.183815193 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.176738384 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.260499089 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.221191356 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.186500211 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.290223327 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.179581045 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.177547883 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.184383876 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.312583355 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.184498309 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.17331118 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.178461002 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.17939123 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.172960893 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.662887822 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.192507742 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.184813737 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.20357268 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.181234873 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.318443706 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.178714925 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.186921874 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.170886862 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.65122009 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.319293518 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.290519946 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.202053409 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.177886939 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.178485114 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.240901334 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.18350409 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.178226447 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.234249496 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.948475637 seconds)
  done (took 76.738333263 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.181632783 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.172117999 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.348718759 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.195796313 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.17198065 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.171671471 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.171651229 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.432615533 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.215385688 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.1811627 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.489266751 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.726225645 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.188571903 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.232688696 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.083689263 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.249243894 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.17489575 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.172638742 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.174462877 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.176701279 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.707066234 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.177790364 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.173795362 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.322621603 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.212481915 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.667935507 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.174360021 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.193815521 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.174998591 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.173082351 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.683018332 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.197523749 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.26218469 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.177213132 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.434744474 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.525650015 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.490871422 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.18287829 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.17958763 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.175462287 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.180934213 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.6489263 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.508714549 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.17489438 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.189290748 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.676877382 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.178423102 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.182208894 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.176965097 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.41915093 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.17836309 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.176130355 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.175001627 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.190194195 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.174393971 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.276137274 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.259932891 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.667358127 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.174944983 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.180412432 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.176428977 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.177903307 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.184875765 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.175081633 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.194029173 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.514425408 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.321474728 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.179011433 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.511410852 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.679679024 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.195081307 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.736338546 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.196826551 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.202743832 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.392175569 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.178936441 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.175902636 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.685038214 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.181795841 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.176022509 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.497880539 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.181407741 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.492987155 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.191718514 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.205271315 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.725464587 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.185665776 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.183679441 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.177119854 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.177600125 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.177346827 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.177326636 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.445235736 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.225597542 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.17830294 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.179918083 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.187388805 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.186155369 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.177687424 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.185845903 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.740947307 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.201341373 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.179541319 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.177513354 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.191292797 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.178503659 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.180596895 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.18136362 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.442247185 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.178163109 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.188115629 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.178881396 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.177352593 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.18884306 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.314246976 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.178902727 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.464407309 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.182071998 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.180034907 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.179861809 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.180029778 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.18160075 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.180742446 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.188422887 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.047482877 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.441360418 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.194547979 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.179769273 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.18156484 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.181374269 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.18166624 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.182108817 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.227380126 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.184990731 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.955474439 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.238009783 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.198079145 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.179147836 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.187915774 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.181709442 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.18476622 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.180117659 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.469551379 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.450834134 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.323833163 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.183372546 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.180588815 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.942766115 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.235451418 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.361678532 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.203476527 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.183956518 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.43068743 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.377787385 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.186590579 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.18394794 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.18157149 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.436231212 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.184489278 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.48336973 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.719057673 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.204485777 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.182396948 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.962415277 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.894203988 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.188035282 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.180948452 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.497665265 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.197484828 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.181799855 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.183117021 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.183734461 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.198835068 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.203335732 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.187477078 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.183759971 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.182262214 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.224518918 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.374140764 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.199971504 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.193669324 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.670362576 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.208754851 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.184655069 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.199810259 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.185846705 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.183142686 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.258681852 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.183990962 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.195988604 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.186598224 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.197456337 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.689143305 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.183504937 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.190431596 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.374976853 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.865142486 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.204920703 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.185103123 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.186771045 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.129949205 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.700911831 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.242071931 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.474503452 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.195708447 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.221579428 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.18692687 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.254110198 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.694666874 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.184636785 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.185267978 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.824705532 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.200433469 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.658038846 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.185309524 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.187331451 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.760635358 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.201536947 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.187148146 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.184456585 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.197150204 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.481615932 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.1890944 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.205425395 seconds)
  done (took 463.383739085 seconds)
done (took 596.733222009 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.184637236 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.187452495 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.182543994 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.188290431 seconds)
  done (took 9.847261414 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.196096426 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.190279889 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.195572197 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.18843085 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.195726126 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.191328098 seconds)
  done (took 8.262419137 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.184885427 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.188107698 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.191710164 seconds)
  done (took 7.669504097 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.378823681 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.213609263 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.492419374 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.215445114 seconds)
  done (took 8.406479639 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.193598182 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.194799828 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.196555676 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.197409742 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.196516598 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.198417844 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.196245893 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.195512053 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.198626718 seconds)
  done (took 11.871245634 seconds)
done (took 47.163109406 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.054904596 seconds)
    (2/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.090286913 seconds)
    (3/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.361603496 seconds)
    (4/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.179851278 seconds)
    (5/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.250299464 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.248138377 seconds)
    (7/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.345552924 seconds)
    (8/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.233388174 seconds)
    (9/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.226188325 seconds)
    (10/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.191797826 seconds)
    (11/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.332602649 seconds)
    (12/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.290792547 seconds)
    (13/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.357095024 seconds)
    (14/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.325412671 seconds)
    (15/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.224447963 seconds)
    (16/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.213955221 seconds)
    (17/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.193817425 seconds)
    (18/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.423236025 seconds)
    (19/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.318339328 seconds)
    (20/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.357254628 seconds)
    (21/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.178836666 seconds)
    (22/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.279871703 seconds)
    (23/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.279970011 seconds)
    (24/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.227670605 seconds)
    (25/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.434285914 seconds)
    (26/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.387834817 seconds)
    (27/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.322398963 seconds)
    (28/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.177666513 seconds)
    (29/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.904231915 seconds)
    (30/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.191589665 seconds)
    (31/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.205627219 seconds)
    (32/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.963538792 seconds)
    (33/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.346040029 seconds)
    (34/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.394251379 seconds)
    (35/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.181943672 seconds)
    (36/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.256064711 seconds)
    (37/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.343620846 seconds)
    (38/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.192951234 seconds)
    (39/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.898820955 seconds)
    (40/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.847152167 seconds)
    (41/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.272343364 seconds)
    (42/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.437502185 seconds)
    (43/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.184903687 seconds)
    (44/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.332877585 seconds)
    (45/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.293636739 seconds)
    (46/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.212334144 seconds)
    (47/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.396586552 seconds)
    (48/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.224186455 seconds)
    (49/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.867206539 seconds)
    (50/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.940138184 seconds)
    (51/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.31666111 seconds)
    (52/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.284682823 seconds)
    (53/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.198087265 seconds)
    (54/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.225433212 seconds)
    (55/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.986371336 seconds)
    (56/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.20120194 seconds)
    (57/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.196380716 seconds)
    (58/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.36829991 seconds)
    (59/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.191221673 seconds)
    (60/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.851509105 seconds)
    (61/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.380822404 seconds)
    (62/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.254488931 seconds)
    (63/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.947570325 seconds)
    (64/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.193209336 seconds)
    (65/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.234780572 seconds)
    (66/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.288873398 seconds)
    (67/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.184951334 seconds)
    (68/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.22288819 seconds)
    (69/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.191154309 seconds)
    (70/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.366184879 seconds)
    (71/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.229883774 seconds)
    (72/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.265204888 seconds)
    (73/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.18134815 seconds)
    (74/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.182929046 seconds)
    (75/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.219409989 seconds)
    (76/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.925407427 seconds)
    (77/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.254629324 seconds)
    (78/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.18634774 seconds)
    (79/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.342074403 seconds)
    (80/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.253164052 seconds)
    (81/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.321937179 seconds)
    (82/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.23782055 seconds)
    (83/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.265770441 seconds)
    (84/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.239758403 seconds)
    (85/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.193399767 seconds)
    (86/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.361948644 seconds)
    (87/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.293983407 seconds)
    (88/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.268572795 seconds)
    (89/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.181838768 seconds)
    (90/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.251404965 seconds)
    (91/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.396305288 seconds)
    (92/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.321769011 seconds)
    (93/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.184756498 seconds)
    (94/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.376237546 seconds)
    (95/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.339702498 seconds)
    (96/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.295780201 seconds)
    (97/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.223942124 seconds)
    (98/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.335414546 seconds)
    (99/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.321377578 seconds)
    (100/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.227095529 seconds)
    (101/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.1882842 seconds)
    (102/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.879559172 seconds)
    (103/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.18392961 seconds)
    (104/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.248918655 seconds)
    (105/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.313611445 seconds)
    (106/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.242979906 seconds)
    (107/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.103963726 seconds)
    (108/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.25100169 seconds)
    (109/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.97702349 seconds)
    (110/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.212440379 seconds)
    (111/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.194610741 seconds)
    (112/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.272342668 seconds)
    (113/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.189682814 seconds)
    (114/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.22447822 seconds)
    (115/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.245176644 seconds)
    (116/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.229324741 seconds)
    (117/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.292659741 seconds)
    (118/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.9330469 seconds)
    (119/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.234804558 seconds)
    (120/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.185159258 seconds)
    (121/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.303442058 seconds)
    (122/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.973741709 seconds)
    (123/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.309167167 seconds)
    (124/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.341238026 seconds)
    (125/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.186875253 seconds)
    (126/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.333655594 seconds)
    (127/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.328069838 seconds)
    (128/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.271335966 seconds)
    (129/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.233208407 seconds)
    (130/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.907756957 seconds)
    (131/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.294157865 seconds)
    (132/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.18844712 seconds)
    (133/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.195421198 seconds)
    (134/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.095228455 seconds)
    (135/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.222153511 seconds)
    (136/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.237940036 seconds)
    (137/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.336189682 seconds)
    (138/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.238326211 seconds)
    (139/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.946635723 seconds)
    (140/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.254976052 seconds)
    (141/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.190133698 seconds)
    (142/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.26492523 seconds)
    (143/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.340837466 seconds)
    (144/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.292953155 seconds)
    (145/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.279098613 seconds)
    (146/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.277975153 seconds)
    (147/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.366664941 seconds)
    (148/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.212531577 seconds)
    (149/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.311229299 seconds)
    (150/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.243814527 seconds)
    (151/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.346596333 seconds)
    (152/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.251760405 seconds)
    (153/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.336786203 seconds)
    (154/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.20162096 seconds)
    (155/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.279662953 seconds)
    (156/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.236405478 seconds)
    (157/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.234979157 seconds)
    (158/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.301961162 seconds)
    (159/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.291527099 seconds)
    (160/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.30826161 seconds)
    (161/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.303937703 seconds)
    (162/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.232314379 seconds)
    (163/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.201069609 seconds)
    (164/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.197890026 seconds)
    (165/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.199137828 seconds)
    (166/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.285741715 seconds)
    (167/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.283507694 seconds)
    (168/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.014684607 seconds)
    (169/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.26197331 seconds)
    (170/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.2442373 seconds)
    (171/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.253609846 seconds)
    (172/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.297327393 seconds)
    (173/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.890553632 seconds)
    (174/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.856558502 seconds)
    (175/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.191773417 seconds)
    (176/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.191821903 seconds)
    (177/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.220803329 seconds)
    (178/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.304686169 seconds)
    (179/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.334152933 seconds)
    (180/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.442433986 seconds)
    (181/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.189994264 seconds)
    (182/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.051542612 seconds)
    (183/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.987800326 seconds)
    (184/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.209252709 seconds)
    (185/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.25545491 seconds)
    (186/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.199975302 seconds)
    (187/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.874775449 seconds)
    (188/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.366719931 seconds)
    (189/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.344949054 seconds)
    (190/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.337575908 seconds)
    (191/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.244290557 seconds)
    (192/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.286876234 seconds)
  done (took 310.207337093 seconds)
done (took 311.313667672 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.223247676 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.387405896 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.20701958 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.207642422 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.208612148 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.201478302 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.243716218 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.207931874 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.217505373 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.217689942 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.213926341 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.215819607 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.220880985 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.214149126 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.241121779 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.208290234 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.208120479 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.214326821 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.219733298 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.219713318 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.209653211 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.210269768 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.229398361 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.208460264 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.216694118 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.217816547 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.214470644 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.199526924 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.228663698 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.220754968 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.20147984 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.215915087 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.22273258 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.2153145 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.20954232 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.217576285 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.211454671 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.390225402 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.228305218 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.21720529 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.21282562 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.22078316 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.215705246 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.215403762 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.219094681 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.228215772 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.216815002 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.222869111 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.208776424 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.209333837 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.228604483 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.217000512 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.212486929 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.207783805 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.21453835 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.223904035 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.215929056 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.227595437 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.213171411 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.210120767 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.243228106 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.226669613 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.218037701 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.215916836 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.212438547 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.223130178 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.215759275 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.222611806 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.213801076 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.211995779 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.214523733 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.215397396 seconds)
done (took 97.08209877 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.332812744 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.21067703 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.346386575 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.216143565 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.370944095 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.351765224 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.215919206 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.215361313 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.214334912 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.024291892 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.215243273 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.213307934 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.212720569 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.214586515 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.333706266 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.21574065 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.212903183 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.925601782 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.215813966 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.349473047 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.209325419 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.215462677 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.215625404 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.034434799 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.212144803 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.207925512 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.350746418 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.217189531 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.936745784 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.207837062 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.208912241 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.934721648 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.35232219 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.2358209 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.226054601 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.226829133 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.370890942 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.232695876 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.332850417 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.331190567 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.350588129 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.253824726 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.207712328 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.21144613 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.217999949 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.217655765 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.216966213 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.246708566 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.213214661 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.21708837 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.928993996 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.225804979 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.226681042 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.21654633 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.216400162 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.237173056 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.216946278 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.216701724 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.351533817 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.217490317 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.336730539 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.036082076 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.029405679 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.216838111 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.209993495 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.217839406 seconds)
  done (took 100.447457042 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.278487263 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.295419424 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.323452788 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.213347979 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.26707526 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.326942743 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.213063821 seconds)
  done (took 10.042554771 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.221023088 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.218670441 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.263077815 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.262188938 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.216656652 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.370897387 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.217652122 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.226204805 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.218867903 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.267812161 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.219534867 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.21859184 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.229094759 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.213201867 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.262195029 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.226421478 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.329185984 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.217531593 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.219333891 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.365933855 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.219578578 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.229492973 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.266396758 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.226406903 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.221595241 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.220281536 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.983889068 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.219522838 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.220176348 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.222194134 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.220184572 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.269642344 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.219653995 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.215653221 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.220206544 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.330076822 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.220610031 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.221814762 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.222911189 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.21733076 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.221118504 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.221337505 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.222402553 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.222704104 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.222777367 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.241755309 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.220773273 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.221374353 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.222291667 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.22209245 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.26619111 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.221608242 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.221542092 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.222177654 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.272243078 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.230992663 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.219494787 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.22029484 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.222158877 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.220403922 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.367621681 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.266282103 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.22281798 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.264704486 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.221749236 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.222543863 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.222055535 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.221889364 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.308917326 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.222884335 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.26430464 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.222305217 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.397737182 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.243903333 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.223152468 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.219351449 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.221952834 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.2228375 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.215020722 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.224618017 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.22251439 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.218027554 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.224722738 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.223100387 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.223614178 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.374762326 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.326768438 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.224962595 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.232273773 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.226024263 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.223124608 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.272654682 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.226456377 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.222236139 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.269868102 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.333384224 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.273443106 seconds)
  done (took 126.37092213 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.232006502 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.230421524 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.224123851 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.24646443 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.220451199 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.218397431 seconds)
  done (took 8.501749053 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.220688763 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.226213347 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.225143276 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.225272851 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.224326089 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.22552733 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.224044116 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.222331224 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.226705101 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.225273205 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.226017822 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.228558117 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.22863992 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.226432887 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.227146102 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.224715921 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.225037881 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.225998263 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.226232996 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.226299809 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.219811006 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.224876065 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.225900277 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.221816805 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.229119701 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.22551375 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.241807198 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.226218663 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.225624194 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.230300011 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.246472562 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.227039229 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.22382891 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.225873934 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.228829848 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.223738257 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.228786755 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.229056787 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.22672943 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.227506362 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.227326287 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.225399725 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.227218954 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.229862237 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.223600414 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.224916609 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.232223107 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.241933061 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.227403794 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.230831781 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.229680807 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.22649872 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.226719654 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.23101639 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.22789516 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.242776745 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.230819086 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.227997156 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.226876437 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.223347982 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.231096177 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.229250822 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.224429194 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.229941714 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.228140722 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.228179271 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.222236264 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.229190645 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.226292541 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.228400605 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.22933648 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.228220661 seconds)
  done (took 90.520992665 seconds)
done (took 337.005384157 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.246527086 seconds)
  done (took 4.379664059 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.489158261 seconds)
  done (took 3.627921462 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.626363183 seconds)
  done (took 22.000051918 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.235635662 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.337886738 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.249284218 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.22620862 seconds)
  done (took 10.185889178 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.462324392 seconds)
  done (took 3.598458131 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.229191935 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.226363551 seconds)
  done (took 5.59345858 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.369933574 seconds)
  done (took 3.506291994 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.364010484 seconds)
  done (took 3.502050111 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.252244031 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.237237479 seconds)
  done (took 5.632109958 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.213463631 seconds)
  done (took 3.349858106 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 30.125550828 seconds)
  done (took 31.263432492 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.234140627 seconds)
  done (took 3.373393473 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.253589836 seconds)
  done (took 3.390802109 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.666686929 seconds)
  done (took 5.803188412 seconds)
done (took 110.340461155 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.221947539 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.227766782 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.225050799 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.226013122 seconds)
  done (took 10.039243774 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.284779018 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.283687567 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.284423137 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.286534585 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.284962162 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.284384622 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.259346657 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.258977112 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.285316003 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.284777265 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.284528215 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.284995474 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.286221613 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.260072263 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.285669607 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.28706382 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.285392176 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.284757974 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.258979535 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.28469794 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.23422328 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.285036086 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.285870183 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.234503784 seconds)
  done (took 31.780296215 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.72248759 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.300050458 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.384325756 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.280899075 seconds)
  done (took 6.826058709 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.311110997 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.312207511 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.325463286 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.364361494 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.377996397 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.325944559 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.260281527 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.257358235 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.242114274 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.310807086 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.369381806 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.303111967 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.389953939 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.235050196 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.440459636 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.235865032 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.235082879 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.312417793 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.363716809 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.378140168 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.235294649 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.313005397 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.314035553 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.304317256 seconds)
  done (took 32.659499981 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.244188785 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.250779967 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.237690302 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.253347438 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.237306825 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.238804101 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.237985348 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.242921889 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.236630711 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.238380547 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.237210778 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.252176219 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.241429169 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.238437383 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.246036473 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.23965929 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.240812834 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.244732781 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.246436781 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.239246763 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.244020175 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.244718999 seconds)
  done (took 28.47436446 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.228438766 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.227552092 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.577204358 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.482947123 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.227768718 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.22840459 seconds)
  done (took 13.114387746 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.298959843 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.44932514 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.233266116 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.568068548 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.656150591 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.239523559 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.233584378 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.471355218 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.769454841 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.743866807 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.294831187 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.301446639 seconds)
  done (took 18.404314267 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.233476264 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.231635117 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.236618778 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.247732128 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.28549556 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.238135684 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.240586962 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.229129996 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.289906535 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.290794064 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.237907131 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.287161153 seconds)
  done (took 20.191832913 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.330654693 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.233775269 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.233309378 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.291425795 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.250830908 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.078517798 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.30034802 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.934480031 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.257445694 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.509214722 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.232776674 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.352681999 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.488137817 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.238420184 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.238071145 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.205148465 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.463184756 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.69400108 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.236965066 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.23451296 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.272365011 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.247537107 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.2404666 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.455215268 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.082979234 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.234579329 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.498389798 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.234259746 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.498379479 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.253008704 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.2451936 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.235982315 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.511801854 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.869716484 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.35159096 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.434091486 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.238568215 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.236952763 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.224636961 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.233951986 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.247142406 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.23701142 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.247653937 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.236740348 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.237077799 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.235886615 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.934085246 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.262110645 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.23601379 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.237596511 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.475834259 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.341349899 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.243002045 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.237357967 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.243112078 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.239074349 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.244159156 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.359030302 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.832489735 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.239437543 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.254595702 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.242851755 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.236921375 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.240106154 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.825254958 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.245216347 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.244325012 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.245179181 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.237907556 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.238683191 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.26118208 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.238585595 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.263755536 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.238978858 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.921730562 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.246033021 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.240930573 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.759879601 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.251346513 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.243333141 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.468774399 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.239304196 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.239079861 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.239218107 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.240110841 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903086636 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.246629621 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.229164657 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.280879379 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.943966644 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.457861526 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.263417573 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.270499682 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.462604223 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.225663423 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.239304934 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.240992422 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.258885785 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.26255135 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.929883393 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.257364123 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.246451259 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.496981447 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.45125212 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.243691169 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.221549425 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.695480534 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.269382187 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.261190845 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.239714683 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.457339327 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.809363847 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.256367071 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.246439392 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.262276932 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.242123547 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.937480838 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.254825164 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.251647077 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.245660216 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.503750052 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 1.99489319 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.244332065 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.309791423 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.246987529 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.243171534 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.244093021 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.24464564 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.241529541 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.433040362 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.264465864 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.25403496 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.243045308 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.242821423 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.244934412 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.253297754 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.244481129 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.466867499 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.243384662 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.542133442 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.242304862 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.243713454 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.243207897 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.464293244 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.254218622 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.255535711 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.505216445 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.243049108 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.243763543 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.254350199 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.263202643 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.348000455 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.265311089 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.250082673 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.502618699 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.25007534 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.25015384 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.249479193 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.24622796 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.253638635 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.251834621 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.244917796 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.808759601 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.220580465 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.248384761 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.132183492 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.261136759 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.311469073 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.251837054 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.446569522 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.255553488 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.248550305 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.251912111 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.247436683 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.468913187 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.255400724 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.246310484 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.326868264 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.699314611 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.826281401 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.262247821 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.244655649 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.246519537 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.24536191 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.247156154 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.246705342 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.245920261 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.446313853 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.264453411 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.241813004 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.829555347 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.251154334 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.250683243 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.259003313 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.258613274 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.254643184 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.247676955 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.248628652 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.254807309 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.258708398 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.261252173 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.390241041 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.263860299 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.247996233 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.765959262 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.255089185 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.248450006 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.249166631 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.280999415 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.250178621 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.031184734 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.509013275 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.260025735 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.489230452 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.255769981 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.271215848 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.24767513 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.247293907 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.254391592 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.25399696 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.277985051 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.259338631 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.253047877 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.256568033 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.81877317 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.961423615 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.764661181 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.25209852 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.27481696 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.254797482 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.944657138 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.266617045 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.249696853 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.476962494 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.952184567 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.269374716 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.710526206 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.282730625 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.993860372 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.498150487 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.488372815 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.251797765 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.268383183 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.496028356 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.466223397 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.28382464 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.258742284 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.25597376 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.236449665 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.786881886 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.267257591 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.346744842 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.945954119 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.268736673 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.252300013 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.301976237 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.255765173 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.637718379 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.268943359 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.251675395 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.261422966 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.266742455 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.037949362 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.256030689 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.250286148 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.840431473 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.256517993 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.712572215 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.26911589 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.453275653 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.267874274 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.257245456 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.251381841 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.264938815 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.510788411 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.494004777 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.257666027 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.255229047 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.773935407 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.128895892 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.259962206 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.25294946 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952616253 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.255784429 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.527643538 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.269917391 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.259055117 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.261551724 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.254921815 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.252930861 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.253132347 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.258461617 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.227102623 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.719851279 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.252011923 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.259534674 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.26528882 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.25856506 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.509157369 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.269596114 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.822871335 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.483594959 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.254917208 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.292687223 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.26042864 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.261724295 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.243414159 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.254649767 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.254254205 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.319672665 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.477372348 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.270277286 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.24119527 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.327264907 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.48254614 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.255333049 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.266767362 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.487619832 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.261493058 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.264227435 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.984123691 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.287640643 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.269360425 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.257326733 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.256542759 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.295856787 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.325263871 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.460315754 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.272071861 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.267207645 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.643465858 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.285826649 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.259857947 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.271847212 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.352067538 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.264893037 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.266227394 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.036270478 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.828187029 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.976802838 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.828290541 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.503624451 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.265313694 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.265536644 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.257463428 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.420284885 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.258359424 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.5332134 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.25868359 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.258188223 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.281693045 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.267898903 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.275828575 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.471650023 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.533845369 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.256715955 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.261859142 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.26236221 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.25971558 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.268769498 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.469367832 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.72468334 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.786160242 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.260555765 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.258849148 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.97938817 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.552623417 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.259790952 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.259363427 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.260033198 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.271354348 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.286507566 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.267424825 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.260539604 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.402268363 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.503202722 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.907816343 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.285451773 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.290923557 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.778712553 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.267767074 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.513042745 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.269863016 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.46478706 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.836444304 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.940761254 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.526114853 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.329699184 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.464196282 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.266103362 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.421880384 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.262238653 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.265682775 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.26231221 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.261584324 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.260259114 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.270418567 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.835849245 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.527472535 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.268557553 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.266234588 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.296639856 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.271918333 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.483844095 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.936038682 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.484087228 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.271159006 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.266510492 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.263381967 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.837516879 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.510239407 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.269021981 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.269370991 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.493019869 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.269158789 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.287471793 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.780211814 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.264885632 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.785679518 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.23394654 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.283234385 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.265411005 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.945636329 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.841614722 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.273827086 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.734949386 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.265277742 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.273880127 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.543746584 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.269535549 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.265081926 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.545065074 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.268552924 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.264601242 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.473819957 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.837824734 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.008053803 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.28213019 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.301127041 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.267926805 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.264091349 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.268477608 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.267535166 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.267140411 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.666200767 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.283505106 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.264836641 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.277727094 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.274569872 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.28486964 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.265616789 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.266731251 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.27359855 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.265416332 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.264082683 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.277326722 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391064145 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.810625692 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.293702316 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.945049419 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.596310365 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.520913165 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.269274398 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.258540349 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.272647063 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.267649395 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.267422408 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.268506843 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.263382975 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.809018273 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.269615611 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.280727534 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.273605594 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.269614607 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.478849536 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.268628556 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.473591984 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.272698503 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.29051119 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.253541644 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.269271674 seconds)
  done (took 915.021440936 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.304300016 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.285641736 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.280702253 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.276658079 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.268795326 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.375542484 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.337599625 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.275871389 seconds)
  done (took 19.579756306 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.267992707 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.272068259 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.263625734 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.287867148 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.263144541 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.740645513 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.29489808 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.272613273 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.283492981 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.270649806 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.275232535 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 1.917215455 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.293802025 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.273694922 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.26160822 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.273202564 seconds)
  done (took 30.692136577 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.168882835 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.385711909 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.033387114 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.278062016 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.300614912 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.265654996 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.475661395 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.291008833 seconds)
  done (took 25.374793011 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.274473177 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.274204362 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.274713562 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.275562856 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.275746821 seconds)
  done (took 7.550550038 seconds)
done (took 1160.849032167 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.275638709 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.27631795 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.276191518 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.274740781 seconds)
  done (took 6.279841111 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.256136695 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.258662804 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.257752438 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.269000114 seconds)
  done (took 9.217145001 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.932968732 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.878854056 seconds)
  done (took 4.987880304 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.739185985 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.745744655 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.741076535 seconds)
  done (took 6.404604058 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.557556835 seconds)
  done (took 2.736955185 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.146142759 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.272689386 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.921212985 seconds)
  done (took 7.518634972 seconds)
done (took 38.321270149 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.27117677 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.513821727 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.42322521 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.274530471 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.430652369 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.423126375 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.066327888 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.266781368 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.279007477 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.27572037 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.274653881 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.429809097 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.981440741 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.515562503 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.980947665 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.516139753 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.429932702 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.266004548 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.293768836 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.268731614 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.073661219 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.27978887 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.274720436 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.281903374 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.428120688 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.412675767 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.266476178 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.512604704 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.267201943 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.267774067 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.413479161 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.277512845 seconds)
  done (took 79.116002147 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.269998161 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.266193093 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.279125457 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.270328214 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.267719814 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.293697145 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.270194323 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.268081098 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.271591375 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.270289261 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.271403814 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.281510888 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.268458836 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.281655839 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.269445202 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.282252722 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.268737775 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.289752497 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.268938178 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.285249364 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.269761258 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.268664232 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.26926083 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.269330937 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.281937663 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.279530986 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.269658381 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.284497089 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.270876074 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.270208288 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.281423835 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.274688689 seconds)
  done (took 73.964731135 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.270075254 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.269907865 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.271147004 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.27774613 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.270956588 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.287365196 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.27143956 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.270882198 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.27332503 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.273022283 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.282846066 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.28207338 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.272640876 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.278139924 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.272936407 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.271362553 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.294282356 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.270722049 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.272005831 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.270921878 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.290875956 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.270853029 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.272343151 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.271320117 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.273592986 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.272766426 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.271799265 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.273048144 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.296356682 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.273215834 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.274114174 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.272840157 seconds)
  done (took 73.99827458 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.554410084 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.283291705 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.286250018 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.278498539 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.285516842 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.282688169 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.278792524 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.561005354 seconds)
  done (took 13.991812937 seconds)
done (took 242.24981153 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.285038952 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.760907164 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.318642435 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.278219742 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.299658168 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.303955343 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.494083319 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.318696093 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.49667279 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.294485558 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.299841766 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.285881355 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.053595662 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.424418569 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.072476645 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.183676344 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.133898554 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.272841924 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.825503066 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.557586632 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.309498686 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.279260079 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.065912703 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.156238284 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.265140021 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.372857575 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.37565239 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.499399684 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.440273977 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.356700383 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.775968872 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.280011326 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.282699068 seconds)
  done (took 60.603948701 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.278274636 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.38436405 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.285002767 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.284757553 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.388317154 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.285357511 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.281004367 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.285375299 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.285495695 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.286156305 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.284978615 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.286553188 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.287172563 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.312464739 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.392802709 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.279561353 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.279957036 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.385990477 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.282200828 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.279315645 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.310771637 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.287522179 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.289040808 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.312853582 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.286490793 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.287284664 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.386700998 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.288981364 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.289182373 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.383125543 seconds)
  done (took 40.423324985 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.287039517 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.870747315 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.009203555 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.289783101 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.283839599 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.287933176 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.557207297 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.288854298 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.286986766 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.287553931 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.756873802 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.295418466 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.316966124 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.0348055 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.285360314 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.288305886 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.287524506 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.284508199 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.881143869 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.297625863 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.577371607 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.289020864 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.559048872 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.294076646 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.30566022 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.285804558 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.2893617 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.109783936 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.305945819 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.758883924 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.033182505 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.559549496 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.037440592 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.041344125 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.033909395 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.296793917 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.291255894 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.769546808 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.289758671 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.285989539 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.5597817 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.290693846 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.016306497 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.972660212 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.303017198 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.291285187 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.112338169 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.775970761 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.518664338 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.297123948 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.045663208 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.289231287 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.292146913 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.28805731 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.519531461 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.294412818 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.287917462 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.136819048 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.311055651 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.562020206 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.294616096 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.287500803 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.876449909 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.285910158 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.877105818 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.288094171 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.294452519 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.305706631 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.023045866 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.295525131 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.992917018 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.305297397 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.292609395 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.763689077 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.875866751 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.179703722 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.289729695 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.884860215 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.067509536 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.579003728 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.292528402 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.085991321 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.579321363 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.291046167 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.293900835 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.29509984 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.29247989 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.370413609 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.563113279 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.934695819 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.98932977 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.157623628 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.584087058 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.299152376 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.289540708 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.139741158 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.312875723 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.293279223 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.019027145 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.993996038 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.307098371 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.297695428 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.997183095 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.310175171 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.565269007 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.298904203 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.037043947 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.292084997 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.407064277 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.29602898 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.297174971 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.314621864 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.567307161 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.299004295 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.295333202 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.996281273 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.79392621 seconds)
  done (took 182.457634437 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.286697409 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.302542782 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.304080813 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.285320161 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.286068495 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.292766419 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.285514983 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.285619972 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.290630549 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.286283353 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.285855138 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.29446915 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.291899705 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.286424777 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.286268384 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.285689455 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.285636923 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.291306381 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.287149809 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.286732624 seconds)
  done (took 42.98436373 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.296933665 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.83520217 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.804395924 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.301329428 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.296530725 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.294556047 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.346546627 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.297959882 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.296890535 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.580423612 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.461215867 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.302238954 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.298590019 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.298230601 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.799841774 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.292439377 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.578657207 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.829838902 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.298587497 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.830184102 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.287202285 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.300414952 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.292920394 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.831177205 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.588426006 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.568904676 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.348320403 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.837808961 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.304601368 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.29917462 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.836900259 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.30519341 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.29562659 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.83559501 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.319669013 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.314461449 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.298833158 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.348398188 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.351899531 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.582060466 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.837204972 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.573587963 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.314972527 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.466402137 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.304254167 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.286938419 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.839398456 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.316947637 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.289382938 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.30067838 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.305346675 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.81183188 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.317014781 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.810396627 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.320499176 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.300426428 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.834546213 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.812655633 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.827200617 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.463355368 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.294716447 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.568921227 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.306279642 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.841760692 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.317196269 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.300735874 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.300451951 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.461489356 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.852708715 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.570437557 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.590374948 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.589781723 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.304472099 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.357814514 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.319641845 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.591202091 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.361012036 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.688601802 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.586494444 seconds)
  done (took 118.226401271 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.558988798 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.412005063 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.687546054 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.885547072 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.295229182 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.439426313 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.40606735 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.544284109 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.30142219 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.375978238 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.915451567 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.411299571 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.056023227 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.382773104 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.400836034 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.43643814 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.677545805 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.259050413 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 1.986588245 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.909595995 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.298418967 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.402490729 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.828662152 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.519974669 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.303648639 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.908392449 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.241242086 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.948255418 seconds)
  done (took 50.994103554 seconds)
done (took 496.871665546 seconds)
SAVING RESULT...
DONE!
