cset: moving following pidspec: 24445
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.326921584 seconds)
loading group "string"... done (took 0.593707765 seconds)
loading group "linalg"... done (took 7.246677612 seconds)
loading group "parallel"... done (took 0.169429325 seconds)
loading group "find"... done (took 1.143651455 seconds)
loading group "tuple"... done (took 2.033683851 seconds)
loading group "dates"... done (took 1.290726721 seconds)
loading group "micro"... done (took 0.241208514 seconds)
loading group "io"... done (took 0.98669434 seconds)
loading group "scalar"... done (took 39.74849596 seconds)
loading group "sparse"... done (took 12.843267192 seconds)
loading group "broadcast"... done (took 1.021545958 seconds)
loading group "union"... done (took 13.775827942 seconds)
loading group "simd"... done (took 4.5271945 seconds)
loading group "random"... done (took 9.219521333 seconds)
loading group "problem"... done (took 1.954626032 seconds)
loading group "array"... done (took 21.413482803 seconds)
loading group "misc"... done (took 2.045425066 seconds)
loading group "sort"... done (took 3.209436718 seconds)
loading group "collection"... done (took 18.643062245 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.544273022 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.144958368 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.120499776 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.14400452 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.188763636 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.135110428 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.149857137 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.087872404 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.033891352 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.173924841 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.143526232 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.487192346 seconds)
done (took 5.116625166 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.201846335 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.08759559 seconds)
    (2/2) benchmarking "String"...
    done (took 0.096825067 seconds)
  done (took 0.887817332 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067400161 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.126849219 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.080955311 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.069282623 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067618049 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.081371257 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.069360837 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.068502576 seconds)
  done (took 1.275730673 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.0754062 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069641335 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.084981913 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.0684872 seconds)
  done (took 1.011495501 seconds)
done (took 4.167141399 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.915770574 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.242288564 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.189925816 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.453839593 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.15227947 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.193459196 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.670631156 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.303678169 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.210300186 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.102810203 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.108360945 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.380341698 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.109608756 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.667328921 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076206158 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.106677129 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.159751451 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.426541456 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.08283387 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.084550615 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.10536856 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.142664407 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.104762969 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.081544174 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.171776739 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.069898047 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.148528502 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.096473599 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069101433 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.24530361 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.190348113 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.684706707 seconds)
  done (took 10.494402151 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.101159287 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.118200547 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069770676 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140206305 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.102170371 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.086700636 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072686723 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.084115611 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.092699034 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.158972565 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.115435455 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.106773041 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.082923576 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070450289 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.101839638 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.213068287 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.110830249 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.087561432 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.089526445 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.078133881 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.126044047 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.08658621 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.098029286 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.08149185 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.155884408 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.198751379 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.112702484 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.112856188 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.072997354 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.082813274 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.132889036 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.145562879 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.069031783 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.084331936 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.14332871 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.113772867 seconds)
  done (took 4.625705483 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.070172788 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.164258537 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.094992454 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.153495084 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.086181256 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.11104881 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.08413494 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100408272 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.246140651 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.078329325 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.462812787 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129335275 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.102873025 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069050858 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.085105425 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.069099318 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.505376526 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.145293851 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102599743 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.102862548 seconds)
    (20/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.133657054 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.076981761 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.091419963 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070400161 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.087031031 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072128182 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.12461494 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.302839072 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.148934836 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08688454 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.224888892 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.108481876 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070345668 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120714396 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.182021783 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098487056 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.125585592 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083639175 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.06928271 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.173507991 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.075396075 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.084987086 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.069031926 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.109459594 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.107319161 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.12401167 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.086456324 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.071127814 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.184747585 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.069249418 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.102625118 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.893594605 seconds)
    (52/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.068515636 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.167754103 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.084924497 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.084492989 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.274706688 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.105474709 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068533763 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.083998581 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.251311767 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.166680844 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.070522705 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.069194892 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085973638 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.071013792 seconds)
    (66/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.082565775 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.069294989 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.374328366 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071937823 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.096760029 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.596868663 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073250602 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085210233 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076138153 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07496592 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.105655691 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.06807195 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.088308992 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.069309424 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067808704 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.088068319 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.103786052 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.208005938 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.07083306 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069292987 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.08416402 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.089256144 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113749401 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.073050558 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.067662449 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.119728074 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06996192 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.084282956 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.10317223 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.08521959 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.10096487 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.07147575 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.129911304 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.071578268 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.143009047 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.074363612 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.114376597 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.075357666 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.118316959 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.09871065 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071361404 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.156803429 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066709314 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.084571346 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.069484038 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.06693716 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.088333486 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.070921824 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.101420342 seconds)
  done (took 21.051733827 seconds)
done (took 37.951983159 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.301108652 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.095255359 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.095113976 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.078781336 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.09606957 seconds)
  done (took 1.454586237 seconds)
done (took 2.2189069 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.123187834 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.120534785 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.065637162 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.117312961 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066037862 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.121255948 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.116879805 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.084156018 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.122143704 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.066611621 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.114878295 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.066483426 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065502894 seconds)
  done (took 2.038360743 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084117721 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085783698 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088511403 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084878419 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.08141541 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.085505236 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082215956 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108713794 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082823454 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090549814 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066749915 seconds)
  done (took 1.702594625 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082580888 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086481249 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.087860907 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084553211 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.08173746 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084672481 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082724392 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105390131 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083854052 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.092539038 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066428715 seconds)
  done (took 1.699310713 seconds)
done (took 6.193324253 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079142224 seconds)
  done (took 0.831357992 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.703622283 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.651520702 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.085463263 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.13392058 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.223150666 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.156167987 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.44147886 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.109750061 seconds)
  done (took 10.427740032 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.104984713 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.091777598 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.075685758 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.089433425 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.074628874 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.092141429 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.074181674 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.073220206 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.087789371 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.072001149 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.087207445 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.072671119 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.086829194 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.071882256 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.072668128 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.090237005 seconds)
  done (took 2.136141117 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.095136361 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.095570097 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.093921205 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.078524236 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.093177662 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.075412687 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.095433292 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.076988508 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.090222283 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.076015446 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.094622157 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.077685056 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.091302424 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.068778424 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.094483558 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.078845747 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.090361355 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.078596491 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.094153631 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.078435239 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.094057695 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.068578643 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.090902294 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.078088918 seconds)
  done (took 2.919647801 seconds)
done (took 17.076422095 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.131411673 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.076523808 seconds)
  done (took 0.967054595 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082254317 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.099632352 seconds)
  done (took 0.949786937 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.084475194 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.08195793 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091846308 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.098301431 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.083689612 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.07010661 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.106435992 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.069590105 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.085170809 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.070465241 seconds)
  done (took 1.608889648 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069607024 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.093918757 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.072350572 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.099758066 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.076876899 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.08340315 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.076318306 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.086940884 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.08211555 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.081359162 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.07455001 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.101541414 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.074731522 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.103803132 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.075783749 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.087809389 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.090043375 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.07072797 seconds)
  done (took 2.273257032 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.06771275 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067764584 seconds)
  done (took 0.905516416 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.0682211 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065249434 seconds)
    (3/7) benchmarking "month"...
    done (took 0.08492916 seconds)
    (4/7) benchmarking "year"...
    done (took 0.06946616 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.08216289 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.065826998 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.081991574 seconds)
  done (took 1.28485053 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.409097272 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.112200557 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.265816378 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.075247478 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.10653752 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.267896289 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.086790055 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.074088579 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.091634301 seconds)
  done (took 2.299408784 seconds)
done (took 11.056148124 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080298651 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087181045 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.114145522 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.429533996 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.10962622 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.069194995 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.145441001 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.21012435 seconds)
done (took 2.018013813 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.126169514 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.619461207 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.413930168 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.220242663 seconds)
  done (took 2.028886901 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.378239765 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.095136264 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.07611115 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.069844412 seconds)
  done (took 1.40132245 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067350461 seconds)
    (2/2) benchmarking "read"...
    done (took 0.072058081 seconds)
  done (took 0.918603943 seconds)
done (took 5.251857276 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068570508 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.103935472 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.069071483 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.069100068 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.084494586 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 0.066849051 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.068683151 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.084822515 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.066659947 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.069163697 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.085191502 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.072067263 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.084544712 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069532626 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06669556 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082968634 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069932044 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066983378 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082796614 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066552874 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.068675254 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.085413687 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.067185142 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.066172076 seconds)
  done (took 2.595870293 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.086209434 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.083774553 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.074379789 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.090487245 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.073927575 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.090878824 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.07482011 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.0694057 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.091126892 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.071750964 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089604544 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.073202201 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.087669268 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.073911376 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087563981 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.073926074 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.094008916 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070741932 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071576042 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.090273045 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.07440724 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085954646 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.073033926 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090667573 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.073273241 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090021431 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.072238344 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.085935853 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074389029 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.089160246 seconds)
  done (took 3.210415202 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.072261377 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.065078243 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.083074386 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.073292506 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.06659942 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.085335158 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.067360023 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.083462732 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.067816119 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.066638268 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.08426734 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.067197692 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.066530946 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.084351646 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.067951899 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.086392556 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.084272446 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.066700063 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.083622385 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.067078009 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.070102057 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.083406889 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.06703538 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.082886584 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.066913277 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.06641578 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.083509559 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.066808695 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.067067609 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.083510058 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.069615059 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.069620462 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.084073455 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.073677765 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.086572598 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.067208732 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.070202311 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.082991329 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.067902851 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.066565328 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.082754544 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.066988173 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.06670463 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.090417305 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.067868757 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.085784021 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.067225983 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.067911147 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.084604761 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.070344444 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.083409767 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.067221209 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.069326298 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.084417474 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.071268022 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.066459322 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.084116334 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.067230804 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.084235525 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.067331077 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.066571756 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.083229342 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.069414925 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.068135884 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.099339444 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.074603027 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.08288097 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.069100109 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.068689693 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.086102844 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.069506597 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.080560968 seconds)
  done (took 6.16239438 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.117679257 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.091635604 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.084128203 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067555805 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.082116041 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.06831192 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.070857429 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084066644 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068877648 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.089958423 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067134252 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068791459 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086008494 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.080450852 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084035395 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.070690275 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.089681968 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065587391 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.067656822 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087488559 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067808493 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.087454978 seconds)
  done (took 2.535306244 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.185462784 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.088717311 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.110105134 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091859359 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085733204 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075481048 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.088475874 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073773493 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073781919 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090078612 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07184165 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089953951 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072607596 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088140512 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072552008 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.088598456 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073985761 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088641106 seconds)
  done (took 2.397613034 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079497228 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067297032 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.10739529 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067753086 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.085000511 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070468148 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089831417 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076599356 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.086203973 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067964647 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.092386194 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070582457 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.085903627 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06798387 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070721043 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.084591561 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.070239653 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083641943 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076566725 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.089964786 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.07425867 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094487054 seconds)
  done (took 2.548649974 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082810847 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069187408 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.102079722 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086572953 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064934118 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067239151 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.092197553 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.069379506 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.092009144 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.071397201 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069345258 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.084989252 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.074654634 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.085844384 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.074080837 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086222408 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07165093 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068471434 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08589337 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063880029 seconds)
  done (took 2.350825541 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088234367 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085460409 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069467763 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093557436 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069555704 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.087409334 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079485759 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.087865883 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071434833 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.112271453 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071466718 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.08789206 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078980356 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.09287542 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071161728 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095585307 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078865544 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.095695645 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070655978 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.088333864 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.111825921 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.182868316 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.095624953 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071809198 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.08733606 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070765966 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070930705 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.092477914 seconds)
  done (took 3.25294612 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068769019 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068044886 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.081453761 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066167366 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.0654891 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.082247784 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.067500841 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.066489168 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.086265169 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067825176 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.069295593 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.086387827 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06994689 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.085402737 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069462114 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.069567619 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086099239 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.067270149 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066831729 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084443035 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.06987575 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068988753 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.085951304 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06817184 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082929062 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.069894844 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067909873 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.08423504 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070056662 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066952099 seconds)
  done (took 3.004296304 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.078211314 seconds)
    (2/2) benchmarking "in"...
    done (took 0.092329296 seconds)
  done (took 0.967458268 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.066861401 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081906473 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.082731793 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071879828 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.090558874 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070164628 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.094785469 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074338309 seconds)
  done (took 1.426024241 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.083377682 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079723992 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.08601274 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080744692 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.095385729 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.086293339 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.158816464 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.088806131 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.07673394 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.085002536 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.084076718 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.068772316 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.093147879 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070123285 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.092692838 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075945927 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.067897352 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.093306897 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.073280412 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.086274538 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071215791 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095558076 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071922872 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.066312387 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.088379169 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.078293252 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.098511007 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.071404678 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089873164 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.077185835 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.090611439 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.064563364 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.070369812 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.087345956 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.068382047 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.096908421 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085116563 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089132327 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.078815651 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070664982 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.097054371 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.065371636 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.091648969 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.076621957 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096841295 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.070289841 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.086754536 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.066118557 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.067502998 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.088763853 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.066309228 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.07003716 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.082013495 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076569448 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.09093092 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080633696 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.087889996 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.072459709 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.072598906 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.090336163 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.076919689 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.08855213 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072175806 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.069974172 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.096702544 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.074364656 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096564905 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.065679099 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.06451416 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.086470385 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.07977916 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110081402 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.076175793 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.088452015 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071978853 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.084613929 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072870934 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070967125 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092884585 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.07621382 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.087126194 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.075973604 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094062727 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070129073 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.072497816 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.094547223 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.068037986 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.089419702 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.067510686 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.103091248 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.069782056 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.085461395 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.068320998 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.079913274 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.089898235 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.069853723 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.084580577 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076752914 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.064442332 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.088058832 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071422624 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086850381 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.080282797 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.09187116 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.076373751 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.095075157 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.077485235 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070041027 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.091093618 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.067289327 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.08845272 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.068455479 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.075933346 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.081534746 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072666578 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.086924804 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.071015915 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.095287734 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.068395197 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.069776081 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094511302 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074956553 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.085720621 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.066850272 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.073319825 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.087401538 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.074766522 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.094481899 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.068673694 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.065383946 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.082813811 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.072932766 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.086970421 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.07369046 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.0918859 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072974756 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.064231038 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.085348027 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.074206298 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.095760939 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.070258371 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.086780814 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.076667844 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070887417 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.086622121 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.076043715 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.089123224 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.068810856 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.075114755 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.087898507 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.065865506 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.090440511 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.072634292 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.068598899 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.090509682 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.074019411 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.089495893 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.071057994 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085378336 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.075866012 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070643691 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.086459171 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069191769 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.085445037 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.081060431 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.071548616 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.083377708 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.067429619 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.093574371 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.067833362 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.068889921 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.08725319 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.071990826 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.088510617 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.06869926 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.069129761 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.0894895 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.080991128 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.091680033 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070831415 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.092824695 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.082176425 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.087187736 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.072310096 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.07079364 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088540324 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.071061207 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.095728441 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074874031 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.092557595 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.072605368 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.066522819 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09246001 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077243327 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.086564294 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.068581572 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.068781347 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.091240477 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.075371723 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.090895596 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.071113322 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085188865 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071064105 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073029129 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.090285933 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.069992381 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.086377132 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.07544779 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.086283802 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.077346573 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070482409 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.098578626 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073514991 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.083497991 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.073511997 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085744933 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.075620686 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.065380392 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.085028005 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.068770746 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.088506681 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.06953511 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.072721864 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.082481094 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077581559 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.094869805 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.070641842 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.069187782 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.088001211 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076366435 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.089128511 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073691799 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.072601634 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.093271924 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079548722 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.086744245 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.073033674 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.097295907 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.071172313 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.063934958 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.092983841 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.069324168 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.08700535 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.069585746 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.067375187 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090142624 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.077991445 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.095957231 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.064579614 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.089380623 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.069815771 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.068919254 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.083513279 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.074300716 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.09023835 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.070802258 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076565663 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088577354 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.070802772 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091492073 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.070059268 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.07069759 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.08942131 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072905126 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.088740726 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.071975214 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.085657654 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.073891861 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.068497519 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.085156319 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.071760246 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.087347632 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.06996984 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075217479 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.08767867 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07051243 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.089435852 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.071710811 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070171263 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.087768576 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.069301199 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090472748 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071172487 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.070287596 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.089963718 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.066015381 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094081772 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.07009175 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076646835 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.087849622 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.067023556 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.092610268 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.073178927 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.091489181 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.071545331 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.070470252 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.08915384 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.070226714 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.08991592 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077183769 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.067532804 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.098177303 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.078056267 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08828213 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.073132807 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.087499227 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.071283824 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.068355684 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.088451581 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.070918967 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.087448154 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.070039645 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.073854875 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.089917189 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.069991797 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088987215 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.071508369 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.069952074 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.089284701 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.065615532 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067839436 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.087258643 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.070037219 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.097569509 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.071025545 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.08659025 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.069334615 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070568031 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.087450699 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.067085411 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.094965409 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.079064368 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.0885239 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076679721 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.087054691 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.071548007 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079446475 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.081953454 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.06795258 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.085580495 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.068022059 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076831493 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.088737529 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.079688091 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.087846311 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.069142932 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.067136613 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.088839813 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.069820541 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.082412365 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.068730121 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073608002 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.087138089 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069703667 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.087897303 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.073607799 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070911604 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.098179221 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.070110282 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.088176476 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.070673657 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.066135724 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.086595504 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.068928827 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.090156521 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.071246315 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.067569486 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.084852567 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.070451331 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.087153268 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.071189026 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.070002489 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.088884855 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076992929 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087276929 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.073668922 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.072482663 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.085586607 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.073003249 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.087943836 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.070570975 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.068264543 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.090982623 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07370795 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088942977 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.078384236 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.087493027 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070797032 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070444247 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.08617124 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.070515722 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.087212012 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.070106312 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.068604464 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.089354378 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078003903 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.085471408 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.0733776 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068838047 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.088352488 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.077395902 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.089224706 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.073486589 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.095063396 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.07027055 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070920412 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.096054983 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.073839908 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090927738 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071115187 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.088561192 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076243709 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.069093379 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.094134498 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.070311884 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.088458535 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.071993481 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.067494412 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.088336835 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.07000582 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086252325 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.076701962 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.069916315 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.087326022 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.069242367 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.085603446 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.070755708 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073285284 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095688964 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.072418258 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090767862 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.065791592 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.066558372 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089786984 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.068559076 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.089380292 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.073403282 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074828489 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.090706759 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.070441389 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.087453088 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.079532097 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094171401 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.073789069 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.067045781 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.091285859 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.071977293 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.089515149 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.071252202 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.069304504 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.089537206 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.074943703 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.089332359 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.06972316 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076961005 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.090781318 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070811675 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.088863824 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.071035878 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.069551025 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.083845489 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.070654011 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.09053825 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075184648 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.089245928 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070402033 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079559261 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.08552281 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.070419627 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.091507757 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069667726 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.073669206 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.084196397 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.07187084 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089608953 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071404486 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.064644098 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.087794091 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.068572257 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.089803734 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.069313165 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.065548094 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099277894 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.078740211 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.091690683 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069890611 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087475499 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.067022512 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.065697939 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.087506801 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072057694 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.088790638 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.081131873 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.068772721 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.087836793 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.066494114 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087932284 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073748488 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.072871265 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.085639509 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.06594143 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067980961 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.091856501 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.075817927 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.087340809 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.07016426 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090506424 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.072989882 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.067605795 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.092378001 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.067564698 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.091262975 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083519987 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.088530443 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070912145 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.075860162 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096140465 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.070880361 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.083768852 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.070764869 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.071911718 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.089205927 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.070539977 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.090225667 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085036771 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09129857 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.069092366 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.068292921 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.091388556 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.068753985 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.096642254 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071801551 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.088366864 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.075253288 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.071248789 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.097502097 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072584214 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096119283 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.072671008 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.091355547 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.069878632 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06922479 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.08731765 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.068965283 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.08923644 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.071476112 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.074208418 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.097498275 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.06888357 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100055095 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.07906464 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.090801392 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.067578638 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.068726282 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.088371088 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.065836173 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.089220227 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.069085506 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.068086316 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.087176904 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.069936728 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.088785322 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076529193 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.069965686 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.089841676 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.070247716 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.082419084 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.071897614 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.071839682 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.089150159 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.067671592 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.08825861 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.072598432 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.072597808 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.091555059 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.068706741 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.089718545 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.072494289 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069979561 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.083622451 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.07656714 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087251044 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.072857 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.069137718 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.089068022 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.071671391 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091582176 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.076506045 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.088882634 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.072132765 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.078327766 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.09156194 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.067935191 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.085054122 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.076119261 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.067905024 seconds)
  done (took 48.11765734 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.108539315 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083365259 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064553496 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.081869936 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076327198 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083504412 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064216983 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065062156 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.085149294 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069214105 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.083825632 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065969525 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.092846017 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.090246301 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096955919 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070067319 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085304512 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066852554 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.084127008 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068081033 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.093544812 seconds)
  done (took 2.525535535 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.076450088 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.090543867 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075158384 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.09844113 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071038747 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.093617824 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.07683384 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093398039 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.097861414 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07200176 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.098616847 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074239149 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.089616539 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.071266388 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089368197 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075387412 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.097710463 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072474939 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.093406282 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.076695163 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092765249 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.076347442 seconds)
  done (took 2.694884921 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.068679371 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.068060259 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.087528936 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.064302248 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.069104509 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.083516486 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.07346679 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.086006765 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.073670828 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.076809513 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.088002165 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.068367784 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.08934137 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.065431743 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.068733393 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.086300523 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.133475186 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.073813188 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.068007276 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.090554593 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.065244395 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.090169611 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.066028648 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.065703842 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.087026532 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.073713404 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.08885867 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.068261639 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.069123588 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.08676819 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.070482283 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.085579342 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.070946172 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.069601416 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.086764279 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.068779673 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.069023331 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.088453986 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.066194903 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.085736592 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.070447574 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.066218892 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.088933893 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.070925478 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.06675463 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.087025123 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.070735843 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.087492393 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.065304819 seconds)
  done (took 4.628258165 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.085616634 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.130179371 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.088859177 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.093275847 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.104076116 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.094325544 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.072539872 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.11526199 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.067226525 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.088388699 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.085635075 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.107925942 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.089266546 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.074878805 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.095701233 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.071179006 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.088907758 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.069527757 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.073882802 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.089162312 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.072956324 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.095783792 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.102317891 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.083385771 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.092477619 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.069227537 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.087775734 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.074849387 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.100905651 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.074526875 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.09288585 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.075148233 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.104982504 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.092431904 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069631228 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.07243628 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.105597822 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.087486893 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.07303125 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.066730497 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.090433501 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.073668861 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.095495976 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.105126788 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.070897503 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.074163147 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.08962491 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.066450796 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.1017355 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.070965032 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.097172086 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.103304465 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073432173 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.088243049 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.074722737 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.103912963 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.070075448 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.087189505 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.073077884 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.101445754 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.067581379 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.091646052 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.083656503 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.090461586 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.077344223 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.103439239 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.074003881 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.091949097 seconds)
  done (took 6.845413413 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.076914904 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.092385218 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082906938 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101896756 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.09229929 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075124714 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.09378165 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.076362173 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.09431036 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.081043615 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.096237517 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.116467631 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.071601552 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.097047903 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.077206089 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.095299463 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.076146481 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.096234634 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075164884 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.09627562 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.09522863 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.085364669 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.096102398 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.103257367 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.106386568 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.091143173 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.07631224 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.095137104 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084430371 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.096209187 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.106694045 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.076310312 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.095506917 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.103310599 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.08867845 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.09430293 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069560521 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095687661 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.076828569 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.095169397 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.071342179 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.103754445 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.076234645 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.091451844 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.076362721 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.09579601 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.103412593 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.087472161 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.09837121 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.100219423 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.077063433 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103994887 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075269083 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.096369399 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.103029002 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.109129065 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.103590681 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.102908945 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076425091 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.104316983 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.102881406 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.109382531 seconds)
  done (took 6.522497991 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088879518 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.095373988 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.096983964 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.064509996 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067180792 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.093146748 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068156601 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.086116901 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.079293836 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.096900678 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081843371 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093396786 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076536405 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101408143 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.092450972 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077371389 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093368386 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.073816273 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097734264 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.074168664 seconds)
  done (took 2.554436559 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076759374 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.103729161 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.06963486 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073048143 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.090564283 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073307098 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.090642728 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072240071 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089101085 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073545139 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099200423 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.080180507 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090062508 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.076554388 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.099305988 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.075626992 seconds)
  done (took 2.194168339 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.079976255 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.09760384 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.08309804 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.087671636 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067289284 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.086678562 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.070102845 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.06521274 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.087019897 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.084316723 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.090380103 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.072110823 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.089114677 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.069250412 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.066803957 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.09255456 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.066438787 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.087677361 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.070388586 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.103882977 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.081594766 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.087480508 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.070943944 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.071205252 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.090141176 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.074861026 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.090564261 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.067482278 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.087888246 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.070335078 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.08922567 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.077727416 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.085590482 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.068662999 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.067501877 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.086448352 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.069749202 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.088952925 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.0739435 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.069599425 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.088072516 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.069117002 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.088674831 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.070683382 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.084571161 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.071253911 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.065521623 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.095643056 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.0681546 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.089061194 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.070927627 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.091100014 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.07111577 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.079526577 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.094182998 seconds)
  done (took 5.247715898 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081947856 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070862304 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.082994608 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066165831 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.091118905 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.071148016 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.072730402 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091237122 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070751463 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.087280602 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072318287 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.091425515 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072613992 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072687764 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.091063574 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073916357 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.085117685 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072918211 seconds)
  done (took 2.283286012 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.074431535 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06787918 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.096203642 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.070643787 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.088938584 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.0735661 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065889253 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.088147186 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068348036 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.088754453 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071117372 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.071578212 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089012106 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.072692086 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088850557 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070224721 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.071322169 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088468334 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.070333308 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084362177 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.073176388 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067617528 seconds)
  done (took 2.568581421 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.07430486 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.093990588 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.166473073 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.111823728 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.085943972 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.103153187 seconds)
  done (took 1.503615296 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091763424 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100043976 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070591624 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10990484 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078381003 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091328093 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072301853 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090302361 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080563247 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104730645 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071733628 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099750106 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098590859 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080581567 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097471566 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076986949 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091676156 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071092219 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089819112 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108742896 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072573319 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098477097 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072725556 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090542503 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071983146 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098286752 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080499172 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104679131 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090389666 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081244109 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096428381 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072333612 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100610088 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103762775 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073841052 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099653988 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072201283 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11020464 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077010275 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099259944 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.073131247 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098720575 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099025914 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077667853 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100648031 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07210285 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096944411 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071627456 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092044091 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115052819 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077992195 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100707876 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096470536 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081636213 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099641329 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11554672 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084112598 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099980191 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0969728 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08629482 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100316012 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076453707 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100500817 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104579243 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077984814 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101128235 seconds)
  done (took 6.807984186 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087035564 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106509763 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070613402 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103357625 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097101996 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07280976 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090741858 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072856489 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091488249 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071989741 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132626715 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072163503 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100438489 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099393893 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072617888 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091222161 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072312941 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098739694 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071458741 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116092462 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090590631 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080659294 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100266819 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099164042 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085125291 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097074776 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071372514 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091746202 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072493359 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09224707 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075679796 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092134856 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098490252 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.072285804 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098804752 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07220816 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091822312 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077413617 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091435935 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077081668 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101264299 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109294257 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072992757 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0917553 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085432777 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092271081 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070883374 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09199144 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071771699 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091626522 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085878245 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106209484 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104728517 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099828817 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073205819 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091556726 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072782185 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091307072 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072840571 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097267094 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080477294 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091494397 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11677377 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07254689 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091447929 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080410491 seconds)
  done (took 6.699438819 seconds)
done (took 132.421600605 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.201444021 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.184438445 seconds)
  done (took 1.251468857 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.070037509 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.095972963 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.098756486 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.130932895 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.087531587 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.101916873 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.118579974 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.08088461 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.068160302 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.090331368 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.070098471 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.090204643 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.13557528 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068306719 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.086351001 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.070252976 seconds)
  done (took 2.336170722 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.103767897 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.198155129 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.113173191 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.068590266 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.102969393 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.080986453 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.088277529 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.079701109 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.097494216 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.069122045 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.080281079 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.099700304 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.06744761 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.099114715 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.077324805 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.101500678 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.068197132 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.101456939 seconds)
  done (took 2.574769992 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.104023116 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.141408996 seconds)
  done (took 1.123254886 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.19948598 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.123428428 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.201377157 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.418894954 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.205345747 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.276623354 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.174669365 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.172120469 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.15667026 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.170456475 seconds)
  done (took 2.969717413 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.100916043 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.169132752 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.309653851 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.138164377 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.086580772 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.115722129 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.138248481 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.090095507 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.101590745 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.100688457 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.083042043 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.098959674 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099862699 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.097932257 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.077311469 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.102051225 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.124361033 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.078056212 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.078948088 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.100545294 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.121742079 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.07048569 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.078359707 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.098730123 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.080613978 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.102764002 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.068546066 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.090347014 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.079240953 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.098669321 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.082420098 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.117678708 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.100791516 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.134070331 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.085864304 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.135048497 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.102589563 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.075542124 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.09889903 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.076481636 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.102114636 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.079864615 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.107754492 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.080026441 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.088900527 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.080708775 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.089709029 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069732164 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.102242613 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.081358532 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.102682398 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.082493401 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.13374025 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.09877542 seconds)
  done (took 6.36698676 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.746616245 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.110464057 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.095109317 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.806551367 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090714237 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106602221 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.713852645 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11803916 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.20989965 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.760430501 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.0909024 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.10030704 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.179483746 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.235572981 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.887975563 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.283157481 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.631313871 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.105443965 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.10924371 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.131763876 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.137947709 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.176607906 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.148807081 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.437248079 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.076039127 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093708361 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.135964603 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.076052213 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.160069332 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.084928527 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.09400511 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.156065851 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.224502795 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.155666278 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.097520225 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070474618 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.091885319 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.147536834 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.237199954 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.169194145 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.15937728 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06851409 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.091961907 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.140381652 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.130969776 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068906135 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.140339925 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.171762083 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.148873557 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.074394166 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.096727922 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.142582211 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.137858647 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.142043671 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.101451917 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.268892659 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.281931088 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.091145452 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098231378 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.104814253 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.234201884 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.082508023 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.197600894 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.139865553 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.163237258 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.093165354 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.728292793 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.14552232 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.092680679 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.07532165 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118160039 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095021105 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.138293538 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.14296478 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.367909167 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.142158296 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073685843 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091436844 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.210848349 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.106297599 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074371316 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.14511116 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.097877288 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.103922829 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.168994582 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.147227686 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.150499945 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.211108243 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.14577829 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.164711191 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.077530297 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127482069 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.097959169 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.194508024 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.175252962 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.14437431 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.212430647 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.138593524 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.141663747 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.146443805 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.09735725 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.149731479 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119043618 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.081510828 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136989801 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.189911819 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.123146533 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083164713 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.095966756 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.138498707 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.126978235 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084407045 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.159583441 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.150027258 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.455980673 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.145454324 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.089681492 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.086419796 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137334535 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.160621363 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.077681595 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.231020832 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101326536 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.166114488 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.12055001 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.06964595 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120026253 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.1418725 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.079831875 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12094854 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.157950434 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.079364651 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.217299058 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.188513583 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07881272 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.216590611 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.163503353 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.078469423 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.152255715 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122778427 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.148454668 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.101667215 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.142422657 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.077513564 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.768368907 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.141850133 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.12245967 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073364005 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.176973178 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.091999588 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083664208 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.104965094 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068218304 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.750021877 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.085071658 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.102126777 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102733729 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.076568788 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120597732 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.135896562 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.094105174 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.138829627 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.179868913 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100423253 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.122077739 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.086426616 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.14159535 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.100921231 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.106755217 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.087258543 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.108419321 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.12556634 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.077331927 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.107450571 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.147040083 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.141435578 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.190308262 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.540561692 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070232135 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.104664026 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.198895474 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07176137 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.260831676 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137167195 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.196641095 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.140709841 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080709097 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.282670035 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.142341284 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.17578184 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.105645365 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.150691053 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069743051 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.135928637 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.141589023 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.092701385 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07611143 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.13893319 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.164301071 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.143238773 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.937993401 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072435365 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.202987115 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068039355 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.169530169 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.076601925 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097211227 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.239682699 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.091705817 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.145948332 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.142518313 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.094065042 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.085754698 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.680043165 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.10528852 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.139366802 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.096228552 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.170933825 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.161114443 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.137805859 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.140576805 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.078302924 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.141788628 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.209047566 seconds)
  done (took 40.474366232 seconds)
done (took 57.972390859 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.258914168 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.181052379 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.240412339 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.144462642 seconds)
  done (took 1.79707759 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.144125255 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.10584742 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.118924486 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.086780615 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.103935447 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.086942875 seconds)
  done (took 1.546624396 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.404133377 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.264967345 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.23039355 seconds)
  done (took 1.799056205 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.261039873 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.217280779 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.449452525 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.296814326 seconds)
  done (took 2.25086578 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.178940503 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.114547838 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.068655449 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.107252257 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.158192651 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.252654005 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.128527857 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.187595156 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.080808554 seconds)
  done (took 2.22252874 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.19699099 seconds)
done (took 10.715601566 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.189086015 seconds)
    (2/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.30783185 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.178965964 seconds)
    (4/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.23696788 seconds)
    (5/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.116173092 seconds)
    (6/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.186843972 seconds)
    (7/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.283592286 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.129733632 seconds)
    (9/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.24604142 seconds)
    (10/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.185531421 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.081582867 seconds)
    (12/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.267848923 seconds)
    (13/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.101791564 seconds)
    (14/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.213711604 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.10203464 seconds)
    (16/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.17814882 seconds)
    (17/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.172804932 seconds)
    (18/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.099908618 seconds)
    (19/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.244126557 seconds)
    (20/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.212126002 seconds)
    (21/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.05402999 seconds)
    (22/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.271018143 seconds)
    (23/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.264761666 seconds)
    (24/309) benchmarking ("sort", Float64, false)...
    done (took 0.148627691 seconds)
    (25/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.190266796 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.095212614 seconds)
    (27/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.092957073 seconds)
    (28/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.122865993 seconds)
    (29/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.07738405 seconds)
    (30/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.111151657 seconds)
    (31/309) benchmarking ("sort", BigInt, false)...
    done (took 0.238241405 seconds)
    (32/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.054859673 seconds)
    (33/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.077686633 seconds)
    (34/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.101142201 seconds)
    (35/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.08951426 seconds)
    (36/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.094460723 seconds)
    (37/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.162596313 seconds)
    (38/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.099246364 seconds)
    (39/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.055959237 seconds)
    (40/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.091377332 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.136245038 seconds)
    (42/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.106695898 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.171435888 seconds)
    (44/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.076249887 seconds)
    (45/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.19786725 seconds)
    (46/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.077964049 seconds)
    (47/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.076003981 seconds)
    (48/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.254970947 seconds)
    (49/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.271617954 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.142746111 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.077984038 seconds)
    (52/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.076534192 seconds)
    (53/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.267449798 seconds)
    (54/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.114769232 seconds)
    (55/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.12052274 seconds)
    (56/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.166576866 seconds)
    (57/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.052945003 seconds)
    (58/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.09885521 seconds)
    (59/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.14979966 seconds)
    (60/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.07664797 seconds)
    (61/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.23588076 seconds)
    (62/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.183948811 seconds)
    (63/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.093853513 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.108229458 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.142569365 seconds)
    (66/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.076229983 seconds)
    (67/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.055793941 seconds)
    (68/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.136333747 seconds)
    (69/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.077225046 seconds)
    (70/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.126015432 seconds)
    (71/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.242647665 seconds)
    (72/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.141842419 seconds)
    (73/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.081826155 seconds)
    (74/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.225508609 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.153768296 seconds)
    (76/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.080972959 seconds)
    (77/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.075159848 seconds)
    (78/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.089000791 seconds)
    (79/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.069373694 seconds)
    (80/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.262736705 seconds)
    (81/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.168984168 seconds)
    (82/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.108993817 seconds)
    (83/309) benchmarking ("sort", Int64, false)...
    done (took 0.092643993 seconds)
    (84/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.069090569 seconds)
    (85/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.075034017 seconds)
    (86/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.079105055 seconds)
    (87/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.083612797 seconds)
    (88/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.164281478 seconds)
    (89/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.080471789 seconds)
    (90/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.089520238 seconds)
    (91/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.055446868 seconds)
    (92/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.243517773 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.104365684 seconds)
    (94/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.115066019 seconds)
    (95/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.056385859 seconds)
    (96/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.190976052 seconds)
    (97/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.238959095 seconds)
    (98/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.069506033 seconds)
    (99/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.127996478 seconds)
    (100/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.099999027 seconds)
    (101/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.076862539 seconds)
    (102/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.091405986 seconds)
    (103/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.079985465 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.123597734 seconds)
    (105/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.114654337 seconds)
    (106/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.253304777 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.068814334 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.113266123 seconds)
    (109/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.075732318 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.1182045 seconds)
    (111/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.095927952 seconds)
    (112/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.074532086 seconds)
    (113/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.06255338 seconds)
    (114/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.068345979 seconds)
    (115/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.097089539 seconds)
    (116/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.107734275 seconds)
    (117/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.119887551 seconds)
    (118/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.07128713 seconds)
    (119/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.054001617 seconds)
    (120/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.170732005 seconds)
    (121/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.257774402 seconds)
    (122/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.054562657 seconds)
    (123/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.12469881 seconds)
    (124/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.054345215 seconds)
    (125/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.100953269 seconds)
    (126/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.067266104 seconds)
    (127/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.06767136 seconds)
    (128/309) benchmarking ("sort", Bool, false)...
    done (took 0.159188537 seconds)
    (129/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.097351797 seconds)
    (130/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.077361673 seconds)
    (131/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.11307554 seconds)
    (132/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.069164248 seconds)
    (133/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.074614229 seconds)
    (134/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.115232596 seconds)
    (135/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.068649377 seconds)
    (136/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.09563975 seconds)
    (137/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.076184887 seconds)
    (138/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.06881211 seconds)
    (139/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.080196031 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.076360483 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.076169588 seconds)
    (142/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.099920781 seconds)
    (143/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.200904573 seconds)
    (144/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.144371286 seconds)
    (145/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.097215373 seconds)
    (146/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.092065776 seconds)
    (147/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.091926301 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.088846082 seconds)
    (149/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.25081514 seconds)
    (150/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.067185534 seconds)
    (151/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.115513864 seconds)
    (152/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.07652751 seconds)
    (153/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.249891303 seconds)
    (154/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.241009739 seconds)
    (155/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.054003309 seconds)
    (156/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.106935549 seconds)
    (157/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.077190869 seconds)
    (158/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.073467572 seconds)
    (159/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.077598121 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.111971238 seconds)
    (161/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.257526175 seconds)
    (162/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.076951992 seconds)
    (163/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.094946822 seconds)
    (164/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.054182151 seconds)
    (165/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.07333738 seconds)
    (166/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.089792559 seconds)
    (167/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.071634243 seconds)
    (168/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.073246866 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.127002716 seconds)
    (170/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.172917637 seconds)
    (171/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.080515659 seconds)
    (172/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.106355751 seconds)
    (173/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.110925818 seconds)
    (174/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.261857016 seconds)
    (175/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.075181957 seconds)
    (176/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.102496658 seconds)
    (177/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.151894841 seconds)
    (178/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.095913983 seconds)
    (179/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.086040898 seconds)
    (180/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.199922444 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.121803618 seconds)
    (182/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.076063726 seconds)
    (183/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.2701249 seconds)
    (184/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.099585414 seconds)
    (185/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.053641925 seconds)
    (186/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.07451671 seconds)
    (187/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.105365336 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.093219113 seconds)
    (189/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.09866722 seconds)
    (190/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.076534106 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.089232321 seconds)
    (192/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.070296158 seconds)
    (193/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.088444472 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.088961235 seconds)
    (195/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.064787819 seconds)
    (196/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.070036282 seconds)
    (197/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.074993645 seconds)
    (198/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.140076723 seconds)
    (199/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.087903679 seconds)
    (200/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.054148497 seconds)
    (201/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.104894701 seconds)
    (202/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.054427229 seconds)
    (203/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.093102926 seconds)
    (204/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.076036593 seconds)
    (205/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.10895426 seconds)
    (206/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.068672835 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.121448715 seconds)
    (208/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.069868934 seconds)
    (209/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.097576698 seconds)
    (210/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.072051543 seconds)
    (211/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.056311962 seconds)
    (212/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.172616576 seconds)
    (213/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.096737973 seconds)
    (214/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.069352604 seconds)
    (215/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.078330116 seconds)
    (216/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.099270762 seconds)
    (217/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.064505686 seconds)
    (218/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.069419427 seconds)
    (219/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.090347641 seconds)
    (220/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.067533875 seconds)
    (221/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.053734674 seconds)
    (222/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.094761128 seconds)
    (223/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.171490859 seconds)
    (224/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.116766539 seconds)
    (225/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.066226594 seconds)
    (226/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.103991168 seconds)
    (227/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.068136704 seconds)
    (228/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.097723269 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.141941502 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.11432815 seconds)
    (231/309) benchmarking ("sort", Float32, false)...
    done (took 0.128326521 seconds)
    (232/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.096664936 seconds)
    (233/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.068330289 seconds)
    (234/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.052955684 seconds)
    (235/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.076418232 seconds)
    (236/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.069356764 seconds)
    (237/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.052920144 seconds)
    (238/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.090810956 seconds)
    (239/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.05429645 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.087722538 seconds)
    (241/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.077752114 seconds)
    (242/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.06734317 seconds)
    (243/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.053119933 seconds)
    (244/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.08490101 seconds)
    (245/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.080658164 seconds)
    (246/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.056067106 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.13843341 seconds)
    (248/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.073875114 seconds)
    (249/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.07943178 seconds)
    (250/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.069961991 seconds)
    (251/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.06870217 seconds)
    (252/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.106666593 seconds)
    (253/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.1378318 seconds)
    (254/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.07705873 seconds)
    (255/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.056056836 seconds)
    (256/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.055764198 seconds)
    (257/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.097955279 seconds)
    (258/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.101568846 seconds)
    (259/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.240459953 seconds)
    (260/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.055214176 seconds)
    (261/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.100569137 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.095300574 seconds)
    (263/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.103986781 seconds)
    (264/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.068648364 seconds)
    (265/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.055791083 seconds)
    (266/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.093126521 seconds)
    (267/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.065067723 seconds)
    (268/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.093650952 seconds)
    (269/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.079013266 seconds)
    (270/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.056294006 seconds)
    (271/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.08835427 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.09330596 seconds)
    (273/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.05508863 seconds)
    (274/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.072823651 seconds)
    (275/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.095601526 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.162423057 seconds)
    (277/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.074488118 seconds)
    (278/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.054313338 seconds)
    (279/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.077173249 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.075418429 seconds)
    (281/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.054556092 seconds)
    (282/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.07711855 seconds)
    (283/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.054714316 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.068184165 seconds)
    (285/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.116897566 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.068506778 seconds)
    (287/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.074330752 seconds)
    (288/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.076969017 seconds)
    (289/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.067320133 seconds)
    (290/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.190579013 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.075580306 seconds)
    (292/309) benchmarking ("sort", Int8, false)...
    done (took 0.164121781 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.092189366 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.09300659 seconds)
    (295/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.052958863 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.098005861 seconds)
    (297/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.063456198 seconds)
    (298/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.053130494 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.137066522 seconds)
    (300/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.09640808 seconds)
    (301/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.067757477 seconds)
    (302/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.201276414 seconds)
    (303/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.067216691 seconds)
    (304/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.054107751 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.096794091 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.088275331 seconds)
    (307/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.097306246 seconds)
    (308/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.054933342 seconds)
    (309/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.053831491 seconds)
  done (took 35.473091992 seconds)
done (took 36.383128316 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.083017694 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.114495745 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.077450342 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.118081185 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.082432152 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.10138927 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.074997311 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.102782901 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.082155745 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.106086891 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.081013908 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.056290054 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.098953935 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.076507563 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.098798564 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093064876 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.102981308 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074899621 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.097554933 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.06696048 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.074590242 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.089498539 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.069234788 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.055911903 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.102627566 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.074134673 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.096542698 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.078086529 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.068517892 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.092351538 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.073229026 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.098353873 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.069450864 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.081968994 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.099362047 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.077490384 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.101207356 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.080439181 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.071050534 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.093032443 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.077417017 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.068285786 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.099063205 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.077391157 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.09760896 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.074778242 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.076989196 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.106746948 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.096023562 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095759218 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.077559477 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.103403698 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.080737647 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.075919677 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.097808126 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.077924755 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.098165479 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096207376 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.101293604 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072766388 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.076897182 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.102062293 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.075041897 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.099547325 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.07562583 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077474283 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.100997654 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.07319705 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.099271933 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073359215 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.066788877 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.0986503 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.071682518 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.089072412 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.077234088 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.078439735 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.089410897 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.073640342 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.073802757 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.096099369 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.067054775 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09107488 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.069704245 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.073239879 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.0917402 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.056945678 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071876298 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.096006143 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.067601696 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.077529018 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.10016209 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.076624417 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.094362659 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.080961301 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.069500136 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.098057766 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.069253085 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.068877303 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.095550772 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.074035821 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.091597567 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072557524 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.078655175 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.095124078 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.076313624 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.10685566 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.06936937 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.075868413 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.091737078 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.069360628 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.084783753 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.102903058 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.069041246 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.095327822 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.068922874 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.076401884 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.092307536 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.069381049 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.069519471 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.09288433 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.076123965 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.092827732 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072624692 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.076881379 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.106504786 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.069101849 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.073335526 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095908179 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.069866603 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.097457987 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.069956818 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.070003783 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.094688037 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.067349005 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071849226 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.092691775 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.076882266 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071978149 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.101997767 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.07115126 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.101610903 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.073954309 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.075728122 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.098692345 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.0686738 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.061953116 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093639482 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069562247 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.069396704 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.090691265 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.069744293 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.090336619 seconds)
done (took 13.646669201 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068056676 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.169111171 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.126705239 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.097293541 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.111747929 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068245944 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.101248057 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.104510266 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.093325089 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.127559629 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.089391498 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.109240815 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.115791174 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.090121767 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.067789906 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.073055164 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.09440418 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.092660638 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.12797504 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.112019268 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.120643745 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.089520252 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.12099793 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.092204714 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.113605024 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.103868164 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.09074239 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.072080828 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.093523819 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.094304447 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.109752416 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.071863215 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.068171348 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.124344458 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.118609585 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.087083946 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.089983575 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.085997113 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.09027333 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.067519109 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.11543225 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.101913216 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.1062013 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.105638684 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.075185335 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.070568294 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.091907377 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.087759117 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.114741083 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.08153888 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.112904915 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.134941841 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.070618676 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.107427334 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.067266516 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.111858738 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.106561139 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.070976824 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.068003374 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.093455794 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.068060889 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.072804278 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.113899355 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.11706402 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.072112125 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.106976014 seconds)
  done (took 7.352705364 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085995685 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.117905801 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.085604865 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.108233815 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.067649694 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.068618497 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.091394547 seconds)
  done (took 1.597985508 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068907354 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.090850754 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.113864516 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.090379477 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.110258997 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.089256309 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.101013495 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.06844553 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.108240122 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.06942354 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.089410929 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.129488409 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.092662458 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.075575405 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091984203 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.09156097 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.09224711 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.091142282 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.071500406 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.114487591 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072106476 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.112164932 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.070669804 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.068671867 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.106057879 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.068888546 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.139003316 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074374301 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.092789021 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.072396222 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067267728 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.141280724 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.105715185 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.079913354 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068599408 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.106301487 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.083265308 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.08923123 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.085392646 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.096653366 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.0831656 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.06932554 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.093558816 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068124948 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.074149052 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.103055341 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.070849516 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.092862441 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.072177697 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.088054128 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.09375983 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.083002258 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.091786326 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.072633851 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.069982484 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.098075012 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.079196254 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.092577783 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.089233249 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070483767 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.109147426 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084695983 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.106262819 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085201465 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.094149478 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.082951192 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.105663357 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.072377037 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070447352 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.095943046 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.0857116 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.089759903 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.07047391 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.080204887 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.094408101 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.091032932 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.114709807 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070325418 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.10168544 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.069623046 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.069733088 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.092029788 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.091911238 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095681041 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069636664 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072314082 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095229035 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.066881836 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.06862404 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.096927635 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.068028875 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.093761552 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.072966007 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069734479 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.094971619 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.085577505 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.092702501 seconds)
  done (took 9.454703501 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070089977 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.070097873 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.093935834 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.069217573 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.070417907 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.092809772 seconds)
  done (took 1.448740007 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.099103813 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.093911816 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.082746967 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.097511734 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.107848876 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.107101 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.084394776 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.107096005 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.087485655 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.10459014 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.083787612 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.107205814 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.089406317 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.09825834 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.083906463 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.097169435 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.084956991 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.101841815 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.081332116 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.099229743 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.089608028 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.098413769 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077401116 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.111711947 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075746783 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.078343141 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.10607757 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.083750458 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.108097316 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.087136421 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.102683372 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075408398 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.098726541 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.086760666 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.109309054 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.074917682 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098792658 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074428865 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.103021437 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.072811442 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.108744104 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07564489 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.081374315 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.097311801 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.107000537 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.073729547 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.073530674 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.10147881 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.082808262 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.096543978 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.073725668 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.097694532 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.072054599 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.097317685 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.07419829 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.106758361 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.073642062 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.107634573 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.075233148 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.073438699 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.095272769 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.072496482 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.107332557 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.072978216 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.105900554 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.073642377 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.097185916 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07548824 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098842857 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.075448168 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.073174314 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.095147936 seconds)
  done (took 7.489327072 seconds)
done (took 28.306556244 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.64529908 seconds)
  done (took 1.626504537 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.76214653 seconds)
  done (took 1.745435793 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 14.488913652 seconds)
  done (took 15.474828955 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.614276767 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.753820136 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.806427248 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.134113105 seconds)
  done (took 3.289702824 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.878945971 seconds)
  done (took 1.88559596 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.235349376 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.224154079 seconds)
  done (took 1.446016734 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.729844736 seconds)
  done (took 1.72494605 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.304411887 seconds)
  done (took 2.291282038 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.321112524 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.181411857 seconds)
  done (took 1.500152607 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.532247685 seconds)
  done (took 1.529781059 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.890126955 seconds)
  done (took 7.896415756 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.230422374 seconds)
  done (took 1.24258097 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.267180531 seconds)
  done (took 1.266436847 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.095826471 seconds)
  done (took 4.093360127 seconds)
done (took 48.003468565 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.079145943 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.083128507 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.105858046 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.08103157 seconds)
  done (took 1.342860834 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.079032036 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.075051249 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101869865 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.074733669 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.102735499 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.075218648 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.099896665 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.079767264 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.073879161 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.098678148 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.07550835 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.097340613 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.077927978 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.100092748 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.072716169 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.077739765 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.101543766 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.074791982 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.10107701 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.075724813 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.073114934 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.099592585 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.07822857 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.096753893 seconds)
  done (took 3.068527907 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079205261 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.075734867 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.099147677 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.074107316 seconds)
  done (took 1.332361011 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.079151442 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.117094166 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.091428963 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.078459304 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.117617078 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.111745455 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.07272094 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.072026031 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.097057446 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.078782811 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.093021162 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.09956138 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.112238257 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.079117358 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.103731659 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.068161753 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.07052002 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.111479428 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078939726 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.102153152 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.073138273 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.080989551 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.092767572 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.091847471 seconds)
  done (took 3.183639241 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.078142045 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.104762672 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.103371273 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.090920986 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.11664428 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.066968777 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.101403146 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.092307412 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.150162474 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.067409394 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.095628122 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.067399829 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.097810431 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.066965372 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.078295295 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.133045684 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.112772586 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.093531164 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.099265509 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.091248263 seconds)
  done (took 2.921743988 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.076708908 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.07117197 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.090191663 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.070375504 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078104058 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.098338543 seconds)
  done (took 1.495401862 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069116907 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068517486 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.092339333 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.068470399 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073726998 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.091290494 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.067666442 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.069265956 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.092052373 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069116562 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.06777667 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.090116473 seconds)
  done (took 1.930849109 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.43191489 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.070788989 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.09398827 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.067475332 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.072658526 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.091308842 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082355905 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068973265 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.115962302 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.068394004 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.092450022 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.070456415 seconds)
  done (took 2.340903248 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261695028 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078821042 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.322621865 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168718738 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141773426 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156520647 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105324638 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140928119 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.199260156 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138883549 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200167357 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223674381 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135475709 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168261133 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116201933 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.132966994 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186117372 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221958232 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106832187 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223960889 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20716768 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156368616 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179915456 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129306195 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135353199 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151353741 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.073083507 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106890842 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232041053 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161584197 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201143345 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139332972 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098984542 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229564752 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2250494 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195287901 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162809882 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086540041 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.157379066 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.165315178 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.254739756 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114997165 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194126784 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133995038 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107019632 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173508861 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146684626 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.146974815 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.137747105 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115597842 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174532377 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23945459 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.166787197 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113496049 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138401579 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14326914 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.144180664 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104562859 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266906561 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19548588 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15885562 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.097570085 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098962054 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21157923 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16071478 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.141891295 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.152725653 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120107787 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16755956 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.210626581 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147387665 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17312844 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.181122148 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090624033 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148071496 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.195816524 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157544096 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22789232 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154754236 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.074804256 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152572956 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130595636 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106601583 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.144542203 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101478098 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206540574 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125819771 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.139782967 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138789021 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136406344 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111288257 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218888939 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202843035 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130844627 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.067690396 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131917195 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.15075404 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17732262 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11496261 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135893904 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148163425 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.081476368 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190801533 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.077316123 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154250045 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.104975196 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153630571 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163117395 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.077574415 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155127919 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129117596 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.129690832 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164289246 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217929877 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091923275 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109495444 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227345621 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15674781 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.132961385 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176197929 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.214598597 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.102876127 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130988347 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205343889 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24195295 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.091305801 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223811349 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13522403 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085194065 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.11562407 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155823662 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140429667 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.150185548 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109253441 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.15503273 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200919294 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.10216392 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123279021 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166365284 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083908525 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108259375 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141057163 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128212086 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.09741221 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.128016561 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.134124107 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169934407 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179175403 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110365689 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178659905 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100995127 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226235801 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116203171 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.130942533 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10653699 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.097480103 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.16679762 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218770142 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082839204 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225964436 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.154707501 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132291056 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148687586 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085634543 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.195755288 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081378242 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.0729442 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200122337 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139497125 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138482141 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.185373709 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131919227 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.156642729 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.15215426 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162756626 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187167914 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.162888895 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133531814 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.090291612 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140765838 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153609447 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.100408949 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.121960675 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.08598905 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132256059 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123409193 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085494422 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197542071 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156369734 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099299379 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139973455 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125371019 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.20376592 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.079380928 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158332495 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.147931642 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12332191 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.20874515 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187108571 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165129454 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128369314 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20140101 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.073427129 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075834751 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.117879311 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155452308 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110695858 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085581001 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145487413 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.204524274 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157234174 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166404136 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13846906 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15042956 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.213489722 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.074151424 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.144545845 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179360201 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153738703 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.156376665 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114318745 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.101650772 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.199581532 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111816266 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270680491 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146428345 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155279824 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181921881 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.131824273 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082326608 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132483781 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193300674 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134496798 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.182060446 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12742104 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115166963 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112947437 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.108102717 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131031644 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155699404 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148783611 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189517186 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.14312607 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161588045 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083887226 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145605767 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150990245 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175440727 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.066594727 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148826927 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219748898 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097084951 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171764168 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187106837 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106545603 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.126903531 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235024808 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19980284 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085739531 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138577715 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150192339 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182933185 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147992747 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171412422 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139725544 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16617662 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138514512 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.087612429 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115241803 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126273622 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108932656 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.122542134 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.139706455 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.145046023 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.12268177 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160113078 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138937314 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13921526 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147499727 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.12545883 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.092931888 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125652187 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233462764 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151646837 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233247107 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.103538746 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.205458902 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22441395 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077504437 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107114482 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.083524928 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169326369 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111957917 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162065898 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.124006092 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13283288 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156807432 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173427064 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123232054 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.070271212 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138665917 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163404631 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139816394 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126050665 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.13360615 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195362139 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.130501112 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107263452 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154057419 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106866177 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131157322 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233241871 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.062995792 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124950351 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078185324 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10860868 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158106533 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212320395 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.08425296 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.154470255 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146868182 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14976986 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15825567 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128895857 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125461378 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14118126 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182162334 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156387175 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.118413832 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141027165 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159485159 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213610017 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134817235 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.097919045 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231039742 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211682116 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.19563134 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.116881658 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146219855 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144528202 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137692372 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168116328 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111777818 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225168087 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084749592 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192817819 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133803022 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095055734 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183932887 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.098897916 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116962633 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194144861 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147792346 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110153763 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106881769 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146670435 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15106832 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134888208 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.077333249 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168350724 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.100442819 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166116658 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228757058 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082959959 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135013229 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124422768 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108793219 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11038684 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130712653 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114490962 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.124305173 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225014107 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.119532918 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20792106 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173311251 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141953792 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194471162 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10168142 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.662293135 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.106843401 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185411568 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148909338 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23470232 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125137236 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147919091 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139567515 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152096359 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199684279 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134498276 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.177777795 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188153475 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.150992883 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082477139 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131803973 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140006445 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.118400207 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134868136 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143653113 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145597276 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.103293448 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.148603225 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180885392 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.08372624 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.124559154 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215080273 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145449576 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173797955 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170540253 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112656105 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148336928 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16800608 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10847223 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.151580135 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214876258 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136043405 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100527371 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.109413531 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.133957017 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231758026 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.075890774 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220355499 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153844617 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138625871 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142635301 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.149189957 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162360767 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136723961 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153520784 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124286237 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.140809859 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145068964 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112449666 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.080754649 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135381308 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13999584 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.127655588 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131152838 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.121364538 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210605643 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.073959848 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12481178 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130562527 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176413241 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23889497 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.089946116 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112083846 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148435285 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142849209 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.145264177 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154477019 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.110108296 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084471337 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.11064514 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.11569407 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.134334051 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14368514 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13082636 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13938763 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225337389 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.086177829 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.253419296 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122447761 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108229998 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.097385436 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.080781055 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123558942 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12600147 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136399303 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100454109 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232202997 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.123432098 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.09232814 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120890188 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.101245097 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085672346 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159486261 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13765783 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149475897 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126469422 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.064586082 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137919323 seconds)
  done (took 71.527348764 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.132649027 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.105090868 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.117878366 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.173943063 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.147102917 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.236677488 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.182181485 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.223036892 seconds)
  done (took 2.418437811 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.070745061 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.117344658 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.102339753 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.116209874 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.090968867 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069559023 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.290914926 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.110672921 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067850718 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.114389617 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.118399101 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.092132304 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.46731946 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.06868634 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.097830667 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.089053586 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068943197 seconds)
  done (took 3.239620058 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.423880727 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.628065047 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.449392563 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.076569897 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.888551716 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.108013559 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.377470146 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.161835046 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.091607583 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.429802754 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.728710749 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.148784251 seconds)
  done (took 17.609497373 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.076105343 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070726193 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.11048776 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084321966 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.099767856 seconds)
  done (took 1.539719229 seconds)
done (took 114.946269074 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081104218 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.346181257 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.054720208 seconds)
  done (took 1.533301335 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.08467506 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085675083 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.111286468 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.084879276 seconds)
  done (took 1.471865063 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.076065291 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077213513 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.111924113 seconds)
  done (took 1.366606972 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.277461507 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.16604424 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.089800352 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.08422747 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079269179 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.105679536 seconds)
  done (took 1.372619688 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.075237342 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.076675598 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.10043087 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.077939324 seconds)
  done (took 1.427246077 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.077571159 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053769095 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.056357603 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.082904003 seconds)
  done (took 1.374332201 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.090788192 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.107000639 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.082117479 seconds)
  done (took 1.380699034 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.107635764 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.113105814 seconds)
  done (took 1.324943168 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.0825665 seconds)
  done (took 1.182213612 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.093172839 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.141360423 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.155646518 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.136702688 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.165591302 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.13809897 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.087486331 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.114813167 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.105426201 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.089601753 seconds)
  done (took 2.331903307 seconds)
done (took 16.474781062 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078747587 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.393125574 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361539068 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.116958503 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.691126837 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357259478 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.005144352 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.119342011 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121064712 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094953894 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085278449 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.698410509 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.970824853 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.34627887 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.95780986 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.323202396 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.675588838 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06894069 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.094290044 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070120552 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.965905344 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.095375694 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069126121 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069532958 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.674592372 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372157144 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095930356 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.323395676 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068863615 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.096754014 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355777861 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095869793 seconds)
  done (took 16.00913147 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071395552 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.144285907 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074630347 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084420451 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.097575679 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070977958 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.099011634 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.07022605 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.153262889 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068398681 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111838858 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069274195 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.098285656 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.07005309 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087915896 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.095060253 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069532051 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069093432 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.094701188 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070135505 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112919994 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070122443 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06952313 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.095715124 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069015821 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.107561331 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070037053 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.06914647 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094970538 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071550329 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.098397292 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070151569 seconds)
  done (took 3.87398488 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115926821 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.152945398 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074723192 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.130061327 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114946138 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.097578481 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.170947865 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094261259 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.156072467 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069600984 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112598952 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069339234 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.128099676 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070183974 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114337216 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.07026699 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070257412 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.09620503 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069288007 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.095884932 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088298317 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094493204 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.07050381 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069727702 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.096104032 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083228332 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095168601 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069876876 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069556022 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.097934441 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073620347 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095047431 seconds)
  done (took 4.191809432 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.073833883 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.076580549 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.110477945 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084707374 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.09842353 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.073672952 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073896765 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.097973871 seconds)
  done (took 1.798588431 seconds)
done (took 26.979569591 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.080132966 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.071549961 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.100821265 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.082617278 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.100729038 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079791563 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.068925919 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.102999682 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.078324382 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.07429672 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.103096265 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068564784 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.098642211 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.069276686 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.075915245 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.096497674 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.080129433 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.099417296 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.080304629 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.107168756 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.071254867 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.078750812 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.102099518 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.080047949 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.107145838 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.081104499 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.110100696 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.075591766 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.070358124 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.097869332 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.078179417 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.114269831 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.070225628 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.08007346 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.09598368 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.070033911 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.069303161 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.096010641 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.081611284 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.102527962 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.072236317 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.101298753 seconds)
  done (took 4.729831131 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.089715336 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.089777002 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.115520669 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.074670883 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.101713515 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064677621 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.117683066 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.072746497 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.095090531 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.090084109 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.057003062 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.089204038 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.072362843 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.062995265 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.095132808 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.058656077 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.060952344 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.084823428 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.061723228 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.060802686 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.086149256 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.056249145 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.061569232 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064583822 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.083971474 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.064078216 seconds)
  done (took 3.146132709 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.076512907 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085841008 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.115653394 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.130573538 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.134312541 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079416253 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.10633131 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.089865509 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.115728247 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069439398 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.07292919 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.125457669 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089616447 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.102118464 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.069347466 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.115883153 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.083862814 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.070692978 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.101988249 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.092070122 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.111860198 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.080050007 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.122772747 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.083553337 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067986869 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.098783981 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073234441 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.109255847 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073714863 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.07907061 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.100636521 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072317034 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.097220286 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.080880051 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.075287101 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.098776322 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.09205946 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.105389611 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080655049 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069644694 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.099357589 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.070603151 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.116261937 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.113378894 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.097538033 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.076119404 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.077750444 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.105981798 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.070174807 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.114991927 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078033107 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.068767866 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.099556379 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068429127 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.095146201 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082642289 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.071539789 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.098891416 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077658005 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.098371807 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.081922424 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072672089 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.111529747 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068188809 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.102646445 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068465848 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.069718542 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.094401477 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.093275717 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069579629 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.137784795 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.071065204 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.097528772 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.077326978 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.103685 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074953543 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.069089018 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.110799769 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078659787 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.099733378 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077955379 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.072552068 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.098744141 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.089987779 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.097597261 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.071372442 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.070719536 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.101982055 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.07170371 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.096461043 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081950942 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068824045 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.098369977 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.085712011 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.094882435 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.070606366 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.07467419 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.100575253 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.069136857 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106693734 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.074533766 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069800863 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.104779802 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069607148 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.098464869 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.079408793 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073080386 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.094502869 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.075047304 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.101794836 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070942388 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070062987 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.098918423 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.071608597 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.079210392 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.102386762 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073341626 seconds)
  done (took 11.469480794 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.19254154 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.185785443 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.072463583 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.179153915 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.07777232 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.108324561 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.179414607 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.096358547 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.097505731 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.070144488 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.070243084 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.13136181 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.124303112 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.116595407 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.106151513 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.069626888 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.114730933 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.104883137 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.182355761 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.176247949 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.116799103 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.078426212 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070872751 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.097995651 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071625186 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.105846443 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085637161 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.104078317 seconds)
  done (took 4.322295877 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.08334741 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.138442994 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.075784206 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.09355367 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.120904511 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.070682845 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.102165304 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.071125529 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.10963079 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.081114428 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.096556814 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.075080408 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.076015899 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.106418662 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070397198 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.106440162 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.078812985 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.071134795 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.099337461 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.075295576 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.108740835 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.082619255 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.100307277 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.069869835 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.075021621 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.09629778 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.066028071 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.114761957 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068760582 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.119726799 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.068407628 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074661735 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.115542833 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.06943477 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.096254455 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.073035954 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.071925804 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.099907166 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070943157 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.068022715 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.09529405 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.059224429 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.068199065 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.10850595 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.075718914 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.087713845 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.075318395 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.101724995 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.074899005 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.066711684 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.098976249 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071527726 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072218964 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.110350643 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073555389 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.101357553 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.073745151 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.067290953 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.104773415 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.072529236 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065611122 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.094718059 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.074093771 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.095261085 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.077626273 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.074085433 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.095531594 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.072773684 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.075171311 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.102771852 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.07235759 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.098633052 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.067907689 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.071541206 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.102604151 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.074703752 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.073937456 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.094755048 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069333147 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.096626474 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.057609936 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069621551 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.055767113 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.099442411 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.067711018 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.09501371 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.072686459 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.075644418 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.1103022 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.070955513 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.102251074 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070821795 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068111745 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.099499209 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.065274429 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.099061518 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.087459511 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.112482867 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.069354438 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.067601102 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.113396813 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.074413685 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.096296494 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.058369559 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.076198737 seconds)
  done (took 9.992726128 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.098181843 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.093072136 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.09908625 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084731696 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.12610603 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.094365753 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.103864944 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.074867875 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070233846 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.113691108 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.06889483 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.104845981 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.070073324 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078427907 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.126900666 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077606527 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.098310464 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078917323 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.073142829 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.136991488 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.0853222 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.110581122 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.083270406 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.096924717 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.073664464 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081131104 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.124979709 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.081907551 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.10797143 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.087616063 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.082085082 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.124465912 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.087756541 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.100241436 seconds)
  done (took 4.347512657 seconds)
done (took 39.116994948 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.223119316 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.404111781 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.186822799 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.061397011 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.220015381 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.217125786 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.199977233 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.196666645 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.32869569 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.193538117 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.415566363 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.78878579 seconds)
done (took 58.57257679 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.288894395 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.33385932 seconds)
    (2/2) benchmarking "String"...
    done (took 1.48403631 seconds)
  done (took 3.952245411 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.551297536 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.14259839 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.468644437 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.186253557 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.187454362 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.618653931 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.816909022 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.02875794 seconds)
  done (took 27.583140979 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.196550174 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.548480977 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.476069885 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.488717898 seconds)
  done (took 17.844612591 seconds)
done (took 59.354980864 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.220609959 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.259978519 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.224882546 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.175189812 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.31283632 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.222044009 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.483504585 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.393146953 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.189030209 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.178407732 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.207277916 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.189037009 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.203795295 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.468162912 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.191560961 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.19510731 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.228284527 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.621354616 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.563016044 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.192253263 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.203951395 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.237444402 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.19633422 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.199378487 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.201136549 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.190575454 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.189905456 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.196713184 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.383438652 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.19168007 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.278308095 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.613340856 seconds)
  done (took 190.936786062 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.189245891 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.195367373 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.295574123 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.252860459 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.633768997 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.393238245 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.32678184 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.705650047 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.207104845 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.220388591 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.460900965 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.190764835 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.525608112 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.155731096 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.200023341 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.290004622 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.379183899 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.489652692 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.205987558 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.461789097 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.217218788 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.407920852 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.307845141 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.390878795 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.213988824 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.206604601 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.205995881 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.21812535 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.384500221 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.323174073 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.231531978 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.213374443 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.756112786 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.053576172 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.198301847 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.2213561 seconds)
  done (took 149.466645051 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.462104923 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.190871729 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.190332572 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.191240386 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.220802058 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.191819546 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.7143556 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.718084221 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.700227621 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.268812387 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.251863938 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.417635107 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.194970223 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.283103325 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.20471668 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.19649096 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.206613306 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.217709167 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.193884801 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.192068055 seconds)
    (20/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.191681442 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.714599908 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.207326844 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.198157645 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.193473172 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.221825328 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.586729311 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.208539185 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.195359295 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.222285388 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.506356734 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.235467241 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.19312193 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.485278157 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.988947868 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.299115653 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.194058302 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.221905848 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.192530208 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.459917445 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.193010501 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.192658154 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.193262283 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.197205381 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.764956624 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.195406941 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.716720269 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.195221261 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.052704163 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.193238815 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.193068936 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.688463188 seconds)
    (52/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.195797926 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.580496835 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.193085532 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.193340499 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.195991229 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.194059839 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.193822831 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.223953772 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.695448597 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.290934197 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.193594005 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.197200723 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.223664264 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.19354537 seconds)
    (66/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.193952433 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.193577523 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.42694486 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.251502694 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.303113929 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.914031518 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.719158589 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.197271254 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.285078564 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.311886127 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.193965662 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.195075704 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.194510262 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.195152215 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.298931747 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.195132114 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.585309967 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.20115137 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.195748111 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.253566774 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.286850218 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.19459237 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.471938475 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.198210736 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.195403191 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.875459106 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.286721913 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.195135588 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.194707148 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.194365364 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.585377815 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.722950776 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.35068003 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.199335885 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.771308081 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.198952509 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.594567586 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.700979402 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.783868578 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.199168331 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.301990478 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.199924038 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.19718403 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.195401395 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.225874269 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.196871952 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.254063243 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.198432132 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.590590073 seconds)
  done (took 344.013367724 seconds)
done (took 687.015012101 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.866372674 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.849307669 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.963775537 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.851967257 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.824521613 seconds)
  done (took 10.497975683 seconds)
done (took 11.639997529 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.373549639 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.374765105 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.254453126 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.375129276 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.227439014 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.392079472 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.355357598 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.217405761 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.294657154 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.271517959 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.294253986 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.246286938 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.222681389 seconds)
  done (took 18.043166164 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.489127485 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.490054732 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.263159704 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.488582942 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.239222863 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.497660153 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.382331897 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.392212931 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.379438912 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.214154196 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.212821935 seconds)
  done (took 16.193081971 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.495173417 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.48688222 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.265736183 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.496355804 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.239912764 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.504864245 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.384407182 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.393346728 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.382586343 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.214552846 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.212465394 seconds)
  done (took 16.219346927 seconds)
done (took 51.597913288 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.208608037 seconds)
  done (took 2.352506617 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.23946553 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.401566651 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.223611279 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.211227946 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.20870195 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.210117677 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.212803728 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.208483949 seconds)
  done (took 11.061061095 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.208415104 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.209419632 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.208917568 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.205784023 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.208131542 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.208578377 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.208446745 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.208890341 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.205983638 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.206817714 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.206023357 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.20596288 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.205224477 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.206181837 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.20658295 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.209255865 seconds)
  done (took 20.463283252 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.207792316 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.206113323 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.206984135 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.206685795 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.207597933 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.20597302 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.207127107 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.206108333 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.20673672 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.206714449 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.207178262 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.205960292 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.207187765 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.206625054 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.205825762 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.206904591 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.20635571 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.208107774 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.211534416 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.207430902 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.208453895 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.207776569 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.208741776 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.208088145 seconds)
  done (took 30.122248111 seconds)
done (took 65.143146787 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.210727654 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.841222352 seconds)
  done (took 9.198038328 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.210700871 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.210788048 seconds)
  done (took 3.570972069 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.209916823 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.211140684 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.210049466 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.211323468 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.209801308 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.210361015 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.210568767 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.210240453 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.210083798 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.209890742 seconds)
  done (took 13.251079616 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.209773845 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.211097783 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.20854184 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.210792337 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.211100858 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.208752065 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.210770174 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.210732326 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.210811662 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.208729036 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.211885528 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.209163416 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.211369305 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.209231971 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.21027085 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.209123939 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.209573985 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.207867597 seconds)
  done (took 22.926928577 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.211871413 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.211098724 seconds)
  done (took 3.57111609 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.2090848 seconds)
    (2/7) benchmarking "second"...
    done (took 1.209256468 seconds)
    (3/7) benchmarking "month"...
    done (took 1.208930769 seconds)
    (4/7) benchmarking "year"...
    done (took 1.209518295 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.209611305 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.209640425 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.20981776 seconds)
  done (took 9.613848388 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.212290515 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.382350338 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.457006408 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.792555563 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.2129185 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.21537918 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.070009819 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.216017389 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.218012276 seconds)
  done (took 13.923930211 seconds)
done (took 77.202030144 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.194179264 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.20503748 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.106932347 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.21318664 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.238003323 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.546957564 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.207515809 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.322638135 seconds)
done (took 37.184051748 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.206811566 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.906898985 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.94596526 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.20707413 seconds)
  done (took 11.209790932 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.201696813 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.114824225 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.203949317 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.222176924 seconds)
  done (took 17.895837554 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.808849749 seconds)
    (2/2) benchmarking "read"...
    done (took 1.541153774 seconds)
  done (took 4.500698687 seconds)
done (took 40.962869341 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.213944834 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.212004573 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.21350152 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.214432473 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.211501902 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 1.213307099 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.21394278 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.211671429 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.211933866 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.214319978 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.213824245 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.214376885 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.214934849 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.215117946 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.211545401 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.211092045 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.214479639 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.212150999 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.211610759 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.212048071 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.21527574 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.214956735 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.210942666 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.211338413 seconds)
  done (took 30.265177391 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.215125402 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.212680605 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.215129858 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.214589013 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.21363309 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.215483397 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.215853606 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.212883514 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.215683634 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.215942435 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.213824552 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.212885753 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.215471547 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.214764396 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.215514886 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.214121052 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.215292772 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.21287609 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.215978669 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.213622609 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.216305534 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.215020739 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.214026472 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.216695924 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.212788542 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.213424868 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.217107614 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.214496706 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.21673332 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.215326788 seconds)
  done (took 37.595155361 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.22088896 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.223035935 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.217043059 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.216565827 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.216704702 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.217204454 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.217226126 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.217143763 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.216355101 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.21650175 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.215938766 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.215553158 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.217276903 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.21665111 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.217462109 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.217716226 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.21642924 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.216932405 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.216996959 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.216993043 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.217445008 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.216559254 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.21749865 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.218443791 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.217184008 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.217289922 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.217059716 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.217702171 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.216398367 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.217917977 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.218246334 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.218963482 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.218269409 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.218672343 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.218237684 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.21793823 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.221935008 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.224734818 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.217967164 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.218320712 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.218229896 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.218475947 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.218961155 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.219079071 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.217105388 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.217807764 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.218662644 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.218944404 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.219658429 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.218483696 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.2179842 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.217781004 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.2174181 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.218667841 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.218477137 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.218945115 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.220424723 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.219089904 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.220200785 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.219522538 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.21916632 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.219620535 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.219826118 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.220151053 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.22178887 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.219293745 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.219623721 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.220300796 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.219873621 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.21998525 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.219636883 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.219528306 seconds)
  done (took 88.881848536 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.220589658 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.218375227 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.217609211 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.217353496 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.217009398 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.220132776 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.217174899 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.220482761 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.217845575 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.219618135 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.220473419 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.218440237 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.217344611 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.220551688 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.220304077 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.218950971 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.220259879 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.217623605 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.22137087 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.220670717 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.221234151 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.21786829 seconds)
  done (took 27.979333248 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.220650957 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.222977813 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.218226594 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.220889663 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.218938568 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.221162969 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.221437052 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.221152265 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.221782811 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.220202864 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.219016444 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.220441703 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.21882057 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.218661185 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.219156622 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.217905939 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.221580796 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.219193794 seconds)
  done (took 23.119550402 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.2187063 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.218815016 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.221966688 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.21991873 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.220055669 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.221726918 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.220361512 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.222434686 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.222116969 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.218871106 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.222162738 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.221917636 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.222689345 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.218840539 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.223208735 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.220297763 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.222109489 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.219586306 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.223296449 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.220250399 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.220956586 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.223689974 seconds)
  done (took 28.022441168 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.223323097 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.223583831 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.220121757 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.220831287 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.220081603 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.223315808 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.222709858 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.220847582 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.223976944 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.222112611 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.220802931 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.22284025 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.220614253 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.221790415 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.221071504 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.220666704 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.224905312 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.221701114 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.223537047 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.221462814 seconds)
  done (took 25.600609324 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.223006455 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.224294282 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.22431947 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.225230915 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.224767484 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.224534028 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.223938347 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.224075019 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.223743489 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.224365344 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.224313787 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.224872089 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.224140602 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.224168779 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.224456059 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.22432524 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.223845663 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.225987419 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.22478317 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.225108994 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.226431937 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.224438083 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.224431884 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.225228752 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.225635508 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.225608924 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.22547119 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.224948782 seconds)
  done (took 35.451869393 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.225437689 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.225514961 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.222799763 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.223327956 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.223638111 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.222184122 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.223688675 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.224670239 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.225221395 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.222422216 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.225187023 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.225733368 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.227033247 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.225129854 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.226455565 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.227060057 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.224679342 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.224767441 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.223394255 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.223184578 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.226279047 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.225139257 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.22635876 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.224527111 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.223361172 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.226594701 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.224666539 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.22506387 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.226644153 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.224409154 seconds)
  done (took 37.908292045 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.244803085 seconds)
    (2/2) benchmarking "in"...
    done (took 1.24721089 seconds)
  done (took 3.654750321 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.22504415 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.227724561 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.226705401 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.224987563 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.224105202 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.228026926 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.228937969 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.224836665 seconds)
  done (took 10.974156222 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.224824597 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.227790506 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.22836176 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.227184859 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.228324197 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.227815393 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.236304541 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.243767649 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.228013551 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.228316279 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.231713626 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.233572371 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.231649148 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.22810951 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.227170846 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.230677797 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.227834781 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.227294453 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.227446911 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.227720642 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.227968727 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.231171139 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.230480272 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.226125536 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.228168438 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.239749601 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.234086028 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.229449343 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.227077132 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.23410983 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.228260721 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.225702475 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.227626601 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.228621759 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.228996878 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.228470574 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.239594677 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.247116569 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.235929569 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.229581079 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.229580937 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.227148574 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.229769357 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.231076146 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.231074826 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.229146566 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.231609763 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.227364024 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.228386507 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.231022541 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.235066795 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.228534804 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.22690241 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.235092113 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.232824952 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.238172987 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.246346486 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.231397388 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.237854691 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.242170118 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.244552729 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.236987699 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.232851163 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.230849935 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.2391263 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.253229157 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.239682492 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.245188824 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.22852888 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.231449469 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.241584423 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.245640961 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.240623898 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.230819776 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.231533606 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.231872069 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.230865014 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.23195436 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.241957652 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.251744737 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.231748427 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.231310608 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.240600682 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.251264734 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.230849878 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.232628122 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.230971222 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.23098924 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.232380529 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.24312545 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.247819996 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.233039554 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.230867233 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.231525726 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.235040121 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.231423782 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.229868975 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.233153751 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.230250233 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.232026052 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.232318186 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.234744348 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.2418082 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.233184196 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.232025544 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.241452197 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.233952635 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.231636547 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.244232811 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.233601508 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.233661993 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.233833401 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.240347641 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.230643662 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.234871121 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.240664201 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.232728228 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.234725101 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.234009866 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.234735435 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.241995529 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.259634759 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.23414959 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.233933737 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.237609008 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.24342551 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.234270014 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.237848992 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.234363065 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.232216767 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.232693135 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.235674984 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.235510203 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.235719029 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.23487251 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.23637957 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.232148949 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.235646387 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.234570612 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.235406546 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.235874072 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.235418806 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.237226032 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.238971434 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.234700645 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.236952139 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.243674397 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.235920315 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.236249268 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.236350219 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.232805549 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.236448532 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.236830051 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.235450462 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.236165017 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.23572745 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.233457469 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.236031302 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.236631764 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.239089387 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.236871599 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.235952364 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.239382751 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.236860366 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.241432911 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.234669443 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.234741812 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.238552964 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.237344505 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.235981121 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.237485332 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.234814049 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.238298507 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.243297724 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.237391921 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.238330348 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.239837916 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.236203976 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.236094507 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.236071397 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.239269746 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.24405131 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.237259081 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.24663962 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.238102556 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.237680039 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.238253259 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.236642311 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.23645991 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.237511924 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.240114575 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.245220341 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.25156231 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.246354325 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.23785635 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.242096874 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.238337067 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.240876555 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.24313812 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.238404067 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.238299374 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.237284473 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.236666029 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.238561429 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.240686122 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.237570261 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.236788826 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.238890663 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.239045801 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.238315681 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.23900039 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.238915911 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.240123362 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.236954016 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.239625035 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.239002135 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.237620203 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.236667439 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.238732988 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.237575415 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.240586872 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.239103019 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.248983462 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.238256508 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.240484627 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.240694111 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.238576997 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.237421144 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.239519166 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.241952004 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.239564062 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.248838049 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.25687294 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.24083669 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.248434407 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.255329183 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.238723044 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.243030753 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.239936521 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.238953081 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.242149276 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.24737406 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.241030188 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.240998671 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.239818123 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.240742599 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.24202398 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.249826803 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.238913037 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.239908287 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.241609507 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.243572186 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.238631887 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.241442605 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.241827249 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.241515967 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.245449309 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.241799639 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.241519752 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.242197598 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.241131728 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.240842271 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.240373893 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.243483921 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.248067084 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.247576924 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.241847268 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.244485382 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.241587264 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.245498213 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.241571333 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.241296148 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.240119205 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.255874366 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.25015463 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.250052317 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.243831091 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.243003631 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.248333667 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.243283108 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.245767104 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.241246819 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.242072007 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.241729231 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.241065309 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.241098453 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.243598174 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.243547675 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.242765643 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.243056708 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.246698312 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.243933524 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.241444926 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.243001238 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.24163517 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.244299446 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.24196728 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.243695526 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.24613632 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.245012849 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.24245711 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.243003351 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.251328673 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.259734043 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.244558682 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.243274892 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.242172489 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.242066556 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.244746191 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.243418984 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.245806068 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.250855024 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.245898772 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.253178374 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.243979002 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.25525786 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.244370153 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.247222484 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.250730918 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.241959719 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.242561664 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.24358355 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.243774049 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.252453522 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.261723887 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.244291924 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.247883276 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.243937823 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.24317822 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.244981059 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.244624171 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.244956173 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.244186077 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.255828273 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.261478796 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.248356402 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.247345583 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.243244954 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.244754639 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.245832036 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.244133578 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.250969334 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.244727087 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.246170367 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.245057961 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.246086138 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.246156128 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.245688101 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.24651389 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.244116732 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.246426403 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.254343591 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.262162301 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.248752324 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.24571317 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.257142227 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.246061721 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.255333957 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.262206378 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.246354237 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.246326683 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.247042381 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.249036952 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.24626654 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.247641746 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.246446595 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.246470338 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.250086209 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.246260791 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.249971285 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.247049553 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.246659126 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.246347312 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.255405113 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.26909386 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.248453876 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.251390851 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.244385592 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.247914569 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.250968867 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.246740876 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.244997973 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.248142822 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.255572682 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.255454066 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.24755289 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.246867447 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.247503271 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.247151696 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.248146262 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.248917547 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.246851471 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.247766986 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.248887951 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.247651374 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.25383823 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.248466342 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.248928821 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.249777619 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.248708275 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.260254363 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.248710488 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.249091757 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.247954334 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.249379919 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.249004613 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.248457251 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.248968222 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.250258524 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.248973529 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.250005312 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.254098636 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.254386447 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.251889273 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.24777602 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.249298357 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.248967113 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.250324702 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.248626288 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.248842886 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.250298028 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.250975688 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.248908605 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.251395876 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.247765498 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.249802245 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.250663411 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.249690015 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.251501881 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.254172208 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.24877387 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.247741454 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.250702971 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.250202248 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.24818936 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.250636314 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.261236769 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.252909546 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.259518422 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.257570889 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.252285211 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.252002611 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.252418991 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.257420109 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.248487189 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.251135796 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.249286959 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.253007923 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.25056072 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.253149687 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.250416693 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.259814131 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.251016758 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.250966766 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.261528375 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.268156546 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.251127123 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.252108821 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.254364 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.250811588 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.249624471 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.252394021 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.249826756 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.260203301 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.270652471 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.251462786 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.253640977 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.248866477 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.252899156 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.254822518 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.252508706 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.253231671 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.250462227 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.252336676 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.251324827 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.252645513 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.249277373 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.251688931 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.252684064 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.253712734 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.258604835 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.25009541 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.254735605 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.252137211 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.254044676 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.25234523 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.252282215 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.251311007 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.250492183 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.252900097 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.252147888 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.253094851 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.255139703 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.252318003 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.253151257 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.254174924 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.252879684 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.255866948 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.262166778 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.261280832 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.250871465 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.251604119 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.252714349 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.2575392 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.253302194 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.252483699 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.253582833 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.255505261 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.252916352 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.25300099 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.254035199 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.255713159 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.272704617 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.271292439 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.254025183 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.254391617 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.259406333 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.255581362 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.251958105 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.254974825 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.257422879 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.25691681 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.261149457 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.253752351 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.262596485 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.270645718 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.25490869 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.258305714 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.256593815 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.26211309 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.257905861 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.253877159 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.254585643 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.259859366 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.272181946 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.256819867 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.264959316 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.287577751 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.272474329 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.256401691 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.254475358 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.254727586 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.255280805 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.258519318 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.256562022 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.256156187 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.256140099 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.255360504 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.256910672 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.261776905 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.257267525 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.256031041 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.256705061 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.256923689 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.258645226 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.253732466 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.25661632 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.257019102 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.255729856 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.255739019 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.25668576 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.256905515 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.271333191 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.268230379 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.258703657 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.257153784 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.254625193 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.261625145 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.259110225 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.266013255 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.26541038 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.256738991 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.257461938 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.259484539 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.25742909 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.255610657 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.257409479 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.258072355 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.256536469 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.255330047 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.272505057 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.266605643 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.263867119 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.258322924 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.258746749 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.258420045 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.258658898 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.257557843 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.257831954 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.260526127 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.258715362 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.261786868 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.257324209 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.259351943 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.261245973 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.265788575 seconds)
  done (took 743.405148923 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.256400714 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.256909712 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.25680742 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.256488752 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.256718181 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.256933652 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.256786529 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.257081037 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.25688791 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.256646317 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.256949966 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.256462198 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.257355425 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.257654407 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.257793267 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.256885117 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.257411622 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.257350743 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.257243867 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.257383006 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.257301435 seconds)
  done (took 27.591397161 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.259759012 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.257414022 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.257950926 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.259853084 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.257483575 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.260203295 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.257667381 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.259902268 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.259681269 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.257380513 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.260925702 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.260821752 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.258158238 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.257583583 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.257770418 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.260697528 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.260954493 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.258187409 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.261557157 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.259502195 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.261638374 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.258298289 seconds)
  done (took 28.898608476 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.260410669 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.26157027 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.260124968 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.258370125 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.261911787 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.259537623 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.261167191 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.261821669 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.262481265 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.263091541 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.259557265 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.261252617 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.267117596 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.26555634 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.263619708 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.262431007 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.406567411 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.262108185 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.261272601 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.26147959 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.259392518 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.268897279 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.259655512 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.259909876 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.260443595 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.26100237 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.262668286 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.262625931 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.26119124 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.262208982 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.265903041 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.262130047 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.260622024 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.263348764 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.261472621 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.263715334 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.265836426 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.262904266 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.260149456 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.263497903 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.271620818 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.28380005 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.26294475 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.271879198 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.263647632 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.263743952 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.265659587 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.269515619 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.26101201 seconds)
  done (took 63.24055855 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.263537967 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.263957696 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.261792466 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.263691992 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.264470766 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.264471057 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.263963699 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.263267083 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.261536101 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.261811722 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.263970505 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.26168 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.260820144 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.264295146 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.264742499 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.261416954 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.262242671 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.260801339 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.262312272 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.261815077 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.261947757 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.263624517 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.265385827 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.262559102 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.263422332 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.262493252 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.262879254 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.265243437 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.263329943 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.262151322 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.265214201 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.26467302 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.264478517 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.264315429 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.26252736 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.265132663 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.266386379 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.262854789 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.265812792 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.264294238 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.264917419 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.26558459 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.26631961 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.266538352 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.262075294 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.263192425 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.263480212 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.2650359 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.264215209 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.267231972 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.265670418 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.263880337 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.266283887 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.263571435 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.266896739 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.266407187 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.264265555 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.264182907 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.266884094 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.26454453 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.264096709 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.266534068 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.264145205 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.266479356 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.266323457 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.264222369 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.264218015 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.266722687 seconds)
  done (took 87.159857278 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.266672004 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.266691778 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.266121658 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.266245389 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.266500942 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.265976544 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.266287218 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.266559353 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.266395918 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.267202004 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.266484836 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.267542137 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.266683493 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.268309865 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.267398461 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.26665917 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.266860652 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.266333208 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.266641797 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.266658216 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.267737863 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.267793763 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.267535772 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.26662885 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.268106178 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.267516962 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.267599001 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.267471886 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.267298407 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.267787638 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.268659425 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.268050715 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.268530615 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.268418345 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.269145798 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.268124282 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.268001164 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.268885625 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.268478317 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.268858127 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.268193531 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.269758152 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.268492369 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.268941124 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.268988865 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.269286021 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.269407717 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.269093955 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.270126867 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.268838095 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.268380036 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.269297403 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.269193337 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.268899406 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.269094333 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.270072323 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.269607721 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.269656578 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.26964072 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.269540395 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.268588259 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.270631894 seconds)
  done (took 79.82247335 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.269965115 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.269784378 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.268200045 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.268838241 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.271489162 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.268442899 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.269970996 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.270224015 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.270420599 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.27054131 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.270922132 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.268123673 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.26791483 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.270633981 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.268158093 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.268151858 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.267954049 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.268032894 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.270860844 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.268415807 seconds)
  done (took 26.591937237 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.268137942 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.271522986 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.268560374 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.269281364 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.270840037 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.269129349 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.270689434 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.271130738 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.268744046 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.271785201 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.271425224 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.271500382 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.269001652 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.269886183 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.271033775 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.269681731 seconds)
  done (took 21.528187643 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.268713917 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.272649932 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.271380162 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.271576014 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.269566975 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.269687183 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.271624065 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.269525834 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.270225347 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.272565621 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.272269048 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.272541014 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.272217873 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.271679662 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.271107913 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.2729932 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.271077915 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.271398606 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.273923686 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.272029658 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.270500915 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.271519114 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.273171895 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.274047528 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.271556113 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.271670629 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.270821142 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.27127211 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.269863982 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.273908653 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.271212081 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.271065364 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.270497773 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.271697667 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.273461898 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.271067653 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.274118283 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.273875429 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.273955141 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.272941883 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.274463054 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.271378049 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.273550152 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.273784168 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.271670489 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.274778907 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.271778167 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.272302791 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.271555419 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.272902752 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.272898272 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.273814273 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.274044436 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.275321456 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.275119253 seconds)
  done (took 71.178094601 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.273949722 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.274905659 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.272646098 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.275268327 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.275474677 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.273168229 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.275106762 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.272985528 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.2726755 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.27581029 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.272997031 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.276315609 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.273462726 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.275842139 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.273864103 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.276200952 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.272563393 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.273379817 seconds)
  done (took 24.145349263 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.273651835 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.27405976 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.27579014 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.272989791 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.273191397 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.275960216 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.273775446 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.276034114 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.275550896 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.274507633 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.273164308 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.275934333 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.277234669 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.27638792 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.273490108 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.274198948 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.276559751 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.275975053 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.274793807 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.27380797 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.278030096 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.276420886 seconds)
  done (took 29.261557632 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.275011804 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.275040172 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.293510544 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.318878777 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.306243633 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.275098718 seconds)
  done (took 8.95513668 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275796475 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277571026 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.275323923 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277740363 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27775177 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27499637 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275061829 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275235191 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277845326 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27596969 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27630422 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278541678 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278035802 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275616611 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278063675 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277765525 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275365646 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276106095 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277362221 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278574882 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276021144 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278867649 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275768802 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275960313 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277040126 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276747036 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278101085 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276554638 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275498168 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279386044 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279130539 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276323855 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279680319 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277042867 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280080019 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.27888734 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276446138 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278936767 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279273484 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276788294 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.279859196 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279658295 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278926053 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.277146632 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279810873 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277099568 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276707676 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277593879 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277485263 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279772763 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279723297 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.277823223 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279655127 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280347216 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280666167 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280277143 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278135147 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278000286 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279708216 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278414289 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27764822 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279984985 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278463298 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27937303 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.2802302 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279105534 seconds)
  done (took 85.553382164 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279269015 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.278804821 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.27750067 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280346409 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278172984 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278332709 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279495057 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27925805 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278500144 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278981555 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280794447 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278636091 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27889651 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278444516 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278885077 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278384297 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279269982 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279479905 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279109657 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280663205 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279877162 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279510765 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279423445 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278882891 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279534713 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281964591 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27910182 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278983046 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279378414 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27998321 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278589378 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279400774 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28030909 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.279793139 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280152123 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280249239 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27954698 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28055402 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280736583 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.282270134 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279545278 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.282541024 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280676368 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280575683 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.281191259 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280658353 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280805317 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280223337 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280415321 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280666661 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280009023 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.281104805 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281744877 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.280587338 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28110215 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281719876 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280801686 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.2814911 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28064531 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284263854 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.281363559 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281853 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283472822 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281986434 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281331241 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281726261 seconds)
  done (took 85.708108185 seconds)
done (took 1733.643104378 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.368580085 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.283278868 seconds)
  done (took 13.869256673 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.443653906 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.395092332 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.281330512 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.310379838 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.281897265 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.27914685 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.299743482 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.281696346 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.282161409 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.281596338 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.283330426 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.466824445 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.274929245 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.281461166 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.282935161 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.373656493 seconds)
  done (took 42.3205816 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.309577529 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.289415046 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.397792845 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.306567586 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.309772032 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.466195281 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.340435134 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.28879501 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.453002808 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.325919209 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.812022454 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.309538384 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.286817081 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.366512645 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.303200969 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.466122167 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.525526207 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.812966525 seconds)
  done (took 29.588966995 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.726686762 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.291300854 seconds)
  done (took 9.236881486 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.279975479 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.285009469 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.298606885 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.313480777 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.307198341 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.325427151 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.310069037 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.336108603 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.316552451 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.299172471 seconds)
  done (took 64.292619118 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.305369286 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.286689449 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.287833612 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.285623211 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.277753042 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.278773151 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.285389641 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.283425962 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.882298432 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.408960982 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.30063757 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.294284416 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.286812632 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.286900102 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.285375828 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.321813934 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.415311968 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.285390633 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.285657486 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.292443853 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.287119159 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.412036648 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.327081438 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.286357537 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.409141806 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.881425185 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.292791035 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.293611343 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.407132635 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.286482549 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.287413513 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.288851017 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.289089351 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.849080327 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.787379771 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.308908725 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.310600115 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.296458381 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.286740724 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.465742408 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.289292156 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.298813487 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.279540285 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.760849593 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.444219555 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.400273042 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.568989158 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.290321728 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.289528872 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.351024187 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.289149147 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.29112074 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.316785548 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.036894585 seconds)
  done (took 108.821468313 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.306965507 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.78057851 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.450683681 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.30585643 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.075319072 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.939401795 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.2841276 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.563191427 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.337061113 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.281651427 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.610916325 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.785394157 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.287521393 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.294830687 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.387966056 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.376869517 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.282169304 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.047253553 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.286757732 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.284835303 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.695867964 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.299833631 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.287021965 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.337577312 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.321194392 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.753921189 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.770744054 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.74629229 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.288627006 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.282267394 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.749473404 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.292902035 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.369102656 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.286749508 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.557354017 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.652010661 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.631711012 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.28869945 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.298908963 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.287774482 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.314435266 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.752612666 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.641614944 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.286153881 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.28526502 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.757976229 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.287032047 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.288151108 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.289881369 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.483423297 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.273019802 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.28418843 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.747735817 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.288433374 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.635011806 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.289589417 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.355791108 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.783346999 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.286759997 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.383904997 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.336662402 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.284069146 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.286659943 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.284220744 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.287664165 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.633414719 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.672609044 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.290370917 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.627804874 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.74469956 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.288008549 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.809222888 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.128637492 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.316183989 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.330432833 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.28653139 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.859337376 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.782020867 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.327710503 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.286346713 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.622268362 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.292913863 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.603237798 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.30390078 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.286038763 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.707475932 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.303598508 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.31167144 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.285703295 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.28877141 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.906094887 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.288460287 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.568951431 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.324783556 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.285744605 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.286988309 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.307128558 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.285378096 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.286759258 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.290169604 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.81292905 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.2914631 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.590538777 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.305364427 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.287785273 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.289242569 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.286656658 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.287642664 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.502720642 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.74113679 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.292798744 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.288240795 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.287275439 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.287418046 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.598817706 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.290293202 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.58934215 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.287421416 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.291109065 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.305782824 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.012007245 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.312413746 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.288016402 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.287806106 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.138298572 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.498274084 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.305454898 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.287782321 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.287759721 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.301539424 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.631114962 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.288582883 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.332517097 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.293041171 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.988264101 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.318869769 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.323272505 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.934615935 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.290752158 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.263509878 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.31567464 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.289890748 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.592857933 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.567213522 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.609908947 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.289215482 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.306276281 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.991185803 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.292958439 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.422326927 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.307041792 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.293133938 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.486707479 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.500534708 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.290780981 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.867896179 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.288701398 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.501416405 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.290142215 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.604503416 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.780780845 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.293491174 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.29829009 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.993504826 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.962622314 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.923742242 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.290679981 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.620463973 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.303838602 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.752938769 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.289719265 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.290317307 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.732067955 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.291466687 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.291675929 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.291057825 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.291027608 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.355875527 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.464944004 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.777922828 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.290688732 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.762241887 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.314740903 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.289865356 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.2943621 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.294179636 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.64408314 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.37213252 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.293223642 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.308259267 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.292207449 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.299100636 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.775448868 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.186711372 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.292247188 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.444846611 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.922623194 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.29544887 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.292550159 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.962535971 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.600214434 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.810420532 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.340743275 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.61048739 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.299623189 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.331550736 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.025381858 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.306205672 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.776677618 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.298326813 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.291832792 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.895441413 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.295029546 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.344365947 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.292939494 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.293756376 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.828474481 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.295077007 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.292987929 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.710389284 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.295881092 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.53755369 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.293496475 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.301843595 seconds)
  done (took 1101.511519819 seconds)
done (took 1370.859011842 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.29314655 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.29306521 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.28489396 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.299390637 seconds)
  done (took 26.404708282 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.304494945 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.301336581 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.301454404 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.300501644 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.304029861 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.301366879 seconds)
  done (took 9.050932321 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.516893517 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.296350774 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.298745112 seconds)
  done (took 19.349314199 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.518503057 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.55589612 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.667344361 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.464650264 seconds)
  done (took 10.445985359 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.304384823 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.302744177 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.302784846 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.305881867 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.305827751 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.307084343 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.305421405 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.305852766 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.307015551 seconds)
  done (took 12.985283532 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.242918127 seconds)
done (took 84.713185461 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.651597203 seconds)
    (2/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.11320813 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.324115883 seconds)
    (4/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.29111513 seconds)
    (5/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.314937336 seconds)
    (6/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.482596036 seconds)
    (7/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.10243037 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.55803625 seconds)
    (9/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.928090081 seconds)
    (10/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.872840816 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.340792905 seconds)
    (12/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.282660096 seconds)
    (13/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.29921412 seconds)
    (14/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.937032656 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.339848399 seconds)
    (16/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.283430739 seconds)
    (17/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.409377656 seconds)
    (18/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.137791246 seconds)
    (19/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.292709869 seconds)
    (20/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.926497941 seconds)
    (21/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.297386074 seconds)
    (22/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.617860243 seconds)
    (23/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.620470895 seconds)
    (24/309) benchmarking ("sort", Float64, false)...
    done (took 5.605584562 seconds)
    (25/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.300009024 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.705998167 seconds)
    (27/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.385624837 seconds)
    (28/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.524295702 seconds)
    (29/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.332086311 seconds)
    (30/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.9131747 seconds)
    (31/309) benchmarking ("sort", BigInt, false)...
    done (took 6.300511668 seconds)
    (32/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.37127339 seconds)
    (33/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.327616194 seconds)
    (34/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.324627425 seconds)
    (35/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.408641084 seconds)
    (36/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.041668369 seconds)
    (37/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.515084525 seconds)
    (38/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.404509065 seconds)
    (39/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.174951913 seconds)
    (40/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.288406906 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.396710567 seconds)
    (42/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.416959636 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.406966486 seconds)
    (44/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.496458657 seconds)
    (45/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.317137262 seconds)
    (46/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.32673393 seconds)
    (47/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.384979909 seconds)
    (48/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.709951137 seconds)
    (49/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.291640652 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.409684596 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.410254747 seconds)
    (52/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.553895936 seconds)
    (53/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.718095724 seconds)
    (54/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.331838821 seconds)
    (55/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.298631678 seconds)
    (56/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.570235004 seconds)
    (57/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.713263553 seconds)
    (58/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.387960885 seconds)
    (59/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.298953204 seconds)
    (60/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.303350657 seconds)
    (61/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.678896703 seconds)
    (62/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.897731269 seconds)
    (63/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.357437307 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.373365268 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.372867396 seconds)
    (66/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.326925655 seconds)
    (67/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.286002184 seconds)
    (68/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.597376502 seconds)
    (69/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.383893487 seconds)
    (70/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.299465887 seconds)
    (71/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.6487591 seconds)
    (72/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.648420585 seconds)
    (73/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.311060324 seconds)
    (74/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.120999266 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.339563543 seconds)
    (76/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.311160623 seconds)
    (77/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.365867592 seconds)
    (78/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.935827064 seconds)
    (79/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.115679559 seconds)
    (80/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.706186991 seconds)
    (81/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.303065807 seconds)
    (82/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.536880688 seconds)
    (83/309) benchmarking ("sort", Int64, false)...
    done (took 5.495854286 seconds)
    (84/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.715832351 seconds)
    (85/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.712898076 seconds)
    (86/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.881410957 seconds)
    (87/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.30141747 seconds)
    (88/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.29107568 seconds)
    (89/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.460820844 seconds)
    (90/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.094342349 seconds)
    (91/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.168541866 seconds)
    (92/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.887235972 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.354785667 seconds)
    (94/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.331536674 seconds)
    (95/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.290960153 seconds)
    (96/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.302854453 seconds)
    (97/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.086395671 seconds)
    (98/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.41125145 seconds)
    (99/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.468943614 seconds)
    (100/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.317439876 seconds)
    (101/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.345813116 seconds)
    (102/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.701176189 seconds)
    (103/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.402538129 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.958457674 seconds)
    (105/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.091386907 seconds)
    (106/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.664715213 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.665118727 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.453814555 seconds)
    (109/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.346967825 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.895486692 seconds)
    (111/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.519600676 seconds)
    (112/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.113555693 seconds)
    (113/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.680409759 seconds)
    (114/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.326306147 seconds)
    (115/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.514617782 seconds)
    (116/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.671345998 seconds)
    (117/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.204894056 seconds)
    (118/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.391082806 seconds)
    (119/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.588258608 seconds)
    (120/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.319721687 seconds)
    (121/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.164863369 seconds)
    (122/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.774768845 seconds)
    (123/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.318203904 seconds)
    (124/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.492722344 seconds)
    (125/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.302999659 seconds)
    (126/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.974926063 seconds)
    (127/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.711303863 seconds)
    (128/309) benchmarking ("sort", Bool, false)...
    done (took 1.831610483 seconds)
    (129/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.327811312 seconds)
    (130/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.309555269 seconds)
    (131/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.946339848 seconds)
    (132/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.312715497 seconds)
    (133/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.579215528 seconds)
    (134/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.321520903 seconds)
    (135/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.302863641 seconds)
    (136/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.390265005 seconds)
    (137/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.328621187 seconds)
    (138/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.749324034 seconds)
    (139/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.856288187 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.084194961 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.581074077 seconds)
    (142/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.329558394 seconds)
    (143/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.303509396 seconds)
    (144/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.32569626 seconds)
    (145/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.406897867 seconds)
    (146/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.37080545 seconds)
    (147/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.371970323 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.855288218 seconds)
    (149/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.806090805 seconds)
    (150/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.116260807 seconds)
    (151/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.165209116 seconds)
    (152/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.349177712 seconds)
    (153/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.618816435 seconds)
    (154/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.902668641 seconds)
    (155/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.458727395 seconds)
    (156/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.691531809 seconds)
    (157/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.206360028 seconds)
    (158/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.770199582 seconds)
    (159/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.444061983 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.841944887 seconds)
    (161/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.856222391 seconds)
    (162/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.348490663 seconds)
    (163/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.138973041 seconds)
    (164/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.536251513 seconds)
    (165/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.391199741 seconds)
    (166/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.351895412 seconds)
    (167/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.392552217 seconds)
    (168/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.104297925 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.340675306 seconds)
    (170/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.864823502 seconds)
    (171/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.311417462 seconds)
    (172/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.55349636 seconds)
    (173/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.090980848 seconds)
    (174/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.295913408 seconds)
    (175/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.345844145 seconds)
    (176/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.329286767 seconds)
    (177/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.309944035 seconds)
    (178/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.309570739 seconds)
    (179/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.023092997 seconds)
    (180/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.323859929 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.222507073 seconds)
    (182/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.316802161 seconds)
    (183/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.468484132 seconds)
    (184/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.334363707 seconds)
    (185/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.891905682 seconds)
    (186/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.433587056 seconds)
    (187/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.316243673 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.352417405 seconds)
    (189/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.349557668 seconds)
    (190/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.33440642 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.167936613 seconds)
    (192/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.357184918 seconds)
    (193/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.698002799 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.251597442 seconds)
    (195/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.899306764 seconds)
    (196/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.447866201 seconds)
    (197/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.651955044 seconds)
    (198/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.553724442 seconds)
    (199/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.367780809 seconds)
    (200/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.687622094 seconds)
    (201/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.706436101 seconds)
    (202/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.97333791 seconds)
    (203/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.334265083 seconds)
    (204/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.621457289 seconds)
    (205/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.800279184 seconds)
    (206/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.242418467 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.357102538 seconds)
    (208/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.307180012 seconds)
    (209/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.572355469 seconds)
    (210/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.409413073 seconds)
    (211/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.238808393 seconds)
    (212/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.309149614 seconds)
    (213/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.387757063 seconds)
    (214/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.391275458 seconds)
    (215/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.837899961 seconds)
    (216/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.52634941 seconds)
    (217/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.704228965 seconds)
    (218/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.238481028 seconds)
    (219/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.414166761 seconds)
    (220/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.562057687 seconds)
    (221/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.945420698 seconds)
    (222/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.333414555 seconds)
    (223/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.307584695 seconds)
    (224/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.859848336 seconds)
    (225/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.353348189 seconds)
    (226/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.786825985 seconds)
    (227/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.320942275 seconds)
    (228/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.320622737 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.308204353 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.163934825 seconds)
    (231/309) benchmarking ("sort", Float32, false)...
    done (took 5.333868032 seconds)
    (232/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.336216527 seconds)
    (233/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.309334896 seconds)
    (234/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.604729045 seconds)
    (235/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.179938967 seconds)
    (236/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.370091812 seconds)
    (237/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.979685497 seconds)
    (238/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.315214774 seconds)
    (239/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.301653292 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.733434681 seconds)
    (241/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.824802146 seconds)
    (242/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.811783517 seconds)
    (243/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.446372379 seconds)
    (244/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.627067899 seconds)
    (245/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.398823596 seconds)
    (246/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.319098602 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.3128571 seconds)
    (248/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.416438193 seconds)
    (249/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.627510745 seconds)
    (250/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.310968252 seconds)
    (251/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.524635205 seconds)
    (252/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.450682857 seconds)
    (253/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.308532524 seconds)
    (254/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.692456548 seconds)
    (255/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.311199262 seconds)
    (256/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.324951245 seconds)
    (257/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.341075236 seconds)
    (258/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.935371226 seconds)
    (259/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.598918263 seconds)
    (260/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.138891517 seconds)
    (261/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.696326641 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.825440293 seconds)
    (263/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.038741319 seconds)
    (264/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.328571076 seconds)
    (265/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.691783505 seconds)
    (266/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.456888651 seconds)
    (267/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.805723896 seconds)
    (268/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.411579142 seconds)
    (269/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.498680138 seconds)
    (270/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.909037 seconds)
    (271/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.734116157 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.983826748 seconds)
    (273/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.508471957 seconds)
    (274/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.347749149 seconds)
    (275/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.374478689 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.417219799 seconds)
    (277/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.338093375 seconds)
    (278/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.606379468 seconds)
    (279/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.302208194 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.39474356 seconds)
    (281/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.29690813 seconds)
    (282/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.177304104 seconds)
    (283/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.614587888 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.39749756 seconds)
    (285/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.30973408 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.429320834 seconds)
    (287/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.337596589 seconds)
    (288/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.690513868 seconds)
    (289/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.957883515 seconds)
    (290/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.39123899 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.48505875 seconds)
    (292/309) benchmarking ("sort", Int8, false)...
    done (took 4.331918027 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.918782518 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.730570979 seconds)
    (295/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.710900336 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.354755612 seconds)
    (297/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.647092078 seconds)
    (298/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.15238993 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.29657298 seconds)
    (300/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.338508986 seconds)
    (301/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.072215852 seconds)
    (302/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.309871641 seconds)
    (303/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.076705008 seconds)
    (304/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.907645301 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.335070793 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.803531794 seconds)
    (307/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.430238015 seconds)
    (308/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.924434813 seconds)
    (309/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.850872711 seconds)
  done (took 918.792464355 seconds)
done (took 920.033224361 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.342571811 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.336553607 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.319668294 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.340752314 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.431479477 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.350603405 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.331964896 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.322716621 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.368175489 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.369631142 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.319576589 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.349038587 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.322084252 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.320578148 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.320151634 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.334794675 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.326257301 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.32102014 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.337794006 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.329926909 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.337587233 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.319639817 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.370421069 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.350473742 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.325079105 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.324046504 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.32420471 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.340705951 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.432927583 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.324565046 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.324691424 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.333391015 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.326094858 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.321736999 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.316931877 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.341761702 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.3343621 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.331318305 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.326071075 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.354326893 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.75136557 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.324145182 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.324172256 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.323345529 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.323671621 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.327533556 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.323167388 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.330363272 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.336749945 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.335808763 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.725699652 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.336800376 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.326551437 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.324662743 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.334302013 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.32352878 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.326535238 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.339313535 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.34274487 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.339044463 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.321336872 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.327318458 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.32625632 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.339076332 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.330014988 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.769016683 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.318424972 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.32786737 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.741538582 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.329615171 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.769039995 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.331991248 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.325353227 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.338208912 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.356171489 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.344363049 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.321545955 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.323783989 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.332362979 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.321798448 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.335823217 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.336961852 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.329473233 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.326140108 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.337883273 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.354759653 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.335889207 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.325970121 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.334513186 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.344792117 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.332111848 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.336077049 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.328097548 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.320583433 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.334922973 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.329691839 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.328143254 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.329083414 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.331027169 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.336843534 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.746116169 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.341360824 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.322598222 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.322716922 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.324146399 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.339578911 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.749022297 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.325453717 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.348240278 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.373322286 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.32853231 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.362953352 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.332690679 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.341854281 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.335578267 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.330431346 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.322534928 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.346755056 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.743589678 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.342269215 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.328194872 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.32550962 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.342745735 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.329299675 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.322859522 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.337660483 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.328926139 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.341213304 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.447880015 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.33731472 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.359165461 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.3260104 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.330078293 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.360396315 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.343204481 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.359503818 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.331011106 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.342441154 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.343688308 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.32399308 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.338649745 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.338652843 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.328576735 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.334823498 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.322418459 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.35790676 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.340161944 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.340136863 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.349469095 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.449410071 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.32495063 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.329635967 seconds)
done (took 223.793753281 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.388454217 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.324348459 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.430032828 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.326988718 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.423863916 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.424306262 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.324513491 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.324470103 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.324107538 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.705449001 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.325363714 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.324756619 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.324484896 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.324548573 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.408380981 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.327888533 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.325232117 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.66965951 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.325809081 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.399259263 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.323350261 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.324931488 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.327501921 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.712716658 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.3210309 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.322052251 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.401686688 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.327961544 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.674903817 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.324628368 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.319660433 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.675829116 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.416259826 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.344406679 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.338337756 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.334367233 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.426007982 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.345192899 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.408422232 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.40857029 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.432086178 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.365898188 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.320274367 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.32536481 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.329167484 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.328343395 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.326480113 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.354927508 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.32028271 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.325825148 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.671546766 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.338464509 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.336337485 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.326626745 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.327682497 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.348136173 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.327797355 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.328814535 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.417711429 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.328776586 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.391661125 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.713746796 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.709320337 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.32874415 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.327128589 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.328831946 seconds)
  done (took 148.071834535 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.395408808 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.400496142 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.443576507 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.331385457 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.379893201 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.447319157 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.330444787 seconds)
  done (took 10.991742743 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.335190868 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.330534026 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.379347563 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.378334595 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.329452272 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.476349368 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.330489681 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.34073581 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.328184563 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.382802109 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.331462853 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.331311917 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.337882268 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.325827929 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.377816219 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.341218993 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.444441963 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.330614599 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.330340986 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.484201992 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.329042412 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.337730937 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.382522619 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.34191481 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.331931413 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.336282116 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.895671572 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.331002363 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.329229478 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.332365877 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.330474405 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.368162239 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.332077178 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.330393014 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.329062833 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.447571048 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.33029494 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.329867555 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.333063879 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.330325782 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.333002509 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.33217224 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.332794335 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.330588646 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.332596269 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.355128885 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.333076192 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.334251817 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.333337031 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.332756331 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.382578245 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.334500058 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.330797595 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.331365936 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.388128335 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.339859921 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.333256134 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.331738594 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.334246209 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.332198658 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.486895145 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.380328427 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.334323397 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.380542386 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.334561668 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.335886805 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.334175195 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.334355156 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.386806297 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.333468488 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.381250731 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.331370341 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.4872989 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.357029201 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.33560923 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.33616692 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.335364175 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.332832948 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.332074397 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.339305044 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.332133655 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.334525215 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.33846844 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.332247636 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.332214936 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.43539897 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.442676542 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.33239194 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.346259199 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.340749578 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.332758293 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.387016984 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.335199677 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.333162182 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.385789066 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.447763658 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.387495414 seconds)
  done (took 153.096715915 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.339026209 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.341686931 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.336030997 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.350428425 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.335008452 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.334285241 seconds)
  done (took 9.304258861 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.337381951 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.336571694 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.335287991 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.33619733 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.33489219 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.337138246 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.335946754 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.336270793 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.339896455 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.335322147 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.336523756 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.337925878 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.338262195 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.3356949 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.336752639 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.337623687 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.336657536 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.334804831 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.336685857 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.336332888 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.431351877 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.336211969 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.336091771 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.337125959 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.341609544 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.337594842 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.344394264 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.337238502 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.337766577 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.343965999 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.339194877 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.337912479 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.337537635 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.342889022 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.341566453 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.337456685 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.341549784 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.339356674 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.335046145 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.338451739 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.339035457 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.33742095 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.338007127 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.338843904 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.339811404 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.341985276 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.343769575 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.345382593 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.337378932 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.34109235 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.34042151 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.338117383 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.338877119 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.340223788 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.342951187 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.341912953 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.343084402 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.339559728 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.337868824 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.339537438 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.341031313 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.339231102 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.340123032 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.342190989 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.346340128 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.340618749 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.34025383 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.342869331 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.338820772 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.339282104 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.341836724 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.338187445 seconds)
  done (took 98.773928822 seconds)
done (took 421.498381677 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.720167175 seconds)
  done (took 7.992709433 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.55278376 seconds)
  done (took 7.827188678 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.918190756 seconds)
  done (took 22.199537813 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.438579549 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.400664236 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.363210677 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.336034617 seconds)
  done (took 26.816325157 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.779995839 seconds)
  done (took 8.055722619 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.33805814 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.351136388 seconds)
  done (took 13.967992799 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.945127966 seconds)
  done (took 8.22079947 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.833923132 seconds)
  done (took 8.110909488 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.346087808 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.357345719 seconds)
  done (took 14.248904797 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.322580727 seconds)
  done (took 7.599021116 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.514974063 seconds)
  done (took 8.793708496 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.339435545 seconds)
  done (took 7.619261386 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.362153376 seconds)
  done (took 7.639227182 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.394240931 seconds)
  done (took 9.671142777 seconds)
done (took 160.036457606 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.335909295 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.339976697 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.33839597 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.338833553 seconds)
  done (took 26.630364676 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.377514947 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.378587666 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.379320318 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.388538867 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.381622369 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.378033326 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.37094952 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.370934992 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.389727785 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.381305697 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.380073634 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.380812456 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.378700175 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.370244765 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.380550957 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.38150966 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.389272063 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.380853834 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.371321102 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.383702365 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.345857944 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.389914091 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.383142055 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.346596325 seconds)
  done (took 34.337916493 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.542473991 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.415961285 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.497827951 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.397478419 seconds)
  done (took 7.132757662 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.397463567 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.399578338 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.411882405 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.449288792 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.475883281 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.408661137 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.373238267 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.367901606 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.354343234 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.399764443 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.475255896 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.414971247 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.483055882 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.346755713 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.533807335 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.347383391 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.345694414 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.399291136 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.450929416 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.464427068 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.346458913 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.399283829 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.403781214 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.415804154 seconds)
  done (took 35.143947102 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.345732753 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.354410342 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.352834809 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.346363991 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.346509763 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.347435199 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.352677885 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.347638302 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.367777911 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.348147315 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.345454139 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.345995058 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.345945184 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.347197688 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.347067075 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.359601996 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.361285988 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.346257773 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.349876839 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.353329324 seconds)
  done (took 28.29179153 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.339670834 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.193879649 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.691921037 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.595645975 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.340741211 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.340001123 seconds)
  done (took 27.783383502 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.418944409 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.551231638 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.349578069 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.712341284 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.786839332 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.348995532 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.347756046 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.589426383 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.907037501 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.911424983 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.406948775 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.419003995 seconds)
  done (took 20.032155961 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.342616305 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.344092859 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.344544198 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.359695312 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.402618247 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.355075703 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.354532451 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.340460709 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.407304195 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.407816241 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.352386506 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.404241395 seconds)
  done (took 37.699041896 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.431358393 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.391789976 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.356255907 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.167781731 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.730493905 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.556800791 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.222490228 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.786162113 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.351926952 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.616275451 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.35633435 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.437626021 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.59997406 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.343461848 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.366673211 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.401343478 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.572192286 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.83161986 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.343470471 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.356704037 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37051019 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.353067705 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.451779321 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.371112759 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.551942523 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.474088489 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.600479925 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.339911056 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.624929364 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.353620038 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.349862059 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.339709433 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.612803102 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.009559779 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.431861169 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.349926314 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.198078803 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.055508576 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.344572451 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.318232774 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.353946893 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.346562655 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.351085007 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.339647027 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.273696324 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.339232594 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.784025007 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.349731092 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.051507766 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.3405233 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.349960646 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.434447201 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.343985135 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.158085825 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.391542781 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.341435426 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.339075589 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.345433438 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.910192835 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.798590251 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.353635466 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.27901844 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.807471899 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.333931131 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97311198 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.445047743 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.345521086 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.34468367 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.274865618 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.395041429 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.361077263 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.479464183 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.362023051 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.006598508 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.050710824 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.343875501 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.275232204 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.888218377 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.352499586 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.279019387 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.570978568 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.342242164 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.281220606 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.308252225 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.276100966 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.064292352 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.353551143 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.781170503 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.349980876 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.777837609 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.355732007 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.358650706 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.364473154 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.565644652 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.227823417 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.341208017 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.344689337 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.462120427 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.364055412 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.77701832 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.279549547 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.345343208 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.598120347 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.552688791 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.346208219 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.377454014 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.552073597 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.798502812 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.361334881 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.342271047 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.354692238 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.916436886 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.357090984 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.829646487 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.360940366 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.341301467 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.097493142 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.35416245 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.445869804 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.349766211 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.587165549 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.126884637 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.344407118 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.42435406 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.343056215 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.342225575 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.369978963 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.864959972 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.342157517 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.343966304 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.355706959 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.35389274 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.342323371 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.300995162 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.353925228 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.355871678 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.347520666 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.567503455 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.354302213 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.620485217 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.276992031 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.480985538 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.407710041 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.567006833 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.564665182 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.345020518 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.602544582 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.344080653 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.35509653 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.357163961 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.362639961 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.441774185 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.36528511 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.342969115 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.604169581 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.347339566 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.347872483 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.389442919 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.3488271 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.349308805 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.348956181 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.22537513 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.919788549 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.318067713 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.350707063 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.239025426 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.358278092 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.408344622 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.350304047 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.354712118 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.149050809 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.288618513 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.351932914 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.341903293 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.569379985 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.356540245 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.376496227 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.42582456 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.543875699 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.920065376 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.358183273 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.278579189 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.055086877 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.037318249 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.344932219 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.280880634 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.346430226 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.35471267 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.356057073 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.977563163 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.923321922 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.347387023 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.288880836 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.350662013 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.356464515 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.351164155 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.346598475 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.145082974 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.757075167 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.363639528 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.359089107 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.489098034 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.360108463 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.280511917 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.349686709 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.351393294 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.346636879 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.346861997 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379490727 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.301411437 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.825481403 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.607316313 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.157745662 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.360182139 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.481921508 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.379323855 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.360497222 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.303816184 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.374886911 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.368280752 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373134365 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.358098387 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.347521282 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.028368205 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.916398064 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.069624661 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.87265521 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.322135617 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.352966324 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.351552891 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.794338389 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.286501876 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.907500375 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.534993085 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.787320696 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.307542106 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.550464344 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.575815826 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.110242215 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.357425784 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.575827934 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.321346355 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.295295824 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.374712405 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.560011764 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383563952 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.348020974 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.279357284 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.634798815 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.578360794 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.277711003 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.429766028 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.791677921 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.316126003 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.364568399 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.347497595 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.747801671 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.526957602 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.067112508 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.528438956 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.353027294 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.364775456 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.827406872 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.356884727 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.580255941 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965660614 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.350987046 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.567918245 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.293240414 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.360122002 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.359691379 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.351370009 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.666212078 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.355396233 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.604956985 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.360778151 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.284233954 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.353826073 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.876669537 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.208709009 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.354985275 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.350620996 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.093785033 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.357450194 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.634433298 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.357509189 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.140737728 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.356235475 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.284508677 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.284554277 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.0432532 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.354876608 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.319599985 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.839010198 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.760018659 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.393719515 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.379975284 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.204376736 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.608212162 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.365595775 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.925628231 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.578642191 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.269504666 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375970556 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.452143947 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.349084623 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.351768233 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.350927728 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.587275166 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.226338214 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.577304641 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.360313274 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.25894549 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.350368682 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.568176083 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.352665077 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.351556495 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.60769384 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.064021904 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.361438772 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.061981428 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37792289 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.353251843 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.275443315 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.818839082 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.361489834 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.432886734 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.363255132 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.363651966 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.363871242 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.526582022 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.367203779 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.35600482 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.367867281 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.447010517 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.787403167 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.128629971 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.356497535 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.935012253 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.09079101 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.936329086 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.367172019 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.352400588 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.35773635 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.287818477 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.501728553 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.583514695 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.627642898 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.472164087 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.934354198 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378569864 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.354876721 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.374217579 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.568108771 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.629277713 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.254334212 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.359300956 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.372065562 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.353817464 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.365564784 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.567446201 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.844338643 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.90610842 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.477191918 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.359592857 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.791237673 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.631177901 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.355328848 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.356164042 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.952110721 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.377991404 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.72177242 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.361185052 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.355434444 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.502916163 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.365886066 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.022372137 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.364998428 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.512078343 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.128413325 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.41300394 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.613198685 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.829927284 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.367648211 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.936461931 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.053513418 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.622758875 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.423051102 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.366421311 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.475210399 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.504406462 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.359818735 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.355940329 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.357403858 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.203862867 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.066254167 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.366662338 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.942171102 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.623671581 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.3550342 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.359265179 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379168783 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.36707828 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.581381733 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.089091816 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.585279339 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.367098962 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.35917406 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.175435489 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.94067039 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.371299377 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.291997209 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.36140295 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.594832317 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.594152786 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.37731999 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.810058463 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.067878941 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.920816742 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.334018601 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379052832 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.371488393 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.067833828 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.943489262 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.139751459 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.848217056 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.927663897 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.373996314 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.634697166 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.364302429 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.359726105 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.636170729 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.362062277 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.36137328 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.372651789 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.938629545 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.127527124 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.36178774 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.353455872 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.299682636 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.704964905 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.049606313 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.299094836 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.35972741 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.546056157 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.363832785 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.479968485 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.371569428 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.361525907 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.368576516 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.094116254 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.639420834 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.365245733 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.356942482 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.349725551 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.370122376 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.368043575 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.5959619 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.366235688 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.028437841 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.710803578 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.616909695 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.364428515 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.348775041 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.363570632 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.360394446 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.357857277 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.569142661 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.992039561 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.937228112 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.365296886 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.374366659 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.366054911 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.577775058 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.573398458 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.361048199 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.375316185 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.36741927 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.379776283 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.266091748 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.869074067 seconds)
  done (took 1604.033844499 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.400656745 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.383836667 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.370773027 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.421072994 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.418254901 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.484801979 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.405810696 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.390319332 seconds)
  done (took 52.575355366 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.371115823 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.580768461 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.39170822 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.374868792 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.370223462 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.372074339 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.799054721 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.364301617 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.371160082 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.370464023 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.371359752 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.366456999 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.995582135 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.374182778 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.367531032 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.356826133 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.36920408 seconds)
  done (took 65.872334348 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.372538839 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.98125736 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.459989934 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.365313053 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.432308843 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.3672059 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.162463809 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.382686812 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.361290205 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.690031766 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.016387023 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.402695097 seconds)
  done (took 85.296554216 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.368614999 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.368522552 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.368251363 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.368879749 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.36922327 seconds)
  done (took 8.144306901 seconds)
done (took 2034.253172 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.612987597 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.054095098 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.020962882 seconds)
  done (took 5.375304073 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.505680999 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.555083419 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.674126879 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.693881526 seconds)
  done (took 7.726575606 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.635171139 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.739210693 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.544458238 seconds)
  done (took 6.216333086 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.763309231 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.37187219 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.483920543 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.356656536 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.361570107 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.360494845 seconds)
  done (took 20.37818686 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.363073448 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.365840845 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.362809144 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.365394808 seconds)
  done (took 6.755872186 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.344546223 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.114779259 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.347069713 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.364391275 seconds)
  done (took 18.468066185 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.112680382 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.122204265 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.106993673 seconds)
  done (took 7.639584816 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.368005543 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.204430454 seconds)
  done (took 9.870084977 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.665619675 seconds)
  done (took 2.964082931 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.494998276 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.633125518 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.394933642 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.331391995 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.398649071 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.202752312 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.980181518 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.563216697 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.313582499 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.507125886 seconds)
  done (took 28.119691757 seconds)
done (took 127.047091857 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.128210624 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.606389447 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.563029406 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.103507762 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.744072556 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.563805398 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.57158982 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.068383278 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.60740146 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.599541925 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.103204658 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.745618481 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.520745976 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.602781953 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.51966017 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.607503725 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.585235385 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.171964367 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.783897938 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.986661798 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.579971004 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.735185426 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.93276511 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.757995992 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.58327188 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.510777032 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.317867922 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.36248467 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.958120482 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.336616891 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.512476767 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.158923679 seconds)
  done (took 193.230624546 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.361054266 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.379940692 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.360655157 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.360878558 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.362521447 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.361412232 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.361405163 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.362027969 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.370663121 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.363747585 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.361464987 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.361281506 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.364414235 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.376137866 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.361793186 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.375890765 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.375554174 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.369748979 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.3723273 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.362134242 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.362014629 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.361954221 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.363022122 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.369089295 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.368684543 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.36462682 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.361840363 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.362884315 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.362233966 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.378176755 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.375330103 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.372626395 seconds)
  done (took 205.029154106 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.363032325 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.362835943 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.363107641 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.363557471 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.375669295 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.380462584 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.364763432 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.363363653 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.362928491 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.373785693 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.362859127 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.363376917 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.363398346 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.362944778 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.363871727 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.371015441 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.373612546 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.366493689 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.377812437 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.364150992 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.366431146 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.372046022 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.364169948 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.364085149 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.371116167 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.364444967 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.36422095 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.364036789 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.363579445 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.385004351 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.375635971 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.38137001 seconds)
  done (took 205.081856849 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.560906428 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.372024322 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.373376527 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.306954097 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.373662658 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.37297957 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.36962289 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.562180989 seconds)
  done (took 14.594930893 seconds)
done (took 619.235867774 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.661175642 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.379574747 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.567668225 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.393310123 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.134778938 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.393118799 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.394136689 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.5587061 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.295326846 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.564604393 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.634005302 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.389997511 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.778788856 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.391531642 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.640343757 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.490266237 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.285813608 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.408005294 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.702926222 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.937438157 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.643448652 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.842090755 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.558287048 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.30927689 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.787579848 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.843034882 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.067590997 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.288319223 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.393491856 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.706283732 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.990380421 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.335270137 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.449136174 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.431360824 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.486477491 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.467790604 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.306379271 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.429139255 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.570023279 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.605590096 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.908014675 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.11687589 seconds)
  done (took 92.842687509 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.363610426 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.365235229 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.360864093 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.365219606 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.364006429 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.364927069 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.362901725 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.365521731 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.363243195 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.362206386 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.362677696 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.365111115 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.364638811 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.364131974 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.364300182 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.362943734 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.365657126 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.365730016 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.364749076 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.364806403 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.363693812 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.362608314 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.364283631 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.365134523 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.363893688 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.363922813 seconds)
  done (took 36.774293721 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.375855711 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.618085908 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.784918897 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.381946573 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.375511431 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.378728156 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.451604682 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.376987838 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.378082359 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.379347805 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.536402429 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.380072601 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.413253218 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.794199682 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.378197849 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.377145381 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.37753746 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.376186424 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.626009937 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.386160331 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.455037635 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.377802145 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.453061198 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.386940513 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.379220663 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.377779899 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.380493002 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.899647121 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.378488568 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.533266128 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.142562062 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.453556752 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.867311465 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.795511681 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.143269285 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.382827715 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.378702834 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.539257233 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.379553763 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.377226875 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.45390817 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.380991488 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.796752871 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.005126299 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.394504265 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.379779641 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.925293713 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.540753169 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.619850007 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.387163433 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.824130313 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.386656382 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.383668676 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.382971768 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.621485765 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.388110621 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.380719171 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.956246886 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.385791784 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.457237711 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.383358625 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.381759058 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.630155493 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.382911545 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.618179292 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.383204892 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.39022627 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.382755942 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.80701842 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.386740705 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.022821081 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.400478241 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.383483947 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.536369225 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.619324878 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.956273819 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.389776752 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.634912766 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.882589877 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.456726039 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.38844542 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.893587406 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.459933761 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.388360151 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.386766869 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.385455714 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.38286652 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.427578461 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.4569366 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.948971989 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.014156893 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.981850502 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.463970026 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.396855305 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.384608469 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.968623408 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.388005152 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.384305976 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.805428034 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.034068222 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.402896971 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.391395301 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.018593946 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.403971247 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.46052765 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.391674082 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.814589837 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.386884183 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.428901442 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.384615542 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.391573941 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.387876081 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.459692184 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.389794209 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.385263498 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.000889767 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.568132672 seconds)
  done (took 181.228040204 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.376604513 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.378007985 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.376334329 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.377143736 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.377174684 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.38336386 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.377733765 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.377432625 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.383255466 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.377227184 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.378181813 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.380384422 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.377359755 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.394974602 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.406582845 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.384226005 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.990555684 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.378088277 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.390565668 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.377916086 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.173186844 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.383212849 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.389245626 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.377768852 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.377517781 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.378888002 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.379010619 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.401523665 seconds)
  done (took 153.420543408 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.386425421 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.93630952 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.386469722 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.515238152 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.407982105 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.385173562 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.513856217 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.445739973 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.386647933 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.384125479 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.385091282 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.692400996 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.391028521 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.912510835 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.576769939 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.51672476 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.916432622 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.391443619 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.385506635 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.386399696 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.517414858 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.397322434 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.69611179 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.969312072 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.392566441 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.965487595 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.379525353 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.387660055 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.386657126 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.966606212 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.389483767 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.699764776 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.466272198 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.448302638 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.968540668 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.916667969 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.897161168 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.532211568 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.389824746 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.38602778 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.385924756 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.376042971 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.969477246 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.393418216 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.387673927 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.961115144 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.40869004 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.389227552 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.397950947 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.386238647 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.445391645 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.446871114 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.69999439 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.975244947 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.467598175 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.412750763 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.517361238 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.779731526 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.390316054 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.891488626 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.376017845 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.970198265 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.395937511 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.376570317 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.389445951 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.394166921 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.536638504 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.522680115 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.896973647 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.38981402 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.89990304 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.540416452 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.390175651 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.388409192 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.391402305 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.971149674 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.89935805 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.536830065 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.524810251 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.582323653 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.380016573 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.388252575 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.379685393 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.463376639 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.390608974 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.97262764 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.916696502 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.393078797 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.390772997 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.392002696 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.392241664 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.5622567 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.973871306 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.468435409 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.900165901 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.719630306 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.705932323 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.396332423 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.449185709 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.390904092 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.703614589 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.395636665 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.447822873 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.842826324 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.704225511 seconds)
  done (took 165.353563528 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.629714107 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.663402823 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.482388113 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.501857699 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.947744123 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.957514368 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.576821528 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.516126283 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.497564506 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.633454015 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.576787313 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.486389541 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.57306686 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.463285338 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.078256409 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.457265618 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.480277928 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.510025764 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.498233404 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.480608979 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.015350181 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.674042411 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.56093389 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.529558506 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.486071017 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.182152656 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.937529875 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.949342179 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.557650151 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.770877749 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.919803491 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.540143868 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.369100851 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.069483003 seconds)
  done (took 66.897006157 seconds)
done (took 697.820648196 seconds)
SAVING RESULT...
DONE!
