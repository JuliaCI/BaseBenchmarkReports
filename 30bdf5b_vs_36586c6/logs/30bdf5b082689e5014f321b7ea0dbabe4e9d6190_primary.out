cset: moving following pidspec: 3265
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.298461907 seconds)
loading group "string"... done (took 0.587295977 seconds)
loading group "linalg"... done (took 7.115369907 seconds)
loading group "parallel"... done (took 0.164037994 seconds)
loading group "find"... done (took 1.117314343 seconds)
loading group "tuple"... done (took 1.98313822 seconds)
loading group "dates"... done (took 1.262570787 seconds)
loading group "micro"... done (took 0.235275519 seconds)
loading group "io"... done (took 0.968018178 seconds)
loading group "scalar"... done (took 38.474701172 seconds)
loading group "sparse"... done (took 12.302597626 seconds)
loading group "broadcast"... done (took 0.965647845 seconds)
loading group "union"... done (took 13.56541363 seconds)
loading group "simd"... done (took 4.524531436 seconds)
loading group "random"... done (took 9.25804831 seconds)
loading group "problem"... done (took 1.963151152 seconds)
loading group "array"... done (took 21.374485697 seconds)
loading group "misc"... done (took 1.924464875 seconds)
loading group "sort"... done (took 3.228735047 seconds)
loading group "collection"... done (took 18.405671448 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.537801751 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.142685277 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.117923153 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.139172163 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.185182638 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.133527746 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.145990945 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.085900547 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.01400624 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.167001636 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.14099613 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.479962568 seconds)
done (took 5.048063343 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.202049349 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.087189487 seconds)
    (2/2) benchmarking "String"...
    done (took 0.097570675 seconds)
  done (took 0.884449804 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.068196277 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.127564702 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.081492396 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.069280191 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068018152 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.082021726 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.06777717 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067283593 seconds)
  done (took 1.271187212 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075037846 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.06947822 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.085757595 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069294423 seconds)
  done (took 1.007840631 seconds)
done (took 4.151199865 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.898747235 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.236159507 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.189581087 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.459248073 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.149041593 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.18908684 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.675211088 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.362117952 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.214666911 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.102128387 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.106366932 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.378847497 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107897999 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.672018844 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.077180761 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.107117201 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.1598557 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.444914262 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082588445 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.083113992 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.105042545 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.143278515 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.104367596 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078333292 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.169472325 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070330912 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.148174939 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.096133251 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069226438 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.245571103 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.190405827 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.687353746 seconds)
  done (took 10.547714943 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.100883305 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.118190254 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069658936 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.14019381 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.10442569 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.086924964 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072129988 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.083816591 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.092567489 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.160441946 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.116388752 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.10670832 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.082875981 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.071188113 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.102850198 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.212537125 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.110480708 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.085780241 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.088086245 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.076600057 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.122964491 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.084285645 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.095217039 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.079328344 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.153589549 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.195747403 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.1118445 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.111835765 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.071517295 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.082507036 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.132511611 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.143783845 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.06904887 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.083353863 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.141114416 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.111636074 seconds)
  done (took 4.598160353 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.054064961 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.161524494 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.092514359 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.153179628 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.086521895 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.110689151 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.083778047 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100011473 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.24740316 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.089548903 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.454154713 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130249672 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.102245931 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069207364 seconds)
    (14/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.129380985 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.084954359 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.069715046 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.5154859 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.145182132 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102915465 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.103257413 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.074209304 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.087189545 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.35893866 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.06893251 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.06712322 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085235414 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.061016774 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.145915882 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068992858 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.237043741 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.08885526 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.089170264 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102994328 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.196058195 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098496516 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.123831095 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082337798 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.067965298 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.169648139 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.066320491 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.090987485 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.06719447 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.106716285 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104908082 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.120281939 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.08471792 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068703032 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.181115245 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067590861 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.100031197 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.87803014 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.167549526 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.080487837 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.068679731 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.294507493 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.101767377 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.06818231 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065854795 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.257362281 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.155732646 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068113244 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.084096144 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067426845 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068526361 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.396533738 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.07089354 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.732571464 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.072418128 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.079776017 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.088425843 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068422013 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089931215 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073897637 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.10138558 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067380992 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.069039888 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.084048617 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066594869 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.085516453 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.085892812 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.204379249 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.084113677 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068882513 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065475295 seconds)
    (85/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.081658784 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.085989964 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113133465 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.070531414 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.083184703 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114555026 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070384358 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.068500484 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.119776175 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067162772 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.081690224 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.085272956 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.086721064 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.128309008 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.071213846 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.127570037 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.086746282 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.099638746 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.087702557 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115147838 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.081140178 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084768935 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.153907452 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066466494 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.06528393 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.08528596 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.066590658 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.085226788 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.06995289 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.096349239 seconds)
  done (took 21.010613759 seconds)
done (took 37.917666008 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.29142211 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.094422481 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.092538534 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075761557 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.09292898 seconds)
  done (took 1.432452512 seconds)
done (took 2.191587581 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.120834687 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117656035 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064591016 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.1133751 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064590243 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.1176614 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.115364619 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.08248654 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118739427 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065124157 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.113263018 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065605439 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064068906 seconds)
  done (took 2.010000271 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08389677 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085404084 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086542332 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083172707 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079549388 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083407497 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080620735 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106031372 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081601849 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088647329 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065369273 seconds)
  done (took 1.677525653 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083363542 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084708242 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086907069 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082275002 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079586843 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083224217 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081192752 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102987993 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081270797 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090416353 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065198795 seconds)
  done (took 1.676509776 seconds)
done (took 6.113155103 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079864994 seconds)
  done (took 0.831334015 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.702349543 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.559491535 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.084449464 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.136753079 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.222439371 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.15402902 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.44378967 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.11129704 seconds)
  done (took 10.339879434 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.091608618 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.086173776 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.070803828 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.100157834 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.072448776 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.090447937 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.071530151 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.07328242 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.085859424 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.074142706 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.090648813 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.074954611 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.087062519 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.074651902 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.072077484 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.087778262 seconds)
  done (took 2.125467653 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.094935653 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.095046382 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.094681864 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.078919481 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.093776401 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.076537204 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.096352838 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.077849957 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.090816988 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.075879837 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.094503075 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.078686748 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.091523517 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.069382819 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.094312524 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.079180623 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.091367188 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.078808791 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.094827026 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.079324925 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.094420381 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.068687857 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.091223633 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.078437446 seconds)
  done (took 2.924389813 seconds)
done (took 16.979415702 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.131733523 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.077090019 seconds)
  done (took 0.967930759 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082868382 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.09928357 seconds)
  done (took 0.949068259 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083999019 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.082236412 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.0906842 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.094712206 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.082967693 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.067781659 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.104314021 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.06987153 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.083378268 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.069922888 seconds)
  done (took 1.596009377 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069706033 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.094868955 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.07248583 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.097673195 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.075214353 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.081269311 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.075147522 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.084709445 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.07878338 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.080316825 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.073260583 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.101863061 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.074446267 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.103413439 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.076002219 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.088003313 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.090642576 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.071757513 seconds)
  done (took 2.258550441 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.067760813 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068984836 seconds)
  done (took 0.906357493 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.069418108 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065812638 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083696789 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068395893 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.080568366 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064201683 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.08016037 seconds)
  done (took 1.280891494 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.401527538 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.11055454 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.258939858 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072921303 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.104163972 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.262147193 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.08458556 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072858815 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.089133281 seconds)
  done (took 2.263480948 seconds)
done (took 10.989368835 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080360854 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.088140076 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.111164959 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.420423301 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.106557832 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067823093 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.14321534 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.209434601 seconds)
done (took 1.996608746 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.125370123 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.615558271 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.401846394 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.218675147 seconds)
  done (took 2.008673069 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.379706112 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.095041331 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.076977532 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.069543573 seconds)
  done (took 1.397705932 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067215576 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071237971 seconds)
  done (took 0.917180005 seconds)
done (took 5.222238396 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068432459 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067551461 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.081006071 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.067603498 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.065756377 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.080844882 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.067568583 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.101691197 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.067281143 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.072938252 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.083009944 seconds)
    (12/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.070415312 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.084605963 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.067569629 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068187754 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081646645 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06460925 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068143858 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.080717859 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066065975 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065549328 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083379794 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065697188 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.080850237 seconds)
  done (took 2.580897164 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.087406441 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.084324489 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073525458 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.088963175 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.072619305 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.089475417 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.07279527 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068468322 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.089005812 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.070068187 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087214001 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.072318875 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.085564958 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.072433138 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08580989 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071856931 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.089190672 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068590862 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072657581 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.087453393 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.072752645 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083444762 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.072278683 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08831249 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071822029 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087671619 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.070048032 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.083877939 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072496552 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.088043495 seconds)
  done (took 3.156042559 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.071746175 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.06531324 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.081773575 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072195401 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065253419 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.082864977 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.065558227 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.08154139 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.066685388 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.065728688 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.082744714 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.064921696 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.065510591 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.082946948 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066633295 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.084361331 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.081632367 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065740639 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.081045208 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.066365641 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.068309302 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.081377061 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.065511484 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.081490456 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.064999504 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.065877253 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.081119477 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.066176231 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.066019794 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.080928508 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068439471 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.069112244 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.082075855 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071886744 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.085201769 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.064936779 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.069451751 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.080520887 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.066418094 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.065060158 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.081378539 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.065811422 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.065200406 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.087264845 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.06623761 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.083386218 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065546871 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.06649406 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.081898161 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.06780144 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.081401083 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.064735032 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.067703762 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.08200504 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.069767242 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.064987162 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.081488398 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.065508836 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.082461956 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.065008231 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.065148414 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.080827618 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.067728975 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.065882925 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.095735936 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071978458 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.080991149 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.067239139 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.067007246 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.083525769 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.067343246 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.079189462 seconds)
  done (took 6.033191777 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.117780111 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.091558134 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.083884059 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066974563 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080824737 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065588649 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069702571 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081068005 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067958581 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086946014 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066189188 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066962678 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083410005 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078467151 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082241855 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067066104 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.088737448 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064667935 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.066608244 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.086779109 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068632291 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.087177732 seconds)
  done (took 2.506361037 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.184254978 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.088924976 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.109805656 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.09161936 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085078066 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074711565 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.087152067 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071746364 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071963559 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087198016 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070100135 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08767312 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069892099 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086299154 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069889178 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085392261 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071997783 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085850652 seconds)
  done (took 2.364595375 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079222284 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067843572 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.106761152 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06763416 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.084485476 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.071142187 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089284361 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076607925 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.086173385 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068729347 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.092431656 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07041843 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.08629666 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068451886 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070453444 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083174827 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.071624881 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08374135 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077541125 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.089208539 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073834755 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091928027 seconds)
  done (took 2.543216402 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082639787 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069522712 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.102074747 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087258928 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064358899 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066557764 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.089925265 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068435122 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.089628971 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.069413641 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069000731 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082392645 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.072835878 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.084173484 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.07223086 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084460201 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070117783 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067486393 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086140215 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064036895 seconds)
  done (took 2.330397488 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087912872 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085164543 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069485757 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093126289 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070032477 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.085606411 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077943963 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.085411953 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069731741 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.109248985 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070439831 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.0853888 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078084223 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.090573016 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069629203 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093387615 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077100593 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.093395683 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069265384 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085221424 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.109674871 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.06966503 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.202884364 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069760479 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.084723218 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.068944697 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06889495 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.089588818 seconds)
  done (took 3.201791058 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068078386 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068472162 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.081521663 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065615545 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065942849 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.081918236 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.0657265 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065979216 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084296329 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065755679 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.067558367 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.083941435 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06801272 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.083725689 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06904248 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067993154 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083463921 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065407787 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066312239 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081730948 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.068492227 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067733886 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.083935508 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066016551 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081254489 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.067905717 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066163694 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.081839012 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06727901 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066186986 seconds)
  done (took 2.958556238 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077845028 seconds)
    (2/2) benchmarking "in"...
    done (took 0.092622803 seconds)
  done (took 0.96553634 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065966011 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081949514 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.082161041 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072588723 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089191677 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06891661 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.092445397 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072970991 seconds)
  done (took 1.41868699 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.082933181 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079087248 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.085965744 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080252523 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.095653237 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084893611 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.15534958 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.086470055 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074627144 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.083351287 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.081151493 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067015396 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.090857396 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068000027 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.090680042 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074320797 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.066545505 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.090222784 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.071064822 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.08344787 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069915466 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09274997 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070147567 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.065163376 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.085900278 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.076876087 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.095717169 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.069208226 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.08790331 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.075961633 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089077613 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.063162753 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.068473979 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.085034981 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.066566732 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.094407252 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082964511 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087208452 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.077362997 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069693341 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.094658951 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063385726 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.088264292 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074979187 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093983558 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.068813826 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.084890258 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.06342088 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.066187266 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.087280189 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.064349268 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067836519 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.079608517 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075288181 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.087601864 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07824956 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.085638264 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.06953505 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.07095226 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.088406873 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075064431 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.086511045 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070841232 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.068214986 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094798328 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.072722785 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093475915 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.064004034 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062674848 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.082692484 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077590246 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106794469 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074417426 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.085335684 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070261981 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.083029855 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071553848 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069444178 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090149016 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.074531094 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.084561753 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073875569 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091660059 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067850899 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069884374 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.092243968 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.066579412 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.086531625 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.066670371 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.10054544 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.067218146 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.082581175 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.06608619 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.077588988 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.087431111 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.068675488 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.082559003 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074775787 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062749244 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.084824951 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069950869 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085084544 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.078001374 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090491348 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073962743 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.092741903 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.075687227 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067892943 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.087662885 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.065722929 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085716933 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.067570422 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.074640135 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.079917166 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071226308 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.085321583 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.068862574 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.093431834 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.066456234 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.068164177 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091280007 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073359631 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.083256241 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.064917508 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071107502 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.084708613 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072310638 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.09301187 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.067726829 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063483881 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.080140729 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071666699 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.085048996 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071220267 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089830556 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070751715 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.063338707 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.082796752 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072459203 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.092895819 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.069027175 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.085394258 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073881807 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068776955 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.084310673 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.074715197 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086707336 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066862767 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073402843 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.084615443 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.064210367 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087300952 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071135368 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.066875953 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.088449 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072058359 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.087585088 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.0687532 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083732275 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073277017 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069258326 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.083301114 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068306992 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.083152491 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077850696 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069649069 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.080324107 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.066325475 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.091072734 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066086275 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.06759069 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.083935211 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070467507 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.085564168 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066303602 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.067813724 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.086964545 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.078439144 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.089155318 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069766604 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.089923484 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.079499657 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.08531308 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.0699526 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.067513034 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086150294 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.070226483 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.093347413 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074151922 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089783337 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070895712 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.065265625 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090272631 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07586364 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.083766548 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.066568332 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066743407 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.088695577 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073989892 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.088777051 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.069820764 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083091209 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068509342 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071514919 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.08774853 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.068207584 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.084233701 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072981001 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.084337263 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.07430648 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069196638 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.095127291 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071297802 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.080728931 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071965499 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083872141 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074279612 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.064327172 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.083072461 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067573066 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.086538078 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.067413311 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070966424 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.079201321 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075530788 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092623048 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068205875 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.067596799 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.08513974 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074420239 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.086049405 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071987306 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.071328745 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.090851549 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077945883 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.084160806 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.071370552 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.094452395 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.068832485 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.062833965 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.090145034 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.067833102 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.084259262 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.067601966 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.067014851 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087410309 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076682627 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.091852003 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062868542 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.08719417 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.066973239 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067261583 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.081289124 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073269124 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.087921014 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068292279 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074300929 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086586609 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.068718575 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088706944 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.068363459 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.06850183 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.086513644 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070643172 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.086203294 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.071307015 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.084002697 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.070940919 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066583194 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.083559034 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070212048 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.085390401 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068198676 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073534445 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.084914422 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068813025 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.087527588 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.069247708 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06905708 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.085688254 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067923009 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.087695494 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068958843 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067656658 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.087633028 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.06395804 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091547842 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.068051224 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075088388 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.08506091 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.065744 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.089981993 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070694881 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.08936836 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.069289769 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.069129665 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.086360843 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.068852666 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.086936519 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075101375 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065811024 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.095870046 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075622296 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086099753 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.07094011 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.085336535 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.069883846 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.06697284 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.085540796 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.069310128 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.084672266 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.068365589 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072378701 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.087177603 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068671094 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086535628 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.06901207 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068482159 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.08599045 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063661704 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067112548 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.085043599 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.069303591 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095012797 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.068649931 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.084771827 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.067600135 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068879266 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.084564932 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.06604396 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.092681479 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.077430991 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.085540648 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075298805 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.084171861 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.069295517 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078353107 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.080032343 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.066658317 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.083032848 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.066021436 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075288967 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.08564949 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077388528 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.085129613 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.067848194 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.065386648 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.086260331 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.067629575 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.079884952 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.066635185 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072121655 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.084298216 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068013284 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.085094127 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.070583843 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069646707 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094802087 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.067925695 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.08604432 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.069173473 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.065297138 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.085160819 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.067017156 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.089062213 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.069587646 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.066451008 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.083895995 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.068613647 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.086728874 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.069251352 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.068002941 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.086573977 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07492734 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084940981 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.071117337 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071637707 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.082675326 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071369755 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.085176185 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.068369301 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067032871 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.08864551 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072680644 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086837794 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077451911 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.084973111 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069405535 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068828228 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.083332787 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.068274897 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.085153732 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.068034904 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067234393 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.086449351 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075713192 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.084068088 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.071042343 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067681974 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.085693114 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.075840891 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.086770301 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.071496452 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.093029291 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.06865403 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070255249 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.092839567 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.072781794 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088758768 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069916601 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.086687755 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074081702 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.067888094 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.091918641 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068985486 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.087118306 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070275611 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.066832734 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085860374 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.069849837 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084677967 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.074445815 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.069448974 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.085598758 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.067842578 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.083700297 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069345044 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07158782 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093906817 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.070998623 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088778485 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.064253043 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.066330551 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087512115 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066133599 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.086475478 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.071976169 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073420159 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.08755261 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069439904 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.084961783 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077357559 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091187166 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.071967564 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066405518 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.089030223 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.069452921 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.087833342 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068954276 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068470641 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086803374 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.072088388 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.087316721 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.067735702 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074939608 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.089710757 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069379944 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.087520979 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.068788535 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067851662 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.08133068 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.071487524 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.087498902 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073546024 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.087544494 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068727498 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.0780873 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.083046701 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068511734 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088308109 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067719283 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072930533 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.081792822 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.069912837 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.0871217 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069510661 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.063516429 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.085309961 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.066375762 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.087332694 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.067627981 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.063673356 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.095929177 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.077406872 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.088707185 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068954939 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085130723 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.064306953 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.064235547 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.085086569 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07055209 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.086565275 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.078966544 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.067215883 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.08485606 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.063935147 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085850973 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071648794 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.07130505 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.082974271 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.064650366 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066682222 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.089257671 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072842154 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084742447 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.068829374 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088099564 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.07033918 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.067183383 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.088965154 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.06580178 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.08865727 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081043816 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.085742166 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069499276 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074065383 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093008978 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.069206857 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.081578141 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.069013822 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.071047761 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.086283555 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.069792684 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.086860863 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082972383 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088745443 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.067981999 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.066550537 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.088030177 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.068166989 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.093636265 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070042191 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.086067481 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072744806 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070096471 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.094122117 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071050236 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093494211 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.071668687 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.088346957 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.06751807 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067404462 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.084530973 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067498764 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.087366965 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.069714716 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072274782 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.094705713 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067587821 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097048365 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.077129049 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.088370454 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.066059465 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067671238 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.086398385 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.064530734 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.086904464 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.067720072 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.066196536 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.084143096 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.068948721 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.08675736 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073533 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.069177796 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.086928906 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.069215737 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.080831474 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.070009996 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069963954 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087035758 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.066603285 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.08636102 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.069689262 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.071896686 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089765602 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.066773403 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.087284739 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.070450751 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068719572 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.081634531 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.074841013 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084849499 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.071387182 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.067663389 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085997737 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.070363049 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089180688 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.074383603 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08677687 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070668025 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.078367056 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.088089408 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.066483652 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.083029771 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.074037321 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.065766627 seconds)
  done (took 46.922097326 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.109483316 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083321864 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064208895 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.081966119 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076173075 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083268418 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064207448 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065328023 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.083146513 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06778336 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.081846629 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064262511 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.090688927 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086832634 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094512341 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068536241 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081487495 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065736961 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.081864895 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065010425 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.090597498 seconds)
  done (took 2.491691824 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.076484687 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.091668684 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075576362 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.095981196 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069826212 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.090968225 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.075592227 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090591873 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.096201833 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069912517 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.096035837 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072706572 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.086954978 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.069406461 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08732738 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073948294 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.095575042 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070467039 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.090137349 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075115305 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090837642 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.074767555 seconds)
  done (took 2.654196864 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.068203471 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067882058 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.086845168 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063601162 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.06718972 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.081650601 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.071597458 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.083307436 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.07182505 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.073619771 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.083860533 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067095814 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.087219311 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.063764542 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067916934 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.083771262 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.131085142 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.071346874 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.067123693 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.087357549 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.06362036 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.087666373 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063944034 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063995335 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.085118731 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.07261673 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.086310811 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.066084245 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.067059426 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.084260404 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.068531041 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.082969124 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068915359 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068605166 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.08467002 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067133333 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.067325597 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.085590981 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063634006 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.083835305 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068304973 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.063986266 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.086083437 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.06898903 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.065354233 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.083845069 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069829665 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.086861981 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.064902562 seconds)
  done (took 4.53079259 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.086010004 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.13100888 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.088579972 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090770961 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.102197183 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.09351569 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.071893819 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.111206321 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065489999 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.085281636 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.083990752 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.103356801 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.086965459 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.072809938 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.092169315 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068474006 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086401007 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067302251 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.071404327 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085777959 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.071385734 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.092266322 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.100283569 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.082741826 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.089703373 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067236584 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.084950186 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.072255029 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.098536738 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.072489424 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.090711068 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073546066 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.100879723 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.069755665 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.085507282 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.07028146 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.102315421 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.067833739 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088695937 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.066130409 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.088178545 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.072654103 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.092394989 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.084055706 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.086202222 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.072641485 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.086021345 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.065191126 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.099333725 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.070730861 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.09318991 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.100572731 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072557203 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.085407036 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072604026 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.100942341 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.068914343 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.084347374 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.071464213 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.099024253 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.066297388 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089585846 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.081604447 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.08777815 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.075765383 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.101162668 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.072692167 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089495295 seconds)
  done (took 6.689548334 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077058306 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.092639825 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081488191 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101519195 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092691091 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.074745887 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.092387625 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074984382 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.091909209 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079735502 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.093376134 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.114145314 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070679064 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.095145064 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075703023 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.094421601 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074017483 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.094685638 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074394473 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.093770577 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.092300532 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.083526026 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.092755745 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.100525872 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.104737028 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.088415064 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.07494811 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.093129558 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082464267 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.092869622 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.103310357 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.075049275 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.092303214 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.100966228 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.086827918 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.091916048 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067995543 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092462928 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.074723776 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.091974532 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070464148 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101260102 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073150066 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.087857206 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.074247586 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.092461482 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.10058292 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.086598575 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.095366815 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097054981 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074601324 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.100266267 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073875199 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092906635 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.100834184 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.107819024 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101637476 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.100491969 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075475734 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.101272339 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.099974279 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.108175487 seconds)
  done (took 6.38801733 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089016335 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.095060499 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.097276117 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.064279847 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066234723 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.090407522 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066409531 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.083559066 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.076077716 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094309593 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07921944 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090461336 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075051822 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097308243 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090356265 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075582004 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091416769 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071931493 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094760613 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071669821 seconds)
  done (took 2.510285962 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.077094641 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.103197372 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.069499202 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073565023 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.091038861 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073429669 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.08819717 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071630313 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086716018 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071726202 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096055174 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079167934 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086818195 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074424547 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.096548226 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074826234 seconds)
  done (took 2.169189258 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.080004144 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.09622996 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.082538028 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.086851961 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.06744795 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.083160238 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.068178152 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063969987 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.083253196 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.083422588 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.08716382 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.071143851 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.086597158 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.066786931 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.06475412 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.089260449 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.065409101 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.083880619 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.068130887 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.100121376 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.079596693 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.085021963 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.069295305 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.068629726 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.087392555 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.072930099 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.087081413 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.066067507 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.084777672 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.069275858 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.086424866 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.075479785 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.083476028 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.066944006 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.067514435 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.083388647 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.068316182 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.086241709 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070624634 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.067891332 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.084967061 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.068046758 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.086216508 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.070072036 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.083015073 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.069514901 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.064316738 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.093386188 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.066613748 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.087025005 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.069341211 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.089883654 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.072401529 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.079610435 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.093648446 seconds)
  done (took 5.140223604 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081924196 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071080741 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.082709535 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067269732 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.089477149 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.070443715 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070811349 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.08910768 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070258603 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.084916309 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070791219 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.088719166 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070270725 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071393387 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.088677821 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07305109 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.082443537 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.07044298 seconds)
  done (took 2.25471691 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073895843 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068260684 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.093974925 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068697212 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.086424819 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070961988 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064139637 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.085669992 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067053033 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086777999 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068966497 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.070488729 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085543763 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.070874463 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086513298 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068313505 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.069946199 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086139727 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068851929 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.082042258 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071188622 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066937289 seconds)
  done (took 2.523001328 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.073893455 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.095244066 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.163401146 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.107870107 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.084327262 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.100597941 seconds)
  done (took 1.486873558 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092514157 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099854102 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069732821 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107942965 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075884882 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088591721 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070557714 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08889198 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079165726 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102323067 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071297182 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097799225 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096382005 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078742494 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094407165 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075233324 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088873647 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069691636 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08724737 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107138823 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070404271 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096893216 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070819719 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088521707 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070708201 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096737333 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078611337 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102824239 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088180268 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079350814 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093380069 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071182716 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096903081 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101500019 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07304313 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096594521 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071084903 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105693538 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075988779 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097332881 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070777325 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095086689 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097033149 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075491113 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096619136 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070029974 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093735063 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069456511 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08923467 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113401782 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076204255 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096579268 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0946681 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07871958 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097602828 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113035926 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083060334 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097267004 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094393172 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083927091 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096655982 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075345775 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098313975 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102129537 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076832086 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097510715 seconds)
  done (took 6.663675908 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08685805 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106943507 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070497104 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102634441 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09684142 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07096793 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088614038 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071621447 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087908917 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070849155 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129857825 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070819958 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098367773 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097052497 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071001051 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088836163 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071023596 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097037882 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070310288 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113646903 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088981586 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07879749 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097651855 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096265707 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083204541 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094975208 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070579514 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089178797 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070074772 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089239661 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074505782 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089014539 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097422059 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.0702971 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097151633 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07158097 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088587171 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077096499 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088842127 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075752887 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097479437 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106134945 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071227102 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08839688 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082849303 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089177295 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070443411 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08862733 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070063487 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088315797 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083859924 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102804251 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1015848 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097019759 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07158011 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089172657 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071776095 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08912548 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07087564 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09381164 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079400984 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088980846 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114272244 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070515304 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088757401 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078913204 seconds)
  done (took 6.561314754 seconds)
done (took 129.819903766 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.201727933 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.184839484 seconds)
  done (took 1.247301369 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.070026473 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.096651658 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.098575855 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.13003639 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.087366571 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.10206237 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.11910854 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.080958698 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.06837453 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.087252768 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068870416 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.088775942 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.132385269 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068431637 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.086902085 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.0705275 seconds)
  done (took 2.323605555 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.104094107 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.196357919 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.10965147 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.067050768 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099182585 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.080378829 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.086116902 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.078315237 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.095081674 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.067791736 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.078805416 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.09575934 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.067114281 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.096034178 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.076429357 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.098016668 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.066569982 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.098533912 seconds)
  done (took 2.533824192 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.104398903 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.141582983 seconds)
  done (took 1.11688364 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.200311446 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.123144543 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.202417997 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.41579538 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.20501258 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.276956286 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.177135415 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.176226043 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.16221121 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.169230102 seconds)
  done (took 2.97394798 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.101315337 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.169963336 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.311118272 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.138202771 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.086937373 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.115971733 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.138163749 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.089721015 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.100933626 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.101105194 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.082284843 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.09723756 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.097732006 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.095581209 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.076223352 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.097703869 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.121777824 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075556031 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.078015082 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.096675095 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.118185773 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068572251 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.076552564 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.095118734 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.078839998 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.098122435 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.067759038 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.086521712 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076918744 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.095787433 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079512594 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.114293059 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.097646575 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.129549159 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.083218828 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.130415621 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.09871268 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074263476 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.095599834 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073641796 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.097762384 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077744245 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.103578042 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.077855085 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.086580362 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078616061 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.08599503 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.068289124 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.099103064 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.078251732 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.09959359 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.080092656 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.129597993 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.097704755 seconds)
  done (took 6.242511378 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.739208656 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.112463356 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.094662599 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.803149042 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090521647 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106395906 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.703671515 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116787934 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.209622977 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.754268517 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.089881322 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.101499523 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.182487746 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.237670489 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.881304939 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.282152148 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.63132375 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.105032238 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.108631052 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.131667608 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.140644955 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.18008523 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.153188923 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.440929251 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.07624733 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.096010718 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.138643281 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.078074861 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.163450481 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.087613828 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.094754341 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.158710454 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.227929354 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.155909633 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.098345357 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.07038915 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.091402217 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.147658918 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.243909567 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.170759318 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.15879173 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068492106 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.09597392 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.139255882 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132026291 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068984638 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.138171763 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.173619438 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.15032532 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073868261 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.096334923 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.14176533 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.138332793 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.140715158 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.101151667 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.291522895 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.263544088 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.091862053 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120007421 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.084156252 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.237383085 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.082835326 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.196904722 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.139322503 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.163758721 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.091744551 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.72992053 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.166910155 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.071754975 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074916 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118121832 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095844413 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.138203342 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.143457076 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.369369272 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.14273659 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.074548631 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090897439 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.20655878 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.103441896 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071855983 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.13973089 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.0954886 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120369216 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.142764787 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.141484955 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.145805657 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.2052711 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.159476201 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.137839189 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.075220647 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.123257211 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.095614072 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.18902533 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.170608381 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.138561843 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.206716566 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.139112361 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.141549244 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.146455148 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095918408 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.147943213 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.118038077 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.081864692 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136443605 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.187640809 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.122390303 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.08266663 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.095951181 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.139628078 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.127174808 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.105819988 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.139492614 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.151752395 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.45663902 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.147489834 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.089097453 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.087146238 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137625823 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.160096829 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076791626 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.230985032 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121932492 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.147479866 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.121000726 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069957757 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.119174691 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.140620513 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.098698273 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.101377142 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.159442484 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.079974119 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.213717428 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.190522744 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.078295881 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.213141941 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.16042179 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.076460384 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.146080063 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.119190697 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.144524157 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.098658633 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.137949024 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07571381 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.774684199 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.142825004 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120832211 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.094557048 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.15578626 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.091815967 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083301661 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.104850255 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069089878 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.753110806 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.084759152 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.102201466 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.103386097 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.076873288 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121584159 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.13713565 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.094481957 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.138428805 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.17797156 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.097997575 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.11769043 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.083691938 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.13720357 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.097014695 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.104512683 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.085630902 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.104868837 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121693453 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.074258258 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.103718107 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.148920122 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.140861412 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.191085675 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.545015235 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072576911 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.105840008 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.198774193 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073223016 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.265410976 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138655278 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.199331289 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.141540174 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.082694724 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.289089336 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.146331637 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.180631458 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.109949158 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.152666473 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071365673 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.139467951 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.1453123 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.095186538 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.077759847 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.143454664 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.169046345 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.148212693 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.937929834 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072999129 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.202766075 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068541404 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.169590766 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.076608041 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09658318 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.239073987 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.092376782 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.147540365 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.142798573 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093843707 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.084539091 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.672999093 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.10479652 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.137528623 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.096379688 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.170867336 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.161870601 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.134936192 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.137618163 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.076255069 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.159610198 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.185071225 seconds)
  done (took 40.399722371 seconds)
done (took 57.706409574 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.25721086 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.179022544 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.241377371 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.143808321 seconds)
  done (took 1.787584966 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.144048125 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.10581431 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.117717964 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.086244052 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.10474073 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.08698481 seconds)
  done (took 1.539387594 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.408909265 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.263301096 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.229877174 seconds)
  done (took 1.797693222 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.261390986 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.21333945 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.444080209 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.294765097 seconds)
  done (took 2.236080261 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.177632113 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.113953918 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.068615978 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.107096941 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.157992355 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.251932832 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.1284358 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.186124491 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.080601253 seconds)
  done (took 2.215866356 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.195666529 seconds)
done (took 10.668199958 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.102174138 seconds)
    (2/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.099289313 seconds)
    (3/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.08294625 seconds)
    (4/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.21753008 seconds)
    (5/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.226421273 seconds)
    (6/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.227228165 seconds)
    (7/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.179075745 seconds)
    (8/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.182695574 seconds)
    (9/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.147721764 seconds)
    (10/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.221032677 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.17023347 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.105694409 seconds)
    (13/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.233562489 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.080353775 seconds)
    (15/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.17990643 seconds)
    (16/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.204085394 seconds)
    (17/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.07504664 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.099650318 seconds)
    (19/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.201772435 seconds)
    (20/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.155634774 seconds)
    (21/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.099970894 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.097490684 seconds)
    (23/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.105380625 seconds)
    (24/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.187600674 seconds)
    (25/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.073886085 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.117185817 seconds)
    (27/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.170747383 seconds)
    (28/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.177839444 seconds)
    (29/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.215399379 seconds)
    (30/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.087164127 seconds)
    (31/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.139680659 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.137657708 seconds)
    (33/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.069826338 seconds)
    (34/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.05391986 seconds)
    (35/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.170547753 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.095551811 seconds)
    (37/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.080265745 seconds)
    (38/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.226887911 seconds)
    (39/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.094443681 seconds)
    (40/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.078103858 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.115873147 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.095869744 seconds)
    (43/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.095647586 seconds)
    (44/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.145939424 seconds)
    (45/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.094937003 seconds)
    (46/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.177384143 seconds)
    (47/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.074932709 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.066932204 seconds)
    (49/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.095380531 seconds)
    (50/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.110924023 seconds)
    (51/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.087121128 seconds)
    (52/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.200590616 seconds)
    (53/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.080447428 seconds)
    (54/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.156912746 seconds)
    (55/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.054442745 seconds)
    (56/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.068711627 seconds)
    (57/309) benchmarking ("sort", BigInt, false)...
    done (took 0.228935246 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.101851218 seconds)
    (59/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.113208736 seconds)
    (60/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.07621065 seconds)
    (61/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.175422811 seconds)
    (62/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.19062247 seconds)
    (63/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.089212339 seconds)
    (64/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.124072554 seconds)
    (65/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.075890642 seconds)
    (66/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.169055789 seconds)
    (67/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.206223904 seconds)
    (68/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.064387101 seconds)
    (69/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.137687089 seconds)
    (70/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.120565242 seconds)
    (71/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.182119791 seconds)
    (72/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.137779921 seconds)
    (73/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.180564755 seconds)
    (74/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.135906652 seconds)
    (75/309) benchmarking ("sort", Int64, false)...
    done (took 0.068268549 seconds)
    (76/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.075840455 seconds)
    (77/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.194175906 seconds)
    (78/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.065188169 seconds)
    (79/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.074639528 seconds)
    (80/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.106667063 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.116912639 seconds)
    (82/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.068556437 seconds)
    (83/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.061940498 seconds)
    (84/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.11486116 seconds)
    (85/309) benchmarking ("sort", Float64, false)...
    done (took 0.147068605 seconds)
    (86/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.074563856 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.110199721 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.067232653 seconds)
    (89/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.115916191 seconds)
    (90/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.068470566 seconds)
    (91/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.0548555 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.110119134 seconds)
    (93/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.053527552 seconds)
    (94/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.096317407 seconds)
    (95/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.074690396 seconds)
    (96/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.079192843 seconds)
    (97/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.074709489 seconds)
    (98/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.078639402 seconds)
    (99/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.157807302 seconds)
    (100/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.098550574 seconds)
    (101/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.113601299 seconds)
    (102/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.075226122 seconds)
    (103/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.122371446 seconds)
    (104/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.071995234 seconds)
    (105/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.114585596 seconds)
    (106/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.123289662 seconds)
    (107/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.120065922 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.131482745 seconds)
    (109/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.120563563 seconds)
    (110/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.121903887 seconds)
    (111/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.164685447 seconds)
    (112/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.073450399 seconds)
    (113/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.168187581 seconds)
    (114/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.06962267 seconds)
    (115/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.160609602 seconds)
    (116/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.053204051 seconds)
    (117/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.072959149 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.088458029 seconds)
    (119/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.053826753 seconds)
    (120/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.05500158 seconds)
    (121/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.087801209 seconds)
    (122/309) benchmarking ("sort", Bool, false)...
    done (took 0.157898455 seconds)
    (123/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.077084045 seconds)
    (124/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.074555827 seconds)
    (125/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.190658427 seconds)
    (126/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.189074696 seconds)
    (127/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.07457357 seconds)
    (128/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.054322232 seconds)
    (129/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.093882276 seconds)
    (130/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074907189 seconds)
    (131/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.098578105 seconds)
    (132/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.178614103 seconds)
    (133/309) benchmarking ("sort", Int8, false)...
    done (took 0.165104208 seconds)
    (134/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.075934991 seconds)
    (135/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.074592786 seconds)
    (136/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.148384755 seconds)
    (137/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.053343924 seconds)
    (138/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.074745978 seconds)
    (139/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.193274386 seconds)
    (140/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.195862669 seconds)
    (141/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.152284964 seconds)
    (142/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.10259966 seconds)
    (143/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.101467213 seconds)
    (144/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.067781596 seconds)
    (145/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.069052401 seconds)
    (146/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.097618963 seconds)
    (147/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.053914188 seconds)
    (148/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.206364603 seconds)
    (149/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.053614496 seconds)
    (150/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.090307297 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.128055762 seconds)
    (152/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.09804161 seconds)
    (153/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.113529798 seconds)
    (154/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.098495836 seconds)
    (155/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.063076669 seconds)
    (156/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.070963862 seconds)
    (157/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.096905754 seconds)
    (158/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.054299113 seconds)
    (159/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.053179713 seconds)
    (160/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.074343799 seconds)
    (161/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.063841003 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.06765301 seconds)
    (163/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.100472752 seconds)
    (164/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.070132356 seconds)
    (165/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.069438871 seconds)
    (166/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.161247865 seconds)
    (167/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.089129774 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.089270244 seconds)
    (169/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.165584523 seconds)
    (170/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.17089608 seconds)
    (171/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.07756176 seconds)
    (172/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.073982001 seconds)
    (173/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.077721444 seconds)
    (174/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.105001814 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.068548423 seconds)
    (176/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.094014541 seconds)
    (177/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.054007498 seconds)
    (178/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.105548178 seconds)
    (179/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.074498623 seconds)
    (180/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.074886049 seconds)
    (181/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.077703879 seconds)
    (182/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.140631859 seconds)
    (183/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.053599688 seconds)
    (184/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.100798871 seconds)
    (185/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.075695934 seconds)
    (186/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.06650056 seconds)
    (187/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.076983818 seconds)
    (188/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.077292588 seconds)
    (189/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.100180557 seconds)
    (190/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.054916974 seconds)
    (191/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.069876389 seconds)
    (192/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.089853226 seconds)
    (193/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.053765694 seconds)
    (194/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.074282335 seconds)
    (195/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.077426467 seconds)
    (196/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.085952651 seconds)
    (197/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.089488869 seconds)
    (198/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.067222471 seconds)
    (199/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.074423729 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.088428421 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.068189119 seconds)
    (202/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.063898443 seconds)
    (203/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.093695016 seconds)
    (204/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.086924683 seconds)
    (205/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.094315345 seconds)
    (206/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.063587244 seconds)
    (207/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.05506733 seconds)
    (208/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.290041865 seconds)
    (209/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.096304142 seconds)
    (210/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.064210344 seconds)
    (211/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.072092356 seconds)
    (212/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.19504116 seconds)
    (213/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.160944829 seconds)
    (214/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.064804761 seconds)
    (215/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.07466425 seconds)
    (216/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.077953939 seconds)
    (217/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.071602166 seconds)
    (218/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.202591262 seconds)
    (219/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.096802042 seconds)
    (220/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.097549066 seconds)
    (221/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.148549422 seconds)
    (222/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.075427833 seconds)
    (223/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.074151468 seconds)
    (224/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.053232404 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.138972142 seconds)
    (226/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.069077983 seconds)
    (227/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.088679944 seconds)
    (228/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.067397504 seconds)
    (229/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.113440502 seconds)
    (230/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.054280471 seconds)
    (231/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.06923468 seconds)
    (232/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.114420876 seconds)
    (233/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.068480187 seconds)
    (234/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.103899261 seconds)
    (235/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.063582158 seconds)
    (236/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.053040021 seconds)
    (237/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.053941297 seconds)
    (238/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.090009539 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.16440037 seconds)
    (240/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.067549546 seconds)
    (241/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.092369753 seconds)
    (242/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.0752682 seconds)
    (243/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.05337937 seconds)
    (244/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.111371881 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.139254779 seconds)
    (246/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.075472006 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.091258286 seconds)
    (248/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.071085611 seconds)
    (249/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.098395219 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.090280073 seconds)
    (251/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.075903775 seconds)
    (252/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.054336624 seconds)
    (253/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.136355902 seconds)
    (254/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.105389858 seconds)
    (255/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.067236138 seconds)
    (256/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.115009326 seconds)
    (257/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.053637047 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.131479615 seconds)
    (259/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.053294105 seconds)
    (260/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.068157429 seconds)
    (261/309) benchmarking ("sort", Float32, false)...
    done (took 0.149740403 seconds)
    (262/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.115322114 seconds)
    (263/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.05310894 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.067918037 seconds)
    (265/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.088614428 seconds)
    (266/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.064787752 seconds)
    (267/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.070525719 seconds)
    (268/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.077679802 seconds)
    (269/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.07402814 seconds)
    (270/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.109355119 seconds)
    (271/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.093253604 seconds)
    (272/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.136097033 seconds)
    (273/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.097428133 seconds)
    (274/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.080622579 seconds)
    (275/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.052765175 seconds)
    (276/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.075156911 seconds)
    (277/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.067444562 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.067063213 seconds)
    (279/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.074350726 seconds)
    (280/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.070583132 seconds)
    (281/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.06627716 seconds)
    (282/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.074897064 seconds)
    (283/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.189103022 seconds)
    (284/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.095259297 seconds)
    (285/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.111769302 seconds)
    (286/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.147434502 seconds)
    (287/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.088868464 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.075367726 seconds)
    (289/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.052774587 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.121672689 seconds)
    (291/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.053625199 seconds)
    (292/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.088387037 seconds)
    (293/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.066945196 seconds)
    (294/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.067235397 seconds)
    (295/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.113848142 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.075724415 seconds)
    (297/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.1531469 seconds)
    (298/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.053007681 seconds)
    (299/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.070018635 seconds)
    (300/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.09120038 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.073971029 seconds)
    (302/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.077219789 seconds)
    (303/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.081938374 seconds)
    (304/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.114064542 seconds)
    (305/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.075480545 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.073060189 seconds)
    (307/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.092182555 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.092013375 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.133820817 seconds)
  done (took 33.361999506 seconds)
done (took 34.269239602 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.082573184 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.114726826 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.076951881 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.115504606 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081578948 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.100920076 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.074147079 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.080895942 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.104306554 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.083881719 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.102726997 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.055988231 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.098094561 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.077538195 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.099027752 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092985399 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.101931593 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073654384 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.075920057 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.088432172 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075112789 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.08833517 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.069536041 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.056726177 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.101904451 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.074546835 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.073115976 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.098278108 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066925387 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.088845465 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.07108193 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.074087939 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.088990515 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.080258352 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.095212017 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.075428233 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.076776624 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.100168933 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.069511927 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.088170579 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.075789378 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.06682781 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.095082347 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.07512706 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.073595567 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.094189708 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.075849314 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.104229591 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092740281 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091418266 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.07529004 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.100279591 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.077985844 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.073873213 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.093132056 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.075496476 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.093876881 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092364945 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.097383712 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068983917 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075457032 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.097733535 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072427855 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.075274234 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.09778193 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077035233 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.099542271 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.072978082 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097985561 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073282827 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.067877696 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.09748103 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.070524404 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.067745449 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.098831337 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.078091616 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.087844135 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.073132054 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.07405303 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.095094059 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.066940209 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069585464 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.091131041 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.073802895 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090658505 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.056914063 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071615546 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.094859862 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.066900051 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.077177339 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.09495411 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.074497097 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.069663304 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.100259649 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.067610999 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.094060517 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.067584952 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.068058155 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.090798675 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071795947 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.067110677 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090590749 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.077003618 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.090839612 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.073766667 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.082244514 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.0901666 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073959284 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.088310358 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.067563172 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.083964688 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.099124945 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067453651 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091540405 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.066962301 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.075857848 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.088522177 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.067017056 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.067494323 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.089075635 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.073245335 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.067151914 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092036594 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.074963249 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.102770254 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.067356323 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.07157202 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091299252 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.067843893 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.073070479 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.08996464 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.067223474 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.068819946 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.087013891 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070323924 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.088893077 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.075492011 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069467962 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.097064635 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.069285136 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.097768516 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.072422442 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.074341024 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.095467515 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.066894791 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.061021131 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091972249 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069249086 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.069836975 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.089158001 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.06980396 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.067398192 seconds)
done (took 13.345165163 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067889788 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.169487511 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.126159174 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.097481467 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.110895068 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067929169 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.100894617 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.1050096 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.092484696 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.128100646 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088889204 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.108943914 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.11510602 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.09017983 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.06764996 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.071775121 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.091332372 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.089774325 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.12638117 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.11015832 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.141655085 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.066980304 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.121726616 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.091968086 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.113302691 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.095722694 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.090247367 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.072188295 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.092631376 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.103895396 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.109718973 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070607416 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067886694 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.123380716 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.117770024 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.087072691 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.089560981 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.086445117 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.089176613 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.067214812 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.115081936 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.101685458 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.105827205 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.105126705 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.074157767 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.071010227 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.091374602 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.087157847 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.114599467 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.10473388 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.089455691 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.134702952 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.070653838 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.106013571 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.06726837 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.110875029 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.106113956 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.070239818 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.068293299 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.092862274 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.06746383 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.071320846 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.112097382 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.115970544 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.07152251 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.106024184 seconds)
  done (took 7.314895343 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.086336291 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.118226096 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.085530801 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.108687909 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.067192032 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.068580821 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.090349933 seconds)
  done (took 1.589684761 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068132741 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.090454385 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.113536301 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.090463074 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.109672226 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.088812346 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.100971652 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.068424131 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.109522476 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.069846021 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.089091619 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.128843161 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.069997405 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.098451214 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.092375868 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.090630775 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.092176253 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.091369803 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.071848656 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.114616829 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071856733 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.112169772 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.070551859 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.068632965 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.105364474 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.068882262 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.138481355 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073500691 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.092784288 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.071874656 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067464762 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.140662324 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.105640403 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.079687831 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069016691 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.105373112 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.083834713 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089387264 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.085181734 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.096742824 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.083475145 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.069427966 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.092782281 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.067467698 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.073369378 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.10119921 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.070647131 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.091590548 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.072368489 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08868568 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.091684223 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.083214302 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.091440141 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.07318574 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.070537058 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.097224035 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.080222607 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.092493609 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.088801316 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070694798 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.107368925 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085171522 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.105392361 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085228271 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.094771372 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.083406801 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.106066735 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.07240847 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070765516 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.094639096 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.085746953 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.089760879 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.070154554 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.079659937 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.093093042 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.092517935 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.114174287 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07090971 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.101984369 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.069367183 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.069270573 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.092055709 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.092279946 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095190025 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069477717 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072633943 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093916436 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.067545279 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.067996598 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.095261437 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.068411027 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.092343248 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.071671012 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069918989 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.093285313 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.085772877 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.069612795 seconds)
  done (took 9.405381524 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070026781 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.070099189 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.093005554 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.06945831 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.070690276 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.092700368 seconds)
  done (took 1.448542174 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.099392389 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.093809743 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.08401679 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.097041666 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.107865996 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.106122718 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.084327359 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.1066029 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.08758462 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.104579255 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.083890705 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.107253543 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.090087077 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.098023525 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.083747255 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.09687697 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.084797161 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.101007119 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.081137942 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.099010991 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.089643716 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.098024845 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076399548 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.107598586 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.07237772 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.074580843 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.1011304 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.081418085 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.103891679 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.085442689 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.097219769 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.073066254 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096025455 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.085499835 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.107268175 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.073727871 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096938859 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074561995 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101670617 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.072955531 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.107263993 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075793616 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.102524508 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.07357073 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.10761898 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074046821 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.073855993 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.101398561 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.083981975 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.095316535 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.073691968 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.097207976 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.072668419 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.097037268 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.073262239 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.107281023 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.074349413 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.106739261 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.075068638 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.073734711 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.093877332 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.072592513 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.10699041 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.073111282 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.105554761 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.073770901 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.095838969 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076141631 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.09846721 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.074250115 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.095348348 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.071988673 seconds)
  done (took 7.431327576 seconds)
done (took 28.153299336 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.646347925 seconds)
  done (took 1.621763477 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.763170998 seconds)
  done (took 1.743559298 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 14.120036564 seconds)
  done (took 15.102497199 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.617974682 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.766933814 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.817532683 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.134877557 seconds)
  done (took 3.315159396 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.874143692 seconds)
  done (took 1.879340109 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.23561434 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.224124776 seconds)
  done (took 1.443265828 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.725562133 seconds)
  done (took 1.717027914 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.315640174 seconds)
  done (took 2.299320765 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.321574941 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.181215887 seconds)
  done (took 1.49581634 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.523522946 seconds)
  done (took 1.516583833 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.829683751 seconds)
  done (took 7.827032611 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.229280135 seconds)
  done (took 1.232941197 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.267520052 seconds)
  done (took 1.260250194 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.024643377 seconds)
  done (took 4.020822304 seconds)
done (took 47.461417805 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.078976049 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.083525227 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.105213735 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.079887615 seconds)
  done (took 1.338539484 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.079542475 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.075386533 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.10062914 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.075472958 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.101579473 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.075640669 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.099530424 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.078794246 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.074101978 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.098912329 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.075578951 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.09642852 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.07717179 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.099796188 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.0728461 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.077828234 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.100448502 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.075753402 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.100200368 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.075982001 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.073263304 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.099111406 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.079226804 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.096720262 seconds)
  done (took 3.064017684 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078628906 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.075437481 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.098401341 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073579958 seconds)
  done (took 1.326571248 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.079494507 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.117280686 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.090908783 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.079441608 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.094426732 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.111104481 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.072693618 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.072030022 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.096633652 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.07941572 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.092980007 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.099513613 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.111395615 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.078947814 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.103354741 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.067520565 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.070712781 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.111223423 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.079396972 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.101771564 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.072195652 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.080578163 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.092535392 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.091655609 seconds)
  done (took 3.174363301 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.078430256 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.104961925 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.102492769 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.091094979 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.116432324 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.067922633 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.101434698 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.092907969 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.150133524 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.067484949 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.095752764 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.068423931 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.097683814 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.067078833 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.079124423 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.132789705 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.113889913 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.093268997 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.098861537 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.090617614 seconds)
  done (took 2.91877259 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075972629 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.072262376 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.089653036 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.070188915 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.07832084 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.097670232 seconds)
  done (took 1.48811745 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069529368 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068882097 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.091466656 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.068358516 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073149302 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.09178582 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.067987263 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068845579 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.092074491 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069092941 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.068229872 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.089566715 seconds)
  done (took 1.922498334 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.385007318 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.091107568 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.092379525 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.067397348 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.07290355 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.091002535 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082004651 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.069246864 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.115031434 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.068515393 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.091485292 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069971585 seconds)
  done (took 2.303457418 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260352296 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079042413 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.322728142 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168687039 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141055025 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156021384 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106340615 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140371384 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.198289694 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139303984 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199936086 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223477763 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135666529 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167165064 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116523052 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.133304029 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185997472 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219820419 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106012183 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225246366 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206024719 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157168824 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183229912 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129866638 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134437424 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150194988 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.073744583 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105506049 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23236137 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160475596 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200141583 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139292224 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098968024 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228783215 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225064326 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194792095 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163049649 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085737293 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.157674593 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.164539296 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.257522267 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114330332 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194368245 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132930357 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106641546 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172683075 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146165494 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.145909632 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.137104778 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115785658 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173304725 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237467068 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.164671453 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113025201 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13732548 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142052345 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.14353148 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104023866 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268876648 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198847834 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16378156 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.098654706 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099062034 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209128952 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159358975 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.142843873 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.152710955 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119648231 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167213169 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.211460226 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149027199 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176392568 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.182423523 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090241478 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149783169 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.193944103 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157083669 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228894362 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157944721 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.076032615 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156243063 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130404433 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107688417 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.145353306 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101747772 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20734545 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126903043 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.139143153 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13971903 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136212045 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112408653 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222038998 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207156558 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132382324 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.067516152 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131595801 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.150692552 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178007147 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114405707 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134629283 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149591058 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.081538755 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194069998 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.078919812 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157311997 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.104578873 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154196285 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164706858 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.079590814 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156234114 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127785595 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.128709096 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166077338 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224625363 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094140563 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112401103 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23127827 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160383814 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.135773059 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.18023379 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.215744483 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.102567418 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129880312 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206750437 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245745163 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.091726955 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224053218 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135137267 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08574106 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.113257096 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15428763 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138745142 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.149948175 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109433185 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.153579112 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199861693 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.100900945 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121326996 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165665757 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083954443 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108672779 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140797469 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127397664 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.098123165 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.129395384 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.133392554 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168986104 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179090976 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110510431 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17745429 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101209926 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230363859 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117401011 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.132360169 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106408909 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.096307297 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.166574248 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218392334 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082869403 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225601854 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.155726299 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133389463 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148547538 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084878918 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.196167267 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080628268 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.072608446 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201409032 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139399181 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138264546 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.186421127 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13003199 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.155116344 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.151910538 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163250751 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184843392 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.162061257 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134620555 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.089856783 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140772099 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154432115 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.099132535 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.12135468 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.085400582 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13092038 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122654932 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085670576 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196612571 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155805115 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100075525 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140529189 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123147606 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.208422507 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.079422567 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160795118 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.146266059 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12161289 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.211231935 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187025346 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165555077 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12626834 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200397073 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.073525758 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076008683 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.118365746 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15488708 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11058366 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086625797 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167634466 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178751411 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159322081 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166517549 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138126428 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148992996 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.213233672 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.073372165 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.143165483 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179502062 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153898581 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.153735198 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114206813 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.101028532 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.199505343 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1106164 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267690111 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143888632 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15245615 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180539079 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.130588868 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082536411 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131944999 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191089392 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133477004 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.18134982 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126613742 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11542251 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11224057 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.107486088 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130441802 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154310774 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147824014 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187662942 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.1435607 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16107845 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079150389 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143951851 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173181393 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149886125 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.066856327 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14720844 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217967297 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12201947 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145102744 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184595386 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106673378 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.126602715 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232722703 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200463233 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086139819 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136250058 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152803282 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181814559 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147099906 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16911439 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1384909 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164564438 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136632113 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.08733048 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114187774 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124871552 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132544088 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.096967019 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.138486907 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.144058335 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.120789464 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157883476 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138672212 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138777615 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145960215 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.124603638 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.093252258 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124953431 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232450781 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15023767 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231747118 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.103908227 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.204056003 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223798457 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077263833 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106364741 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.082854833 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168197763 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110968645 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161133917 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.123358016 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132132491 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154990798 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172548642 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122755835 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.070341347 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138444589 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162520485 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138164271 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125497414 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.134083253 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218246362 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.105685055 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106524917 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153581622 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10695279 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129968506 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229963125 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.062892491 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122921475 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077882871 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107390645 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156945077 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212670557 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.084887167 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.151993189 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146557097 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148830838 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157202003 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127582179 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124141698 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140290035 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180464325 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155529644 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.117224913 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139575901 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158210054 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211601322 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132405429 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.098099467 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228857945 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209597343 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.195889374 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.115537715 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14413098 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143910232 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136626431 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167945121 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110726888 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224375337 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084463714 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190193685 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131968229 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094576646 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181240667 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.114220218 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115506925 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176622294 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170603137 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084416741 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1066537 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145311199 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150753155 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134226947 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.077655515 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191594083 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.075336425 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165585864 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22753528 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083220785 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133567666 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122497736 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108093346 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110022257 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130786426 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113382294 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.123571961 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22333793 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.118049592 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206052856 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171046687 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140658226 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192909535 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101844621 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.663359573 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.104798005 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185664579 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147005631 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256657654 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100459773 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146954169 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138337027 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150692195 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197847205 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132817444 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.178639618 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185990374 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.150044221 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082671991 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130527384 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138349321 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.118596611 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13375558 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142978803 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144826314 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.103678108 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.148039515 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179574236 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.084603017 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123204714 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21338005 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145566611 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174371554 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170011619 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111497259 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147050762 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169301248 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107325484 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.151821892 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211498574 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135204695 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100296037 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.10856982 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.133989801 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2280706 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.076090294 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219324544 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152583716 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137903118 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142738453 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.148020655 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16133299 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134967562 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152995569 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121649717 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.140148769 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14382737 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110461322 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.07957547 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133508939 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139982321 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.12655971 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128981189 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.120381831 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206277446 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.073867852 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123307909 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129141875 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174812489 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236807808 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.114983396 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085448722 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147022245 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141157689 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.143198301 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152850867 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.108930432 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085420599 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.109025954 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.115836657 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.134059468 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142429835 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130297502 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138055186 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224760392 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.086530162 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.249938515 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122826094 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108978805 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.096130339 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.081657891 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123594204 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125886221 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13486244 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100474663 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227686504 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.123142904 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.092129174 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119129387 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.099890581 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085733971 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157312571 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136734602 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149027448 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126609879 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.064987501 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135945058 seconds)
  done (took 71.300958089 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.1318511 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.104595738 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.1165118 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.172162392 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.145554911 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.2361736 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.179870402 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.221470524 seconds)
  done (took 2.401070649 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069846548 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.116208772 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.102545277 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.114532695 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.090477831 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069654328 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.291410787 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.109755987 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067993424 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.113736206 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.11868649 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.092155487 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.468545998 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067160061 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.094647261 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.084596088 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068601217 seconds)
  done (took 3.218451958 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.423763912 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.605933105 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.451061136 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.074800598 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.767236855 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.106680325 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.139021179 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.15874291 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.090067114 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.4170408 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.725741508 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.148093931 seconds)
  done (took 17.193754107 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.075980469 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069625717 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.108973686 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084108542 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.098343634 seconds)
  done (took 1.525484475 seconds)
done (took 114.169280051 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.080643906 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.338909956 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.054505839 seconds)
  done (took 1.512978942 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.083082853 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085606951 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109410566 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.084134685 seconds)
  done (took 1.458655995 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.075618659 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077341122 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.110175378 seconds)
  done (took 1.356348952 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.276044254 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.165971837 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.089718467 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.0836571 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078748937 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.104108717 seconds)
  done (took 1.361933413 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073481204 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.076087464 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.099686241 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.077532288 seconds)
  done (took 1.415677527 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.077015367 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053460059 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.05650054 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.081489095 seconds)
  done (took 1.363674508 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.090442788 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.106098416 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.081670478 seconds)
  done (took 1.37195435 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.108047946 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.112659243 seconds)
  done (took 1.316058466 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082912131 seconds)
  done (took 1.173161621 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.092566431 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.140545396 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.155165248 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.135894813 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.164304399 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.135313306 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.087346393 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.113921528 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.104214566 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.089089266 seconds)
  done (took 2.314626838 seconds)
done (took 16.341112313 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078769355 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.387059881 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361598813 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.11642993 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.667372008 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357029672 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.003295498 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118283056 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120759461 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093999959 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085485529 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.674274645 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.957395803 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.340245758 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.944614571 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.414355846 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.675878303 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069424106 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093677879 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069322442 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.952660118 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093945098 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068580901 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06936868 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.673717339 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371817898 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094059259 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.415002278 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068959167 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.095886081 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355089602 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094185804 seconds)
  done (took 16.069131249 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071354784 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.142929197 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074349382 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084904206 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.09620648 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070494457 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.098700057 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.06986575 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.150904199 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069307637 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.11126102 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069118061 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.098230839 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069977612 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.08772732 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.094091851 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069641927 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.0941595 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069583759 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069105 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112557568 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069149575 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.093146565 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069579186 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069558694 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.106447129 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069491903 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069822765 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.095001176 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071121047 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.097085211 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070083774 seconds)
  done (took 3.851214619 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116750456 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.152260419 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074733692 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.128981039 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114497838 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.096743471 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.170846026 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094064333 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.155117284 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070083592 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111390733 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069412078 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.127637706 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070029273 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.113682869 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069176559 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070354341 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.094257473 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069302903 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094432747 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088128218 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093899255 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070211419 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070650088 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094528045 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082541647 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093940492 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069256412 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069879867 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.096559253 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072888295 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094611935 seconds)
  done (took 4.164268882 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.073249212 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.076309509 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.108536293 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084884092 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.096219965 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.073196127 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073920164 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.095974752 seconds)
  done (took 1.78240492 seconds)
done (took 26.962994731 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079697832 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.071924152 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.099568368 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.082390922 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.100236283 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.080226561 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.069207216 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.101925012 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.078099965 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.074313858 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.102587036 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.069083024 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.097976531 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.069034599 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.076128653 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.094759355 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.080620493 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.098451627 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.08042066 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080465801 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.097531469 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.079279184 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.10050439 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.080199476 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.105768487 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.081001201 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.084530913 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.100860496 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071239447 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.097950106 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.078561416 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.085354858 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.09524641 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.080430374 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.09525333 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.069529359 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.069326193 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094513821 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.080549375 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.100467046 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.072700152 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.100883853 seconds)
  done (took 4.704245995 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.089434374 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.089746254 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.111748219 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.071996882 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.097673697 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064358641 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.116043361 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.072160642 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.094208741 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.089809596 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.057117438 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.086947664 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.072494944 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.063150948 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.094187753 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.0581722 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.060771037 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.083154019 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.061035119 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.061762605 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.084443929 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.055615518 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.062108996 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.0647704 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.082897303 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.063774832 seconds)
  done (took 3.115721428 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.07640552 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086094013 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.114714616 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.130270846 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.133445637 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079851931 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.105301125 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.089443108 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.115151643 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.068896814 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.072733026 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.124477438 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090160601 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.101468017 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.069824269 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.113952974 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.083530173 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.0707412 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.100844175 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.092277376 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.111625501 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.079564323 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.122018041 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.083210012 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068522336 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.097269597 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.0729982 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.108106732 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.074078021 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.077956575 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.098533257 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073412834 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.097286012 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.080368889 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072990949 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.096590792 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.092466371 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.104634447 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080949267 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069721613 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.098158196 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.070561659 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.11477489 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.113604246 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.094543501 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.075676427 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.076810279 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.103814062 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.069514983 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.112812846 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077863622 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.068762381 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.098473792 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068755882 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.094198073 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082841052 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.071453484 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.097160785 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.07763727 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.097865228 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.081361801 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072551675 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.110531121 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069013409 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.102291585 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068908566 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.069568917 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.093655009 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.093834443 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070460192 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.136811553 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.070455066 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.096511736 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.077562293 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.102496857 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074750209 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.069343355 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.110092691 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078753873 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.098162065 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077481055 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.072330866 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.09811001 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.090043626 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.097614323 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.070771564 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.070302719 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.101106536 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072074572 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.096133174 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082426854 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.069390544 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.097652047 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.08610234 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.094807694 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.070143485 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.075472875 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.099147704 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.068419463 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106553789 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.07464074 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069270194 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.104470405 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069523779 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.097897623 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.078645876 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073716505 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.093141567 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.073994391 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.101290406 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070340735 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070598668 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.097618305 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.071419928 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.078100825 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.09998135 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073454801 seconds)
  done (took 11.405541122 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.19114709 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.184708523 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071515562 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.177672564 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077219993 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.106906314 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.179773515 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.096898305 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.096144668 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.070489233 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.070112336 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.128995581 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.123567225 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.10689296 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.105975576 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068766362 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.113628248 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.105079652 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.180455845 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.174915522 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.124278544 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077230198 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070578662 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.097019666 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070396767 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.105649136 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085276535 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.102863429 seconds)
  done (took 4.28616179 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.083572654 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.137110815 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074563306 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.093162309 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.118445781 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069152477 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.100861193 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070653929 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.107843039 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.081295047 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.095284277 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074517057 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.07561218 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.104529431 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070192792 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.10551925 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.079553014 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.07107522 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.098177389 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.07445591 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.107216292 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.081648327 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.099182953 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.069207775 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.075386107 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.094546678 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.066300477 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.113404886 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069028766 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.119435592 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.068304224 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075288637 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.113556156 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069640535 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.095355556 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.072396324 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.071933184 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.098630131 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070583382 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.06831691 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.093517736 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.059194316 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.06761303 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.107764161 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.075585633 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.086370302 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.074731192 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.100669841 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.074211395 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.066963076 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.097554251 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072080282 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071679676 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.108219724 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073985232 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.100968455 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.07374292 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.067148351 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.103731604 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.072654726 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065971215 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.094241905 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.074184327 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.094293195 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.07785905 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.073940015 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.095039176 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.072863624 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.074303027 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.102235472 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.073322616 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.098114544 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.067950339 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.071929678 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.101138639 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.073979288 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.073554356 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.093827687 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.068990996 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.09591428 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.057529899 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069314739 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.05548751 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.098494765 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.067271897 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.093749922 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.073008954 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.074710976 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.108814225 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.071362022 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.100949734 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069843154 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068314938 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.098543745 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.065233971 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.097798092 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.087866738 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.111612487 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.069070326 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.067767092 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.112814586 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.074479729 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.094771851 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.058002025 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075516109 seconds)
  done (took 9.926118448 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.097919286 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.094364958 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.09782467 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085079104 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.124883055 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.094419514 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.103557488 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.075546357 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070997223 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.112000085 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.069726267 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.103880402 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.06931605 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078110052 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.124659067 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077147412 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.097797584 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078076944 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.074015997 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.136786266 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.085693389 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.109821319 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.083168616 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.096516535 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.073481861 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.08103088 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.123933075 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.082290505 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.106524753 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.087964492 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.084280887 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.123048035 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.087933001 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.098945592 seconds)
  done (took 4.327946269 seconds)
done (took 38.864135876 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.20604236 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.385803493 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.175479163 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.015372696 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.21404435 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.216970604 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.188772805 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.175182895 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.754182214 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.179966027 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.411693203 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.73730836 seconds)
done (took 59.785593428 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.282964348 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.319290509 seconds)
    (2/2) benchmarking "String"...
    done (took 1.447530419 seconds)
  done (took 3.889677807 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.53620425 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.366886592 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.457273136 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.176689711 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.184867983 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.591744815 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.728210587 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.950852012 seconds)
  done (took 27.576830554 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.175727524 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.516192048 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.177765234 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.191422717 seconds)
  done (took 17.185128941 seconds)
done (took 58.594655432 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.188892401 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.199054382 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.21491457 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.159901965 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.275972411 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.204948491 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.484239072 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.204898033 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.183195425 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.162035302 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.199100308 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.176225181 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.187344644 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.442867306 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.185217652 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.181682689 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.231208323 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.712282726 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.516975917 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.177027539 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.190383925 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.189042129 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.193548288 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.172300325 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.200284223 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.171054541 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.174053147 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.188609171 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 3.889744643 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.176355859 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.257377597 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.684105735 seconds)
  done (took 188.899723067 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.174861766 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.208456156 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.289846667 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.215778312 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.629992966 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.375985442 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.312213577 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.688603045 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.189033595 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.180075044 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.514822195 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.174633262 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.566160821 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.152306114 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.185127727 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.280818745 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.464680012 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.532492411 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.186400184 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.450047813 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.181741563 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.414633812 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.33425151 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.431873607 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.195086579 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.256084478 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.188599703 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.200178461 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.369073422 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.391820134 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.225505922 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.220955086 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.66283546 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.035655675 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.195730205 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.182981773 seconds)
  done (took 149.379476299 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.42831336 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.175580762 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.175734135 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.176589992 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.200514906 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.17576979 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.620955104 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.624248309 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.673513275 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.330035019 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.234303075 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.335736745 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.177280186 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.264112564 seconds)
    (14/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.172861946 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.187552574 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.174243137 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.189847202 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.200727181 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.176797888 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.176061577 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.620984014 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.189474486 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.395558301 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.180471288 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.176748966 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.201811715 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.567915594 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.174833973 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.203197819 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.480659224 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.212504406 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.176074658 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.389885982 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.063345386 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.283225985 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.176550172 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.202371227 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.177085717 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.438005064 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.176634934 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.177254838 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.178692898 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.180322633 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.669686242 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.17984177 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.624080603 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.179169405 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.003505765 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.178438318 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.178774463 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.331371702 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.515584312 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.180606008 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.179365955 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.181643596 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.178490168 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.178014514 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.204497524 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.327588171 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.271294513 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.179756684 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.18275495 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.206530883 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.179467118 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.372123346 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.177747264 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.726111718 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.238614124 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.284900436 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.624963004 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.179084788 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.26740114 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.292300919 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.177931174 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.179709331 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.179632267 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.179847788 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.281115362 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.178112015 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.520238542 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.183321985 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.182985048 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.235720939 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.269482295 seconds)
    (85/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.178106864 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.180031838 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.401679191 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.180510163 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.179817364 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.801566292 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.265219912 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.178049664 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.181111673 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.179649185 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.1810527 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.521427848 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.626332504 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.259714809 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.180746303 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.368918366 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.181394753 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.532353712 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.61754622 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.694889571 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.182951372 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.283448425 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.185070816 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.183220493 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.182240527 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.210076501 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.183533363 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.240399371 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.181250742 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.574772372 seconds)
  done (took 339.932285848 seconds)
done (took 680.76345128 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.85761387 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.83858623 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.938748239 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.837811334 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.821500115 seconds)
  done (took 10.419461958 seconds)
done (took 11.544330557 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.344358184 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.34488887 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.232051822 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.346092511 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.207264953 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.358773938 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.321946734 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.202480098 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.273376131 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.246855751 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.273009635 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.225886353 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.206357791 seconds)
  done (took 17.70964688 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.460719311 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.454019382 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.243807222 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.461922946 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.221084091 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.46929421 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.359380312 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.371673813 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.361595606 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.199754579 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.198252888 seconds)
  done (took 15.930159862 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.465101749 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.461015778 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.247854227 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.465896609 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.221939711 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.477606613 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.363785012 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.372804084 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.36419722 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.19952155 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.198830345 seconds)
  done (took 15.966730664 seconds)
done (took 50.732760195 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.193458072 seconds)
  done (took 2.319154453 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.224288251 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.381792211 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.206116709 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.197099311 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.195834689 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.195183914 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.196613186 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.194489961 seconds)
  done (took 10.920129041 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.191266208 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.189992517 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.191947474 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.192947005 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.194215445 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.193400463 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.191804068 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.194178243 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.191908138 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.194043156 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.193677563 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.193705311 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.189831369 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.192837798 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.190819891 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.191923699 seconds)
  done (took 20.208634447 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.194125076 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.193440387 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.190847133 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.193042205 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.192034903 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.191311155 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.194372809 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.19228732 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.191315969 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.192097545 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.192727849 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.191885312 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.192009598 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.192040892 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.192406252 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.192568254 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.191941939 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.191568153 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.195778482 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.191908538 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.192986023 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.191983904 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.192668255 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.191586723 seconds)
  done (took 29.749999686 seconds)
done (took 64.326007299 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.950233041 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.585166885 seconds)
  done (took 8.664350891 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.194553315 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.194729434 seconds)
  done (took 3.520970873 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.195217453 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.19567797 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.195579823 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.194291932 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.195678539 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.194542392 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.195907572 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.194967508 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.195948733 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.196507436 seconds)
  done (took 13.083954934 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.195667415 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.195627258 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.192095313 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.196706302 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.195220802 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.193920451 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.197393946 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.196936096 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.196230281 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.194241593 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.195014391 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.193578594 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.194738417 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.19513364 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.195743493 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.19413706 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.195397002 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.193989472 seconds)
  done (took 22.641674412 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.196004853 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.19627305 seconds)
  done (took 3.523261827 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.194561548 seconds)
    (2/7) benchmarking "second"...
    done (took 1.193888802 seconds)
    (3/7) benchmarking "month"...
    done (took 1.193948917 seconds)
    (4/7) benchmarking "year"...
    done (took 1.19367316 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.195614109 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.19548126 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.194762605 seconds)
  done (took 9.492721937 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.196353906 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.366429381 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.443685057 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.792119208 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.198004908 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.201492164 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.031913396 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.199519576 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.202886123 seconds)
  done (took 13.763646271 seconds)
done (took 75.819981354 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.135937322 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.186215546 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.935382219 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.192973738 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.215273808 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.532369024 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.193803503 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.303198466 seconds)
done (took 36.828483937 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.198522308 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.864454646 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.898603048 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.191541184 seconds)
  done (took 11.086868089 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.18496047 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.005747679 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.179102228 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.128469999 seconds)
  done (took 17.63161865 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.737869434 seconds)
    (2/2) benchmarking "read"...
    done (took 1.517732552 seconds)
  done (took 4.388712364 seconds)
done (took 40.438383844 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.19338695 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.194594539 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.192316751 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.195111838 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.193452671 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.192694687 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.194917604 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.190966209 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.194728414 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.195076273 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.19241126 seconds)
    (12/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.196344357 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.196105898 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.195436675 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.195214139 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.193605777 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.191984163 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.195900529 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.192148106 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.191852468 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.19244215 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.19514659 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.192608928 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.191854746 seconds)
  done (took 29.780161707 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.196611989 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.193186797 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.195264404 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.19436231 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.193376381 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.196109848 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.197482541 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.192986585 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.195624075 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.195594896 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.192110218 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.193793504 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.195468772 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.193442569 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.196480535 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.195372409 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.197050892 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.193305487 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.196468844 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.193206969 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.196418568 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.194588602 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.195479846 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.195841212 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.194142432 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.193571918 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.196587315 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.193433909 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.196916772 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.194772868 seconds)
  done (took 36.980946359 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.200070433 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.202953713 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.197258579 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.196757926 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.193902802 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.196496158 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.195986554 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.196572278 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.19685396 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.196730963 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.196777168 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.195326254 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.197278753 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.197841042 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.198011712 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.197978274 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.196709356 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.197864352 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.197868111 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.197759853 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.197892349 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.19917446 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.198332772 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.198846983 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.19773016 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.198952151 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.196979436 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.196368729 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.196712631 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.19980122 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.198185034 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.198615101 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.198570544 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.198513638 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.198668917 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.19748015 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.201785936 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.206763607 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.196174045 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.199108557 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.198525708 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.199324263 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.197639052 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.195104747 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.195796103 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.199291242 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.19859062 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.19826726 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.200003883 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.199926212 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.198911869 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.199901732 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.200175561 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.195342157 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.198236148 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.199313626 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.199089383 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.198210127 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.197951554 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.199210266 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.19985207 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.194309168 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.200245162 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.197357183 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.201340252 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.199435759 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.196781222 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.20040833 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.199782794 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.196860974 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.199360713 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.201475449 seconds)
  done (took 87.410724858 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.199461159 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.192080153 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.192706096 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.197071284 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.197888148 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.199816247 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.197518053 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.197279922 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.19796055 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.201523089 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.198877745 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.195781848 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.198794712 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.20000666 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.200461745 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.198043071 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.199034043 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.197221907 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.200442384 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.200868635 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.198680979 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.193123105 seconds)
  done (took 27.489192908 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.196487312 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.197916292 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.198666845 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.200239784 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.197479752 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.196307198 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.198646129 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.201314248 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.201606204 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.201819827 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.197258012 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.200758403 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.193626754 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.195977175 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.193350317 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.196569478 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.199939872 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.195834471 seconds)
  done (took 22.697519581 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.194963188 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.192012985 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.199407733 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.194531656 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.194132092 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.200474865 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.197033343 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.199957275 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.201428345 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.200525031 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.199562219 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.199460915 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.199392269 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.19356087 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.197077933 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.196641523 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.203214628 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.194421717 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.197496738 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.197179421 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.198739656 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.199163508 seconds)
  done (took 27.483092228 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.20037337 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.198833558 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.197276803 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.193756129 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.197850132 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.196199541 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.199874897 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.200080933 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.200628007 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.198865962 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.196475576 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.198229961 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.196626955 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.198944846 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.199780046 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.19825646 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.198255769 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.19738842 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.195564659 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.196509916 seconds)
  done (took 25.090117919 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.203268748 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.201456143 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.204649489 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.203085285 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.204317302 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.202794862 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.200569679 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.200221155 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.20383193 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.203249053 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.20187476 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.202721929 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.202048396 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.20249275 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.200883739 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.203693492 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.203624721 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.203994526 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.202106404 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.204394577 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.205367365 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.205128479 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.205603027 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.204691578 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.203144897 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.204800899 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.201944246 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.202252308 seconds)
  done (took 34.82482784 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.204368396 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.204624818 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.200522457 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.201187109 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.200860304 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.199576758 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.20226822 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.202087125 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.206310481 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.202791656 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.203932959 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.203138736 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.20643848 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.204535301 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.206467898 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.205034813 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.203387534 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.201086155 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.202017795 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.203020514 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.205791747 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.207907017 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.207879843 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.204347606 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.201973784 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.206190195 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.205731241 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.202116843 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.206904194 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.204456302 seconds)
  done (took 37.25488956 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.224519764 seconds)
    (2/2) benchmarking "in"...
    done (took 1.224603788 seconds)
  done (took 3.589097506 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.202920213 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.208663302 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.2012674 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.205320296 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.202988056 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.20365967 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.206803729 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.2030532 seconds)
  done (took 10.775230519 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.20178978 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.20359046 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.202193326 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.206213196 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.204377108 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.207023445 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.214651901 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.223361894 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.207452735 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.208223237 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.212221029 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.214486119 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.211805539 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.207266053 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.208080783 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.210833655 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.20845821 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.208434085 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.207473183 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.20947994 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.20812865 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.211016518 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.210765205 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.204246439 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.206575507 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.22079079 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.21448556 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.204194443 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.206824599 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.213591783 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.20754108 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.204552579 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.205595719 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.207124873 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.206927276 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.209435145 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.218859834 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.225959002 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.217180857 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.209605659 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.205776421 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.207110208 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.210051464 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.212217734 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.212670422 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.209822449 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.208780724 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.204209235 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.208748567 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.208894395 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.214198406 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.209566828 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.204803816 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.217204683 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.211487366 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.214197792 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.225412472 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.209658101 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.216908147 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.219883597 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.221151115 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.219736759 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.211562935 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.207559444 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.217376234 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.228797374 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.221086939 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.224108347 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.208984967 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.207621546 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.219893498 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.224493917 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.218450287 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.211354753 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.208586226 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.210063031 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.209775608 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.210743356 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.220073797 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.231267258 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.209308367 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.209614093 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.219174539 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.230410261 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.207576766 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.211284033 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.208974984 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.210289724 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.209212689 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.222471228 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.228111545 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.212545604 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.211084913 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.210638997 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.21332244 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.212558485 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.211229794 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.213416702 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.211435601 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.210763253 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.212166006 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.210140147 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.220501454 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.210129105 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.212145808 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.221757847 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.214206628 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.211000245 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.222750823 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.211286703 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.211833219 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.209170314 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.218714886 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.209481266 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.215187123 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.220104053 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.212165491 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.215369051 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.214424966 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.215062239 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.217319848 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.237880318 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.213197724 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.213374286 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.214775557 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.223398508 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.21410968 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.217737467 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.213828599 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.210488276 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.210133507 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.216369341 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.212539021 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.213035746 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.212702566 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.212847028 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.208463773 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.209288232 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.208459358 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.210809182 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.21244882 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.209538577 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.212471405 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.208292203 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.199108962 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.201477909 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.207898385 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.200715655 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.201576079 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.19997389 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.196868204 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.20192479 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.195444747 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.19252662 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.19181861 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.191625366 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.191906734 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.193944171 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.193266825 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.193776869 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.193319444 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.193732649 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.196586342 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.192480934 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.200810963 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.194261924 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.192809752 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.193524759 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.193567877 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.196017242 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.196396061 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.194019612 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.197046813 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.200492756 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.195391755 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.197316818 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.199864178 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.191940414 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.192157978 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.191195173 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.196812163 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.202069893 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.194359553 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.204460203 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.196129102 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.192740649 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.195062442 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.195884556 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.197489578 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.195527289 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.197366283 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.202302398 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.209585759 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.206329698 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.197192378 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.19950617 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.196874756 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.198825761 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.201718392 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.194189649 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.195689364 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.194611555 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.19609101 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.196053792 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.198435343 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.197392711 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.196311269 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.195093703 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.197438001 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.194488216 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.196121137 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.188988815 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.191081166 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.188232055 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.188490066 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.190888248 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.189273048 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.188361518 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.189963212 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.186780181 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.185356554 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.178824258 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.194241918 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.186052579 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.187997333 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.189525112 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.185781273 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.185440471 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.187820932 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.189884785 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.186203132 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.192061607 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.203126995 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.188680704 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.19626709 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.203632052 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.186743053 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.190947545 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.1882934 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.186476657 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.190209281 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.196869528 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.191031786 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.186971587 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.188133291 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.186327453 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.187259106 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.195831499 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.189266273 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.187240844 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.189885103 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.192495054 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.186875383 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.190219685 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.190051666 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.192715055 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.19253986 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.189866272 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.18890844 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.190605474 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.188855164 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.187637422 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.187552184 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.190119984 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.19590256 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.196917928 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.190435634 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.193703052 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.190995243 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.19095686 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.190021261 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.1878502 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.188497431 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.203747147 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.198348051 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.197805586 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.195119125 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.190349506 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.196921606 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.191999241 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.193257245 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.18937496 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.19141007 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.190553246 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.188539105 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.189797533 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.188987786 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.187114327 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.189309765 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.188928481 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.193197876 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.188472525 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.187393641 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.187552144 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.18833697 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.184393047 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.186844875 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.188052717 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.19186708 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.190747169 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.187705764 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.187570393 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.196308291 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.205475986 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.190512721 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.187939677 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.189409889 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.186520825 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.189663328 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.188076008 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.189746254 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.197220055 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.189942084 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.197158682 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.188817133 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.201889304 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.188127287 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.191196424 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.19640407 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.185381301 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.184542111 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.187298453 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.182806019 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.195760588 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.202675177 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.187054965 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.188350008 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.186729694 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.183057851 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.183088152 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.182263523 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.184810796 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.178011768 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.194206976 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.195701748 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.185002851 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.183052567 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.179466836 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.179152473 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.181163881 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.182347382 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.183638017 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.182490311 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.179731873 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.177911027 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.177341334 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.177436903 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.180482147 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.183268865 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.177883867 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.179919759 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.188309516 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.192514482 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.18431662 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.181260013 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.192529551 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.180476883 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.189835699 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.194199178 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.179971956 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.178205626 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.183253917 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.183431963 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.17931078 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.178556056 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.178156897 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.178641074 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.187171415 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.177870719 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.187888201 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.18156282 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.18011435 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.184985289 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.187528179 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.203712397 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.181364101 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.182359983 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.179871806 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.182595869 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.1888913 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.180012946 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.183367689 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.182419842 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.191843029 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.188323774 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.180766041 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.181596298 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.181454989 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.181061937 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.180669047 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.185497872 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.180923806 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.180711351 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.18313939 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.180299955 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.193082931 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.18450735 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.18169718 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.187610003 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.184731874 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.197084898 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.183625448 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.183024618 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.185454059 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.181201228 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.183793307 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.181242688 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.180491779 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.186728632 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.181994848 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.186442801 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.186876943 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.191077523 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.183703394 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.181779122 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.185197067 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.183496359 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.183103429 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.180402184 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.182026551 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.18625933 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.186253323 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.184720881 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.186703682 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.18013519 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.185924691 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.183510774 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.186517814 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.183164465 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.191086868 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.184453224 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.185168813 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.184939106 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.184903466 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.186147352 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.183530533 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.197193525 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.191316918 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.191908004 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.190755203 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.186652771 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.183838255 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.186187114 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.192883041 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.185923448 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.184706449 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.185853485 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.189647832 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.184498753 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.186965882 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.184951916 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.19046795 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.188717067 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.183368633 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.194368622 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.19831732 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.184108777 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.182716931 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.186595956 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.1873515 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.182249859 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.18586741 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.184882098 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.193537068 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.20027691 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.183279714 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.191888995 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.186247275 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.184408938 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.18813803 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.184490674 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.184701931 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.18232797 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.18483972 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.183649448 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.186761193 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.181632722 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.184438337 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.184716938 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.190374807 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.193199445 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.182442821 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.191162438 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.190678261 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.186369006 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.185616832 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.186052242 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.181144488 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.183001798 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.184674795 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.187285703 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.189447668 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.189128387 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.185893542 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.18743355 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.188553207 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.183304399 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.185974076 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.193064155 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.192847561 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.183885212 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.185225127 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.187290769 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.192120275 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.185395292 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.187318581 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.186242801 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.19191006 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.185860021 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.183175938 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.183591762 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.190924381 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.209318444 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.207790194 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.188234146 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.187597287 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.193661157 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.186125705 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.187359214 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.19107065 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.189927197 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.190309339 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.194929596 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.184746528 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.19238827 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.204227402 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.185868792 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.189515948 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.188115057 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.194792868 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.194393377 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.187342521 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.186506472 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.191965357 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.201909185 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.189410178 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.193266976 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.215427609 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.208265559 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.184524831 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.18308411 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.182160218 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.18338415 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.185856861 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.184058212 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.186091842 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.183049259 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.179816025 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.17861135 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.189009287 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.184268445 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.181752875 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.185274534 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.185029719 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.185673844 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.177519061 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.182523539 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.185972567 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.182592912 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.183207732 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.18298839 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.180455873 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.196987191 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.1946374 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.181212096 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.183684085 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.182554042 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.188091013 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.185071387 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.194789377 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.193249938 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.182635483 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.183583739 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.183195258 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.186639317 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.18153101 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.18212605 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.185763286 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.182406757 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.184329498 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.196466977 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.195286346 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.189393641 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.186030238 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.184884934 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.185329092 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.186939313 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.187211325 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.184534847 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.18676069 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.186656264 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.185080631 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.185188963 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.187486434 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.188150564 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.19162399 seconds)
  done (took 713.202247541 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.184964295 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.184571151 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.183912159 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.185541729 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.183735672 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.178587656 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.184822645 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.178207467 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.182574855 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.182225519 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.17778053 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.178240625 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.182986208 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.179834957 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.18003707 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.178091692 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.182852812 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.186011587 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.18222446 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.181369332 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.182771131 seconds)
  done (took 25.944155716 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.185631367 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.185463679 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.179461284 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.182734184 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.183182689 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.188053075 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.185024283 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.184494641 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.183695564 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.181817261 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.181922518 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.184219295 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.182996159 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.184096589 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.184854839 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.18595802 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.184533109 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.185610341 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.186126599 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.181071105 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.187851925 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.186353756 seconds)
  done (took 27.177713968 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.18421285 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.187638587 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.185612199 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.183213686 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.187726013 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.180978617 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.186156773 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.189239434 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.185185448 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.186155352 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.187929488 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.1889929 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.191238309 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.191561403 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.188470691 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.184117816 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.331892301 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.184456647 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.187165061 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.185689583 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.182211773 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.198147427 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.184390472 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.182421193 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.183898009 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.18979053 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.188648772 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.190283463 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.18742149 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.188594186 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.190869573 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.187954917 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.188696595 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.189276417 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.185242995 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.1913278 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.190016007 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.185129377 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.188910117 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.186059677 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.19651921 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.203830829 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.188094228 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.197256418 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.187521325 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.190366715 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.18946619 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.19607712 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.185831476 seconds)
  done (took 59.494740928 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.189221751 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.189542814 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.185155317 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.185651948 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.188573348 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.191244045 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.189962948 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.189617165 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.187284023 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.187428298 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.188200512 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.18835371 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.190610034 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.192515534 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.188094733 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.187960162 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.186883923 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.1865081 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.186642272 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.184407597 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.191120173 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.188674446 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.18838342 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.190356846 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.191833642 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.1914003 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.189141099 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.193656171 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.188484049 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.187371545 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.190595691 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.193791003 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.187778314 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.186329062 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.187251801 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.19239888 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.192656822 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.192160846 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.194241529 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.1923721 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.192859039 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.192570143 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.190904336 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.193487135 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.187249713 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.190481877 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.189323184 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.187905118 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.189901879 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.191637594 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.194888601 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.190612868 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.192971989 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.189127516 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.192906708 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.193614092 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.189769887 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.187511661 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.190264448 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.189977451 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.191160644 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.188329736 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.190945249 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.193750476 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.189601188 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.194502669 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.192443835 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.192017574 seconds)
  done (took 82.04689622 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.191164637 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.190261228 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.191103777 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.192363792 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.189268236 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.188344009 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.1913827 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.192123521 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.192596389 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.192329163 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.193333361 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.195164349 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.193095939 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.192874487 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.189731148 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.193068238 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.193405937 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.192956734 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.190355752 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.194379532 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.191431075 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.193857913 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.192354761 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.193092761 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.191339671 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.191966373 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.194038348 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.193145674 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.18861529 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.19289646 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.194721745 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.192663807 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.192632194 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.1914704 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.194576093 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.192928726 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.196101662 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.192458696 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.194801102 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.196906595 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.191382402 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.195458794 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.194722464 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.191834284 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.192350495 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.19365633 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.193651623 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.195564056 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.195543852 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.195623197 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.197445478 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.195848504 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.196160348 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.19208354 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.196723151 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.193013854 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.195132503 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.194984947 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.193317604 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.192688863 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.191691587 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.199729578 seconds)
  done (took 75.106656371 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.195805305 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.192980678 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.19282219 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.192244966 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.193555703 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.191759751 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.195828187 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.195458965 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.197450965 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.199424574 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.198856084 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.193740574 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.195688086 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.19910123 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.19599905 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.193932623 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.194105014 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.19476025 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.196279908 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.197055862 seconds)
  done (took 25.038683279 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.194419243 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.194356814 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.19400356 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.198254418 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.199833282 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.194877849 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.19800387 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.197381391 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.194638724 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.197382939 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.197701093 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.197229283 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.194435641 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.195329731 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.200367228 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.195851996 seconds)
  done (took 20.277218872 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.19690982 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.19721162 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.200930261 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.199187025 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.197680426 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.196725582 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.198132347 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.196664898 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.195167831 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.199862874 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.199740449 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.198305933 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.197690702 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.200585783 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.19576682 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.200180115 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.199548879 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.19524662 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.198772047 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.198254613 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.19768157 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.199501042 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.199276131 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.19942908 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.199606144 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.19608329 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.19809666 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.197845657 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.19667307 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.202489217 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.197036606 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.197932855 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.197368824 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.197991327 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.20061091 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.196982411 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.200782925 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.200796586 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.200384504 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.200608658 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.201074326 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.19853528 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.200644027 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.201460619 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.197905307 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.19999218 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.19855041 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.199955628 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.196288933 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.19753017 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.200449896 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.201126013 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.200772322 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.201502153 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.201913929 seconds)
  done (took 67.076753063 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.201595374 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.200761089 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.199971419 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.201830071 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.199467199 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.19838011 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.202108332 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.199936509 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.199298144 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.200529347 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.200173672 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.202595239 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.199464926 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.201165458 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.20007455 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.203073598 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.199152522 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.199504876 seconds)
  done (took 22.747378525 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.200528718 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.200907173 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.202347712 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.199107636 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.199605391 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.202017931 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.200641632 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.202292476 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.203002889 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.201063282 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.200916276 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.202539518 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.201951006 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.203453053 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.202104995 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.199845898 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.202935952 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.202492297 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.200729581 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.200417447 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.202946684 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.203991138 seconds)
  done (took 27.575641504 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.202004017 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.201162206 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.21880257 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.242865485 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.230200796 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.20409216 seconds)
  done (took 8.439286453 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.200505616 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.20320942 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.202542552 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.204074287 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.202678518 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.201360172 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.201141583 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.200065348 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.202636013 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.201924196 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.199864439 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.204144429 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.202840391 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.202126369 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.204858405 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.204502522 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.200256184 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.201778758 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.202612784 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.204786115 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.201910548 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.203594103 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.202823475 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.201338842 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.202468047 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.201038738 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.204934459 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.202636991 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.202565532 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.205684633 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.204784813 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.202326731 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.204618405 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.203321722 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.206218223 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.204397592 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.202980879 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.204552949 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.205349037 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.202499342 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.204319776 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.204829557 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.205928148 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.203129849 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.206119587 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.203251517 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.202979246 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.204372503 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.201967317 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.205043031 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.205315231 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.2028625 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.205603103 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.205925897 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.205951574 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.20660076 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.203596155 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.202879467 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.206418484 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.204459459 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.203801739 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.205288192 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.203567419 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.203812506 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.206592481 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.203508683 seconds)
  done (took 80.578721671 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.204105595 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.204290928 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.204046562 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.20486254 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.204225086 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.204922996 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.204496989 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.203954422 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.199878789 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.201390482 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.202175948 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.198216235 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.199707938 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.200658013 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.19910405 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.200094487 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.195749943 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.195304756 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.195702517 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.197694513 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.195993896 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.194931424 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.195657267 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.196631632 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.196647532 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.198786494 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.195941083 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.195696113 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.195099057 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.196054337 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.195748834 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.198033739 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.196371446 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.196901547 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.195964338 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.196236068 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.195269284 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.198927484 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.193204 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.198534401 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.195081319 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.196513632 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.197196052 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.196818801 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.196391205 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.196232904 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.197216466 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.193376274 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.197749353 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.197494886 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.197421082 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.196948891 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.19874104 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.196891319 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.194407269 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.197150951 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.197112022 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.196957809 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.196682886 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.200060353 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.199373087 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.197614461 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.199359349 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.197859625 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.196696544 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.197924714 seconds)
  done (took 80.217459962 seconds)
done (took 1659.428333166 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.268293455 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.195558392 seconds)
  done (took 13.598661697 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.36166295 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.312771335 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.197882326 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.193587688 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.191998574 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.217032339 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.204597457 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.191331836 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.192576364 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.194000283 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.19087027 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.378968991 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.243664572 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.187234431 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.191929643 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.285237355 seconds)
  done (took 40.875707457 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.215234313 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.202643442 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.299147225 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.214035394 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.219794516 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.359680384 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.247512925 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.20248487 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.345312705 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.236115318 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.540448375 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.218246612 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.202411334 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.153949382 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.216393901 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.359955825 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.411142092 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.543498263 seconds)
  done (took 27.319672367 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.57308621 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.20297901 seconds)
  done (took 8.911640413 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.238708816 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.235440283 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.211427799 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.231942219 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.207003702 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.238550523 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.240291864 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.256960153 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.233888707 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.26237217 seconds)
  done (took 63.502639513 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.213917354 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.196014369 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.202685367 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.197010695 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.187028152 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.192843923 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.199107473 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.192994095 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.326239929 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.306904894 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.21576284 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.206848148 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.202085931 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.201394852 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.199972538 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.23333872 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.323515987 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.199991697 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.197230201 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.207752715 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.202070872 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.3220293 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.236142505 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.19977808 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.306649483 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.285221688 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.204754308 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.20760835 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.320059273 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.196709953 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.197700608 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.201574079 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.20398667 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.749787095 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.708273836 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.207717235 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.222109251 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.21041251 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.195943959 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.376006143 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.199263109 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.208315894 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.203273598 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.689212678 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.350830633 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.302337295 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.302641438 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.202715433 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.203946387 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.259134715 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.201839611 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.20384034 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.228984132 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.909873135 seconds)
  done (took 102.757223696 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.20399375 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.688591733 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.36265588 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.211154956 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.952291837 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.851358386 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.196438429 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.438089949 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.203862649 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.195950538 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.521432473 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.655911154 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.200167117 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.20793714 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.282678736 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.200147791 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.19608478 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.934163389 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.1966543 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.197756726 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.598043709 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.210380506 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.210262466 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.247105543 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.233290824 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.620812378 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.463757316 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.610850741 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.195982289 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.19653141 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.616986855 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.204244162 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.278998124 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.199746275 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.450846665 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.510965925 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.496646128 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.197718912 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.211732206 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.198156205 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.229863727 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.619447294 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.509173472 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.198840302 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.19627404 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.624432781 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.198338231 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.197881812 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.201732303 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.394794223 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.187125301 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.194810854 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.479058844 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.198748488 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.535598638 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.208683086 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.274328312 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.648674833 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.197109277 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.244352304 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.249577947 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.198926504 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.20265586 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.200074306 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.199927634 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.505758087 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.605728216 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.206436153 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.508214517 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.614747076 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.200655 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.68482882 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.052979942 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.220231958 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.259188045 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.198520387 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.746281058 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.650667087 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.255776644 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.198777516 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.495587886 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.204133489 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.500594454 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.212342359 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.197876997 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.608298539 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.222397648 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.22534626 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.208201475 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.201850665 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.819172066 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.204492898 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.445691492 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.229930288 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.199950263 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.199501601 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.212568741 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.200402997 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.214660806 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.20130731 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.688149355 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.209706709 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.476848944 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.217508611 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.205744603 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.202382469 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.204162886 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.201255559 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.412881473 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.633563545 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.206894254 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.201194249 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.200034055 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.204204589 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.211654755 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.205951719 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.469936236 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.204299177 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.210816526 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.202316012 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.87596185 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.217593805 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.20170454 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.204660426 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.036167481 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.409818605 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.216620109 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.217070235 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.201809117 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.215493243 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.419343578 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.203747805 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.245040278 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.202552314 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.86322741 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.235553669 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.237266613 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.857339725 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.210411903 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.026527735 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.218844203 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.201397118 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.497752432 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.458224276 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.499173251 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.205107975 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.203587502 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.850377171 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.241868737 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.33383868 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.220659991 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.199961813 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.398151605 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.435587406 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.203029963 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.792164852 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.204632401 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.408318707 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.201888691 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.512122345 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.648440563 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.205530212 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.208841303 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.86349508 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.862055392 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.834692129 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.203560404 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.51670136 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.175433662 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.659112542 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.20441067 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.203907927 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.628750662 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.204679941 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.203209507 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.203172541 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.204550105 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.273239252 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.376929152 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.498364827 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.203575963 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.628403473 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.216040505 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.203429042 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.212324719 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.203486295 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.558470795 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.275870184 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.208654627 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.262568349 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.206867155 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.207317445 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.641794261 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.095386975 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.207759111 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.356188742 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.792805765 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.206275562 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.205475415 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.848954591 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.489249699 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.676156829 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.237548589 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.476987102 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.21096404 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.241649923 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.894106354 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.2270128 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.640147134 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.208592665 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.207431521 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.761141143 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.206853945 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.267157093 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.206333626 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.205900944 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.699631278 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.208199877 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.206090246 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.431257584 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.207976514 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.463385714 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.207126574 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.253429482 seconds)
  done (took 1078.610947746 seconds)
done (took 1336.71375925 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.208311376 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.20851013 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.197380697 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.209606385 seconds)
  done (took 25.97384266 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.218973571 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.213325942 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.21487389 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.212912599 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.216228597 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.212561429 seconds)
  done (took 8.439418086 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.257000554 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.209173565 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.209303804 seconds)
  done (took 18.826787638 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.404254287 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.364274797 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.535165279 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.128684723 seconds)
  done (took 9.584473724 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.215760514 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.215129635 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.214720793 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.217356889 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.218144684 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.218696353 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.217138274 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.21697037 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.217947267 seconds)
  done (took 12.10303392 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.69878278 seconds)
done (took 80.775570124 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.318592791 seconds)
    (2/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.208971477 seconds)
    (3/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.235670008 seconds)
    (4/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.467173873 seconds)
    (5/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.333039964 seconds)
    (6/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.972664248 seconds)
    (7/309) benchmarking ("map", identity, BigInt, false)...
    done (took 1.955384669 seconds)
    (8/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.236105586 seconds)
    (9/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.42681402 seconds)
    (10/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.588811604 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.561237084 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.482560933 seconds)
    (13/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.208427244 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.252967005 seconds)
    (15/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.212061656 seconds)
    (16/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.666097253 seconds)
    (17/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.239265624 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.235661184 seconds)
    (19/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.211764674 seconds)
    (20/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.494593219 seconds)
    (21/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.353629314 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.992188578 seconds)
    (23/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.336437386 seconds)
    (24/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.302931845 seconds)
    (25/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.882351808 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.060542358 seconds)
    (27/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.212131121 seconds)
    (28/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.338379191 seconds)
    (29/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.656249269 seconds)
    (30/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.963511239 seconds)
    (31/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.390608638 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.284826599 seconds)
    (33/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.383863387 seconds)
    (34/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.197715273 seconds)
    (35/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.199157936 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.331297151 seconds)
    (37/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.296188933 seconds)
    (38/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.407932364 seconds)
    (39/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.629166589 seconds)
    (40/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.319093136 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.312186324 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.608235397 seconds)
    (43/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.251984356 seconds)
    (44/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.705623008 seconds)
    (45/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.239447393 seconds)
    (46/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.6346293 seconds)
    (47/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.323876487 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.059372358 seconds)
    (49/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.47262799 seconds)
    (50/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.393486799 seconds)
    (51/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.553973366 seconds)
    (52/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.79619015 seconds)
    (53/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.213643499 seconds)
    (54/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.498442443 seconds)
    (55/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.023667327 seconds)
    (56/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.271989032 seconds)
    (57/309) benchmarking ("sort", BigInt, false)...
    done (took 6.213480256 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.263489234 seconds)
    (59/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.53137458 seconds)
    (60/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.253710354 seconds)
    (61/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.389254903 seconds)
    (62/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.26360725 seconds)
    (63/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.323460528 seconds)
    (64/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.547452207 seconds)
    (65/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.213576784 seconds)
    (66/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.43831474 seconds)
    (67/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.420575542 seconds)
    (68/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.762417392 seconds)
    (69/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.216344717 seconds)
    (70/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.762451799 seconds)
    (71/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.430386097 seconds)
    (72/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.186956721 seconds)
    (73/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.809738654 seconds)
    (74/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.205673327 seconds)
    (75/309) benchmarking ("sort", Int64, false)...
    done (took 5.359743892 seconds)
    (76/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.239487535 seconds)
    (77/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.496890354 seconds)
    (78/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.200165571 seconds)
    (79/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.772069423 seconds)
    (80/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.541408717 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.574391382 seconds)
    (82/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.213504874 seconds)
    (83/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.567555951 seconds)
    (84/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.242638588 seconds)
    (85/309) benchmarking ("sort", Float64, false)...
    done (took 5.462044762 seconds)
    (86/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.296432479 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.426817223 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.611441041 seconds)
    (89/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.340162821 seconds)
    (90/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.219566411 seconds)
    (91/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.201404735 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.538902159 seconds)
    (93/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.409251351 seconds)
    (94/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.24036875 seconds)
    (95/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.239856886 seconds)
    (96/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.223061842 seconds)
    (97/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.511210905 seconds)
    (98/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.300054535 seconds)
    (99/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.215876554 seconds)
    (100/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.423391974 seconds)
    (101/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.231502967 seconds)
    (102/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.237438488 seconds)
    (103/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.754579721 seconds)
    (104/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.205567765 seconds)
    (105/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.430153448 seconds)
    (106/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.221677461 seconds)
    (107/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.32246615 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.737300273 seconds)
    (109/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.221504063 seconds)
    (110/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.219772908 seconds)
    (111/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.237009233 seconds)
    (112/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.88579746 seconds)
    (113/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.215711657 seconds)
    (114/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.228831898 seconds)
    (115/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.961481611 seconds)
    (116/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.970927441 seconds)
    (117/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.449692576 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.60573044 seconds)
    (119/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.595077213 seconds)
    (120/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.200065328 seconds)
    (121/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.047869154 seconds)
    (122/309) benchmarking ("sort", Bool, false)...
    done (took 1.716537396 seconds)
    (123/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.23942119 seconds)
    (124/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.492661865 seconds)
    (125/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.200872173 seconds)
    (126/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.486450168 seconds)
    (127/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.906581714 seconds)
    (128/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.650930986 seconds)
    (129/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.884201988 seconds)
    (130/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.470002016 seconds)
    (131/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.224154395 seconds)
    (132/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.215786841 seconds)
    (133/309) benchmarking ("sort", Int8, false)...
    done (took 4.229543773 seconds)
    (134/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.78115443 seconds)
    (135/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.231152199 seconds)
    (136/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.293599156 seconds)
    (137/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.722063865 seconds)
    (138/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.344362994 seconds)
    (139/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.206299771 seconds)
    (140/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.218602622 seconds)
    (141/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.322314357 seconds)
    (142/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.902196013 seconds)
    (143/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.827915519 seconds)
    (144/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.884955566 seconds)
    (145/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.315390311 seconds)
    (146/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.243144306 seconds)
    (147/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.612877268 seconds)
    (148/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.51866663 seconds)
    (149/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.68857556 seconds)
    (150/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.752746005 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.205284062 seconds)
    (152/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.28336969 seconds)
    (153/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.202887221 seconds)
    (154/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.432488817 seconds)
    (155/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.553165957 seconds)
    (156/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.281753577 seconds)
    (157/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.298341048 seconds)
    (158/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.437058981 seconds)
    (159/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.977113565 seconds)
    (160/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.205440652 seconds)
    (161/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.759209468 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.010869051 seconds)
    (163/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.241201065 seconds)
    (164/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.276326564 seconds)
    (165/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.203676259 seconds)
    (166/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.347652277 seconds)
    (167/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.442255144 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.822649299 seconds)
    (169/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.219415863 seconds)
    (170/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.607345501 seconds)
    (171/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.219681114 seconds)
    (172/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.305103068 seconds)
    (173/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.221189784 seconds)
    (174/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.901404583 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.072843332 seconds)
    (176/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.237661574 seconds)
    (177/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.984166372 seconds)
    (178/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.212619105 seconds)
    (179/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.627334642 seconds)
    (180/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.246941047 seconds)
    (181/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.214971403 seconds)
    (182/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.935099463 seconds)
    (183/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.80006311 seconds)
    (184/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.270655413 seconds)
    (185/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.227747375 seconds)
    (186/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.899756442 seconds)
    (187/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.274711885 seconds)
    (188/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.282650581 seconds)
    (189/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.218130231 seconds)
    (190/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.023263379 seconds)
    (191/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.330441739 seconds)
    (192/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.218423109 seconds)
    (193/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.997920996 seconds)
    (194/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.30397639 seconds)
    (195/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.204659478 seconds)
    (196/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.725846616 seconds)
    (197/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.219456358 seconds)
    (198/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.279653415 seconds)
    (199/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.246033926 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.67804812 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.61834606 seconds)
    (202/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.361033268 seconds)
    (203/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.305972996 seconds)
    (204/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.359474208 seconds)
    (205/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.245176258 seconds)
    (206/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.572639842 seconds)
    (207/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.526899497 seconds)
    (208/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.765619476 seconds)
    (209/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.430819572 seconds)
    (210/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.516323782 seconds)
    (211/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.466088461 seconds)
    (212/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.233454618 seconds)
    (213/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.488057647 seconds)
    (214/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.913533312 seconds)
    (215/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.247872249 seconds)
    (216/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.241172806 seconds)
    (217/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.287763778 seconds)
    (218/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.206377876 seconds)
    (219/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.298705429 seconds)
    (220/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.323167885 seconds)
    (221/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.221383262 seconds)
    (222/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.76883633 seconds)
    (223/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.257148043 seconds)
    (224/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.903569798 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.293698874 seconds)
    (226/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.245140211 seconds)
    (227/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.265004335 seconds)
    (228/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.31881716 seconds)
    (229/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.35415096 seconds)
    (230/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.719459407 seconds)
    (231/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.221795795 seconds)
    (232/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.254826312 seconds)
    (233/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.24483688 seconds)
    (234/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.226007949 seconds)
    (235/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.359186833 seconds)
    (236/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.510068868 seconds)
    (237/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.681294332 seconds)
    (238/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.221225111 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.243226528 seconds)
    (240/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.223147692 seconds)
    (241/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.305893474 seconds)
    (242/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.720213971 seconds)
    (243/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.571016675 seconds)
    (244/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.239799993 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.321333914 seconds)
    (246/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.206913201 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.940927938 seconds)
    (248/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.780543594 seconds)
    (249/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.26017353 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.936188258 seconds)
    (251/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.772596005 seconds)
    (252/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.303040904 seconds)
    (253/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.400230222 seconds)
    (254/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.471276581 seconds)
    (255/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.660598023 seconds)
    (256/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.223213442 seconds)
    (257/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.812392934 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.208132317 seconds)
    (259/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.94652232 seconds)
    (260/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.224013846 seconds)
    (261/309) benchmarking ("sort", Float32, false)...
    done (took 5.212702149 seconds)
    (262/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.268800703 seconds)
    (263/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.439094393 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.736110869 seconds)
    (265/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.415935834 seconds)
    (266/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.43358567 seconds)
    (267/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.3263251 seconds)
    (268/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.457048683 seconds)
    (269/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.249320396 seconds)
    (270/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.903331544 seconds)
    (271/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.288635073 seconds)
    (272/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.720304518 seconds)
    (273/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.610750784 seconds)
    (274/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.237924848 seconds)
    (275/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.377560169 seconds)
    (276/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.539727073 seconds)
    (277/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.476623899 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.763313149 seconds)
    (279/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.382730021 seconds)
    (280/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.28761583 seconds)
    (281/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.416759735 seconds)
    (282/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.571406068 seconds)
    (283/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.224706342 seconds)
    (284/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.945813869 seconds)
    (285/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.19972253 seconds)
    (286/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.23441797 seconds)
    (287/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.991607461 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.305476684 seconds)
    (289/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.385367842 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.275638186 seconds)
    (291/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.381101561 seconds)
    (292/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.307563344 seconds)
    (293/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.334186352 seconds)
    (294/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.306260324 seconds)
    (295/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.041599783 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.391335295 seconds)
    (297/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.343575995 seconds)
    (298/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.515821367 seconds)
    (299/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.311015404 seconds)
    (300/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.342308674 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.265090917 seconds)
    (302/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.211460248 seconds)
    (303/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.388683542 seconds)
    (304/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.48139256 seconds)
    (305/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.235803827 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.247110835 seconds)
    (307/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.343531322 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.040859374 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.213195288 seconds)
  done (took 873.86091224 seconds)
done (took 875.015522735 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.255294425 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.251274743 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.235157974 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.255943907 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.346599286 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.267364908 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.24639894 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.237969103 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.283765816 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.284916884 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.234815064 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.268676391 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.236579693 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.234753412 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.234938353 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.250356941 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.144516916 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.237349007 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.253726297 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.245386413 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.252238085 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.234393179 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.286016343 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.268022875 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.240145012 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.239807304 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.238702306 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.256586207 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.348472929 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.23925528 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.238456712 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.24733804 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.144763877 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.237179528 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.232263924 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.255776798 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.247758879 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.244891066 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.240516601 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.269228654 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.505611248 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.238303398 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.238726745 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.237360138 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.237334902 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.240899046 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.237924144 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.243863305 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.249884123 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.251143364 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.512863387 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.254273392 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.241269191 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.23813306 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.24918035 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.238888719 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.241595881 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.253955961 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.256736065 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.250899697 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.139585041 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.245778134 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.240901297 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.255085661 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.245882019 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.557717562 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.236287484 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.243544478 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.512959255 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.245978427 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.558700807 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.248980578 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.240705281 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.253809215 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.266868215 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.147691384 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.236017814 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.239013377 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.246019177 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.236713526 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.251013297 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.251359268 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.243310655 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.241297472 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.251278813 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.271918451 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.249720921 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.241381957 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.248635886 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.258909192 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.247574467 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.25042373 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.243976993 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.23622561 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.247920009 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.24412163 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.243048461 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.242051077 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.244096231 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.250492026 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.509187637 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.259070493 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.237992366 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.23719826 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.239684433 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.254816318 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.510334102 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.243869483 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.260924461 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.28501277 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.241844564 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.14635987 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.246304898 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.253889668 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.249182814 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.244057402 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.238540973 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.147472843 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.523976234 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.257934002 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.242490724 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.24059217 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.257269096 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.244070179 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.239160078 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.154310161 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.244814207 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.256346057 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.363103935 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.252694635 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.273644193 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.240129914 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.24532674 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.271344362 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.258519207 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.270958509 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.243861251 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.259635431 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.259237994 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.23998665 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.252777104 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.250731397 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.245392085 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.248895308 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.238023015 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.276209023 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.255401243 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.252659054 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.264226475 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.363937827 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.239506654 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.147159669 seconds)
done (took 208.799872638 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.301656951 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.236028215 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.342599283 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.24036572 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.337084981 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.336191836 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.238203067 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.236653753 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.237084235 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.615793134 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.238752782 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.237763129 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.237153884 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.238474817 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.322700824 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.240683038 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.238809888 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.579068047 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.240163638 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.310882071 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.231417657 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.237995169 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.240470163 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.619996513 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.241226373 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.236363027 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.311255078 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.241269943 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.585831195 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.243356875 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.233210446 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.585112349 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.329936026 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.256876383 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.251451197 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.248454051 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.33771298 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.254647284 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.32168303 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.321533634 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.344440957 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.280118247 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.238822732 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.235221713 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.242993476 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.242385639 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.23882351 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.269723351 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.241590213 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.239437536 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.581776708 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.250870615 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.250433419 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.239916468 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.240876156 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.26198682 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.239504899 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.24275562 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.332479729 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.240944446 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.304682544 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.62241907 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.615778813 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.242100285 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.236104821 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.24168981 seconds)
  done (took 142.230877253 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.309993605 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.311700011 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.348163758 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.244404214 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.292668226 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.353019765 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.239935344 seconds)
  done (took 10.277486429 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.24934569 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.241120166 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.291417246 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.292294534 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.242397049 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.390519803 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.243763994 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.254873073 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.241496605 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.295482716 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.244644482 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.245177735 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.251160491 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.239715651 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.291959851 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.25348957 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.358044268 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.245856892 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.243290968 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.396752115 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.242775943 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.251376486 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.292575738 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.255505276 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.245961912 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.250751083 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.807269108 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.245140979 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.23837718 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.245000303 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.24264533 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.283641149 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.244921009 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.237971037 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.242842742 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.360175428 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.245413091 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.243148206 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.242883838 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.244204516 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.242836121 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.245178651 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.246022726 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.244134782 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.246758228 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.266694824 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.245577283 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.246768159 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.246061209 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.246622445 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.295903038 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.243476542 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.243759124 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.244185957 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.300730111 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.25288441 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.246896039 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.243963719 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.246884136 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.243113115 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.399460749 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.2945768 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.244989548 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.294873041 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.246782065 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.244250433 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.24762213 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.247217047 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.30089336 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.24525222 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.295160708 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.245507445 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.404128466 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.270639568 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.248011473 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.249635263 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.249962929 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.246854907 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.247439129 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.253352094 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.245092914 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.245556832 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.254734157 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.245361049 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.245247128 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.350165083 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.354639837 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.242163133 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.260548413 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.253889395 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.245801517 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.300034406 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.246607388 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.246309087 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.293102109 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.361567715 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.301502979 seconds)
  done (took 144.564482673 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.248706309 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.250125314 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.24876747 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.260374751 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.244599808 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.247736405 seconds)
  done (took 8.680069934 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.25020914 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.250577944 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.244560937 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.248743775 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.248634224 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.246890381 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.248317419 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.247745311 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.251797076 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.249898081 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.249960036 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.245259181 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.247598049 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.246391374 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.249560828 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.24648444 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.249002262 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.243452364 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.250311485 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.248469805 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.343825046 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.249498705 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.248600456 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.251262041 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.253258777 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.249739327 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.257273153 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.250372435 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.249945557 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.257373512 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.253401099 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.251170965 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.24795623 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.252858328 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.25388245 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.251673257 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.253986707 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.249144834 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.247371381 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.250931945 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.251983404 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.251153256 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.251928349 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.24947197 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.245851569 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.254957247 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.255766322 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.258948274 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.251785619 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.250754906 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.253119138 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.249398306 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.252929384 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.25340541 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.256785374 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.256732907 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.257005641 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.247338564 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.249198948 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.251058067 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.249766801 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.249412256 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.248278516 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.2547192 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.259493848 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.250908869 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.254417658 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.24974042 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.251475129 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.252312184 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.254619195 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.247480424 seconds)
  done (took 92.345092655 seconds)
done (took 399.272251826 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.414146521 seconds)
  done (took 7.598116357 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.491318133 seconds)
  done (took 7.681178186 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.16165352 seconds)
  done (took 19.356377082 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.263444146 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.336300948 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.260292298 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.246882886 seconds)
  done (took 26.296436057 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.337134679 seconds)
  done (took 7.522510731 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.239266951 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.259116403 seconds)
  done (took 13.689601401 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.599020279 seconds)
  done (took 7.785906606 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.112908688 seconds)
  done (took 8.304144517 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.250438128 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.274094227 seconds)
  done (took 13.722465452 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.232282733 seconds)
  done (took 7.416053161 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.134443249 seconds)
  done (took 8.322234763 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.255341542 seconds)
  done (took 7.448296438 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.309305894 seconds)
  done (took 7.499940191 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.413774284 seconds)
  done (took 8.603758446 seconds)
done (took 152.431443618 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.243545078 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.243022569 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.247896411 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.240562646 seconds)
  done (took 26.1575902 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.285819362 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.287777145 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.291155335 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.29653956 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.29224118 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.284031251 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.279678074 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.281186847 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.299930357 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.289141824 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.291344868 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.288369238 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.287944872 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.280441485 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.287900566 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.292301201 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.298743716 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.286803406 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.279442311 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.293475649 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.252636668 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.300102738 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.291661933 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.254343635 seconds)
  done (took 32.064453188 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.452499807 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.323578365 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.405884126 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.304810486 seconds)
  done (took 6.676276895 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.304935778 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.306261569 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.322612881 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.357173344 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.385251281 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.31255708 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.276705773 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.276309798 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.264719444 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.306529434 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.381480217 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.325227337 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.392448984 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.257327867 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.43951631 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.255805068 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.253431282 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.302284773 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.356053792 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.368619598 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.250308911 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.306823257 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.310296068 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.323595664 seconds)
  done (took 32.827568662 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.251275891 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.260461212 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.263004607 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.253372001 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.252837327 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.252595422 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.259926541 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.251991022 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.279218084 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.255020163 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.253758258 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.258458118 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.253730119 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.254364995 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.255881079 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.264238 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.267629819 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.254893027 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.26103197 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.264801125 seconds)
  done (took 26.360094734 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.245779127 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.100976047 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.599285271 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.50315229 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.248901129 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.250027162 seconds)
  done (took 27.137670371 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.31256323 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.435176079 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.258378124 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.575803611 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.649416709 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.255174937 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.256794422 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.466548273 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.731349219 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.73836869 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.307070088 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.315319263 seconds)
  done (took 18.489605926 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.257253702 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.252691828 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.251950784 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.269304808 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.302095027 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.259231215 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.260738045 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.24659947 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.306143559 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.313922718 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.260259227 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.30410475 seconds)
  done (took 36.473377065 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.334232639 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.291484817 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.109235223 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.964238409 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.626562879 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.461068284 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.992072369 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.664484248 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.255501955 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.523710483 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.949172449 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.35212212 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.502708856 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.259057548 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.25138125 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.171851335 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.475722438 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.697504396 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.257002929 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.927508184 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.279705873 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.252077977 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.021806735 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.275999393 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.46077324 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.376958761 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.509325208 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.249297418 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.504065751 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.262210291 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.261835115 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.252274518 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.52720186 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.884267755 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.343275484 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.263468545 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.926729973 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.965174432 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.236156891 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.951576675 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.698108903 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.258509192 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.261550622 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.251259579 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.191502596 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.260598883 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.686293112 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.263335278 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.96344151 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.256293203 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.263440729 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.346830532 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.256332123 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.069219971 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.259889299 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.253392427 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.25004613 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.25677285 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.825551515 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.391678468 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.266379869 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.193526624 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.614288425 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.939066133 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.829815538 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.358808918 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.260369291 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.25722038 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.187854904 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.940203182 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.276759001 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403858754 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.271707336 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.904587564 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.903557801 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.962481777 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.19780177 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.769372645 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.264059208 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.192912561 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.482282249 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.252039942 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.189557664 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.21004031 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.187676682 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912391128 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.266895046 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.57963956 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.265233726 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.671845196 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.266409002 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.275384938 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.280697986 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.482540235 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.139720866 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.257902059 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 5.735599137 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392949179 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.278437318 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.67968684 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.193793958 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.259117221 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.508240844 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.470471739 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.260050136 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.172300129 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.448781153 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.26538052 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.276323718 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.26093198 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.278781606 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.790630575 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.268374496 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.399212164 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.277090161 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.257825024 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.946778394 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.270999389 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.359578599 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.973892158 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.499882673 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 1.983634123 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.259291131 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.341078599 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.259429191 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.256761725 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.038334213 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.776287185 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.259665038 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.263444254 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.270697578 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.271024176 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.256392212 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.20888166 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.256106168 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.005213233 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.264879188 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.484597087 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.270548045 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.539576811 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.1938895 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407257018 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.350605754 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.479852857 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.358256458 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.256834515 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.519205431 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.258546215 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.277268105 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.272730571 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.279658693 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.357529319 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.277018951 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.262415575 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.513626875 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.265962914 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.267452056 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.04663346 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.267353681 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.71510195 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.263354968 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.081411754 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.789234948 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.238488257 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.259070933 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.146077197 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.276778665 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.322045336 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.266510446 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.268499615 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.906490959 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.064366645 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.266201936 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.263135917 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.48314913 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.2679846 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.0701878 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.34092321 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.441777884 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.792376384 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.27572619 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.192860479 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.968775437 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.951179149 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.264038433 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.19293011 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.25804232 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.271351201 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.275728798 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.76201213 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.796884109 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.267622302 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.957247556 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.265674379 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.26958988 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.263475514 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.261816322 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.885137242 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.423216509 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.28058705 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.277462978 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.407261412 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.27631332 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.197705479 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.265662896 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.267937861 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.259686821 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.261415107 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.295731142 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.966820928 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.733761705 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.519661453 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.972791568 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.273121782 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.133394117 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.288093163 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.288226194 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.773618224 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.278243542 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.276099419 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.278636217 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.27011482 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.027925254 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.933611232 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.8352411 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.932386677 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.747846519 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.155018797 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.271010889 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.266393005 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.683676241 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.198940134 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.826759606 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.431839846 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.685522301 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.210147736 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.44647891 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.366476736 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.963236987 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.275018153 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.491987555 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.154405666 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 5.781841182 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.283179466 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.475341195 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.299415155 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.273396328 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.193957838 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.787667686 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.481473586 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.746555862 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.344838411 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.683673568 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.801131172 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.274533067 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.260765753 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.538030454 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422174008 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.973994154 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.438465746 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.266384365 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.025445014 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.737796271 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.267323406 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.491206884 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.838859833 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.271979791 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.452377352 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.202592252 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.274279547 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.276195087 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.26222949 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.403835365 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.269439689 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.520894316 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.27631816 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.19824618 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.271152319 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.756147616 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.117446972 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.272400819 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.263889514 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958688194 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.266316016 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.521251586 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.273178414 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.87582136 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.272473773 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.199776905 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.200221682 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.958400926 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.268728046 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.239353224 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.727110188 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.610688133 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.257839411 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.290730965 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.108799635 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.52097614 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.277470145 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.802225684 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.492738393 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.037692646 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.288634947 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.363968191 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.830392938 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.262861181 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.262781963 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.499162611 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.09539885 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.491367282 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.160198609 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.181794905 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.267401274 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.481915675 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.264447632 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.049644992 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.50159987 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.977821963 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.278335428 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.924549608 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.298312072 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.040077487 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.197983532 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.627275785 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.278904622 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.346308764 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.276008935 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.280600462 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.27947308 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426531207 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.044834189 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.283471321 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.280597027 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.361349519 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.451383328 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.88487163 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.275047306 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.82142575 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.952050067 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.804126984 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.28270493 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.268397851 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.277382412 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.2015983 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.415273702 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.494090506 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.54535307 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399234807 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.691655679 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.290932764 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.837655326 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.289691644 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.482589169 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.545237302 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.162672032 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.269975657 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.284387051 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.272772947 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.282179626 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.48254983 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.732932293 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.789871482 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380868853 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.278026413 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.693163663 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.547421169 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.269894346 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.27055642 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.860909525 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.277417913 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.561108048 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.278285833 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.085943853 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.419510684 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.278976345 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.913636151 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.284812658 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.428407027 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.048425793 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.993574451 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.524079891 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.681856503 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.283171053 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.811892167 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.92129243 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.534914922 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.337290937 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.283454564 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.390031489 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.417130032 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.277786077 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.272408835 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.270394017 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.113862251 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.979457631 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.281408345 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.80989617 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.53552502 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.267184256 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.272636849 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.298065636 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.280036574 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.493764427 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.940000336 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.499433854 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.28326506 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.275890265 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.091615081 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.815405338 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.285897251 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.207182369 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.275795982 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.498778242 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.513063399 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.29540534 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.724505571 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.986217199 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.793491375 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.244923063 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.296028973 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.270101455 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.927909509 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.813355546 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.894910979 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.736539165 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.835460479 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.282003272 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.550038236 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.2799793 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.275656999 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.554499199 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.279152078 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.276966107 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.286220731 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.812288776 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.983677134 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.280019425 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.001501024 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.214795789 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.617123722 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.893775356 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.211275175 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.275151161 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.442683131 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.277732155 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403351909 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.286547538 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.275724201 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.281010748 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.012349748 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.547431697 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.281867528 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.27573193 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 5.896871212 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.27624926 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.282284012 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.498036477 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.280450992 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.943421541 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.624744203 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.527452843 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.273637568 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.262710195 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.28075424 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.276704595 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.262209087 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.475645865 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.76234924 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.799724292 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.278661964 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.286273311 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.280403045 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.492268028 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.489455447 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.099521521 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.300344482 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.283382367 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.294930071 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.182550778 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.779239276 seconds)
  done (took 1544.825805406 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.308859877 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.307834043 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.314447989 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.328289012 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.330917566 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.355258205 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.362896797 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.329247225 seconds)
  done (took 51.852448509 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.282206385 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.496177445 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.306736361 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.274734945 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.284859017 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.289274018 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.684885565 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.294714695 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.289068242 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.285236984 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.287205211 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.28014006 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.867108318 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.287894872 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.282381724 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.267070054 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.285423395 seconds)
  done (took 64.270094241 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.273567768 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.513638266 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.349348643 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.292618546 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 6.956666391 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.275690145 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.525288023 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.349715085 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.280395461 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.316654921 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.929168476 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.288652772 seconds)
  done (took 82.568011425 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.287425775 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.286093981 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.286067117 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.283707389 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.283950254 seconds)
  done (took 7.645145445 seconds)
done (took 1958.541304378 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.541441655 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.909018264 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.87686515 seconds)
  done (took 5.003815236 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.428291161 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.47533482 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.595467349 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.602479906 seconds)
  done (took 7.322335294 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.560801519 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.662782161 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.463588444 seconds)
  done (took 5.907948027 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.56593661 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.291680507 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.400458043 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.278361191 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.281614287 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.283221416 seconds)
  done (took 20.065971397 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.284173637 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.286553865 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.284599596 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.286852865 seconds)
  done (took 6.363969275 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.267408106 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.022516146 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.267693093 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.281027669 seconds)
  done (took 18.05955251 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.033152536 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.052544731 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.031678675 seconds)
  done (took 7.339972741 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.285264456 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.125792049 seconds)
  done (took 9.632717905 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.581368087 seconds)
  done (took 2.802641113 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.416484072 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.55272748 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.222020893 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.1759656 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.249833674 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.730201054 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.752452792 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.377844308 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.163761799 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.231566006 seconds)
  done (took 26.095287396 seconds)
done (took 121.609143145 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.809393384 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.531792317 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.478486402 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.822200368 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.506036025 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.478442258 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.495216158 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.790311358 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.286679043 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.277941596 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.779738507 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.507355159 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.443120848 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.529087371 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.442646821 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.658515196 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.50794317 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 4.843867213 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.461852821 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.663975521 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.502345404 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.414803875 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.611334939 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.485659453 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.509347805 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.434524755 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.016326231 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.653369311 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.639339303 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.078705768 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.437105457 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.840282617 seconds)
  done (took 186.161783145 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.297070088 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.283504237 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.29785366 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.289004048 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.289378285 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.287723277 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.29819538 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.296325775 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.284073912 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.2993369 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.286001924 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.295401756 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.285648645 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.300505145 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.297294064 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.296711119 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.29585274 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.288985257 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.297273797 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.287073378 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.286565613 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.285082051 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.304141483 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.28465586 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.300189954 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.285783324 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.284780105 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.290820287 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.284791959 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.285027515 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.301355075 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.287768137 seconds)
  done (took 202.559905018 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.288415844 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.28532449 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.287427411 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.301611463 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.286712805 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.30174342 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.288016666 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.285496575 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.288051211 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.287428132 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.28602276 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.306638994 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.285271079 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.297720829 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.286750939 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.292941439 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.29737054 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.28891289 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.286621849 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.299260336 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.288507374 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.286851667 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.285553009 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.31173452 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.288792464 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.29946964 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.286810141 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.286581392 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.287458031 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.299301122 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.29213991 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.289189367 seconds)
  done (took 202.55843313 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.481633091 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.294650677 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.295286141 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.232947279 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.295531667 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.295303925 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.292068643 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.483698862 seconds)
  done (took 13.898869383 seconds)
done (took 606.402270424 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.482465711 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.205865386 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.48525608 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.313515985 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.007822687 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.314871336 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.315610154 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.469395883 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.192126523 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.471724038 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.510490479 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.313772924 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.648654015 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.314833209 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.549005415 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.404258958 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.130506199 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.24773975 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.620294277 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.784877651 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.55601893 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.700909712 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.470034402 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.188528017 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.642861462 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.698289144 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.911603302 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.130440113 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.313107271 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.617890254 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.82770164 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.175100278 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.365525365 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.348047126 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.404952743 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.385813622 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.143068633 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.347487812 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.491146549 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.463657578 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.772583082 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.01111797 seconds)
  done (took 87.978467705 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.284003533 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.287183776 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.283518517 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.286919446 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.286304003 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.286646704 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.284276153 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.285929328 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.284796138 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.285159478 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.284618633 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.286452771 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.286194889 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.285565575 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.285670341 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.284168757 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.288030603 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.287758683 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.286073313 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.286218814 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.284534847 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.284194757 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.285621082 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.286552546 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.286505141 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.285757056 seconds)
  done (took 34.66067817 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.297842743 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.528517703 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.683209893 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.304744457 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.298450715 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.300924782 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.368196522 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.300617513 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.301989306 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.3004487 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.44627687 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.301742126 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.333491867 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.693676116 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.300005917 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.299079143 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.298834578 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.29803121 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.535156018 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.308036638 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.370495017 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.301157618 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.369064983 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.309721522 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.301758234 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.300791212 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.303819015 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.821070041 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.302157262 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.446948946 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.985232329 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.369207042 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.789234765 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.697418501 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.990305284 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.303495617 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.30110672 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.452164541 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.301711924 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.300141675 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.369106066 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.30066431 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.696562526 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.921614574 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.313628903 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.299582867 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.841576136 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.450918945 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.521117983 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.308450384 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.717696425 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.303224209 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.301715535 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.302275348 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.519837071 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.309900201 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.300617886 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.863436869 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.306068179 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.371216094 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.301164166 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.302131078 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.544591126 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.302186302 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.532523121 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.302549868 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.310259712 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.302372317 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.696993398 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.3042932 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.931029211 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.316489714 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.301683714 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.4491701 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.533647881 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.869836219 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.305814785 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.548861707 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.800391676 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.370917527 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.305915004 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.813763333 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.374880966 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.307022189 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.305906514 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.301505106 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.303737797 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.347648812 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.369976036 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.8609888 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.924519638 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.879987542 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.374364259 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.316124704 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.302646698 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.868088526 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.304270565 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.303872478 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.692591484 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.931284418 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.31714156 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.31154671 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.924033159 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.31895803 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.373848322 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.308639402 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.703510361 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.306917724 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.349670529 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.305058517 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.313185985 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.308788534 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.375616874 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.31013204 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.30655899 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.911099722 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.471294261 seconds)
  done (took 171.103234065 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.299175277 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.29983241 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.300140508 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.299641565 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.299043078 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.304719927 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.299164528 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.299407059 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.305062101 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.30022024 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.301100578 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.302376855 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.300182026 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.307032129 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.327607357 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.306946011 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.957027841 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.299796091 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.299717523 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.301495323 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.083820516 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.305518841 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.298927655 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.299415465 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.301699283 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.30050278 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.305300567 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.303119001 seconds)
  done (took 151.148617813 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.308773878 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.822786198 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.30907126 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.424772739 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.328330723 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.306133339 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.423687588 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.363064483 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.312083905 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.305561866 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.306153029 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.584313713 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.31048415 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.772558728 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.476349436 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.428614725 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.772600115 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.309168008 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.306412318 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.306745392 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.428875475 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.314458371 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.58302148 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.819665441 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.310141947 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.821021033 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.29858479 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.308784557 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.307607882 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.822439002 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.307451901 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.583810045 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.378063416 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.362347743 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.824681664 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.778198623 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.77772331 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.439330205 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.309593978 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.306616611 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.307474425 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.297801655 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.824098475 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.309853396 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.309647453 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.816994308 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.323399035 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.309860346 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.318499618 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.307692707 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.36427934 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.365041444 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.588681694 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.829091766 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.379172 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.331451808 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.42775426 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.66651429 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.312398196 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.774106034 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.298526924 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.828652881 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.312191586 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.298484736 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.309608712 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.314260323 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.443726954 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.430001198 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.77914474 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.312063039 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.776791737 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.444529301 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.311117346 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.308666397 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.311920392 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.832685577 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.78002813 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.445283264 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.432106463 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.485994495 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.303239736 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.310492995 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.299706661 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.378340598 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.310239299 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.833836279 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.780248259 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.312822368 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.311738649 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.312787123 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.31286642 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.469511543 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.837106785 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.384830289 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.775736137 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.606393293 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.592981133 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.313426338 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.365568444 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.310785162 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.594427622 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.314787411 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.36295206 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.72938043 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.592916631 seconds)
  done (took 155.142848978 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.540356207 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.478302831 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.395794079 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.41859968 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.833600283 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.865178928 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.432524046 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.427797075 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.411308299 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.543940983 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.385686456 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.40786839 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.483776944 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.38283587 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 1.977552449 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.374719118 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.396830941 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.437337913 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.41506026 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.304636654 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.914311685 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.578983204 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.473199825 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.317369666 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.401099824 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.053846793 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.830875535 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.814487098 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.467709737 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.568235315 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.797154769 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.394654904 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.214477677 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 1.927667721 seconds)
  done (took 62.915239603 seconds)
done (took 664.177421793 seconds)
SAVING RESULT...
DONE!
