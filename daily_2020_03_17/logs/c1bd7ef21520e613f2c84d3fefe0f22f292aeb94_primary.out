cset: moving following pidspec: 32075
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.189182753 seconds)
loading group "string"... done (took 0.647210653 seconds)
loading group "linalg"... done (took 7.551367677 seconds)
loading group "parallel"... done (took 0.154088389 seconds)
loading group "find"... done (took 1.189258142 seconds)
loading group "tuple"... done (took 1.74134036 seconds)
loading group "dates"... done (took 1.242306604 seconds)
loading group "micro"... done (took 0.216012443 seconds)
loading group "io"... done (took 0.899271746 seconds)
loading group "scalar"... done (took 36.928212138 seconds)
loading group "sparse"... done (took 11.599371807 seconds)
loading group "broadcast"... done (took 0.999935913 seconds)
loading group "union"... done (took 12.153602132 seconds)
loading group "simd"... done (took 4.537618728 seconds)
loading group "random"... done (took 8.912268793 seconds)
loading group "problem"... done (took 1.723884261 seconds)
loading group "array"... done (took 20.745110646 seconds)
loading group "misc"... done (took 1.692921622 seconds)
loading group "sort"... done (took 3.258546819 seconds)
loading group "collection"... done (took 16.999376609 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.516346608 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.123349914 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.132615368 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.11891756 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.146696063 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.117861966 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.125150812 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086795786 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.83033751 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.150911201 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.11591588 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.39490057 seconds)
done (took 5.307210945 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.177702942 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.084327519 seconds)
    (2/2) benchmarking "String"...
    done (took 0.084931727 seconds)
  done (took 1.289599402 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067655335 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.127255291 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.07006993 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.070073509 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.070152376 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.069634866 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.06933037 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.0722219 seconds)
  done (took 1.672011001 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075773028 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.071381845 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068997038 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.071110601 seconds)
  done (took 1.4065846 seconds)
done (took 5.744425087 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.743631137 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.208943161 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.185724236 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.383986103 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.128500198 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.169041988 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.643694627 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.342553584 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.189563218 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.077507647 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.107703198 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.337475033 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.120441429 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.64153018 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.0783872 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.091308908 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.142187455 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.44190065 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.070053532 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.087462401 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.091521986 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.130787209 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.088579486 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.076045072 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.145312352 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.06969097 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.131853835 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.082626048 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.068583082 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.21317176 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.17469735 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.651797324 seconds)
  done (took 10.268751887 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.100579997 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.099729045 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.071388033 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.127583898 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.099913407 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.071593993 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.076923647 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.069740166 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.090757587 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.130435623 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.093112293 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.10668161 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.068852545 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070996312 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.085155948 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.209689719 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.08460858 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.083015409 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.072329464 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.080274215 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.109731619 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.082646078 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.082115241 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.082442056 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.130349572 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.182279165 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.098327151 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.099998502 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068661583 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.083748732 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.117225877 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.130039529 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.070402114 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.068746357 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.127650802 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.097324844 seconds)
  done (took 4.692424865 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.95010834 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.140826742 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.088950995 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.131332937 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.067368866 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.1073083 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.068552461 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082236061 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.203564764 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.351630152 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.570845986 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.129973907 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111834105 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104216857 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070057647 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.070529522 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.069646138 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.432116797 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.101448427 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.107805663 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.082345623 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072556571 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.071229421 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.067945258 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069590998 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.066696379 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071225041 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.11550546 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076654784 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.30980432 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.119558747 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070411949 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.896773305 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.162292265 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068567909 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.237536828 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.165094197 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095341626 seconds)
    (38/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.093325468 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.13667848 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071540984 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.068303978 seconds)
    (42/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068514335 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.154667887 seconds)
    (44/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.068245754 seconds)
    (45/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.072218951 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.068923583 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.085898265 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.105003728 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.119520451 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.068397563 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068144591 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.163866563 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.068037524 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.080340701 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.105260387 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.155452437 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.07074288 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.259100559 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.091403463 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.075041244 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.0679763 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.164695365 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.124576181 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.070225821 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.06996248 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071084763 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.071729065 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.361192571 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.068498083 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.931931993 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.073182586 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.079243848 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071488123 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071029302 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074178115 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074284918 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.090109994 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.068278384 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075207369 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.068436749 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.068499102 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.069028304 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083910302 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.362771255 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.17607049 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.070590139 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.068530102 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.092835469 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097889831 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.069367001 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.068436321 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101388903 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070342683 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.071610599 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.067331062 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068859915 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.084081332 seconds)
    (98/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.06753572 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.071255469 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.115293618 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.06952687 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.094237491 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.10035728 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070523855 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100083724 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080596169 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069877255 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.401456687 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.072131737 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.06969736 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.067703405 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.070816654 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068470368 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.080696048 seconds)
  done (took 21.553758048 seconds)
done (took 38.583520502 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.243712553 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.07527445 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.075116138 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075350989 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.075392308 seconds)
  done (took 1.755967265 seconds)
done (took 2.956525978 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.119274769 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098173706 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.066830037 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.097179707 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07019816 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099649611 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.10006501 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.078411657 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098829442 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.070301295 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.09692695 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.067639937 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067639918 seconds)
  done (took 2.343388736 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088150639 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085634773 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071754498 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084800036 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066806392 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084571757 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083971365 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090246555 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083668154 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075207696 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066348905 seconds)
  done (took 2.075967334 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.086334034 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085675099 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071937783 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084199394 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065800141 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083686455 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083887112 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087386416 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083840098 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076318264 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066160844 seconds)
  done (took 2.062709456 seconds)
done (took 7.669954577 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.080436278 seconds)
  done (took 1.255124971 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.520626004 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.601834389 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081712332 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.105818723 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.183812569 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.112712787 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.239180921 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.084516663 seconds)
  done (took 8.278018861 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.090739937 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.070934039 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.0716248 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.083186834 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.072556559 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.074324446 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.070824743 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.073113682 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.071643664 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.073706294 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.07451097 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.073328051 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.073344034 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.070543761 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.07141715 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.070531148 seconds)
  done (took 2.449852853 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.09239707 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091765312 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.074707184 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.07595137 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.073671154 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073386244 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.075717979 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.075537032 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.07239406 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.074030004 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.076504404 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.074666977 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.07308249 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066419737 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.075542793 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.077477361 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.072547606 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.075298069 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.07656591 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.077209449 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.076474303 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066279111 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.073546352 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.075393469 seconds)
  done (took 3.10227701 seconds)
done (took 16.273175291 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.107287507 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.06970779 seconds)
  done (took 1.361207123 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082618758 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082303907 seconds)
  done (took 1.358118796 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.084178121 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.067086637 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.089089548 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.079047163 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.068221254 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.067965469 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.086953183 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.067936513 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.067790971 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.068025029 seconds)
  done (took 1.940245755 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.070687184 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.076925485 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071023459 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081924792 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074469193 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.066040273 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072816272 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.069375957 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077701961 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.065382316 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.072558485 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.083718704 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072206866 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.085434972 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.073477829 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.070334049 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.07249898 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.069298912 seconds)
  done (took 2.523494957 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.068947416 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067921506 seconds)
  done (took 1.339444431 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.069828032 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065334254 seconds)
    (3/7) benchmarking "month"...
    done (took 0.068848088 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068405034 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.065507861 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064568484 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.065480011 seconds)
  done (took 1.664444119 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.358440235 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.117800145 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.299145014 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.073415877 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.082271642 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.250811894 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.068767318 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.073284447 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.073710859 seconds)
  done (took 2.635083152 seconds)
done (took 14.028157893 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.083357377 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087471326 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.095929701 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.36602565 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.093154065 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.068896668 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.115413309 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.176389674 seconds)
done (took 2.300061226 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.208155187 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.638105357 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.405625531 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.203067333 seconds)
  done (took 2.449358353 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.331643255 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.089241454 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.062140612 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.069399869 seconds)
  done (took 1.763556867 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.070048277 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070793452 seconds)
  done (took 1.350252845 seconds)
done (took 6.983016398 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070175252 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.068422893 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.085140199 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.065970106 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.065679318 seconds)
    (6/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.068508352 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.068290514 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.066054574 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.066474418 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.068366277 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.068914344 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.068032512 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.06845675 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068382629 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066183941 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065813999 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068280686 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066567073 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.179644041 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065671848 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067956541 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.06588015 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065544119 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.068398618 seconds)
  done (took 2.983083961 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.08719003 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.067595494 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072851678 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.073458923 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070733932 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.072685265 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.073520159 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.0679789 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.073529098 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.070605206 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070840453 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071390991 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.070094603 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.070567144 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070257815 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071001941 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.072835422 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068059607 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070279176 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.070983617 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.072941868 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068037888 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.070864263 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072906768 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.070733137 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070886331 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.070439304 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.06820475 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07343347 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.070821974 seconds)
  done (took 3.363780709 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.073249752 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.065007386 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.066240711 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072243953 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065331657 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.065936391 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.065681964 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.065426912 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.066719579 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.065837205 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.066907426 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.065156722 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.065933216 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.066537693 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066149042 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.068918911 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.080274237 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065597401 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.065465002 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.066246155 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.069179975 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.067795705 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.065638031 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.06603651 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.065449619 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.065457788 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.06598998 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.065848754 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.06643414 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.065853518 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.069247568 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.06961691 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.06533027 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.072469622 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.069536819 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.066057601 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.070251399 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.065455265 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.066271408 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.065484609 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.065534505 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.066278303 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.065581758 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.072347715 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.065867704 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.066794517 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065731639 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.067014613 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.0663295 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.067952264 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.06553817 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.065835639 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.067922626 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.066970087 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.070371094 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.066038915 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.066762226 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.065718766 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.066523184 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.065577865 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.065664658 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.065488644 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.068503569 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.066453026 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.080483642 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.072809476 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.066064169 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.067158457 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.067042436 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.068633616 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.06708963 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.079269427 seconds)
  done (took 6.083185998 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.091280366 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.08661717 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068687734 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067206149 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064092021 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.066319393 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.07119981 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066015923 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068190313 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083161669 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066300438 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067399186 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067379946 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.069462029 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066139684 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067562718 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.074142827 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063978579 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.066140191 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06978364 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066661513 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071271262 seconds)
  done (took 2.787406086 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.149399643 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071687216 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.104969626 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.07623068 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071983522 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.076519063 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.072195258 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071671225 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071505557 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069375061 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069471291 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071889514 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071752529 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069230321 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069488985 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069682012 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071620838 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06973635 seconds)
  done (took 2.626787519 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079167023 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.068361387 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.087478167 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067630076 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.068192969 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070426286 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072247935 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075498821 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.07050614 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068398095 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.075830525 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070263062 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.070294473 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068323075 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0702446 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068059519 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.070500997 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068199162 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075581988 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072082883 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071885522 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07546625 seconds)
  done (took 2.812579479 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082063483 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069753806 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081097361 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069799529 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063489423 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066227471 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.071705956 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067659851 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.071596348 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.07005226 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067644339 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.066093398 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070250506 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068079149 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.070640919 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068537201 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070006963 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067793983 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069964607 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063554322 seconds)
  done (took 2.62730528 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087937396 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069435268 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069421472 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076046631 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070011086 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.069455675 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07609866 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.069727169 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069746962 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.08962711 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069564901 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.070025637 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076262577 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073462665 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072090202 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07595926 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075771966 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075989138 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069725517 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069684571 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.089881306 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069871345 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.076020303 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.070266783 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.069653435 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069855179 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069733593 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073632255 seconds)
  done (took 3.296300172 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070095866 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068068444 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.065881537 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066216302 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.066014905 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.065876129 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065644699 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065694001 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067954127 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066002444 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.068282737 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.068678432 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068466865 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.068243576 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068157583 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.068223801 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06814215 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065657241 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065883752 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066030015 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.06817343 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068182094 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.068563869 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065833562 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06578841 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.068712834 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066005602 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066172164 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069035337 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065818014 seconds)
  done (took 3.2485013 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077847875 seconds)
    (2/2) benchmarking "in"...
    done (took 0.074135645 seconds)
  done (took 1.383316866 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.066523628 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080830681 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.065268143 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072952094 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071265016 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068664751 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074821426 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07195046 seconds)
  done (took 1.800860506 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.083884333 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078002819 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.068406397 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.078378258 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.077347423 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084183287 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.133661121 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.068259157 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074205095 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.066961317 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.080998922 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067828551 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.074765535 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069228326 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.074158146 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074951253 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.066181887 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.072812586 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.069874763 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.066543678 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068801161 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076533049 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071897451 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.064201535 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.069599435 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.089912155 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.079386285 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.067936003 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071268745 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.075263979 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.074470881 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.062604412 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.067987697 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.068708394 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.066113969 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.077130625 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081861422 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071401185 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076508831 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068709495 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076225585 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063950035 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072873099 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074987109 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078669931 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.068433226 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.068444187 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.063626451 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.066965977 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.071382464 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063840867 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068957161 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.063411852 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07510287 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071845141 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078765907 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.067567302 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.070130368 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.071549221 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.072124758 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074860609 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.070645619 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071573092 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.067607455 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078610872 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073194988 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076552538 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.063923987 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.063319147 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.066189279 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077690541 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090588387 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074376691 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.068079171 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068351748 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.06605117 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071484411 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068417339 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073312822 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.074333348 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.067553859 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072072979 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074895847 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068894218 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.071610118 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.073479253 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.066108795 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.069601119 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.066053473 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082712746 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.066302507 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.065916 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.06601665 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.079947887 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.071058595 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.067323252 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.065460508 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074061146 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061494947 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066685713 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067098497 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068574582 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076594275 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070537277 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070960775 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.075835718 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074454802 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067954209 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.069430029 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.192908392 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070453163 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.068769843 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.076904167 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.064671546 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072186088 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.069743053 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.068698314 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.077569193 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.067160071 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.068700197 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075962043 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073911281 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.066909955 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.065634141 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071377102 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.068244732 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.07033423 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.07621973 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.067182064 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063486674 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.063325049 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.072048726 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.067864721 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.072168581 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071476612 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071527755 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.063396488 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.066673919 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071818568 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.076965091 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068946027 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.069606144 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.074054201 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070177493 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.06728074 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.074811096 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.071489335 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067791356 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073498981 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.069541032 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063217661 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070069672 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070958737 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.067246602 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.072145877 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069947655 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070418232 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.068716428 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067994651 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074012947 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068813084 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.06783902 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068826277 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.067450203 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.078446175 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070471362 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.063779934 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.065784112 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.074820566 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066985578 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.06727698 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.068082444 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070671256 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.068213647 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066708189 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.067326053 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070292358 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.075952467 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.07099229 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068713175 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.074358203 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.080906606 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.067685451 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.071098459 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.067639678 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068750913 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.068673272 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.077476592 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074048737 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071526936 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070593391 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.065020765 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073261703 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075330494 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.067751461 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.066515087 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.067918115 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.071223513 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073772519 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070691669 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.068161318 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066484194 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069269046 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069821019 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070766311 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.066635126 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.067196623 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.071843945 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.065710059 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072057099 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067135985 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.077195241 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070965561 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.062493229 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068937549 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065956561 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073635992 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062708699 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.065845588 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067032395 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.067367695 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.066282548 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.201185082 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.064621262 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076876373 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076725386 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.070569973 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.068793298 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.068697364 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076020314 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.070512329 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072181131 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.072576199 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.074797742 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078742365 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.068135208 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.072881775 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.078755894 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.068108162 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.063170899 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.076747961 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.06707542 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.06760734 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.068336688 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.066685694 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072114101 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075181585 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.075210249 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.063418399 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.071736508 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.066813832 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067846336 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.06396286 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073008032 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070899346 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069237113 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075006484 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06862765 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.068135997 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072476979 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.067721469 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.068268626 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.068898866 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071007075 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.068283629 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069881382 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.068369179 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.071324104 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067646442 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.066443133 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070096592 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.068335675 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.06920171 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073206347 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.067734886 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069052874 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070739262 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.068725009 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069811617 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.069473482 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.06888943 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071736592 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069487386 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068997333 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.071205748 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.06372121 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075560579 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.067837438 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075706843 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.069150029 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.065915434 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074164524 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.071447629 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072659464 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.068849269 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.068714034 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.070392997 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.068235427 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.0712512 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07568857 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.067197107 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.07888497 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075768934 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069440631 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071158048 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.069065279 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.069826802 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.068083721 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.069423391 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.069227792 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068572015 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.067382254 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072687898 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.070853574 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068959514 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069992107 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.068302436 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068743482 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.068658007 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.062991265 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.068265733 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.067878194 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.068017982 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076233702 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.067728555 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.067524049 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.066970116 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067596598 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.066486736 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.064637834 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.072843681 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073698102 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.067324432 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073407616 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.067247672 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068679374 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077655283 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.196503897 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.067798485 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.06780808 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.067586879 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076344468 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.069219129 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.07873828 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.070077953 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.068881877 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.06606462 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.069449474 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.067151589 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.063403285 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.066378471 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071974061 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.067809557 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067368245 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.069057717 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.071766169 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069368402 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076922635 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.067971469 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.069957858 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.068201305 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.066022256 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.068356833 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.068130814 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.071545478 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.068476927 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.067065199 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.066152791 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.067695993 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.069709485 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.070234284 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067823229 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.070098829 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075826477 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067511069 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.071683388 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070465325 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063480464 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071419394 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.067832265 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.067796928 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067559293 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.071560976 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071707701 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068888196 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077568534 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.06759345 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072461277 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068169268 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.066502375 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.068048281 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.070418839 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.06803029 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.068290761 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068939281 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075756574 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.066345148 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.071810473 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069266863 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.06935303 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.074502184 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.069340737 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.071897538 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073241171 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.069414923 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070342296 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076390441 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.071666714 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072094182 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068828376 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070315527 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075163361 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.068231124 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.075225807 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069073041 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.068591709 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070525052 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.067570889 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068030074 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.068291594 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067501073 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.07405557 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.068074407 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.068286328 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.067768206 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.06619758 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.0696511 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070040847 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076464652 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.071114659 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071180127 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.063503955 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.065151816 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068038792 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066568407 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.070597274 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070151849 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073848202 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070120143 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068672503 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.066900865 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.076695426 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073326467 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.071243455 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066205092 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.070859675 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067730309 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.069666722 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.069002895 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068138757 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06843829 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070831201 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069086148 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.067284249 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.20858834 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.073543564 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070107177 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.071436547 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.0710611 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.069715151 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.064232926 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.069008793 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070733186 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073894857 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.071288423 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068375002 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078808612 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.066874275 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.069097525 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070815545 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067719835 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072960067 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.063967964 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070510707 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069366646 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069093869 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.063756223 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.068310897 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.067107963 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.070936131 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.068072052 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.063739596 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078310017 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.077874779 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.071495632 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067073994 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066934272 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.063930377 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.063846475 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.067801993 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069113911 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070136207 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.078211722 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.067825187 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.067715289 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.063750555 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067717614 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071735003 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071824528 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.066091417 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063833376 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.068072528 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.071911074 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073933143 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067307537 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.067708514 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07174964 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070918749 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.066942326 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071095966 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.065857706 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.072291407 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080085958 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.068475751 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069821623 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074455161 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076310649 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.068869718 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.063914854 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.068459603 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.071722985 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069525581 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068803 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.06925959 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083059386 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071548852 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.068344767 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.067257115 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.07106604 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.068409305 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.076755016 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069164402 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.069253665 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.075604093 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070158723 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075659364 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071587049 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075202365 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.07187828 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.071829837 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.067359407 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068872233 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.066732269 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067936535 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.068454671 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067836804 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071959774 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.073973761 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067810365 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.07793068 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.076946736 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.070007963 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.065082277 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067387769 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.067973623 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.063391395 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.068003295 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.066152021 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.065933662 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.065680505 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.066149257 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068954874 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071856619 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068621422 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067533574 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066735051 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.0621319 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.070187288 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069558125 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.203272627 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.066708282 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.069089648 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.069654902 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.073396849 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070864932 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.06702557 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.070679955 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.070628133 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069738164 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.064027984 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.075441 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067743779 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.07006444 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.067609167 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06800749 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.069290317 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071786693 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07200402 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069117536 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070636698 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.071932997 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.07005721 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.066115954 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.065455751 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.07364118 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.06612796 seconds)
  done (took 43.778275906 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101154913 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064537114 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064059632 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.063803666 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074202616 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064834258 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064207235 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064839973 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065003563 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066936533 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.063755351 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064114762 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071598076 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078743034 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074164512 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068057231 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063771119 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064799213 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.0642037 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065137179 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072022183 seconds)
  done (took 2.775115279 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.075193044 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.077623202 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075156357 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.082809563 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071903893 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.071864877 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.075647425 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071111198 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07893235 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07367719 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.078679649 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071805651 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.074007895 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.073586192 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073459594 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071750418 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.078869917 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072613952 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.073030167 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075704826 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072907113 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.076109751 seconds)
  done (took 2.9686785 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.069596474 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067126848 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.069361964 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063239512 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066728164 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.06310166 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069842757 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.065366877 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.070134872 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.067112928 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.066805014 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067656852 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.069484741 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.063397141 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.068144092 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.065862959 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.106455093 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.070688169 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.067611454 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.068385012 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063435959 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.069703804 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063795733 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063985915 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.067260687 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.070112429 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.068162278 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.06605379 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.067381479 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.06708148 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.067813484 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.066058347 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.070010134 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068443209 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.067791729 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067482171 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.067889761 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.068084031 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063779086 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.066112744 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068983107 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.066415907 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.068348852 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069314426 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.067478867 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.065986507 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.06971707 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.067288502 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063092968 seconds)
  done (took 4.657518118 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.079718117 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.108532463 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.069247963 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089076216 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.081666726 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.073897463 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.072127719 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.091041873 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065022097 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.06581399 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081717457 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.07922198 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067755302 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.071369743 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.074220059 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067507043 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068296215 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066274228 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070450776 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066948405 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070341506 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.073912165 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.080676716 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.078508916 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070733244 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066323882 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067080566 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.071241691 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078254954 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070758823 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.071429905 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072045896 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.081384531 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.072219548 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066486718 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.069539058 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.081819919 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.067265327 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.069263237 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.065153653 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.069316307 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.071018661 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.074322076 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.083209104 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067458188 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.072171628 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067317746 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.065203128 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.078843096 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.071644373 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.074126132 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079615651 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.07081048 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.067866564 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071265048 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.081056399 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067298701 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.065616645 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.070037168 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077843511 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.065296693 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070666958 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079043673 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.069437749 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.073461087 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.079420023 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.072239127 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070657388 seconds)
  done (took 6.434772587 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.078098157 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.095604039 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082714592 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084071627 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.077242948 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.077072649 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.076638414 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.076562928 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.076676079 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080529581 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077235455 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115327032 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.072769544 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.079056886 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.084675454 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.076666313 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.076703621 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.076735099 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.076715356 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076301891 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.076665516 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.082920711 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.076899446 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.08331375 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.080255289 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.072489282 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.076859038 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.076959879 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083048032 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.076656811 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.080268998 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.076383337 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.076343812 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.083556174 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.080294156 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.076343252 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067233746 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076246172 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.076660826 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.076877267 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.073028857 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.083636043 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.07652748 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.072869582 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.077153648 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.077342737 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.083426981 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.08021316 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.079020179 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.08069343 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.076826988 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083357314 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076992644 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.077334938 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.083545268 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.085435997 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.083699213 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.08351563 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077131939 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.083531503 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083664453 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085861413 seconds)
  done (took 6.288883863 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083507834 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07470858 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.083312695 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.063606674 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065918457 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.073501405 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066421121 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.066366916 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074985631 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.077948548 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07694105 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073076266 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076058752 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078559712 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.073600723 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076070129 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073291987 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.073150411 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075236856 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073118154 seconds)
  done (took 2.832833682 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.077900877 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083510113 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.069446312 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072341289 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.071152436 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073723182 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.070167965 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071739163 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06905682 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071209392 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.077210299 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076993495 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068968403 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073250553 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.077176691 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073008603 seconds)
  done (took 2.516226528 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.085435089 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.073685601 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080272231 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.06846314 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.06844533 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.064310967 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.067714975 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063660476 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.064385647 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.079432489 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.067638661 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.078481548 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.06745731 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.067043449 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.065181683 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.073353428 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064982563 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.065277424 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.067576735 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.079431075 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.071409842 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.066790716 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.071528055 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.068191374 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.069515763 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071717403 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.067061115 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.068673554 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.065519625 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.06826541 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.070441021 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.071419792 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.064967028 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.066446855 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.067508257 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.065163023 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.067988103 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.068281031 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.074042797 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.068345514 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.06668559 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.069992448 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.068171913 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.069022941 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.064806131 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.068568135 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.06511876 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.070130391 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.066135836 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.070413331 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.068310397 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.071051555 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.06905113 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.074845024 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.07092797 seconds)
  done (took 5.157970676 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082645801 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070878694 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063786036 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066441156 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.071120856 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.070260855 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.072248604 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068992259 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069541073 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.066622904 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069032132 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.070794602 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069336004 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071657981 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070241651 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071607935 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063994755 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069282987 seconds)
  done (took 2.612432869 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.074453442 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068258812 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.075001366 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068076887 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.068249578 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070465694 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064229126 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.066763441 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066634387 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068025169 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068317658 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.070582031 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067326772 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.071002107 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.06870839 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068513593 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.086709156 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066760987 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068219583 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064019891 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.070431293 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066646952 seconds)
  done (took 2.871522542 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.094367436 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.083218925 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.136915963 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.080166168 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.086265807 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.073283452 seconds)
  done (took 1.915664872 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094313754 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100590486 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068267131 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070566618 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076759499 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071460683 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071390506 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071577129 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078563205 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07636668 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071486473 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079201402 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0787729 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078138338 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076461006 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076951333 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071825667 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074181076 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068374992 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084499778 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072208066 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078961272 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071982318 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071982782 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07206122 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078367813 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079248693 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07669113 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071565061 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079387013 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076865194 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071746858 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079449176 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077004439 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071676587 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078958208 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071768644 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083622944 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076827251 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078585195 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071470905 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076635721 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079104779 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075776629 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079016348 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071568433 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075620817 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072403634 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071648542 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085515191 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077008107 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078034052 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076439327 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079312014 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07874683 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085229764 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07683803 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078070976 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077303978 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0767057 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07822503 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076839984 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078253288 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077173916 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076847759 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078214928 seconds)
  done (took 6.426064609 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107103231 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06930073 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071895808 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076480842 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07822058 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072162596 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071786038 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071601644 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072463708 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068824324 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10743958 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072338898 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078644533 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078449807 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072294267 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071650367 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071853328 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078020971 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069037559 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085289088 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071912071 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078292266 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078508994 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077942958 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076826619 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077235307 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071836277 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071794525 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071870458 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071609409 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075755265 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07218544 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078033899 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068787787 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078313087 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071820169 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072078973 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07557825 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071824298 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076732373 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078015601 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083985316 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071779965 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071609538 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076868585 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072053312 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071380548 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069147398 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071942998 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069200131 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077241107 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076750369 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076897575 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077923192 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071903271 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071581832 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071748139 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07178899 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07208977 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076515693 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078114698 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071717504 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085744279 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071694015 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071892411 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07829081 seconds)
  done (took 6.351541487 seconds)
done (took 131.810734435 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.197099526 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.172794932 seconds)
  done (took 1.713477203 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.072943557 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097075351 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.077450737 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.129661 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.068107049 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.101851801 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.1007836 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.078637379 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.068264219 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.067972828 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068003492 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.07017371 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.132835647 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068208834 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.068272749 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.070548289 seconds)
  done (took 2.702909161 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.09964651 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.155448254 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.100815807 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.066974449 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.09770969 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.073826769 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.067174807 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.076012628 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.072160515 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.067731836 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073492818 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.07154212 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.067503679 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.071634719 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.074671914 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.073913342 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.067217598 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.073476272 seconds)
  done (took 2.823742082 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.098076686 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091291294 seconds)
  done (took 1.564196993 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.152657077 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.133713942 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.200216577 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.328859052 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.153566624 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.144504137 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.140995958 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.138940673 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.114218632 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.135468487 seconds)
  done (took 3.012290896 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099778874 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.146680633 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.26382631 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.115086595 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.073874915 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.092445615 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.116437209 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.080747978 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080846825 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080326525 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080286628 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.077633071 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099161913 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.07439774 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.075559741 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.076935702 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.101989 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074842831 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.076047493 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.07627004 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.100098073 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068125519 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.0749046 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.074544222 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077710992 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077911472 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.068391237 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.068454607 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076785115 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.075865353 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.077231557 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.091016566 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077562995 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.102954357 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.072663615 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.104158586 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.077549217 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074837715 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.076838954 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.07473605 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079079785 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078526355 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.07436288 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.078202708 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.068137174 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.077920189 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.068254659 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.068512024 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.078411033 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.068873435 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.07831848 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.077581672 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.103510944 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.069327907 seconds)
  done (took 6.020635184 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.108443575 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.106355098 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071365109 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112208889 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103855542 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071166403 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.105220807 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.098136321 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.107631468 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071543521 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069944688 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074305886 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080370684 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082082245 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.115172681 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.108262212 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073706782 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071064674 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.108049118 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.107089278 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070679394 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101219199 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.096765702 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107067001 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.070237359 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071524434 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070026549 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071491184 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076835971 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078720784 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.07019016 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079586259 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084697088 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.07801882 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06895226 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069896462 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070179644 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.07944694 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079822175 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079396127 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077656935 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069188947 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070362362 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070949496 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071274105 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069471505 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078454634 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.08074372 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.079468713 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070771895 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071674218 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.070295535 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070836073 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079428718 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077345496 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080474225 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079814711 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07013842 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070360946 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072483418 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080286491 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079744394 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079668842 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071052778 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.080424026 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070487531 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081049311 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083804785 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070221457 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070899171 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069631586 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070185713 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.073090805 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077068591 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077247501 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071205354 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069703653 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069865475 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079022325 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078321349 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069767987 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076681288 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068920575 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069376403 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071008733 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071608627 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.076870445 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.078820114 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.07032515 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068927024 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068987213 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068474007 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067778939 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.075809623 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077865843 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077259802 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.076564372 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.0699484 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077434224 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.213060443 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072404403 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.079994415 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070967583 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071923556 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07198772 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079458155 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.077604119 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079751903 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070745737 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.070826741 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078395974 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080449666 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070059745 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.077696451 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08014262 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.078225315 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069155929 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081716116 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070160142 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080049582 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070333381 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080168776 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069595366 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078810746 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070248603 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069094379 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070247097 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.078879111 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070952407 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070960319 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070875198 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069728112 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.078048389 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.08150794 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071047948 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077369548 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078731221 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071276657 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078179287 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069717481 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079659502 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069893417 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071384585 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069369839 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081682687 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.07047324 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069877739 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.07059388 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080131529 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070080769 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080634269 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077811861 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069236969 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082200806 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080566182 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077115335 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080350087 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071477006 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070386514 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070351199 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070009813 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077631181 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079304815 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071529551 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.07030041 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.077945005 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079905966 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.069330828 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078030052 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078583212 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.079185603 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070367652 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070382184 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080708533 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079922065 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077732635 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077954547 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077799662 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069869517 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077359417 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077571467 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069724888 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082682806 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069818259 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081549332 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077957181 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076426558 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078129234 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079045057 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079121629 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.078970711 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081228118 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068082347 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068731495 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.077601093 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068915539 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068526167 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.076393383 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070130656 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069836113 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.219522252 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071996437 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.081242652 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.070001446 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078916199 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070455584 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072433153 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083619698 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070251365 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071544549 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079251967 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070231296 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.078394639 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.07998916 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.077966415 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070088433 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071490736 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.079917383 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079621256 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.07329771 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070123881 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071765561 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078671219 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.07817322 seconds)
  done (took 18.845986426 seconds)
done (took 38.06719833 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.191051225 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.143132447 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.15629952 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.111147654 seconds)
  done (took 2.059543921 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.111808589 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.097174343 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.090597161 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.067427437 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.096280076 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.06809782 seconds)
  done (took 1.938423823 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.267865191 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.184644945 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.168545655 seconds)
  done (took 2.031073226 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.190941106 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.177145188 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.424281661 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.25734309 seconds)
  done (took 2.557333736 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.136551537 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.08572157 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.068961107 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.085082776 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.126000235 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.15273738 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.096698426 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.120614504 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.080765853 seconds)
  done (took 2.415442335 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.140798491 seconds)
done (took 12.55957314 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.103550915 seconds)
    (2/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.09422137 seconds)
    (3/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.095712662 seconds)
    (4/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.228222403 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.073738962 seconds)
    (6/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.170642561 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.118521538 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.069837631 seconds)
    (9/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.091251714 seconds)
    (10/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.235661837 seconds)
    (11/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.181842163 seconds)
    (12/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.074768236 seconds)
    (13/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.078299348 seconds)
    (14/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.078186981 seconds)
    (15/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.06954089 seconds)
    (16/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.142931701 seconds)
    (17/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.188312351 seconds)
    (18/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.104317227 seconds)
    (19/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.081283408 seconds)
    (20/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.159814761 seconds)
    (21/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.09972511 seconds)
    (22/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.076915362 seconds)
    (23/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.221976556 seconds)
    (24/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.14140022 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.092897528 seconds)
    (26/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.075302358 seconds)
    (27/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.076494699 seconds)
    (28/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.080154316 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.131520308 seconds)
    (30/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.156646007 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.102997264 seconds)
    (32/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.07696183 seconds)
    (33/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.17206772 seconds)
    (34/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.07815094 seconds)
    (35/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.081463978 seconds)
    (36/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.075047687 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.068744433 seconds)
    (38/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.0850385 seconds)
    (39/309) benchmarking ("sort", Int8, false)...
    done (took 0.374390855 seconds)
    (40/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.071783867 seconds)
    (41/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.077939088 seconds)
    (42/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.218591993 seconds)
    (43/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.213936689 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.088122651 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.090616287 seconds)
    (46/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.075503624 seconds)
    (47/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.078879918 seconds)
    (48/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.136982725 seconds)
    (49/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.068920319 seconds)
    (50/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.06726329 seconds)
    (51/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.184834184 seconds)
    (52/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.21158357 seconds)
    (53/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.184891612 seconds)
    (54/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.166337569 seconds)
    (55/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.078870204 seconds)
    (56/309) benchmarking ("sort", Bool, false)...
    done (took 0.143897157 seconds)
    (57/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.199035813 seconds)
    (58/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.090404743 seconds)
    (59/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.093379443 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.087728647 seconds)
    (61/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.067935643 seconds)
    (62/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.174161299 seconds)
    (63/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.196584001 seconds)
    (64/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.184663954 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.088300269 seconds)
    (66/309) benchmarking ("sort", Int64, false)...
    done (took 0.068898554 seconds)
    (67/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.082975976 seconds)
    (68/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.110252502 seconds)
    (69/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.067108268 seconds)
    (70/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.181928154 seconds)
    (71/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.07577629 seconds)
    (72/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.053676899 seconds)
    (73/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.071597122 seconds)
    (74/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.066422639 seconds)
    (75/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.054054941 seconds)
    (76/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.074449563 seconds)
    (77/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.188658165 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.086670922 seconds)
    (79/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.075731893 seconds)
    (80/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.072651368 seconds)
    (81/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.070993662 seconds)
    (82/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.307619828 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.100169712 seconds)
    (84/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.068086903 seconds)
    (85/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.079379964 seconds)
    (86/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.067663769 seconds)
    (87/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.111436246 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.068865629 seconds)
    (89/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.186224468 seconds)
    (90/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.181858634 seconds)
    (91/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.157657781 seconds)
    (92/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.115732923 seconds)
    (93/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.093212943 seconds)
    (94/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.076026605 seconds)
    (95/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.072588398 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.069414948 seconds)
    (97/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.067095583 seconds)
    (98/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.151175697 seconds)
    (99/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.056228981 seconds)
    (100/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.168137294 seconds)
    (101/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.072928293 seconds)
    (102/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.158806289 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.09009609 seconds)
    (104/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.07772481 seconds)
    (105/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.055317068 seconds)
    (106/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.05549901 seconds)
    (107/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.070228859 seconds)
    (108/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.079769877 seconds)
    (109/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.109194855 seconds)
    (110/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073364683 seconds)
    (111/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.158474471 seconds)
    (112/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.055340076 seconds)
    (113/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.075447185 seconds)
    (114/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.170220146 seconds)
    (115/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.07456909 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.132729119 seconds)
    (117/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.175454472 seconds)
    (118/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.075604409 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.067714291 seconds)
    (120/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.091397541 seconds)
    (121/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.074651455 seconds)
    (122/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.055805807 seconds)
    (123/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.075830275 seconds)
    (124/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.074733896 seconds)
    (125/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.054873283 seconds)
    (126/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.079390008 seconds)
    (127/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.076053652 seconds)
    (128/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.199914207 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.067908318 seconds)
    (130/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.069354498 seconds)
    (131/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.054058272 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.108204578 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.090862202 seconds)
    (134/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.093023603 seconds)
    (135/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.068096209 seconds)
    (136/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.076734281 seconds)
    (137/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.075809163 seconds)
    (138/309) benchmarking ("sort", BigInt, false)...
    done (took 0.193499891 seconds)
    (139/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.05419991 seconds)
    (140/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.177969041 seconds)
    (141/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.074727522 seconds)
    (142/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.054244418 seconds)
    (143/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.09010244 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.06878978 seconds)
    (145/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.067131536 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.068149298 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.088392178 seconds)
    (148/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.07421382 seconds)
    (149/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.155965109 seconds)
    (150/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.135958917 seconds)
    (151/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.075468553 seconds)
    (152/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.139020471 seconds)
    (153/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.054306074 seconds)
    (154/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.083364294 seconds)
    (155/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.054094476 seconds)
    (156/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.080029409 seconds)
    (157/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.054931429 seconds)
    (158/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.14762373 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.07833717 seconds)
    (160/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.06633035 seconds)
    (161/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.066657349 seconds)
    (162/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.067242267 seconds)
    (163/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.103536663 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.087392967 seconds)
    (165/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.076323515 seconds)
    (166/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.075309157 seconds)
    (167/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.13648896 seconds)
    (168/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.112614708 seconds)
    (169/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.070137399 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.131187676 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.068124346 seconds)
    (172/309) benchmarking ("sort", Float32, false)...
    done (took 0.128635844 seconds)
    (173/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.068397598 seconds)
    (174/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.073287085 seconds)
    (175/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.141357659 seconds)
    (176/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.091000827 seconds)
    (177/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.080504433 seconds)
    (178/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.068996377 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.095178153 seconds)
    (180/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.063616979 seconds)
    (181/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.110836654 seconds)
    (182/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.053633918 seconds)
    (183/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.151612157 seconds)
    (184/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.079508402 seconds)
    (185/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.214610823 seconds)
    (186/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.054645178 seconds)
    (187/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.156366204 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.09095325 seconds)
    (189/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.056908233 seconds)
    (190/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.055341189 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.104239591 seconds)
    (192/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.05586893 seconds)
    (193/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.055324791 seconds)
    (194/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.072531346 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.128963688 seconds)
    (196/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.075530989 seconds)
    (197/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.054213097 seconds)
    (198/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.099222102 seconds)
    (199/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.095890488 seconds)
    (200/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.074093589 seconds)
    (201/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.066738657 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.068582107 seconds)
    (203/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.119304449 seconds)
    (204/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.054782228 seconds)
    (205/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.17684705 seconds)
    (206/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.112197003 seconds)
    (207/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.075751023 seconds)
    (208/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.05467196 seconds)
    (209/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.054708586 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.068397701 seconds)
    (211/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.074681718 seconds)
    (212/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.054082289 seconds)
    (213/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.069887306 seconds)
    (214/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.054239449 seconds)
    (215/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.077773394 seconds)
    (216/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.054047521 seconds)
    (217/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.067472747 seconds)
    (218/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.066034364 seconds)
    (219/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.069128081 seconds)
    (220/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.074477831 seconds)
    (221/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.055330703 seconds)
    (222/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.079919766 seconds)
    (223/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.073966551 seconds)
    (224/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.074234786 seconds)
    (225/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.054176999 seconds)
    (226/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.076062724 seconds)
    (227/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.074832694 seconds)
    (228/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.074167338 seconds)
    (229/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.176993887 seconds)
    (230/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.076220779 seconds)
    (231/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.070969374 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.137926931 seconds)
    (233/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.055460364 seconds)
    (234/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.070863087 seconds)
    (235/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.160167127 seconds)
    (236/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.055191427 seconds)
    (237/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.054071474 seconds)
    (238/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.081931859 seconds)
    (239/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.090601794 seconds)
    (240/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.075346215 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.093820496 seconds)
    (242/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.08694796 seconds)
    (243/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.079927273 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.068639452 seconds)
    (245/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.136192075 seconds)
    (246/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.055829336 seconds)
    (247/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.053966344 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.103124518 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.067942639 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.109663118 seconds)
    (251/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.143667626 seconds)
    (252/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.068581498 seconds)
    (253/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.108931507 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.089546567 seconds)
    (255/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.169991903 seconds)
    (256/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.076120931 seconds)
    (257/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.068271828 seconds)
    (258/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.068339797 seconds)
    (259/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.066079385 seconds)
    (260/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.079204146 seconds)
    (261/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.054248969 seconds)
    (262/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.068212833 seconds)
    (263/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.068730178 seconds)
    (264/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.068303323 seconds)
    (265/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.054177845 seconds)
    (266/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.070010912 seconds)
    (267/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.054297335 seconds)
    (268/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.055334272 seconds)
    (269/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.055603832 seconds)
    (270/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.156223176 seconds)
    (271/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.098189775 seconds)
    (272/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.079264134 seconds)
    (273/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.05615438 seconds)
    (274/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.069259853 seconds)
    (275/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.075141072 seconds)
    (276/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.054107856 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.115987136 seconds)
    (278/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.0730526 seconds)
    (279/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.065017215 seconds)
    (280/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.07423898 seconds)
    (281/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.053729593 seconds)
    (282/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.074651047 seconds)
    (283/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.066902588 seconds)
    (284/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.056023992 seconds)
    (285/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.093312142 seconds)
    (286/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.054054379 seconds)
    (287/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.053752115 seconds)
    (288/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.071082994 seconds)
    (289/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.069340319 seconds)
    (290/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.090008453 seconds)
    (291/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.106472353 seconds)
    (292/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.053262586 seconds)
    (293/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.07561349 seconds)
    (294/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.055071269 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.106123536 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074135499 seconds)
    (297/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.072824773 seconds)
    (298/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.054491591 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073319511 seconds)
    (300/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.05484772 seconds)
    (301/309) benchmarking ("sort", Float64, false)...
    done (took 0.126891097 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.087033132 seconds)
    (303/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.053529686 seconds)
    (304/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.065701057 seconds)
    (305/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.089360984 seconds)
    (306/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.066120139 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.238433139 seconds)
    (308/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.058125354 seconds)
    (309/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.068124542 seconds)
  done (took 31.29457803 seconds)
done (took 32.717549403 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.087329775 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094709641 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.079314217 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.095159058 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.083963339 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.078481894 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.075907283 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.081565298 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.082829645 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.084794677 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.082005731 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.058419355 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.077974959 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.078019198 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.078345137 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092583326 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.081531904 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.076382705 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.076138443 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.06761567 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.07645357 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.068392133 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.070226858 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.05765689 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.08086854 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.074464774 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.07690874 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.076789339 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.068861933 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.068971048 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.07258104 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.076628174 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.067772439 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.081800567 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.075955675 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.076038424 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.077505484 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.07943299 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.070248707 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.068163752 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.077217038 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.06864072 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.075715752 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.076253419 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.074614945 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.073455673 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.075793607 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.079569045 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09160977 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070132424 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.077521488 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.077926198 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.079074385 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.075226576 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.072568134 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.076180862 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.072993456 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091978627 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.076056686 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070652165 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.077261412 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.076683651 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.073419426 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.076102899 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.076012883 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077949954 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.078855905 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.073723541 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.077740956 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.074545749 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.067742184 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.075957758 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.071750093 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.067961448 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.078296182 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.079745577 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.067222735 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.074066321 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.075377556 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.07611432 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.067630195 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070108426 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.06990991 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.074675715 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070126816 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.060067761 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.072355759 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.074950348 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.067542377 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.076822268 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.075127316 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.075299678 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.069408429 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.079676559 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.067157548 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.072841613 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.068139921 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.067717267 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.069271908 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.072822011 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.067542742 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069666319 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.078223447 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.069187759 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.074777095 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.080379369 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.067824137 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.074657298 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.066653367 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.066905639 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.080518811 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.07698625 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067652059 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069489285 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.066471948 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.074040408 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.066053233 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066596066 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066787733 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.066742719 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.073021692 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066910223 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069230764 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.218670978 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.08378741 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.06883525 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.073900823 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.07059974 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.068347556 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074312938 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.068501288 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.068199026 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.070290718 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.064714428 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070223564 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.068508974 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.075662081 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070479959 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.076611532 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.070104558 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.076111056 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.07295163 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.074301664 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.073529385 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.066884364 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.06177416 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070155172 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069448777 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.069752701 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.067825756 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.069653319 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.067519272 seconds)
done (took 12.853555235 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.070641912 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.131298755 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.093687466 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.094102074 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.084604327 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.069027211 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076437879 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.095695268 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.069740707 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.097762634 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088059967 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085996964 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.109738022 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.06733364 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068412464 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.072130424 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.0699687 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081958932 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.097235717 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086886258 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.111052534 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.068312263 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.092053625 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.088500974 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.08728382 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.102039288 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069348291 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.072193082 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.072960868 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.094504967 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.088933264 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.072386153 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.070978633 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.095634777 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.092030424 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083579902 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.068902984 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.083212149 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.068845717 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.068786272 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.070083295 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.096445773 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.08080934 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.081679965 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.07241447 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.077732324 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.070005645 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083008824 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088493507 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.079457833 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085021906 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.098529838 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.070763391 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.083767051 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.067472663 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085178364 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.077236673 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.070431967 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.069705432 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.075929093 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.069088034 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.071922105 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081229454 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.081211966 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.072399138 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.083988051 seconds)
  done (took 6.87294118 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.087904446 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.092388044 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083490493 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083724367 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.068645161 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.068759033 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.068674386 seconds)
  done (took 2.070403007 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.07116363 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087789087 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088429995 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088957017 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.082287043 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.088028769 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.079396613 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.069116972 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.089054559 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.070041522 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088648602 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.098176779 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.072376119 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.075517897 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090900714 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.069297511 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091265168 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.069489473 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.071434882 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090146257 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071675932 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.097799661 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.072556146 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.069330976 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.082173252 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.06962051 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.112265494 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073386644 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071014433 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.072323275 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067117697 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106116442 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.081695728 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.076492521 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069296097 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.083421006 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.082932783 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067445844 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.085285381 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.07697497 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.082186636 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.069720566 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.070930351 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.067320848 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.074001977 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.078702069 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.069813277 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.069884781 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.071560012 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086834235 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.069774307 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.081726875 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.071418716 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.07439945 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.070532489 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075289274 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.07851854 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.070168492 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.08720884 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070625756 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.084089706 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083222759 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.081901585 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083522012 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.070985715 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.081301185 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.081856211 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.071598288 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071312668 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.072706513 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.083357866 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.067789063 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071663774 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.078676651 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070774074 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089792383 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.090311379 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070499355 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.081998011 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.069819711 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.069575187 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.06941434 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.08992921 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073721223 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06965242 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073251186 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072190456 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.067748817 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.068264742 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.072946476 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.067916884 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.070470925 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.071975402 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.072200557 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071457396 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083197301 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.070960758 seconds)
  done (took 9.001012966 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.073696323 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.070571568 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.07140927 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.069848765 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.070723149 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.070503785 seconds)
  done (took 1.971690761 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.09265877 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.070947099 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080289012 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072900936 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.101639958 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.08726286 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087375247 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078764086 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084176869 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.07967572 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086632687 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088027432 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091721552 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.073734942 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.087298901 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.073124087 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087843511 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075522302 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079346941 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074598749 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086283612 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.073786975 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074153558 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.082291207 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.077590585 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.073484809 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.079700769 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.0796218 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079508689 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.079338452 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.073802369 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.080434041 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.072811439 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.079319113 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087809767 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.072246648 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072992695 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.078214107 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.073483809 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.077042667 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.08807574 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074574102 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.075391013 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.078362438 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078423116 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.072733351 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.078274522 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.080437048 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.087370496 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.078626808 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.080631738 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.073352985 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.076951014 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.078268082 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.072583201 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078514753 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.078770223 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.087917138 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.073619533 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.072426675 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.070843941 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.077088352 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078100821 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.077229385 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.079201952 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.078496059 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.072621931 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073868375 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074166202 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.072963452 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.078110282 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.070409033 seconds)
  done (took 7.184171314 seconds)
done (took 28.600666981 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.535507642 seconds)
  done (took 2.02842671 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.59507797 seconds)
  done (took 2.117900473 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.588847532 seconds)
  done (took 8.114262115 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.361787485 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.462602327 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.695054704 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.134374429 seconds)
  done (took 3.206692201 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.71101589 seconds)
  done (took 2.245580358 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.231130228 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.219723142 seconds)
  done (took 1.994601459 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.37857785 seconds)
  done (took 1.905313489 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.085029007 seconds)
  done (took 2.61024061 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.231549523 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.174540464 seconds)
  done (took 1.938538316 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.452340402 seconds)
  done (took 1.985222116 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.822421383 seconds)
  done (took 6.355883798 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.216224285 seconds)
  done (took 1.7921968 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.235060213 seconds)
  done (took 1.762342342 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.741533466 seconds)
  done (took 3.274179642 seconds)
done (took 42.871961794 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.086908149 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.086189129 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.086433979 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.083344314 seconds)
  done (took 1.85116162 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.079780149 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.074350724 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.077803731 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.074127681 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.077160989 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.074087726 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.076218927 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076759054 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.074003948 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.074456866 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.074583488 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.074565113 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.076761568 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.07597476 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.073245779 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.076581419 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.077393025 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.074421754 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.077123505 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.074989201 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.072841177 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.076366413 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.076822183 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.07374758 seconds)
  done (took 3.345266809 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.081036077 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.074847153 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.076407799 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.07349865 seconds)
  done (took 1.843694768 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.080964563 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.090046908 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088549661 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.079957196 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091424452 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086016539 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.071171386 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.071202353 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072149461 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079527503 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.069919378 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095335921 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.08839018 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.079847642 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.082248093 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.068097443 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.069928461 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.087803254 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.080575516 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.081102822 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.072332256 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.080024181 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.070651284 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.089775716 seconds)
  done (took 3.458279127 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.087443017 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.101176889 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.080874379 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.090447112 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.092513628 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.067245863 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.086875909 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.09321289 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.124143014 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.06749007 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.073206334 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.067837372 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.076342952 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.067826655 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.082071432 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.107065506 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.110832448 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.07088648 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.098547534 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.067918752 seconds)
  done (took 3.258361956 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075653967 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071543898 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.072424122 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.067607436 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078310646 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.074458543 seconds)
  done (took 1.98472573 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.071801139 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.072370419 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.069620562 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069028004 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073147211 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.068955257 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.067968797 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.069998217 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.069958614 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069466473 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.068885863 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.068187784 seconds)
  done (took 2.376943337 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.184021728 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.07120606 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.070485234 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.0676865 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.072020943 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.068941933 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082917787 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.070800222 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.092519701 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.068935895 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.06943576 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.071480626 seconds)
  done (took 2.530936565 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194155083 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078103823 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221129715 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147163879 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107747455 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110793507 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10995204 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109254235 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.134137665 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097992798 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157483183 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158832452 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104869284 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13292799 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089086322 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.099840342 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147732518 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15831989 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104837802 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15839221 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139175842 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123199192 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141445357 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099751836 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103900005 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117288261 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.073181647 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080470301 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160827141 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127963851 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138414675 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113504355 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090477848 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166732955 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160271983 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135405279 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142882115 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085051656 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.10251445 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.128242007 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185815072 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088337095 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152304394 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106912206 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079337068 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125056076 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111429991 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.11300027 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.098509681 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087094017 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135619826 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166236457 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.120985593 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082814401 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114389775 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10340132 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.102344306 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103443592 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155557546 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141748502 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115930442 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.07058216 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103357338 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135608123 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119916363 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.098141583 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.111300927 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084997915 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119453068 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137388079 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111436655 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126170904 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.105928746 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08390572 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110262763 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12608731 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114158027 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140722143 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113840016 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.071777744 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110559778 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092851644 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077688129 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.139470779 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072969821 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156079752 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094206211 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.099343845 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114073179 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100968039 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100555801 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139055703 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.39213535 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104478761 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.071047509 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106463313 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.118811402 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14047149 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089990594 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107567463 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116159446 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.080316703 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131606729 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.078405889 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120812298 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.07829677 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120559116 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126786531 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.079406493 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12037613 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1029275 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.10040765 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128161977 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153182222 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089245412 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082236033 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158970774 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120115266 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.10249031 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137481732 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150467217 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.100358502 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099172126 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143324912 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164192545 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089658828 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15643033 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104452257 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083925104 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087550209 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120586627 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109419371 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.119423247 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082094145 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.114119221 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157591891 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.076062154 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095215492 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130470227 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079336722 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081525355 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10421614 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102982698 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.095844503 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.09744775 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.100453528 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131591729 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271752539 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103665864 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121228789 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098289446 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1583606 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08831744 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.101982527 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102437666 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.071690903 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.128911907 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148284399 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079959291 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152855632 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.117777055 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113158789 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115871963 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084410574 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132081994 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079643367 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.072414186 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13767587 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108860332 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107189529 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.144064147 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114049844 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.121872607 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.11537764 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127579723 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125792049 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.125536399 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105262368 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.08832414 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110010754 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124363434 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.075220121 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.09025007 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.081286114 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103564736 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095054788 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084121005 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135580315 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11865841 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110411029 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110006001 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096246158 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139684921 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.077126066 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122165089 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.116453358 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094788506 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.146679078 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144362989 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12750577 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.252090613 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131840772 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.072410064 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075944388 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.087044402 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117946525 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084529346 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083819699 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111206442 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140100328 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122917835 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130849762 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11891654 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11531375 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146440556 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.071582913 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.117928678 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137962804 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117822046 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.103304828 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090236032 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098281794 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13733616 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105120291 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169992245 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112062545 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121202767 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147929834 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.101527147 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080347716 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100805814 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128025725 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101826052 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136695664 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097501902 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088609783 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106868049 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.077153134 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097654441 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124051471 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115397202 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129396049 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.111167024 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128646238 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078866308 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11103872 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119977664 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118290114 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.065822288 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114503566 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151005756 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094216884 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114112238 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.298062953 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080384004 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.132926431 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163376659 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138565246 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086293253 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104895061 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116756288 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121754232 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11557372 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132715255 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104633796 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13123721 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107223958 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085397046 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087452749 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094894077 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102525171 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.092848967 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.102561377 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.110828482 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095798738 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12739103 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102915311 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10816523 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115257493 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.099262594 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.092596879 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096475452 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166451019 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115898435 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161334622 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.098844451 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.137029603 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154813621 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077057315 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080577279 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.079949663 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133823822 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08539079 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126461264 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.108152238 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114329826 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119589292 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133699806 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094939405 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.070141072 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106276299 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128827484 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120533311 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097212991 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.100034092 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152930025 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.250000698 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079552995 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109307245 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112402681 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101744199 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160978947 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.064001399 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103620104 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077506949 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080908573 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121311635 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142959774 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080975443 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.099129244 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116346457 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110009556 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121466675 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097388768 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108878123 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.120697112 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140956191 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123751032 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089600229 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108811023 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122910341 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148134421 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101037087 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.096799197 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163243657 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144882875 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.151537635 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.086233083 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111477507 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111427913 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108817052 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134226714 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084295536 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154683509 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083061127 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132258992 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100485328 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089186892 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12381604 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.108917643 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088212933 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138960332 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113549943 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083121593 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078102325 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113947294 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115474718 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10181717 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.076324646 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132264388 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.074927873 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12695075 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150893485 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080642693 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101903006 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093162528 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079183229 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10108226 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099351521 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08549757 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.097112083 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156583907 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.084055697 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137110831 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124974428 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105709291 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124871594 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098764942 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.636220501 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077148901 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140754017 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109110714 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156191089 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096103898 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111957792 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104837114 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113447129 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133156825 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097907457 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.175366729 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123288376 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.109946314 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077945693 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098414032 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099567233 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.084593696 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102581298 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107903657 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10882615 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.089689089 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.110415235 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116513344 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081312515 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093413828 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143700531 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10949982 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133323278 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129810521 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083471349 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11152589 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.396873622 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08302665 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.116754342 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145148777 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10606448 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101297565 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.082999626 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.100290624 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152296964 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.076167644 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151593673 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118066414 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109177973 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111424565 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.108448211 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129466543 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104902824 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119235772 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09265723 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.106603389 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112356063 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085622081 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.079140774 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104262163 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109250375 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.098195586 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096574646 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.099827916 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146184472 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.074753112 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098646731 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113447091 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138488385 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16473852 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.08787925 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083903645 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117262224 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113915867 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.110675949 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118707702 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.08047999 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083153536 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081171808 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.082519596 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.105984404 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110915908 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11157484 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107175433 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153672638 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.083973495 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.223292265 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09461763 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102897507 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.070774134 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078994845 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095721842 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.250807641 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104631908 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111239216 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152271646 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.09471489 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089363222 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090815461 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.076365673 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084189465 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122340389 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105751365 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115199371 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099201227 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.064355384 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104322245 seconds)
  done (took 57.137601129 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.112377612 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.084247892 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.097864553 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.144141748 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122168862 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199555259 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.156411928 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.189325212 seconds)
  done (took 2.835337666 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.072932041 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.096206894 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.103946463 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.084192364 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.06953911 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.071060934 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.218656193 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.083098426 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.069251599 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.094524984 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.080468586 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.071970023 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.412181206 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.069007903 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.070827465 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.065567629 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.070717926 seconds)
  done (took 3.503109108 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.386314462 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.625958021 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.333428427 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.079168194 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.931266274 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.093656022 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.155615675 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.137262283 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.081171202 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.545148668 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.409425413 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.132059136 seconds)
  done (took 18.617831474 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.086031411 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.07903093 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.090742268 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.090878937 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.080398473 seconds)
  done (took 2.130074501 seconds)
done (took 106.43388294 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.086088507 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.584680862 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.057429131 seconds)
  done (took 2.374272852 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.090040767 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.087043589 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.087215806 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.084606601 seconds)
  done (took 2.064338767 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.0773323 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.078239468 seconds)
  done (took 1.866881684 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.223213364 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.167291807 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.096296478 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.085281394 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.081568702 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.082253383 seconds)
  done (took 1.97218176 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.075310454 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.076963657 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.074648428 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.078052994 seconds)
  done (took 2.018411969 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.079555275 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.0556821 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.058444403 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.060725813 seconds)
  done (took 1.968663951 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.088992715 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.083678511 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080252482 seconds)
  done (took 1.967793864 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.10068687 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.088473894 seconds)
  done (took 1.904803903 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.08498232 seconds)
  done (took 1.801947134 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.094552242 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.099452742 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.127756016 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.109726235 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.134867236 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.106693945 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.086061406 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086461873 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.078551127 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087041439 seconds)
  done (took 2.727103707 seconds)
done (took 22.940702249 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.081138662 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.368021053 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.36151503 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091136062 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669988075 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.359643906 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.96764901 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094726977 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.139760316 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070224753 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086804807 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.650058406 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.960800987 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.32822379 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.9465928 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.323914417 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.651417222 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070824184 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.07074357 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070587041 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.957824678 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070438825 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070640691 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071382829 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.651521494 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.374654381 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071152247 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.327855019 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.07103515 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072315089 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.358134818 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071788698 seconds)
  done (took 16.220634075 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.091542276 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.120367392 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07522477 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.086422678 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.072600244 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.07227213 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.073704743 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.071728629 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121584383 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070736877 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087563504 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070393203 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.07399113 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071483212 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090139651 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070979386 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071406091 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071946166 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071354749 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.07146564 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089704189 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071191296 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071693962 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.07182924 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071512257 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082875745 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071624791 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071283656 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.07180601 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073629946 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074305663 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072519435 seconds)
  done (took 4.228143544 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.121321408 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124971665 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075575589 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.106183599 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112659638 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072474841 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.144374763 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09544703 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.128250831 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070912799 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088151296 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071381557 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.103347476 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072003665 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091067159 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071632104 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.07294591 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071896334 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071773465 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071146683 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090320511 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071380827 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071946768 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.07202866 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071482073 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084261671 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071970424 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071849348 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072089589 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073192966 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07523364 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.07269897 seconds)
  done (took 4.462492842 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.077022433 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.0779523 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.084766952 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.086337014 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.071862464 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.074659448 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.075496322 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.07219866 seconds)
  done (took 2.350353054 seconds)
done (took 28.985825654 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.082384302 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.071268944 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.074519602 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.09001247 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.075577232 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079493856 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.0695012 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.077989481 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.075182472 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.075909551 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.077286086 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070294352 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.074265668 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.069550486 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.076309349 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.070686475 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.081455521 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.075165744 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.081058257 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.081324251 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.072917029 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.075802766 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.077855243 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.081452597 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.081506972 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.081359388 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.07981829 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.076184575 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.07322213 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.074003599 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.080209148 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.086327508 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.071645264 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.081519652 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.070750557 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.071350947 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.074845768 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.071380849 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.081783664 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.079507187 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.073202531 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.079966538 seconds)
  done (took 4.918927241 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.091552017 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.092439516 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.085873425 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.06399912 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.068178477 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.067311428 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.08986477 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.062387672 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.062847944 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.089378373 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.059326408 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.062145073 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.065629668 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.057252581 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.06243761 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.060425759 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.064551363 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.059133331 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.062990074 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.062554791 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.090022724 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.057566386 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.0796686 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.06558317 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.059519203 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.064894874 seconds)
  done (took 3.547848466 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.078212384 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085039611 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.091204122 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.14229381 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.112692027 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079830101 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.080850514 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.094405103 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.09600526 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069584599 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.074145368 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.095223028 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089065908 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.075958732 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.070560961 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.086861038 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.087178824 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.072143397 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.076194747 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.09389217 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.087884062 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.087476302 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.093272673 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.083343193 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.070164509 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.073004202 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.074285917 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.083487472 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.07268208 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078608552 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.073352828 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073158447 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.072239881 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.081225635 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072748058 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.071807836 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.095822301 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081569363 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080433858 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.070747578 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.078190073 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.071219371 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.092931856 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.125000678 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.070677693 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.076024387 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074037956 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.079745502 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.06959562 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095512789 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081444127 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.070260155 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.073049758 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.070064852 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.070172876 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.073058884 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.072048341 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.072439271 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078034496 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.075906893 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.093678715 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.074871132 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.0862029 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069741303 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.077701272 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.069436749 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.071060674 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.069430195 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.096013107 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.071765839 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.109264448 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.071101915 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.070806132 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.078759906 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.077960843 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.076310945 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.070073724 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086597158 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.080471366 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.073586713 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078204083 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.073486037 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072479427 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.098118832 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.072890983 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.071968451 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.07152896 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.075347331 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072711364 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.071543878 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082681613 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.069901129 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.072699966 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086472559 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.069852545 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.071635352 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.075367296 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.073862478 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.069280956 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080363829 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.073551285 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.071100692 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079206001 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.070002884 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.072962383 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081343513 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.076045372 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.069326853 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.074011488 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.07514855 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070709396 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.071397161 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.072202907 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.072074531 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.078404999 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076477979 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.074424719 seconds)
  done (took 10.983983287 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.163633456 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.150554124 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.073521201 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.143343121 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.079002391 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.081011196 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.144404545 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094194771 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.07121375 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.071545742 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.071633386 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.10972214 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105008863 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.115284298 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.080499345 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070790985 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.092525766 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.113827727 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.14684661 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.142456966 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.092885185 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.079134514 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.073112021 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.072113818 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.072922936 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.080026523 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.087076514 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.082905052 seconds)
  done (took 4.538407068 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.082790463 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.103707403 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.076665783 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.091289782 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.090911549 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.07046842 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.072612992 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.073515542 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.087033738 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.080071959 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.070427994 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.075352295 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.076838446 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.073499865 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.071387012 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.077356574 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.076989917 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.072121693 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.074094382 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.0753411 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.080155005 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.093517422 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.074010825 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.070286328 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.075078604 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.070070588 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.066017213 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.085542374 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.071389851 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.09396943 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.068320606 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075712118 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.083197762 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.071865463 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.070828548 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.070467638 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.070490408 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.070529306 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.072478346 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.071345727 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.069213935 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.060828623 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.069998758 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.080758082 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.083458739 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.059689956 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.075645134 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.075709984 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.075552957 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.068262547 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.073638131 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.073471172 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.073657152 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.077902516 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.074453008 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.075701059 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.071921875 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.076479758 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.078251834 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.070517237 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.068125316 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.069069194 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.07506233 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.067768475 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.08571593 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.075356837 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.06934342 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.070381716 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.072172501 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.083540155 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.070857126 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.075032206 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.068638692 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.072399103 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.074987367 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.072403271 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.071740296 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.06910151 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.070602805 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.071483818 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.058747564 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.070945536 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.056766934 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.072968524 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.068982958 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.069321043 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.070432665 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.075761797 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.081194064 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.071950922 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.076416442 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.071871775 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.070433812 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.073275792 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.063168665 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.073212958 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.080995798 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.084252617 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.070860645 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.068544511 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082110366 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.075566563 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.069681463 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.059532565 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.073996454 seconds)
  done (took 9.550324653 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.094468647 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.072511315 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084916439 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.090224519 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.088022597 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.076679724 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.07928854 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.071744058 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.085224845 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.075977576 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.078675923 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.070670967 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.080549097 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.079657545 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.072116328 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.080562421 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.074267302 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.085040296 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.084696032 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.070635849 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.078769676 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.082738834 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.091469177 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.083080605 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.081378601 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.082607553 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.091914195 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.079607294 seconds)
  done (took 4.053158731 seconds)
done (took 39.315876859 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.826447732 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.979936735 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.805461261 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.126787235 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.072068068 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.831844898 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.885471375 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.793647617 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.085551978 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.831751221 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.112594978 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.875044874 seconds)
done (took 66.089323926 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.824487362 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.938233078 seconds)
    (2/2) benchmarking "String"...
    done (took 2.03445414 seconds)
  done (took 5.702092397 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.0380374 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.447201217 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.03691596 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.802353517 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.80119072 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.107453377 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.58524151 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.304726932 seconds)
  done (took 30.812657306 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.974297886 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.019657684 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.492258862 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.524171465 seconds)
  done (took 15.78681464 seconds)
done (took 64.101223075 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.838537529 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.81765014 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.826144372 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.776555624 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.851246705 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.804128917 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.409954809 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.867197571 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.794514493 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.786470699 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.791366362 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.212978538 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.796649234 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.342260422 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.792485712 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.797151948 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.8465349 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.359348158 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.947648088 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.806104007 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.797366056 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.855865425 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.79234825 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.796467933 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.839938157 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.794766308 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.17916146 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.803779846 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.658248056 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.799691529 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.855276762 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.81735681 seconds)
  done (took 205.17889965 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.79233279 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.65760303 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.725840707 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.826431479 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.058230969 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.975659007 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.904210563 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.213548788 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.797052125 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.822195982 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.008547471 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.790478826 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.029959232 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.741022383 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.822677995 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.856236094 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.957938066 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.040350123 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.82158853 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.948110943 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.80088859 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.81120147 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.754769528 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.010248114 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.83298094 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.876542822 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.804125429 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.823202245 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.98205709 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.926385254 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.832905127 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.838966474 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.991743227 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.665979129 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.823696673 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.81441255 seconds)
  done (took 170.104834675 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.98591192 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.798587453 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.797041977 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.793528626 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.799604582 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.794460036 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.924882035 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.918575311 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.421395322 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.140073864 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.848902283 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.795339618 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.602692702 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.795129985 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.86433078 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.805659267 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.794049593 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.813581506 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.820866019 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.793228147 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.798121657 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.922422287 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.809620468 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.792814544 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.800997363 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.797979546 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.801480537 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.16478971 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.798326052 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.9258296 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.794966953 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.800399839 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.038153626 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.805229254 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.796232537 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.647090761 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.329419017 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.889954779 seconds)
    (38/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.797251174 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.802707607 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.802326366 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.797032802 seconds)
    (42/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.797046315 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.021754102 seconds)
    (44/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.800164261 seconds)
    (45/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.794747599 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.796732514 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.798795943 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.947504157 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.796811838 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.922227195 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.793545806 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.284928743 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.795842988 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.801477163 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.718851902 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.397341372 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.800459608 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.799295921 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.798934677 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.793537337 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.802497703 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.738764996 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.872526743 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.80056563 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.798741327 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.802663602 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.802037348 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.868351644 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.795357654 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.959037575 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.856122563 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.915051976 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.917419857 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.797103759 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.868379243 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.889911196 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.801234814 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.798535743 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.800447054 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.799187846 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.879922895 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.795112812 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.923681775 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.805440793 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.802784043 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.852321037 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.870591788 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.795138997 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.657441028 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.801689394 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.801981343 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.09238971 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.865517537 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.800746218 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.799501972 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.800189579 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.922629343 seconds)
    (98/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.796301611 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.923669917 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.515607574 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.800975546 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.483382356 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.933431318 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.799248615 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.947912986 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.803874076 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.882868515 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.804890761 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.80159328 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.833048969 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.797669491 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.854095897 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.802828896 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.171664356 seconds)
  done (took 404.54130106 seconds)
done (took 783.594111923 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.397253477 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.36680341 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.462923326 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.386495911 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.357770994 seconds)
  done (took 13.698097429 seconds)
done (took 15.430851224 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.892360285 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.892137827 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.823621579 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.890489645 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.818838624 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.889379745 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.875169763 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.827479675 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.857015084 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.826195469 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.858795774 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.828064798 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.812524614 seconds)
  done (took 25.818610295 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.030448805 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.049468464 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.870009414 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.031972732 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.848679139 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.037492791 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.975336051 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.950849667 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.952692285 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.818349822 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.81473293 seconds)
  done (took 23.111221791 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.04571009 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.049062703 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.879436099 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.034711315 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.850937347 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.030658017 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.965365591 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.957180603 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.949738707 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.818043771 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.815827849 seconds)
  done (took 23.125872054 seconds)
done (took 73.784911779 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.809962018 seconds)
  done (took 3.539264706 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.836958184 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.002182259 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.817940725 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.813437245 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.809316625 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.811144287 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.811365726 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.811027429 seconds)
  done (took 16.444704032 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.803749639 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.804616079 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.806044558 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.80591599 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.812309883 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.811508896 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.811899479 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.80987535 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.806074551 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.810594673 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.809850491 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.809367685 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.810940437 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.808033018 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.808573516 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.812809447 seconds)
  done (took 30.672675647 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.806609785 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.805033657 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.805442867 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.808450247 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.807065911 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.808644533 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.809343273 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.80794781 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.805523707 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.81067832 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.806562846 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.808460311 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.808848097 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.809765778 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.808369462 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.813234241 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.810235374 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.807701178 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.816695877 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.810721797 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.812446878 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.81189612 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.808821385 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.812860226 seconds)
  done (took 45.154253785 seconds)
done (took 97.543279746 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.574784289 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.429327759 seconds)
  done (took 9.738937486 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.812689 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.809104553 seconds)
  done (took 5.418804565 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.809510144 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.809742897 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.816258139 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.810572192 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.812531302 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.811219795 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.810440363 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.811071173 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.819851356 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.812486785 seconds)
  done (took 19.856214072 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.814027133 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.811194736 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.811509552 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.813005278 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.810131495 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.809390016 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.808830805 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.811393058 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.814466948 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.809918898 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.812412148 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.810830896 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.812922798 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.811235804 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.812464423 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.808577663 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.811674994 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.810000323 seconds)
  done (took 34.339753299 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.812886422 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.813483794 seconds)
  done (took 5.360536792 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.810200222 seconds)
    (2/7) benchmarking "second"...
    done (took 1.808725837 seconds)
    (3/7) benchmarking "month"...
    done (took 1.808377526 seconds)
    (4/7) benchmarking "year"...
    done (took 1.811662882 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.809280722 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.810540142 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.811866374 seconds)
  done (took 14.407439912 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.816403098 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.958283849 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.022934691 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.481016321 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.818297281 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.819472918 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.788169506 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.815500032 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.819093002 seconds)
  done (took 20.074106841 seconds)
done (took 110.928063941 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.630384692 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.806898783 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.072107304 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.865581647 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.826276717 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.152896924 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.848384168 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.087746181 seconds)
done (took 43.024987417 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.893442432 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.515060347 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.517519823 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.835144742 seconds)
  done (took 15.603726478 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.794828977 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.36352469 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.856939603 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.467103447 seconds)
  done (took 20.43916786 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.181811675 seconds)
    (2/2) benchmarking "read"...
    done (took 2.165117059 seconds)
  done (took 6.090184316 seconds)
done (took 50.761913852 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.816696919 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.817412529 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.813417616 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.817246765 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.81484264 seconds)
    (6/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.818282919 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.818166913 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.814324743 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.814647067 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.817153 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.817126289 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.816254101 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.817507976 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.818677765 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.816799979 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.815063207 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.816797634 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.814844145 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.814708073 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.816180027 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.820206383 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.815066767 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.815753584 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.818483448 seconds)
  done (took 45.333347347 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.818684493 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.814847321 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.818457149 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.818355647 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.815778689 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.82243308 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.818843086 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.815374936 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.818558103 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.817443604 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.814031049 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.81666137 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.816907693 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.816328371 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.817991216 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.816279626 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.819622814 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.815642993 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.818858966 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.816572453 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.82006337 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.8173147 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.818875852 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.819304488 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.815702532 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.815929887 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.818519434 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.819372468 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.818003625 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.817289692 seconds)
  done (took 56.268224381 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.823907756 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.827285058 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.822030806 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.818975325 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.820201511 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.820538048 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.819243117 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.820852997 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.820888295 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.819733524 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.820564153 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.820490916 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.821060978 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.820375899 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.8210593 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.820752637 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.820341737 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.819726343 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.823293192 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.820496229 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.819951259 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.821374601 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.821879382 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.820770888 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.820742889 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.820657924 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.821878918 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.821932824 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.820785522 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.821184335 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.821740504 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.8219739 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.820584563 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.820159232 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.821581578 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.821960979 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.826112676 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.829941239 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.820934188 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.82225793 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.823077895 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.82177492 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.822011344 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.821475273 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.821078872 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.822355199 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.824647216 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.821326601 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.823118346 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.82108962 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.821212251 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.825190647 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.822156642 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.821411205 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.821466193 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.822255011 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.822740113 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.825789066 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.822828183 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.822906289 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.822658666 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.822034703 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.824765397 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.823586426 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.822646848 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.822516499 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.823568661 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.822532609 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.825115945 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.823325261 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.822400789 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.822957267 seconds)
  done (took 132.931653335 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.826057271 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.822553562 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.820659061 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.821394934 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.822858703 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.82414694 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.82557616 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.824087898 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.822215115 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.824367886 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.826705091 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.823564251 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.823018548 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.824591962 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.823371376 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.82229407 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.825027124 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.822765655 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.824896208 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.824946788 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.824776691 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.821193151 seconds)
  done (took 41.867310666 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.823860946 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.824679405 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.821737368 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.825061716 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.821203853 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.825959297 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.824583622 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.824195282 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.825203241 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.822379865 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.823810383 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.824226843 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.823241173 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.822311045 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.82132323 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.823056904 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.825474121 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.822850153 seconds)
  done (took 34.571394972 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.822157344 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.822788697 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.826397087 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.82388551 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.823760432 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.82415401 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.822696495 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.826455599 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.827030902 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.822328136 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.826926541 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.825296889 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.825457213 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.823734101 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.826216634 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.823515965 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.825930872 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.823841235 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.827240964 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.823643232 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.823933234 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.826232727 seconds)
  done (took 41.889845038 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.828105371 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.826706128 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.824931006 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.822610003 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.823563307 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.827011625 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.82654746 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.824641569 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.826019135 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.826798489 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.823150006 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.826155737 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.826976827 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.825989025 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.825896493 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.825281621 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.828086751 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.82684012 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.8274849 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.824053717 seconds)
  done (took 38.264548021 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.82879047 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.830156844 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.830272146 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.831691905 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.828898417 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.829020232 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.830095861 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.831097574 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.831513308 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.829871386 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.830852592 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.829578571 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.829781598 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.831124472 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.830195061 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.830806543 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.83005541 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.830601187 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.832822006 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.831041568 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.830541902 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.830296341 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.831015478 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.830140498 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.830582716 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.830621984 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.829767728 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.830507672 seconds)
  done (took 53.001106143 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.829913128 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.828412923 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.825865198 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.826365459 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.824794229 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.825339841 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.825733907 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.825221129 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.827858171 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.825453719 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.829059721 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.827890253 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.829468165 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.828878958 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.828470128 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.82781611 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.82909038 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.826887122 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.825204952 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.825358348 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.827992035 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.828763546 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.82895812 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.825957894 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.826268367 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.829860451 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.82775998 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.828300771 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.830269014 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.826918271 seconds)
  done (took 56.574101563 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.846999497 seconds)
    (2/2) benchmarking "in"...
    done (took 1.847912119 seconds)
  done (took 5.446142806 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.826744882 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.830227424 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.82940594 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.827009732 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.826871137 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.830708426 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.827778089 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.82705432 seconds)
  done (took 16.376635147 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.831730464 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.831559961 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.830735912 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.830907214 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.832494402 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.831946325 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.841231879 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.833562243 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.83189383 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.832281935 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.838001281 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.841786521 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.83479053 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.833035606 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.831087686 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.832815778 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.830563087 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.833522676 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.832934386 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.830863903 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.833432827 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.834360913 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.83377 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.830071674 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.832773375 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.843344571 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.835031898 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.83125668 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.831941045 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.835516015 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.831701673 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.82869987 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.833282456 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.833943142 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.833023197 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.833329927 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.841406947 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.833698284 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.838026672 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.836123707 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.833578206 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.830682707 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.834014252 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.833687146 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.833599434 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.835001484 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.832809574 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.83096671 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.831778219 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.835314956 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.839219979 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.833040617 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.830462417 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.837776622 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.835132611 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.840646286 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.836328809 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.836572558 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.844845469 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.844683473 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.846457562 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.842766672 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.837299805 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.837163847 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.84344435 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.860015719 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.843245392 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.83261049 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.831413759 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.834367445 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.843349835 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.847329421 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.845124051 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.836966263 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.835238395 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.834960562 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.834661129 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.834690725 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.843206918 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.839777049 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.836228294 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.837502091 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.844566289 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.860702998 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.834547264 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.835745836 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.836108481 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.837223561 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.835982576 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.84723366 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.839637327 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.834979012 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.835311415 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.835437091 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.837979577 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.837580215 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.835855437 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.837545061 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.832835148 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.835499782 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.836462386 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.838388261 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.845734455 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.838362481 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.83826004 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.844921839 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.83748108 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.83535997 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.843233807 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.837800367 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.838309894 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.838140768 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.842194063 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.833394555 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.839550738 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.84544139 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.8389556 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.838383721 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.837129734 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.836626276 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.846713896 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.865827507 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.836557437 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.837422575 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.841710933 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.85096873 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.840903483 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.84146721 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.838375423 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.835565437 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.836064689 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.838801537 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.83768693 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.837791153 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.838686202 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.838722719 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.835468901 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.838584712 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.837978823 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.839485321 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.83872742 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.838128415 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.839349416 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.841229765 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.840713798 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.840058704 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.845527346 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.840414634 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.841177058 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.841053352 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.837278263 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.838680962 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.841669938 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.840758088 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.84094323 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.841958935 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.83883384 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.841394521 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.84029927 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.841957236 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.83919523 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.840938675 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.843667233 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.841945891 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.846815437 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.841218433 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.837399937 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.840924965 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.840882251 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.840329618 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.843603917 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.841341147 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.843472479 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.851446283 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.84044756 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.843738522 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.84411863 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.842513233 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.843835598 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.843826934 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.843991364 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.854183613 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.843128068 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.848499779 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.843489085 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.842686937 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.845193385 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.841747843 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.841416416 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.844225733 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.845076265 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.850538459 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.85532252 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.851646189 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.843217348 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.846939852 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.843444411 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.849684205 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.845573807 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.843868272 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.842388824 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.843023671 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.842629857 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.844227397 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.843951495 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.843586709 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.842416556 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.843602216 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.843903861 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.843828165 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.843859419 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.844026972 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.845000599 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.840592628 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.844066096 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.844713875 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.843888913 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.839943744 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.842571798 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.844695243 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.84288501 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.845188994 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.851359053 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.84304424 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.846613852 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.846432438 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.845784595 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.841461397 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.84367234 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.846870036 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.844005172 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.85054247 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.845328005 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.845286974 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.851859626 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.845034599 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.844199496 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.847503696 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.845164493 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.842454483 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.8484707 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.853792982 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.844979428 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.846907693 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.846464488 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.845255897 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.846237032 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.851243179 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.842938122 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.845188648 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.84452842 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.84850582 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.842019306 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.847455725 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.845768613 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.846590254 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.848111095 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.846387789 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.846455726 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.846608133 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.846900196 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.847197768 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.847567864 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.847735292 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.855653732 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.850867824 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.847264266 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.850429248 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.848626755 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.850654949 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.847475999 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.847262191 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.84660351 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.860402995 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.856759246 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.853832873 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.848173447 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.847498704 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.852903855 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.849039706 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.851490287 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.847090164 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.847919886 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.847945326 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.849838651 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.843109853 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.848338757 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.846750584 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.848678334 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.848950186 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.852426314 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.847770938 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.84591074 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.84830336 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.849307851 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.84669776 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.847319828 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.847286546 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.850775286 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.850294232 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.847537043 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.848168482 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.855444368 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.848168065 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.849299771 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.84763728 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.848788847 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.847519408 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.84976743 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.849635765 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.851351524 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.858457673 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.851533727 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.857765997 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.850175434 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.858761675 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.850789979 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.852971762 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.859172689 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.845818649 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.849229528 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.849652434 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.851265561 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.85749133 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.85312784 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.850963958 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.856000112 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.850893651 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.85256088 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.85085731 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.85159614 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.850469548 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.850484041 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.860171492 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.850848466 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.85531997 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.851357643 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.848534979 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.850957134 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.849847799 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.849655318 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.853680688 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.852484078 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.851757601 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.850638825 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.850366932 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.850173947 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.851034326 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.852365199 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.848904159 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.850065276 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.857212566 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.852075615 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.856882695 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.850972994 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.858424935 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.851770045 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.858137711 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.853025497 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.853159688 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.852376945 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.850652954 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.852157741 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.850832245 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.852348261 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.853561632 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.852170482 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.856011625 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.852677059 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.853814289 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.854009681 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.85381037 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.852886445 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.861150292 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.877700044 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.853790073 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.858475383 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.84846838 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.853567344 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.858294767 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.853771613 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.85233479 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.855083174 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.864600823 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.862049025 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.853119255 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.855262345 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.853581141 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.854872318 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.853070163 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.854877119 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.854178423 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.854561851 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.854185916 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.855902138 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.8581575 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.855290094 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.85614329 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.855874337 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.855540408 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.86505689 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.855278913 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.855364184 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.855475256 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.855245073 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.852835553 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.854485917 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.854568407 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.854580879 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.854450009 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.85436891 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.860371588 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.862371422 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.855851744 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.855020656 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.855000685 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.855576182 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.855191864 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.85567775 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.857435284 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.857117753 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.85667993 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.856459054 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.857050194 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.854923044 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.853867165 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.855251934 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.854932394 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.85861951 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.862774745 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.855461283 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.852749302 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.855726863 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.855229357 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.855144702 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.857231421 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.864395147 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.85926778 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.867856042 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.866632261 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.861791199 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.855775842 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.859831659 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.864784097 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.85668012 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.85848341 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.858339435 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.859591574 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.857562936 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.8608003 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.858172072 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.864508159 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.858110015 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.857268527 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.866300954 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.857728701 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.858722101 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.858555464 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.860913402 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.857005417 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.854439192 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.857136334 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.856871909 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.86611675 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.860762992 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.85812828 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.85935695 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.858003915 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.858592081 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.864778915 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.856286215 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.858534712 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.855171891 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.857793298 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.858336705 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.857459239 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.855053198 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.85784662 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.85851467 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.861002524 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.865552977 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.856348224 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.860135673 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.858122259 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.859164394 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.858802375 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.859534953 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.854089135 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.856249038 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.858837634 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.859376957 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.859229772 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.86152328 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.859889705 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.862167083 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.860824573 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.859356598 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.862092727 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.871303563 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.867207277 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.855603672 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.85882776 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.859452811 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.86147365 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.860915818 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.861807282 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.859969968 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.861528147 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.860248777 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.860785582 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.861007217 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.862633678 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.877503515 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.859959226 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.86005108 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.860796798 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.864038807 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.86055639 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.856721944 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.859976594 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.861742941 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.863662961 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.87001844 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.861575414 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.869069803 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.861297937 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.861942295 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.864392828 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.863681911 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.869648809 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.86350122 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.862532589 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.865660654 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.865070212 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.878189182 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.860297667 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.872831705 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.894117372 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.862376281 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.862385966 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.864112294 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.861370299 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.86419359 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.862911041 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.862657855 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.863863745 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.86215655 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.864232786 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.863247692 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.869319921 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.863100681 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.861062946 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.862479045 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.86380283 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.865061831 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.860298126 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.864301323 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.863489873 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.865727222 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.864944575 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.864733507 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.863264061 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.877392593 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.875016323 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.863753151 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.86535364 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.861540474 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.866819296 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.866714043 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.875117232 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.870929358 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.864221874 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.864537488 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.864858644 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.865850978 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.860400054 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.863430234 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.862602937 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.862279845 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.860029007 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.875845116 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.875374597 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.868988959 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.865503298 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.866410931 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.863518052 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.866583181 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.865268144 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.866426484 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.867368092 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.865121865 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.869993566 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.865619667 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.865961586 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.8675398 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.873168473 seconds)
  done (took 1104.500941607 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.86122887 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.861460617 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.861268381 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.862595433 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.864120035 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.863146662 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.863699695 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.861790819 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.864543018 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.86155453 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.861975126 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.863532412 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.863456118 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.863285891 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.861989421 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.863058772 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.861792398 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.863794408 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.86323276 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.862105524 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.863426334 seconds)
  done (took 40.900897307 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.865341999 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.86271411 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.863021465 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.864661225 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.862126716 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.865612607 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.863255428 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.86552064 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.865414185 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.865115928 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.866316369 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.865674403 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.863396937 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.863500861 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.865101223 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.86818799 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.866750092 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.863409952 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.867570592 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.86414458 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.867850235 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.863261021 seconds)
  done (took 42.812203458 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.868492722 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.867274977 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.867407785 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.865642069 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.866047518 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.864392162 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.86799452 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.86636768 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.867307734 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.868391598 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.867691882 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.868813304 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.875588406 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.874135634 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.869334571 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.867655419 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.010744355 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.869497195 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.871426877 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.869291657 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.865951951 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.875490597 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.86583098 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.868017985 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.867747343 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.869641985 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.86863864 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.868137572 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.870525869 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.872021804 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.874163972 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.869645785 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.867398952 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.870819977 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.870130347 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.870834203 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.874334178 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.870066884 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.867356216 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.870353026 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.880629092 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.891721038 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.872399648 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.875973598 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.869289907 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.870221408 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.872906757 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.879221635 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.866996368 seconds)
  done (took 93.577079564 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.868434987 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.869071761 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.865302404 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.869329826 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.86860632 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.869661542 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.870343902 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.869797735 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.866633225 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.86637004 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.871973307 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.868155544 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.866622497 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.870733433 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.870960137 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.86823914 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.868576956 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.867706216 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.867957811 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.867941058 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.869123009 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.871462532 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.873941047 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.870142341 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.86980927 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.868932145 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.868566186 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.870688353 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.869722891 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.868994675 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.871407152 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.871675128 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.872263645 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.868955351 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.868514407 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.871671761 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.872850863 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.869049082 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.871429353 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.869407839 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.872438727 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.871416896 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.873558083 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.872711487 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.870015133 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.869252756 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.869557505 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.869743783 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.869583564 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.871033315 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.872191725 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.869362835 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.872056271 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.869027159 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.873239761 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.872060434 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.870007267 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.869447422 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.87191326 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.870841308 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.870919863 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.872641187 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.870540752 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.872291756 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.873382475 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.86979126 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.8703588 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.873159693 seconds)
  done (took 128.963539254 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.873575307 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.87607852 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.874090582 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.875909775 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.875143583 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.874783645 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.875604954 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.875400814 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.87581457 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.874788678 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.873696589 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.874692323 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.875532517 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.874645035 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.876509972 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.876982366 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.877318416 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.877986109 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.876093991 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.875475115 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.875169164 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.876025071 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.87598849 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.876296228 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.878003967 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.875427188 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.877123251 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.878313723 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.876949943 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.876646576 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.875971121 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.876719953 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.876051961 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.876538492 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.876512878 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.877863149 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.877149087 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.877643301 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.878804967 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.878339285 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.87660288 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.876599148 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.87615975 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.876602307 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.876382127 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.877099874 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.87817323 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.877856702 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.8777829 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.878533825 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.877191821 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.877439052 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.878792414 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.877865978 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.8790528 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.875693103 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.877404142 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.87836745 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.878440682 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.879492493 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.880343239 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.878000425 seconds)
  done (took 118.151960382 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.876359838 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.876612792 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.874425953 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.873101235 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.876888025 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.873965785 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.878000345 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.878306682 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.877893195 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.87884856 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.876988891 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.875068519 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.8784591 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.877327864 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.874401639 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.875016032 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.875214103 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.873600954 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.877444856 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.875222755 seconds)
  done (took 39.318352721 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.874465389 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.878346851 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.876996961 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.874807949 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.87578875 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.875234652 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.875390825 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.877789062 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.875757809 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.87742156 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.878172108 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.877988036 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.876065571 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.877046147 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.879048695 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.875180536 seconds)
  done (took 31.822124857 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.87549764 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.877617953 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.87864556 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.879522143 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.874478403 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.876515726 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.879882367 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.876917697 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.876220884 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.879033452 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.880289603 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.879304714 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.879356371 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.880389176 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.874628749 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.878055293 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.87734254 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.877681226 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.879395027 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.881097864 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.876973139 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.876954306 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.879929861 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.880135357 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.877046371 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.878011571 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.87655513 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.876226685 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.877885676 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.880431189 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.878122614 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.879885046 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.877733015 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.877052883 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.881279814 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.877866929 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.87983682 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.879255231 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.880201334 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.881200787 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.881659464 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.877790822 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.882348132 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.881452204 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.879719594 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.881709 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.877121489 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.87793466 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.87773102 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.877025568 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.880234172 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.883304376 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.882563626 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.883360648 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.883848632 seconds)
  done (took 105.139267128 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.882060947 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.881531815 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.877632604 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.881354502 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.880679708 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.87763161 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.879747058 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.880100301 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.880349657 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.882474338 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.879989523 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.883126704 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.879878814 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.881453298 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.88030061 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.882016274 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.880851933 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.879242823 seconds)
  done (took 35.651818968 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.881601768 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.881299667 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.882466645 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.880956788 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.880609922 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.882977662 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.879859384 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.882278724 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.881999721 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.879934829 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.879586766 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.883779107 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.884174057 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.883634723 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.880724526 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.880340234 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.88437203 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.883949087 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.881028039 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.880823683 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.88320452 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.883667138 seconds)
  done (took 43.202278263 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.881219781 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.88463139 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.900444817 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.907670335 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.906932577 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.923935906 seconds)
  done (took 13.20586804 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.879998987 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.882593509 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.881399064 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.885574885 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.88312586 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.881856183 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.881767047 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.882526396 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.887087839 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.884092159 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.883385704 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.887317112 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.885107202 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.881656619 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.885193566 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.884364707 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.882268326 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.883136391 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.884649428 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.886900944 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.882162228 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.886594669 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.883053954 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.883039947 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.882560601 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.881754043 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.884496617 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.882915353 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.883070934 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.886222535 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.886601759 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.882928365 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.887187193 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.88445015 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.886929398 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.885574918 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.88237511 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.884872178 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.886666656 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.881422881 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.886218738 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.885665906 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.887104697 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.884586502 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.887039001 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.885144259 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.88593797 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.883920232 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.883528361 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.886536195 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.885780718 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.883615706 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.886998036 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.887355052 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.887239546 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.888138221 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.884509805 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.884498434 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.888880399 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.88538594 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.88382031 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.887068839 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.884149679 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.88470247 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.888279611 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.884699417 seconds)
  done (took 126.194185612 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.885428004 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.88711896 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.886674418 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.887107554 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.884879492 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.886054998 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.885408184 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.885270585 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.885046556 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.886604038 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.891352895 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.887916814 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.887437767 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.888337617 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.887582235 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.886391462 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.887774708 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.886658135 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.88624333 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.889775924 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.885999821 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.889587985 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.88827883 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.887883351 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.888221429 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.891358682 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.888392386 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.885916467 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.887076711 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.888195826 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.887352667 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.888601016 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.887964058 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.88909458 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.888624682 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.88899577 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.889392183 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.88904282 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.889317998 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.89074427 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.888903165 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.889933146 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.886319783 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.887358696 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.889915418 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.889745085 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.88773164 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.889637176 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.887458497 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.888286683 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.889354783 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.887562168 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.890496385 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.888276935 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.888268545 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.88696736 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.889662946 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.889800387 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.890610186 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.892179207 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.887782141 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.889817594 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.891929411 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.887811914 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.888706391 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.887822994 seconds)
  done (took 126.430546107 seconds)
done (took 2574.138665836 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.903730362 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.894669505 seconds)
  done (took 15.60492065 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.052226171 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.003956601 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.889698977 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.901577301 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.887783079 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.886785338 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.900848472 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.889346219 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.889633393 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.891338689 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.891557511 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.077891327 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.946654338 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.887498706 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.890153129 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.985258214 seconds)
  done (took 52.683053899 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.895574111 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.895916256 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.907085531 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.898207968 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.894760587 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.905980901 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.929150132 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.8976102 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.934360786 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.905995114 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.968446047 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.906178303 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.894238747 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.945863978 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.908948329 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.911749239 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.989233292 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.971127449 seconds)
  done (took 36.372162758 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.970714325 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.894808555 seconds)
  done (took 10.682138066 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.919509862 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.914361468 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.975012855 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.899151352 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.893886931 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.922781811 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.898021422 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.900036888 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.914212767 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.948602715 seconds)
  done (took 71.000192338 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.901424383 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.896827881 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.894754161 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.892594232 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.887853535 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.889788435 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.89412933 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.895296658 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.549877004 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.928709406 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.899786462 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.899277657 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.892717756 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.895533125 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.891063021 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.916558664 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.004214134 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.891792449 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.892271855 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.901490198 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.895572437 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.961327132 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.907931955 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.895656682 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.924169257 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.553757936 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.900088557 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.900358315 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.996465081 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.890291417 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.894493018 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.895140901 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.896384831 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.298801795 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.183836431 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.896625142 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.908077332 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.904648832 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.894090109 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.029408621 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.895078802 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.902567974 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.693929698 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.157535971 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 2.003310626 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.938404624 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.204286099 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.912690543 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.89808492 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.9255249 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.899899677 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.897073927 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.909999362 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.392457503 seconds)
  done (took 133.790490059 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.890427528 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.243095738 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.063222749 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.894921216 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.177270447 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.098515882 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.891278407 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.943067627 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.891896835 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.126511472 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.152258418 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.00272706 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.89207164 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.893854245 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.889058516 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.888716336 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.055391853 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.968472759 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.892991143 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.88948691 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.92391867 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.138159308 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.017162878 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.893665215 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.923437486 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.107179054 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.016651807 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.000483837 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.690132163 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.890842044 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.959278192 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.894041495 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.895088969 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.888846213 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.053173551 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.993654027 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.982099756 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.893767238 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.893625379 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.892690739 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.564294657 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.098931176 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.990738666 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.036827864 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.094941941 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.10323252 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.676647306 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.890774508 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.637637782 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.062474863 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.127641072 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.134171003 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.016359417 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.895153656 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.424523489 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.892468288 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.89426583 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.147048365 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.040203793 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.993322482 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.893726759 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.897536408 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.892169858 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.145136689 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.897017533 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.991905311 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.894766476 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.892496719 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.994094107 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.995784971 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.036389472 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.109602744 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.926471124 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.852312112 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.434605692 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.145810122 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.962390328 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.14609761 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.895655405 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.892072612 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.977081023 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.741079265 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.152915445 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.149527635 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.151299287 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.933448717 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.621821079 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.89466835 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.128711171 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.119999632 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.158957766 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.107660926 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.138521345 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.214326447 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.896423597 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.895905558 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.117445891 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.033280931 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.896488984 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.246438773 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.131137345 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.445662301 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.918442563 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.206109374 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.030926008 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.896325586 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.540728528 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.896231182 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.130700275 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.940864612 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.897667076 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.898452024 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.119172214 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.889250751 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.896368684 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.543323237 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.962381963 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.900480467 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.13439981 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.899803798 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.169688384 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.896988834 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.14172478 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.902969701 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.931489062 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.13136361 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.106890935 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.897238452 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.144290814 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.147904277 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.01577848 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.123041771 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.596048817 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.897557955 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.189113832 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.901080215 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.899375089 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.071332306 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.899391194 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.046218181 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.898903623 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.1960658 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.925463488 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.137930363 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.902329511 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.16859716 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.935588414 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.95190615 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.902061132 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.03324068 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.904189366 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.822627058 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.060171454 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.901224403 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.896856081 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.70909755 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.897955076 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.053136864 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.138391621 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.924075623 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.977598702 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.57367354 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.898662535 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.985740668 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.928305046 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.296972711 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.903209543 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.160458879 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.902227331 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.900254763 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.899571168 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.147574304 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.088775001 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.902799613 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.897982256 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.810435878 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.900805853 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.900229291 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.086499941 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.339132074 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.899732262 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.105591701 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.903491916 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.02969664 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.902614552 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.987117064 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.246580136 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.899397594 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.899305543 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.900302416 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.900955439 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.90027991 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.167282625 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.930983202 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.43367303 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.042985292 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.178728705 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.216613552 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.156654779 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.946011892 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.905303805 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.157145232 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.904259165 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.963875694 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.902745136 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.921597396 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.13397172 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.903269978 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.111038626 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.184565332 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.753794243 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.951104307 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.901755706 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.900232307 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.897718151 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.047411796 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.986992502 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.900836031 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.896714502 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.015559974 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.019972705 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.107289978 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.898622769 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.961382456 seconds)
  done (took 909.936290488 seconds)
done (took 1231.877882748 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.894569383 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.896012695 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.880927581 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.895380461 seconds)
  done (took 29.387196291 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.903302063 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.901720328 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.9043466 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.902180945 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.903472193 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.901876713 seconds)
  done (took 13.236190152 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.373406263 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.897898517 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.896183611 seconds)
  done (took 21.986692644 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.971657801 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.2849875 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.004720372 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.323601182 seconds)
  done (took 10.404986345 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.905174584 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.905821876 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.904037748 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.903337359 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.905701187 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.903407474 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.904132359 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.906098522 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.904131452 seconds)
  done (took 18.964251996 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.03726036 seconds)
done (took 99.837264976 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.732931716 seconds)
    (2/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.925597465 seconds)
    (3/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.904739921 seconds)
    (4/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 3.801945913 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.976244719 seconds)
    (6/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.130393527 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.827994462 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.009008063 seconds)
    (9/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.914308338 seconds)
    (10/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.865989967 seconds)
    (11/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.83183768 seconds)
    (12/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.140039364 seconds)
    (13/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.990957621 seconds)
    (14/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.924129298 seconds)
    (15/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.009234676 seconds)
    (16/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.977684055 seconds)
    (17/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.907866138 seconds)
    (18/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.557992287 seconds)
    (19/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.914066934 seconds)
    (20/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.091084142 seconds)
    (21/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.978744933 seconds)
    (22/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.07402127 seconds)
    (23/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.892475608 seconds)
    (24/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 8.017240125 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.703971418 seconds)
    (26/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.293743009 seconds)
    (27/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.931234294 seconds)
    (28/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.90895407 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 2.023548741 seconds)
    (30/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.145219179 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.269179067 seconds)
    (32/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.935332835 seconds)
    (33/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.337730173 seconds)
    (34/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.912938592 seconds)
    (35/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 2.033404525 seconds)
    (36/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.013145863 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.204370023 seconds)
    (38/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.004111116 seconds)
    (39/309) benchmarking ("sort", Int8, false)...
    done (took 4.814421025 seconds)
    (40/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.973853747 seconds)
    (41/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.049203804 seconds)
    (42/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.200112465 seconds)
    (43/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.896397894 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.223161392 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.538282931 seconds)
    (46/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.082301139 seconds)
    (47/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.065973535 seconds)
    (48/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.908300166 seconds)
    (49/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.911359505 seconds)
    (50/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.125068599 seconds)
    (51/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.259438248 seconds)
    (52/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.337280345 seconds)
    (53/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.215752573 seconds)
    (54/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.192463128 seconds)
    (55/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.918272328 seconds)
    (56/309) benchmarking ("sort", Bool, false)...
    done (took 2.130094929 seconds)
    (57/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.897473484 seconds)
    (58/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.999222006 seconds)
    (59/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 2.204371032 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.29896856 seconds)
    (61/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.123977098 seconds)
    (62/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.061059947 seconds)
    (63/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.901637984 seconds)
    (64/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.175169501 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.859195175 seconds)
    (66/309) benchmarking ("sort", Int64, false)...
    done (took 5.576798997 seconds)
    (67/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.149786395 seconds)
    (68/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.016319813 seconds)
    (69/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.067950535 seconds)
    (70/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.218015529 seconds)
    (71/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.935518476 seconds)
    (72/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.083251514 seconds)
    (73/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.974109519 seconds)
    (74/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.001081652 seconds)
    (75/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.070457398 seconds)
    (76/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.011398433 seconds)
    (77/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.467757972 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.31530066 seconds)
    (79/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.911361123 seconds)
    (80/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.670539999 seconds)
    (81/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.994343331 seconds)
    (82/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.005003377 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.983684607 seconds)
    (84/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.000266188 seconds)
    (85/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.934996933 seconds)
    (86/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.090464595 seconds)
    (87/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.367506815 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.218085714 seconds)
    (89/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.204240839 seconds)
    (90/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.111688671 seconds)
    (91/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.01346282 seconds)
    (92/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.896385683 seconds)
    (93/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.92505425 seconds)
    (94/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 2.020365154 seconds)
    (95/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.992413357 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.251571678 seconds)
    (97/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.102405048 seconds)
    (98/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.020358603 seconds)
    (99/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.899359545 seconds)
    (100/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.145730332 seconds)
    (101/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.912828402 seconds)
    (102/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.850442155 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.952777783 seconds)
    (104/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.013905655 seconds)
    (105/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.326568767 seconds)
    (106/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.183673642 seconds)
    (107/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.912952308 seconds)
    (108/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.991516971 seconds)
    (109/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.110635603 seconds)
    (110/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.939475879 seconds)
    (111/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.381662345 seconds)
    (112/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.186528799 seconds)
    (113/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.914196132 seconds)
    (114/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.491117057 seconds)
    (115/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.179163639 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.003785736 seconds)
    (117/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.914549341 seconds)
    (118/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.935564046 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.179502355 seconds)
    (120/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.934286264 seconds)
    (121/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.049838055 seconds)
    (122/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.228284963 seconds)
    (123/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.921279165 seconds)
    (124/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.105363874 seconds)
    (125/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.898437879 seconds)
    (126/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 2.052410388 seconds)
    (127/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.93951062 seconds)
    (128/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.898109472 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.720347395 seconds)
    (130/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.912712623 seconds)
    (131/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.230807893 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.900540182 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.924806022 seconds)
    (134/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.738340598 seconds)
    (135/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.253732096 seconds)
    (136/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.945836445 seconds)
    (137/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.937730548 seconds)
    (138/309) benchmarking ("sort", BigInt, false)...
    done (took 6.91379496 seconds)
    (139/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.821141182 seconds)
    (140/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.91434611 seconds)
    (141/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.150850323 seconds)
    (142/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.049147435 seconds)
    (143/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.853192399 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.260354802 seconds)
    (145/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.982461936 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.460676658 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.057654706 seconds)
    (148/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.153677581 seconds)
    (149/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.004730942 seconds)
    (150/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.185748 seconds)
    (151/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.938474516 seconds)
    (152/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.914116482 seconds)
    (153/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.262409636 seconds)
    (154/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.74033269 seconds)
    (155/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.214859471 seconds)
    (156/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.625652396 seconds)
    (157/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.202622754 seconds)
    (158/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.965111336 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.236180801 seconds)
    (160/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.935135022 seconds)
    (161/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.99463477 seconds)
    (162/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.294330096 seconds)
    (163/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.081625401 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.863207139 seconds)
    (165/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.937614308 seconds)
    (166/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.938517578 seconds)
    (167/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.89700925 seconds)
    (168/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.059767546 seconds)
    (169/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 3.268820419 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.02190357 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.602935291 seconds)
    (172/309) benchmarking ("sort", Float32, false)...
    done (took 5.650912342 seconds)
    (173/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.918786941 seconds)
    (174/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.519668713 seconds)
    (175/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.921897203 seconds)
    (176/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.920418222 seconds)
    (177/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.154347332 seconds)
    (178/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.003552848 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.935405866 seconds)
    (180/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.361547742 seconds)
    (181/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.163677772 seconds)
    (182/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.288248913 seconds)
    (183/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.094673184 seconds)
    (184/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.508698441 seconds)
    (185/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.911328723 seconds)
    (186/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 4.299703497 seconds)
    (187/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.01542988 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.026235452 seconds)
    (189/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.898226474 seconds)
    (190/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.974450311 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.077648057 seconds)
    (192/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.900950191 seconds)
    (193/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.081408354 seconds)
    (194/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.903505094 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.698679984 seconds)
    (196/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.93970294 seconds)
    (197/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.144864666 seconds)
    (198/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.989380978 seconds)
    (199/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.038656934 seconds)
    (200/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 2.008986107 seconds)
    (201/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.144165813 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.183104351 seconds)
    (203/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.920380408 seconds)
    (204/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.005257994 seconds)
    (205/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.916455168 seconds)
    (206/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.14868876 seconds)
    (207/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.937345821 seconds)
    (208/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.090549559 seconds)
    (209/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.003850335 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.260534946 seconds)
    (211/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.980347731 seconds)
    (212/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.142830162 seconds)
    (213/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.00358365 seconds)
    (214/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.468087706 seconds)
    (215/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.068012061 seconds)
    (216/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.324370783 seconds)
    (217/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.161276472 seconds)
    (218/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.443287274 seconds)
    (219/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.909005479 seconds)
    (220/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.138032003 seconds)
    (221/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.414939652 seconds)
    (222/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.043150879 seconds)
    (223/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.058770977 seconds)
    (224/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.096014832 seconds)
    (225/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.999579229 seconds)
    (226/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.550501689 seconds)
    (227/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.123849456 seconds)
    (228/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.320978472 seconds)
    (229/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.904780132 seconds)
    (230/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.916335205 seconds)
    (231/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.077295646 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.807606398 seconds)
    (233/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.316116042 seconds)
    (234/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.972826892 seconds)
    (235/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.10048735 seconds)
    (236/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.970461079 seconds)
    (237/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.518751408 seconds)
    (238/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.81167496 seconds)
    (239/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.923510965 seconds)
    (240/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.926118282 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.556442976 seconds)
    (242/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.861450722 seconds)
    (243/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.602424098 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.303301839 seconds)
    (245/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.900351262 seconds)
    (246/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.883729683 seconds)
    (247/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.086255463 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.97791199 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.223083847 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.023966444 seconds)
    (251/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.899337074 seconds)
    (252/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.90485197 seconds)
    (253/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.006096387 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 4.68729136 seconds)
    (255/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.917684251 seconds)
    (256/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.912135608 seconds)
    (257/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 8.289808175 seconds)
    (258/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.802313456 seconds)
    (259/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 3.142010662 seconds)
    (260/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.446303962 seconds)
    (261/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.208088271 seconds)
    (262/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.911887553 seconds)
    (263/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 8.187335573 seconds)
    (264/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.980710731 seconds)
    (265/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.137047724 seconds)
    (266/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.058949842 seconds)
    (267/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.052092672 seconds)
    (268/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.299142287 seconds)
    (269/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.338675276 seconds)
    (270/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.103550376 seconds)
    (271/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.988635852 seconds)
    (272/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.428761342 seconds)
    (273/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.907343628 seconds)
    (274/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.044866368 seconds)
    (275/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.397216041 seconds)
    (276/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.22858912 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.946438875 seconds)
    (278/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.930361039 seconds)
    (279/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.038287676 seconds)
    (280/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.944654253 seconds)
    (281/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.982631681 seconds)
    (282/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.070494982 seconds)
    (283/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.003179646 seconds)
    (284/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.898598533 seconds)
    (285/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 2.583258921 seconds)
    (286/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.045703058 seconds)
    (287/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.281447511 seconds)
    (288/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.928548154 seconds)
    (289/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.004282885 seconds)
    (290/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.907789546 seconds)
    (291/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 8.132834089 seconds)
    (292/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.114709866 seconds)
    (293/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.918041359 seconds)
    (294/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.854084624 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.889226677 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.932869592 seconds)
    (297/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.950988655 seconds)
    (298/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.899007484 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.934342582 seconds)
    (300/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.353797064 seconds)
    (301/309) benchmarking ("sort", Float64, false)...
    done (took 5.660768675 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.066579233 seconds)
    (303/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.140574719 seconds)
    (304/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.982717565 seconds)
    (305/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.607101154 seconds)
    (306/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.052750033 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.119088036 seconds)
    (308/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.894228851 seconds)
    (309/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.133896727 seconds)
  done (took 1019.110955395 seconds)
done (took 1021.003989542 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.932261822 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.917961919 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.90375736 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.924422165 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.014242284 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.933025119 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.911876964 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.904107902 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.949525033 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.952827476 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.901962706 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.923410474 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.899851776 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.897879839 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.900003523 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.916334825 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.207458675 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.922828759 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.912651482 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.905865323 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.915997666 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.891840184 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.946678769 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.921504678 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.90085815 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.899656552 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.899815738 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.911470136 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.00365598 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.895477718 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.898456903 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.904406846 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.203320518 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.916385292 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.888853704 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.912637333 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.902637176 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.902594191 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.898604894 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.924488738 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.285916095 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.924071752 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.894429506 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.895736487 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.895504917 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.899100302 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.894260425 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.901693442 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.906105705 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.907504426 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.281320619 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.940483462 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.896000082 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.896296449 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.906254309 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.893410725 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.89924337 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.90760793 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.912761265 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.908885479 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.185665751 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.925232846 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.898211532 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.910340429 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.900842589 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.318070007 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.926465126 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.90155139 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.287281015 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.935022406 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.318300666 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.937659075 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.899027578 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.907691238 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.926841374 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.204619183 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.918254743 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.896725127 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.901792737 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.89160543 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.907167641 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.908097041 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.902053597 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.896642047 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.90837509 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.923236671 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.907392234 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.896233798 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.90621396 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.914568196 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.902915991 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.907465737 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.898306891 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.893735667 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.906654001 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.902160985 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.897667809 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.897322731 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.902896029 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.908020728 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.285294169 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.945248731 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.895658969 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.895348103 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.89643043 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.909881533 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.286020244 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.931119668 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.921444928 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.946068666 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.90050552 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.187118412 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.925075049 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.912118169 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.906583556 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.901466043 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.89455726 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.186519514 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.312232822 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.946007306 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.901872613 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.894137045 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.91176458 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.902270248 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.896773056 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.206281378 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.92733593 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.91141298 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.018370226 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.909629083 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.929350141 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.894408116 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.903435861 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.931189173 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.912843599 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.929346521 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.902543174 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.912522926 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.915310943 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.898534097 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.908042681 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.909158613 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.901189408 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.905024754 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.894666599 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.929431935 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.909385207 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.910124885 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.922363594 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.020789498 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.898801929 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.189557537 seconds)
done (took 297.917206485 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.967202674 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.890194514 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.995205488 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.895664564 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.975987716 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.982764534 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.892640436 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.893895044 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.894645446 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.27127957 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.89513443 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.894035139 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.891228453 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.893915157 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.978471142 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.895939709 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.893189292 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.259228432 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.898198863 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.968823614 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.893661128 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.895802716 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.897383483 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.271831612 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.891188743 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.896067795 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.969771537 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.897130581 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.234913867 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.899894343 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.893424277 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.235806286 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.989223642 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.915442599 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.90826626 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.905235912 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.979867739 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.901579445 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.979008642 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.97837399 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.996850398 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.930475024 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.893313669 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.894529209 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.896740799 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.894543072 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.890291662 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.919295866 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.896134577 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.888575087 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.231619699 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.903491364 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.888095608 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.887754817 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.884694348 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.922455323 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.887889068 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.889732072 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.978838881 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.889133119 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.949331044 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.265691403 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.262143704 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.886227795 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.885358023 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.881858876 seconds)
  done (took 185.970155567 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.951879957 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.961661994 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.951785976 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.88556794 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.931989098 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.948613607 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.88561856 seconds)
  done (took 15.315882546 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.886836934 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.881359269 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.930344496 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.933638942 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.879536394 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.026359466 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.879587736 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.891580588 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.878186154 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.932761689 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.882116688 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.880431342 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.886277461 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.875923742 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.933248383 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.891935575 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.996651942 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.883484782 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.884277881 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.029752069 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.877413854 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.886380409 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.931173085 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.888952297 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.880752707 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.884529574 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.472405865 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.880458444 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.875515954 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.873697345 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.87129448 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.917305046 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.873659128 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.878523568 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.868036814 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.985614239 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.874453632 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.864160346 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.866129388 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.867976917 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.863567684 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.864059898 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.862906252 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.860455392 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.863750737 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.88476248 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.862978819 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.861729639 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.861590279 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.868162771 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.910364467 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.860282105 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.857859267 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.858188589 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.916697829 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.865969868 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.862803916 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.857247631 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.860883745 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.856553576 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.011431212 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.911450569 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.860989767 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.91064183 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.861191748 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.862774746 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.861800384 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.860142726 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.95639432 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.861625155 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.912376884 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.857517181 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.020118518 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.883174843 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.860965695 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.862035359 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.863848418 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.862405657 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.85931197 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.868517915 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.858341579 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.863672826 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.868832371 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.859737859 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.85924089 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.974897088 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.970080643 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.858020674 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.874501513 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.868680871 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.857656288 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.913396159 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.862605727 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.860030894 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.918685285 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.979616237 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.917446275 seconds)
  done (took 205.72064505 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.867319568 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.870830476 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.863776709 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.878611673 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.862374971 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.861455233 seconds)
  done (took 12.983644471 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.865839064 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.864437556 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.862166205 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.862166821 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.86558665 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.864229345 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.864498071 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.864406278 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.868969937 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.862005959 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.864222295 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.86527775 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.863625944 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.866036384 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.865561434 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.865197366 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.865245947 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.860704387 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.863689296 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.865171201 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.008705642 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.865473407 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.864956617 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.866713956 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.86756953 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.862815387 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.872231977 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.863329016 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.864238266 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.874157163 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.869957096 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.86575309 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.864503062 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.870507212 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.871524938 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.865920736 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.867891716 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.865669465 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.861711291 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.867670536 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.868326743 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.866535326 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.865488728 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.866814228 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.867955161 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.869393226 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.872441603 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.872887866 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.867102425 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.866174085 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.865352142 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.864370385 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.866200825 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.868730304 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.867680722 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.871344835 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.870870779 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.869153118 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.868551202 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.867791666 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.868364315 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.867502932 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.86924286 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.873907184 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.87265441 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.866650149 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.868675823 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.872110419 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.868451354 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.86647774 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.869157354 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.86491878 seconds)
  done (took 137.343761457 seconds)
done (took 559.164070597 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.048291503 seconds)
  done (took 8.831069764 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.041649837 seconds)
  done (took 8.882666466 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.237125998 seconds)
  done (took 10.036684486 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.902841959 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.88099627 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.886794335 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.878393824 seconds)
  done (took 29.369810111 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.968849661 seconds)
  done (took 8.767111746 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.899066538 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.873061546 seconds)
  done (took 15.604672999 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.05163963 seconds)
  done (took 8.850145805 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.399033078 seconds)
  done (took 9.219610411 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.884038282 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.911463945 seconds)
  done (took 15.61115691 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.860353218 seconds)
  done (took 8.660030271 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.488736569 seconds)
  done (took 11.388286737 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.892931931 seconds)
  done (took 8.801207036 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.957011632 seconds)
  done (took 8.756671985 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.896944969 seconds)
  done (took 8.695999373 seconds)
done (took 163.261444659 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.881423841 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.876514404 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.8772122 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.87684263 seconds)
  done (took 29.310028317 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.914161043 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.916192916 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.917020956 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.926407195 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.917699313 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.918100565 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.908836756 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.906457186 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.927268893 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.918608078 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.915976527 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.918336749 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.916900178 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.907662542 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.917246207 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.91860011 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.926639211 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.917508599 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.907609729 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.920111667 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.884328834 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.925427237 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.91780518 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.882125907 seconds)
  done (took 47.748274059 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.081089875 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.947415303 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.03244966 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.930570453 seconds)
  done (took 9.789567733 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.935712211 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.928561653 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.941579157 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.980317784 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.003035322 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.942253006 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.89569971 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.894849571 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.881683878 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.926636271 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.001870824 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.924102814 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.009898331 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.870334569 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.080208241 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.870297391 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.870964487 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.921187567 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.973531812 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.985353424 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.869578947 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.920821639 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.925095037 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.917416848 seconds)
  done (took 48.266681376 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.867458956 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.8757236 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.874153241 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.867084701 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.868347102 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.869160142 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.875176866 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.871925032 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.888370815 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.869011192 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.866020036 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.865702886 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.870283239 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.863929595 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.864963825 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.875854952 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.879087904 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.865475833 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.863304648 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.867049646 seconds)
  done (took 39.196386556 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.85575815 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.70642881 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.205116381 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.111177164 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.853553858 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.853288754 seconds)
  done (took 31.365328062 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.87289548 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.865383374 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.857763944 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.916127285 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.996586697 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.862905462 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.860032654 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.870963721 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.906497321 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.923429853 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.876018557 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.887873502 seconds)
  done (took 24.472692756 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.855837841 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.853976884 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.853084096 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.869512313 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.869270363 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.86451999 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.864895762 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.854569796 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.871094791 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.877001249 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.865365916 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.871476033 seconds)
  done (took 44.151444122 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.941937825 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.739529004 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.494182445 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.575686782 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.388716972 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.06113173 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.380373086 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.021563763 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.85393714 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.123089785 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.527473431 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.102944638 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.101437548 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.848992654 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.916493337 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.329902933 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.148057407 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.076241822 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.870323859 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.604307497 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.993967284 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.375741233 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.625719964 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.003685429 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.078418137 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.000431559 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.130155037 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.825555254 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.009318432 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.907854883 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.878902869 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.869123517 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.143680379 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.086004341 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001364488 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.879238558 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.524821374 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.588043023 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.860628828 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.593283398 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.628488434 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.01249044 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.876289853 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.872663561 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.797884632 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.359460263 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.042591544 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.868241204 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.567334379 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.861239823 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.871017657 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950562688 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.864792755 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.675176432 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.816910839 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.138911385 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.858949449 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868348706 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.431840323 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.987936707 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.461836177 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.800684439 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.956221858 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.596463375 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.349818485 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.023162744 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.866876411 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.867023228 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.796613933 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.660165725 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.994227423 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.008467907 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.882544348 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.513947317 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.181834256 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.604364181 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.955064814 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.163143296 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.694581653 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.802068959 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.090915944 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.82032024 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.796931152 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.70235561 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.796472613 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.133674957 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.900416629 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.528791649 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.906032349 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.034869307 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.874762791 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.885105403 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872287919 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.088029932 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.74678954 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.866116288 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.481374792 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.157772192 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884441191 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.039305079 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.79936439 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.867375265 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.120058671 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.075399226 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.062846733 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.353145608 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.034299933 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.866684161 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.952959516 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.749566253 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.877339066 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.156579531 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.934633568 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.003148313 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.005232514 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.831855895 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.172012335 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.893847018 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.041036532 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.54797384 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.14140105 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.214464914 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.118797616 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952333309 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.878121905 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.870610249 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.652386249 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.501135184 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.094523978 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.87023822 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.330025074 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.88103419 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.8733531 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.805047459 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.491818246 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.532096951 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.991270232 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.094425991 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.806996323 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.146810839 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.803241451 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.015748592 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.982499491 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.091767868 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.5305675 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.955847571 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.129183088 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.320615997 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.064639277 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.881719434 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.889865898 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.988931494 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894261609 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.24614296 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.126695969 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.876805411 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.876881012 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.656336025 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.951270818 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.874962911 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.878379051 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.700131765 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.167460725 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.910235023 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.87509186 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.810260957 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.88772758 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957878156 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.879633514 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.883737093 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.398197668 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.626032377 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.884074346 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.515946143 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.09966084 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.884722063 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.642551189 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.074168898 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.960550168 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.17482001 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.949127858 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.808124538 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.579573846 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.579069095 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.878704129 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.81050584 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.877442216 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886125489 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.887519414 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.077727122 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.172625712 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.933231381 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.596610546 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.001531017 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.889098751 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.882559392 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.879166247 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.381782552 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.027145686 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.363692686 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.991161503 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.018937182 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.896119932 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.815734148 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.888165076 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.886574302 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.885245384 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.837282746 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.937474169 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.605503306 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.223499231 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.142232326 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.532858257 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.902949458 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.678100912 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.018550722 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.911075457 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.494109294 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.834892354 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.980802772 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.026832053 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.96714402 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.729219167 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.733094344 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.529402211 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.277524944 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.294362428 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.420235425 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.308310928 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.276486673 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.130213901 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.192453285 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.485016548 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.017075538 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.133734073 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.904738705 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.042293317 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.61744924 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.316713136 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.969351184 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.187050746 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.359119946 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.644836397 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.1254746 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.170919755 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.993113748 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.739176205 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.981268772 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.479478547 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.113824329 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.603468687 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.199028652 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.129545553 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.575133146 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.083177485 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.960285158 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.429044662 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.042685258 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.669049794 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.321373528 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.464045429 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.625405723 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337667337 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.970808619 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.404965903 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.326935923 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.256591956 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.052293847 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.894850953 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.972776516 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.972118708 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.961463577 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.93862085 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.80482163 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.212856013 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.972787724 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.195036428 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.191554055 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.242920214 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.877070393 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.96621215 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.964944489 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.265342392 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.684353258 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.196621283 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.249938606 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.527199211 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.967286935 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.894952712 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.896958744 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.667342848 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.969279667 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.935609842 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.195773001 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.072491625 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.914041498 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.321884007 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.26746482 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.217417882 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.976766056 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.252383614 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.249252625 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.69987041 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.991711362 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.061764961 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.570755549 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.677412065 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.182278613 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.196687622 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.792778259 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.190553879 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.608685216 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.937482234 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.963394677 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.177516176 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.184612187 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.635652364 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.220407449 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.688577186 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.974377035 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336683837 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.031799698 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.652754553 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.186850978 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.05708014 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975076523 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.042681508 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.974247189 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.974102233 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.97533736 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.01084809 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.647865485 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.106401455 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.979228334 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.055723907 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.090477983 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.550693811 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.971438677 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.257371866 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345764619 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.314390826 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.037393736 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.966063226 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.967155813 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.898149123 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.10275427 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.411062119 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.238012842 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.096703999 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.105689057 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.990254127 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.567548148 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.21686978 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.2726142 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.240815146 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.861274348 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.967764296 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.052603597 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.189691622 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.97595697 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.17781476 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.199755115 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.29383935 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.436471779 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.056754385 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.236357758 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.240084755 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.343398488 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.970862304 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.560410213 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.977966388 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.492356757 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.010412108 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.63981424 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.260741104 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.981077423 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.186314754 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.991500915 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.169633959 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.420488848 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.746465886 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.335480352 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.965277494 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.031633361 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.256756958 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.386295392 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.292263519 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.04775628 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.978525049 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.666318087 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.106827662 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.84146193 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.190269384 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.970602303 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.179737613 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.680094967 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.976976601 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.26346514 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.287518161 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.969749021 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.863708202 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.998032536 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.978282329 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.190800961 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.242136896 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.220423722 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.977778199 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.977338642 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.785619628 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.263156972 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.03942304 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.902099513 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.972305908 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.067570852 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.216215273 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.98944807 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.485173565 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.6732814 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.276705178 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.887219754 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.990831376 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.349138363 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.428365141 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326913983 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.501537842 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.214816892 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.527287022 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.797692096 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.337835733 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.976873166 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.342017965 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.341096262 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.973336974 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.450230474 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.075542398 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.25732487 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.303609653 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.980438509 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.747049278 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 4.020292017 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.194394029 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.567551858 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.912585992 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.974576416 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.034544995 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.972295037 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.104366828 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.981542443 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.892370262 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.787884258 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.804154076 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.46420934 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.97357243 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 7.041187607 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.590809033 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.508651672 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.0721389 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.127773815 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.980848923 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.674378098 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.264134834 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.227081767 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.445336623 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 7.039010657 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.977737938 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.974702541 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.900594808 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.167391331 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.169821026 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.277119527 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.262599159 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.078177524 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.977837005 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.188543381 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.18471139 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.66724913 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.138238841 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.321457612 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.080322192 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.900391456 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.686775875 seconds)
  done (took 1703.636938883 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.974074217 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 7.009462158 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.981326138 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.045290147 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.011506972 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.051805831 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.04206938 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.051461596 seconds)
  done (took 58.05974822 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.97508051 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.159430036 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.984255046 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.975354771 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.994848674 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.97767569 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.577301875 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.988393122 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 2.001498472 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.990101671 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.993320695 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.985531064 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.270420165 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 2.006317138 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.979252495 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.992974694 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.991184861 seconds)
  done (took 76.760048524 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.981549716 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.313573758 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.008236807 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.997151637 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.927560483 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.98585197 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.035317396 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.007661563 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.980259802 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.149625812 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.314074557 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.985272021 seconds)
  done (took 91.581452185 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.993439112 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.985417872 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.984201192 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.985499976 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.985624689 seconds)
  done (took 11.837562174 seconds)
done (took 2217.995181413 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.215401815 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.163265794 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.210559151 seconds)
  done (took 6.269591604 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.128878776 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.178170736 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.294129431 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.301610604 seconds)
  done (took 10.805589349 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.280932396 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.355618517 seconds)
  done (took 6.535026452 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.307032073 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.998102168 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.357496328 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.981701445 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.982930518 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.983845017 seconds)
  done (took 22.854313822 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.985747355 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.988297959 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.985671875 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.986729122 seconds)
  done (took 9.845245802 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.968525261 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.692994392 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.968115961 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.982051349 seconds)
  done (took 21.511191683 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.734022148 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.107354896 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.733228192 seconds)
  done (took 9.474411444 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.566935057 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.216973765 seconds)
  done (took 9.684082976 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.145607639 seconds)
  done (took 4.045890939 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.013975092 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.256718316 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.517796769 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.507495084 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.598354308 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.830223035 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.313685315 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.214180559 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.4208195 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.444037682 seconds)
  done (took 26.018061053 seconds)
done (took 142.819526221 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.334625091 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.008800396 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.188240618 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.350881573 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.280017217 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.187732606 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.207676868 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.343862253 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.043315654 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.011336072 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.345029144 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.223299066 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.148640861 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.004012368 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.156023704 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.009259354 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.218148553 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.360249372 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.02519282 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.268257507 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.209749161 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.994814099 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.184481095 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.013911651 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.242744214 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.140990869 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.539863846 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.012251958 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.168058253 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.549529705 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.140926091 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.414098697 seconds)
  done (took 172.228375856 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.987685739 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.984893882 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.985849968 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.986286451 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.553770055 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.984536782 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.986402025 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.983227808 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.387579991 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.380471429 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.985136845 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.541133709 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.98587454 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.986540567 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.985319354 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.984744343 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.544320068 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.987533505 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.986332101 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.985832829 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.985977696 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.380868504 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.987432282 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.408846812 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.538628895 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.98503994 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.986658354 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.988585165 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.985419981 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.987116355 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.98739735 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.98623661 seconds)
  done (took 213.306670096 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.988193556 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.989034138 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.98788837 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.987005547 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.988796785 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.988783443 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.98709374 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.987216971 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.582071851 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.573789114 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.987712701 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.988701612 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.991971963 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.986936289 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.987860806 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.987494482 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.98705016 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.990055435 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.987961767 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.988066284 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.992001629 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.74375287 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.999316404 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.763297563 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.997343809 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.993718085 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.98668703 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.997527602 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.000838607 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.00187695 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.005897898 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.988305908 seconds)
  done (took 224.31971865 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.243353534 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.995943169 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.996632388 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.914964694 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.997678067 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.996405564 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.990397096 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.248727126 seconds)
  done (took 20.309499753 seconds)
done (took 632.075389448 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.484731137 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.325513781 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.172028587 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.016641537 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.269562892 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.051296289 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.0153256 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.080316365 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.633697682 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.083414354 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.654415329 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.036740192 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.745648068 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.042906905 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.137741777 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.071675393 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.600557318 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.69292698 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.191872255 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.107654036 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.184777729 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.953650834 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.096571655 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.663282804 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.768295466 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.000601852 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.066565283 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.605740313 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.025929133 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.176488004 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.768659024 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.308103712 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.026849804 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.015554419 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.073681475 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.048968812 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.271830528 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.025884908 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.138275095 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.761369263 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.09416238 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.542434986 seconds)
  done (took 107.939100295 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.986736286 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.984937365 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.983747529 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.988253207 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.984606329 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.986420057 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.985402403 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.984096786 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.984789189 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.98219413 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.984263352 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.985582138 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.98606938 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.984327998 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.985968467 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.985049866 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.987444562 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.986890534 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.98607567 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.985743169 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.987322327 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.986417334 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 2.001517506 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.985251097 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.989175732 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.987772016 seconds)
  done (took 53.564955944 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.998791129 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.163741395 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.238050457 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.018894767 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 2.000672636 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.003559465 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.02025855 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 2.00745231 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.002751495 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.004120224 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.094491676 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 2.00671027 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.017884371 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.236808346 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.01641977 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 2.000914569 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 2.000202976 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 2.00030576 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.172713272 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.016654076 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.020471904 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 2.006430521 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.021122623 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.013581363 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 2.001785095 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.001848195 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.006302859 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.461845967 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.0095985 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.094097776 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.046363099 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.025293218 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.435344922 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.24763512 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.055423483 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.009368386 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 2.002956772 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.09580911 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.007644467 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 2.003599108 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.022007274 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 2.006654935 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.238699357 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.493188796 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.017711472 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 2.002662152 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.472909094 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.106493878 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.045344566 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.012417805 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.242069453 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.021741852 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 2.004897554 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 2.003616524 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.038996681 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.006634544 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 2.003242605 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.354280636 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.015229985 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.022133497 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 2.006979393 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 2.002378832 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.178546729 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.012557206 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.167187627 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.013251736 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.008978107 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 2.00226586 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.238125555 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.020348282 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.498966057 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.018436941 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 2.00270298 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.09365792 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.17038383 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.500403081 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.01712789 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.178562261 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.452092402 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.030320236 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.011541928 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.452083095 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.033115281 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.011248675 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 2.004378638 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 2.006178287 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 2.004187617 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.047781446 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.019378742 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.436347349 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.502286451 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.371746841 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.030697007 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.018098854 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 2.004194141 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.355612886 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.011328998 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 2.004544312 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.234452177 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.508876681 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.019743046 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.013255999 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.487396535 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.021790548 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.02436453 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.0143095 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.24435236 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.022515697 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.049316784 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 2.005564803 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.013545705 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 2.00861161 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.024190904 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.012660371 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 2.006643131 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.478583281 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.115349676 seconds)
  done (took 247.877983363 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 7.003657533 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 7.017143462 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.99993269 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 7.019912453 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.99964634 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 2.004947795 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 7.000728549 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.999810417 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 2.005265014 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.999546781 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.999086323 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 7.002155811 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 7.004029042 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.004202775 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.127614302 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 2.006951271 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.60646414 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 7.002306497 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 7.001708385 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.99834263 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.658083035 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.006929915 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 7.003045711 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 7.005384217 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 7.002616901 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 7.000921089 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.007786509 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.001183555 seconds)
  done (took 171.410094084 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 2.006306892 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.122623075 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.025291361 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.034998378 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.014831885 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 2.005488647 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.030596353 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.019605774 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.011344372 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 2.005450499 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.005588016 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.068861367 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.016449277 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.105292206 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.035601058 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.034779579 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.108279691 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.011035511 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.005799926 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.00524732 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.035906172 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.001354622 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.069418583 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.132367908 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.023597642 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.122818578 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.013221167 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.008672026 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.008818611 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.127679981 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.021041904 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.068481025 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.035426739 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.025700626 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.129606283 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.12476011 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.109168613 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.03436383 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.012305955 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.008597901 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.005626654 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.996673178 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.125980659 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.027525341 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.010758298 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.114816087 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.028417613 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.011113409 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.019049362 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.008546571 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.021513689 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.026381395 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.074548076 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.138696489 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.04049634 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.033969752 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.033683733 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.308283947 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.018157007 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.109570649 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.001978223 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.12939852 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.028365246 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.997122088 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.008914058 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.013659945 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.03509942 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.038731832 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.110505746 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.013244427 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.109227223 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.040360115 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.013576559 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.008249892 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.011565977 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.12796347 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.12803387 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.040640137 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.045499718 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.040282168 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.003348064 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.009704099 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.996931297 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.026977905 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.013736786 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.126868189 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.127408707 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.015159388 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.011707452 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.011597007 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.011083359 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.037213607 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.135255939 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.04424084 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.103757304 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.076695042 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.083639947 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.021791122 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.023280742 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.013088132 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.073484019 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.022617375 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.021121307 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.344096517 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.080387446 seconds)
  done (took 217.240327722 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.483529498 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.059446041 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.06727229 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.341003553 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.367331765 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.939804741 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.05479464 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.058357201 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.08422668 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.246921336 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.130994091 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.079840839 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.045354177 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.035138138 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.060566882 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.078891997 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.067248877 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.380210816 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.155835335 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.178012255 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.041269987 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.327213905 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.331772206 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.472407808 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.097261321 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.405155883 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.718040296 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.202008894 seconds)
  done (took 65.441230125 seconds)
done (took 865.38259467 seconds)
SAVING RESULT...
DONE!
