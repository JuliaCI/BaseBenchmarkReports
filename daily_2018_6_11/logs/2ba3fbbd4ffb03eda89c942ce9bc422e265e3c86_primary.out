cset: moving following pidspec: 9373
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 2.032729147 seconds)
loading group "string"... done (took 0.604463634 seconds)
loading group "linalg"... done (took 9.708922876 seconds)
loading group "parallel"... done (took 0.184287396 seconds)
loading group "find"... done (took 1.554431552 seconds)
loading group "tuple"... done (took 2.222129842 seconds)
loading group "dates"... done (took 1.534064737 seconds)
loading group "micro"... done (took 16.371043224 seconds)
loading group "io"... done (took 0.613186247 seconds)
loading group "scalar"... done (took 48.490472262 seconds)
loading group "sparse"... done (took 14.63303267 seconds)
loading group "broadcast"... done (took 1.282265907 seconds)
loading group "union"... done (took 13.849744769 seconds)
loading group "simd"... done (took 2.982460172 seconds)
loading group "random"... done (took 12.033705902 seconds)
loading group "problem"... done (took 1833.587162258 seconds)
loading group "array"... done (took 28.241339791 seconds)
loading group "misc"... done (took 1.236007384 seconds)
loading group "sort"... done (took 4.139784792 seconds)
loading group "collection"... done (took 21.404909821 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.781652545 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.153370899 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.226724015 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.394815036 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.253482178 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.176106528 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.1814641 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.611676416 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.073460051 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.251417385 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.143594246 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.64495437 seconds)
done (took 6.661119743 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.30993485 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.409787028 seconds)
    (2/2) benchmarking "String"...
    done (took 0.188692496 seconds)
  done (took 1.277283694 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.080354822 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.19200974 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.121538764 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.120808416 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.105078187 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.121731433 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.121151196 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.120611804 seconds)
  done (took 1.582370133 seconds)
done (took 3.935204765 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.584409462 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.940782836 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.576904166 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.179898619 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.214762877 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.19350287 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.343339145 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.173019722 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.142202263 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.120275293 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.215971528 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.369947865 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.539192892 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.070714278 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.093927993 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.133422573 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.104553941 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.741777974 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.090652407 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.140468598 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.622988777 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.135267198 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.121756711 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.129687593 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.210445082 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.146048017 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.176503826 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.093124692 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.779403125 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.109286096 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.249171425 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.088504924 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.18533346 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.26573038 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.087359845 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.115467519 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.766693427 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.190963527 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.125125874 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.110806926 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.732414802 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.088783589 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.268725406 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.115121153 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.12191295 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.200126468 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.125036681 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.105181229 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.094123677 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.107229506 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.179514308 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.497421619 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.111336389 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.183711595 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.126121869 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.762502994 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.102680374 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.163646359 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.146838789 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.113453808 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.084833463 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.116805686 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.17663108 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.117657194 seconds)
  done (took 21.298539073 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.169378473 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.178905276 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.101238192 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.164082864 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.15236049 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.087339454 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.107260005 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.082829959 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.137259795 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.247933066 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.147952214 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.201978963 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.079832217 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.109898496 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.154589822 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.261935992 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.131224601 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.130183027 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.091736546 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.114461418 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.151597614 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.103701617 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.11915692 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.118738121 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.181395008 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.213644178 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.129329458 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.130803338 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.107990671 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.125543336 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.147906345 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.157997342 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.099628231 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.105645466 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.199228501 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.126642138 seconds)
  done (took 5.767058586 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.203392822 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.268876148 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.126110895 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.253370769 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.193070459 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.160349688 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.179455489 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.17145341 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.323729746 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.259422255 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.193851223 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.137849332 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.120815304 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101419418 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.087531818 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.100733801 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.76926451 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.190483806 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.157495616 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.158528698 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126536098 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.085754632 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.744622654 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.108287086 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.086848044 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.109281647 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.101018283 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.221077469 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.110345109 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.424466508 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.129018726 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.119241035 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.1404095 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.217554323 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.127524612 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.152940142 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.111834415 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.105113052 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.236862266 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.118559131 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.083483058 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.138733812 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.141127332 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.145066016 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.107150455 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.12068276 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.259739099 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.091027919 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.131974036 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.171303777 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.221458792 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.146380671 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.088997573 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.406207401 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.106882536 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.11455062 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.104508233 seconds)
    (58/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.090021145 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.338050369 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.143355846 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.10608499 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.102703542 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095751279 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.102691891 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.809494449 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.100015746 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.267922206 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.087323154 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.193181602 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.105393985 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097854662 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.111434266 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.108887369 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.109650312 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.105581324 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.084753428 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.104754386 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.102852291 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.093317365 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.129396544 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.108582113 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.084930347 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.170121152 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.107254024 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.110673898 seconds)
    (86/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.104270103 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.121833179 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129764089 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.09283569 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.103117801 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133331621 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085672614 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.105786089 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.182904605 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.11097719 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.12542163 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104853173 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.131659622 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.105525687 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.228719752 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.100768831 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.131894084 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.105864512 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117693781 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.130284928 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.105501053 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.106334562 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.081965976 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.104712063 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.165327595 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.089120585 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.104429699 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.09060742 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.12064906 seconds)
  done (took 26.748638287 seconds)
done (took 54.489733885 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.502090243 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.13456078 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.134928052 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.133634962 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.133043084 seconds)
  done (took 1.804393076 seconds)
done (took 2.543790626 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.408576368 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.201857891 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.130527193 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.200267679 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.114845264 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.227572819 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.190922742 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.130861568 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.222283225 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.110531265 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.215258093 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.091851569 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.116407784 seconds)
  done (took 3.129385545 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.105711716 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.133880432 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.091574123 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.125693913 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.104818844 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.106834714 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.121481805 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.1495566 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.104326436 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.116215002 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087443014 seconds)
  done (took 1.982658711 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.102296647 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.128400728 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.091819742 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.120807756 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.103997752 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102554251 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.119401163 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115401679 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.122151859 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.116764731 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.086986542 seconds)
  done (took 1.951240564 seconds)
done (took 7.793062805 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.29972814 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 9.969128286 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.163627551 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.238864014 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.414640486 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.268562021 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.679207275 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.17740649 seconds)
  done (took 14.146008203 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.144060231 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.153426314 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.093030984 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.113303287 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.092846718 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.109826068 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.110162253 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.092870788 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.109564993 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.095117874 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.110530313 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.109909062 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.093696463 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.108392643 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.094087387 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.111632323 seconds)
  done (took 2.553720215 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.150527542 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.150891394 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.101334414 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.123881788 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.116748076 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.098754232 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.119424533 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.117001724 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.096648574 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.116056734 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.123383377 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.120709205 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.104506319 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.113062602 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.118489794 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.106664922 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.114328568 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.119292758 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.103538125 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.118431934 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.121950814 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.116434155 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.104557522 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.122488073 seconds)
  done (took 3.641549035 seconds)
done (took 21.082748896 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.191298058 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.109716524 seconds)
  done (took 1.047890798 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.159060629 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.165463424 seconds)
  done (took 1.076547713 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.137187511 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.091809568 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.156003085 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.129264634 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.108599515 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.092121639 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.148860657 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.110523753 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.108536953 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.093644681 seconds)
  done (took 1.931379056 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.095293084 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.109559056 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.121380981 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.161854011 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.122988229 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.097062541 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.115311594 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.097146961 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.100646207 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.110235022 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.118544271 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.118848909 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.117665713 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.137770652 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.115378001 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.103978316 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.125023705 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.117653257 seconds)
  done (took 2.859899074 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.08844512 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.107429381 seconds)
  done (took 0.952157686 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.096319221 seconds)
    (2/7) benchmarking "second"...
    done (took 0.109393838 seconds)
    (3/7) benchmarking "month"...
    done (took 0.114399741 seconds)
    (4/7) benchmarking "year"...
    done (took 0.222475655 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.110373469 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.093517653 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.10928918 seconds)
  done (took 1.610634137 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.56553579 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.290720208 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.399519582 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.132099502 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.156745971 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.408061134 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.158269347 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.13019398 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.128406579 seconds)
  done (took 3.190561217 seconds)
done (took 13.423866775 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.097924285 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.252555529 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.670446109 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.116348455 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.110582698 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.151858645 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.350881789 seconds)
done (took 2.515425406 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.390728758 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.170226589 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.083928356 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.108545838 seconds)
  done (took 1.512971603 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.084469946 seconds)
    (2/2) benchmarking "read"...
    done (took 0.116102472 seconds)
  done (took 0.968281652 seconds)
done (took 3.2567976 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089409538 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.10436118 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.089184879 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.145571261 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.108194719 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.089766274 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.109161031 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.089189729 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.108091641 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.08912069 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.106657268 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.104687637 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089895219 seconds)
    (14/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.106099793 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090520533 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106538745 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.090064611 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105871664 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.089448322 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106863992 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106094282 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.090472938 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.105499941 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.090222874 seconds)
  done (took 3.216892242 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.114047249 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.110545942 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.116455814 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.098322653 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.117844056 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.115849705 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.115331733 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.095564709 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.115225866 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.110545986 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099028899 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.116508252 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.111136322 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.098876732 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110743809 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.115258838 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.097748339 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111059954 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109810285 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.099350033 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.114723624 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110186214 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.100519577 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113992915 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.117398187 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099282374 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.111376858 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.111867945 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.098504839 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.117178276 seconds)
  done (took 4.048885849 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.098709642 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.102179309 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.090838955 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.117917631 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.087246812 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.111610229 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.103933331 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.08916751 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.109688573 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.0910899 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.112547677 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.090863804 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.104610599 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.110027348 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.093985897 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.112421797 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.102023618 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.105124019 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.087003175 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.110044938 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.110389221 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.088751238 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.109140839 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.091082859 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.108011692 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.087042223 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.108988407 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.106892984 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.092347564 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.107851495 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.094654056 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.111217893 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.090993754 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.119926275 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.112174233 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.091096215 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.114644696 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.086990312 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.110464823 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.104628853 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.087624565 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.107616084 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.088430228 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.114893247 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.092148907 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.109061625 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.087703429 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.111800313 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.109309167 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.09612393 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.103797385 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.088508971 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.111389779 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.111450067 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.095621926 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.10424902 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.092576354 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.104209318 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.09246937 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.108811029 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.087263491 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.106560815 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.113111798 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.09351138 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.124771219 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.115806234 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.089884423 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.111357196 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.09341644 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.115627796 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.111536898 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.10253611 seconds)
  done (took 8.141329904 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.10392056 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.120541144 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.094143804 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.111897595 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.110851166 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.093256024 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.119165244 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108817557 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094330484 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.120272798 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092419815 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.111897019 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112575825 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.095376054 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.111216114 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.094656408 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.121685045 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.112670565 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.093089862 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.11050227 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.110986287 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.102525313 seconds)
  done (took 3.131716441 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.283699381 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099877635 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.167882869 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.129713613 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.135951796 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.129987595 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.115666377 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.099474615 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115918913 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.122091882 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104333302 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116341143 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.136776041 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.122053672 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.121717014 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.107785949 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.117459244 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.124120208 seconds)
  done (took 3.138222938 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.110122585 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.112906642 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.140103801 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.095155054 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.115667275 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.113573061 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10604346 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.130444632 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.114457602 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.096921721 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.124177275 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115601337 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.096056153 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.115067002 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114064028 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.096574469 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.114189504 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113845488 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105982535 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.12215442 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.125815385 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.127778624 seconds)
  done (took 3.29371985 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.109874171 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.112839016 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.151929405 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.100336525 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.113246614 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.112374274 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.103766139 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.114102293 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.123048885 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.096958328 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.115064073 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.112563542 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.106119329 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.114192991 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.122971151 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.096738653 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.114902975 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.096797101 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114562519 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.112225357 seconds)
  done (took 3.034848548 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.195523914 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.128737118 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.112785995 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.146599686 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.131376791 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.112221399 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.145467812 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.13011793 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.129619411 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.149525834 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.112737066 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.12972237 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.146909061 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.140291336 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110629652 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.144704724 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.145324169 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.144875335 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.131246714 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112040467 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.146686982 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.131575073 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.146734227 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.12981274 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.112153835 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.1294526 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.130738961 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.122099607 seconds)
  done (took 4.542047226 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090121937 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.108324172 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.093103529 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.111179629 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.094486019 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.111793677 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.092351566 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.111033276 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.092425213 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.110934493 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.11116282 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.094210924 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.110616027 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.093424984 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.111784755 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.09229018 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111551054 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.092410896 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.112366033 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110499972 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.09284839 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111453069 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.092783509 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.112987801 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092827082 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.112259769 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092882752 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.112153809 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.092968461 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.111889975 seconds)
  done (took 3.879179552 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.104628595 seconds)
    (2/2) benchmarking "in"...
    done (took 0.139287877 seconds)
  done (took 1.044164037 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.099087049 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.133865605 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.093367336 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.113652447 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.125446082 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.093961811 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.125680351 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.125147261 seconds)
  done (took 1.71081638 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.166152726 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.172428888 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.101086074 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.127948968 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.170159236 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.161295235 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.165120459 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.120231415 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.102396255 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.110730216 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.167167679 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.109870866 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.10076459 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.116695264 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.119201003 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.107312564 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.115033254 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.106398663 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.1240497 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.116148425 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102384356 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.127786614 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.120758391 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.105188277 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.112922313 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.123048861 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.104358096 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.128210136 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.116093245 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.103387203 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.117710127 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.114414773 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.099888469 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.120214321 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.094925523 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.167251876 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.130864513 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.115977622 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.099813862 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.122654941 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.126074553 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.095420585 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.122308122 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.116920207 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.104226224 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.119391119 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.121464645 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.097283725 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.110760041 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.094594339 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.115237166 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.114112334 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.095589493 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.122224349 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.101124239 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.127149772 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.117414671 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.097186368 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.117298925 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.114473616 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.100417709 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.115758985 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.122684211 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.100154289 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.122152006 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.11948479 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.100904496 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.115864992 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.097045963 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.115902957 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.121598729 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.119037978 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.12247128 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.121434138 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104036487 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.116805407 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.117074912 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104261317 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.119521226 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.12147868 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.100879974 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.124960856 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.102171479 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.115111802 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.115228645 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.10279747 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.117294785 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.099068004 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.112730363 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.132420116 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.098766068 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.116280777 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.113012546 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.099237446 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.116057495 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.098694754 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.112755261 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.121059636 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.094120227 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.119485988 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099740209 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.11549849 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.119349865 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.099250149 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.120711442 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.118451498 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.159927533 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.095919024 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.112588208 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.114465487 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102219539 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.112134616 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.101668308 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.114270134 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.116640655 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.095477687 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.123335627 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.121055284 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.0984846 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.121046227 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104611703 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.121871427 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.118074406 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.095385421 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.117589706 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.101183417 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.12766021 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.123993814 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.097830679 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.117048298 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.116452811 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.101490646 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.120510854 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.118817245 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10243015 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.11938526 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.095984513 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.116691836 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.121635557 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.103466126 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.116869999 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.099502294 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.123449548 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.121195628 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.09969015 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.123930032 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.116456068 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.092332125 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.123398633 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.115939302 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.097571168 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.128468436 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.096538663 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.119797813 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.116996724 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.108232211 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.118452597 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.122707474 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.0990732 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.124368497 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104150331 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.113033402 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.117727086 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.108535437 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.124525934 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.117606306 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.098065632 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.116108787 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.104544241 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.114954218 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.10101254 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.112034372 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.118109704 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.104317691 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.11895699 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.119599838 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.096862356 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.137740185 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.13298814 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103681514 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.122875931 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.121582609 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.102202697 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.121434408 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.101588471 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.124829213 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.12291236 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.099223127 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.122596088 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.123287717 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.097733169 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.119901553 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.100453728 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.125078189 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.113552489 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.098502695 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.113144883 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.10204446 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.125064641 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.122896093 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.113478657 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.121253393 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.099433166 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.128874827 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.119111273 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.10262935 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.115548877 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.122772466 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.109314615 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.125129308 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10517176 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.125502051 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.120549585 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.097946466 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.130239259 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.12041485 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.103002993 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.120079422 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.093951896 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.11674681 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.124571146 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.101177174 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.115702312 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.096388761 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.125369467 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.126311558 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.099319634 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.113299129 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.122817963 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.107272006 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.116836043 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.123016079 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.097324594 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.122129075 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.132315968 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.094368006 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.118048592 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.106215476 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.123430488 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.117716592 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.10239102 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.121291226 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.104429298 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.122963794 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.119505818 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.099593724 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.126930581 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.100815388 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.116500415 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.118281332 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.100794802 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.115709177 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.099669536 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.124138461 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.119381633 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.098028133 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.128793633 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.124986425 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.104555456 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.121576475 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.123065593 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.104420263 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.125026532 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.10103331 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.125720337 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.117768246 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.095074247 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.119536944 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.093809409 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.120396209 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.117048007 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.104293766 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.120628059 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.12175631 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.102934736 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.12645441 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.099176645 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.123750852 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.136169721 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.117340629 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.095522892 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.121519213 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.101911747 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.11943641 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.119786253 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.099531735 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.125616676 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.123627458 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106189138 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.119573264 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.096663857 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.124758147 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.118675251 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.105723895 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.126756816 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.104631895 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.118048996 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.122311639 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.099557382 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.129645064 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.115690438 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.102598473 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.122561489 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.123474091 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.100065866 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.121580771 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.097959765 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.117659696 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.1193155 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.1058493 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.122373439 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.123349093 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.101920029 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.122146238 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.098881897 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.11945952 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.127269742 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.101239914 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.12682786 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.09818421 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.115907873 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.116511542 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.105342945 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.124882578 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.126603266 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.098839105 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.123776087 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105508782 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.121982138 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.117883664 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.109211735 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.128812832 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.105134362 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.132339858 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.116539883 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.100930466 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.129214494 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.118158786 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.100188216 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.120871571 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.096035287 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.125679992 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.125728905 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.105495659 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.121586943 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.116795618 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.099389499 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.12730601 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.103202892 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.122456404 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.099233242 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.125332782 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.119181365 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10295126 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.124735458 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.123720195 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106321875 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.124705102 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.102462955 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.121225045 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.127113844 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.098326809 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.117549654 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.095072917 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.122841224 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.127710462 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.095878244 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.124784162 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.103367533 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.121221647 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.122960936 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.104168022 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.119596202 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.127870088 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103676906 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.123514591 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.131239744 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.099813367 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.122496764 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.104001658 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.121223787 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.091112736 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.118071115 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.118170831 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102192239 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.11813191 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.120578653 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.098453823 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.123810142 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.117653033 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.099872217 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.119933669 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.101759118 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.11533077 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.125911451 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107190538 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.120299125 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.099451195 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.122383272 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.118609502 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.101280922 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.128471026 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.12193863 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.109555922 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.126468183 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.101297431 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.122543308 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.126221402 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.10389566 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.12830199 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.12059953 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.107255994 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.117164196 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.128281814 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.102812591 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.127946476 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.099288285 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.116220076 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.125461293 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.104994018 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.124812803 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.106471851 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.128813814 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.118039359 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.09650592 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.123858503 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.100376367 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.134972566 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.131217308 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.102352375 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.124873477 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.122992574 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.101041981 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.129415265 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.097414726 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.122304443 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.126113914 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106305628 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.125269021 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.119711069 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.104009149 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.124039948 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.129338139 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.104760659 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.11858779 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.103870672 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.130208042 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.123281263 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.099150181 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.121435133 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.128165722 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.101661149 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.118540953 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.095141342 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.130754884 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.127307747 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.107183812 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.12427083 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.124656697 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.100015425 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.121042133 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.126869692 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.101791624 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.125545851 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.102110932 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.128820712 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.134590364 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.096057594 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.122924101 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.132953682 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104905029 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.128177676 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.101672333 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.124938016 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.128842953 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106516536 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.121454819 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.118396728 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.099005865 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.125106705 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.097752981 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.123060753 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.132745578 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.103041203 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.122665758 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104015484 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.105261496 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.12389352 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.10188632 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.119700651 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107597532 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.123626608 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.131020409 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.0978894 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.119137188 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.102253081 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.128145785 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.124596258 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.1055692 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.120699814 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.123063869 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.099352585 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.12422862 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.109190078 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.126993224 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.128742597 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.103513963 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.124303548 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.10340759 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.137008593 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.122249312 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.104261116 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.135213963 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.129257285 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.105734619 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.124097084 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.131448671 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.107925405 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.125423312 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.129540119 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.102262653 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.125730299 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.108666928 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.130886191 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.133926945 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.099124373 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.114537306 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.121590443 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.099304017 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.115733529 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.131255136 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.110122105 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.13032567 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.104323643 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.119696379 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.125944371 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105795845 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.1241566 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.125067632 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.101316993 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.123219014 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.099695441 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.122798773 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.118204489 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.108345556 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.127140428 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104860726 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.130509377 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.116957375 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113418745 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.132404203 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.131138141 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.099809723 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.120604183 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.098953391 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.126919512 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.130272532 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.106065825 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.126128655 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.104028938 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.126490485 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.128318487 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.106186091 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.123935731 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.130392795 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.106611563 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.123165853 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.107457986 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.125350958 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.12945024 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.100915762 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.130563646 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.109097523 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.128980004 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.136426141 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.107114091 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.125360519 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.123514116 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10780216 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.12491252 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.107079446 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.127776795 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.12408144 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.098548501 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.130571533 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.110185805 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.126809077 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.131415699 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.111657265 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.124980274 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.130245254 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.111155198 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.128311931 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.10141052 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.130893469 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.125626415 seconds)
  done (took 69.662277929 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.179954884 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.108931964 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.12548945 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.103700405 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.179486759 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.104698849 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.125306402 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.105224348 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.127052352 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.139689003 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.103315149 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.127009678 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.150237545 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.160295336 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.155923839 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.141813879 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102718255 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.127969377 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.125515797 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105518525 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.149785614 seconds)
  done (took 3.623187692 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.123865417 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.145798754 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.143594691 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.148881676 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.13591526 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.143822843 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.122117513 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.144332135 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.147954144 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.141012836 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.148806534 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.143265367 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.14059233 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.117704548 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.139517679 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.140536971 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.150100432 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.13714792 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.122682605 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.146670436 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.139625997 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.144504389 seconds)
  done (took 3.943430176 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.107421567 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.124770881 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.107108205 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.123893316 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.106526336 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.127010302 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.137430428 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.10335184 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.136229797 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.125219253 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.100363557 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.125867528 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.10872145 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.124803455 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.100306799 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.125398833 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.135582069 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.106671708 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.130422369 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.102291823 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.144358592 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.123858463 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.104345617 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.123053094 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.135692253 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.104387246 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.125104705 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.122206026 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.094933141 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.123712978 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.096517727 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.123217087 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.123635896 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.096072003 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.119902654 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.102974328 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.125793051 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.101467818 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.123246615 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.123868678 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.099611417 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.126645711 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.132071161 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.102856376 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.122473195 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.104015554 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.126160783 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.098558303 seconds)
  done (took 6.48595552 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.165953862 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.191048427 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.133401251 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.168316058 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.146357984 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.119772594 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.126858179 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.170935777 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.125191571 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.129781575 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.148098685 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.125884241 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.134659678 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.135373477 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.138141184 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.108698506 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.134360807 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.130402119 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.14467266 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.105954693 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.138686338 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.138001468 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.152346757 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.15086435 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.11170392 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.138131046 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.131387388 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.116389307 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.150635642 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.13852623 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.133914004 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.139508648 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.146170142 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.104725078 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.132223907 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.128996235 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.150970646 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.111337194 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.144123988 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.126747666 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.112939595 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.13728325 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.131007404 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.153415907 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.145596889 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.110136273 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.133853536 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.13109177 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.152083757 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.113664073 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.146934 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.169362525 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.136951232 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.120260512 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.136830907 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.150455359 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.134885015 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.14260314 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.111762473 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.147244394 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.125736629 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.135280826 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.129712039 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.130910851 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.147890711 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.151186419 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.140130571 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.11196665 seconds)
  done (took 10.29603337 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.136778193 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.134690971 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.15062601 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.150951532 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.138017412 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.11524819 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.13688815 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.138543515 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.139197227 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.126313023 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.136198682 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.258716379 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.112244041 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.145187215 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.139704278 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.139327113 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.116995679 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.133451346 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.135024647 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113314089 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.134923455 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.148779263 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.133946638 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.151840235 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.154586152 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.112352838 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.139279741 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.139744215 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.156107626 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.139004532 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.157349211 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.118916623 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.139711571 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.155413723 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.157556612 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.140706292 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.107586136 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.138143251 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.139127064 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.114971065 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.132665951 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.155085431 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.139096066 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.112996838 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.136393154 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.138417834 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.154476112 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.156144018 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.142769678 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.119756119 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.134107778 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.148848096 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.133870528 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.132248234 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.124443451 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.179701931 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.146323518 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.123941681 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.133470933 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.147989982 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.148161231 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.159414685 seconds)
  done (took 9.570946512 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099310776 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.121443155 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.099942694 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.122485878 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.100224334 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.124360993 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.100698964 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.120663072 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.098717063 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.120631781 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119967313 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09909464 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.123400242 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099522894 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.122204633 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098670526 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.121440961 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.09913216 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.12369076 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.12048049 seconds)
  done (took 3.129896724 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.112503344 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.146848031 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.128376863 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.112897859 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.126561468 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.13461286 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.102236814 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.126412029 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.126539073 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103169158 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.140186756 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.137947872 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.126344555 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.112407067 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.138748932 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.134824743 seconds)
  done (took 2.905269197 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.12835209 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.148044294 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.186405624 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.131325632 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.127339967 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.11199288 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.127073863 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.126923397 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.102483895 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.134156258 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.106551952 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.131687993 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.124948231 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.102886394 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.126615967 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.129396619 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101294987 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.131148798 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.10355784 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.211558191 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.110175434 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.130583428 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.128490713 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.106830415 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.132343633 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.138597667 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.116284632 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.134206876 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.134374474 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.110589019 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.137858119 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.14519467 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.109573365 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.138578006 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.132305508 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.112554468 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.133429949 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.111280308 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.13982311 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.130787857 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.107863461 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.129641788 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.128157428 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.107477827 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.126054961 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.104973888 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.125091956 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.134016221 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.105185033 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.133140764 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.134201723 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.110630877 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.134021523 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.141127663 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.114770222 seconds)
  done (took 7.865304088 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.11752265 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.128772816 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.142308355 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.100352356 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.129279195 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.105815466 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.134259958 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.133703178 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109659746 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.126206847 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.129677405 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.105942617 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.132741339 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.130688937 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.106746683 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.13086935 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.103579047 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.131458389 seconds)
  done (took 3.108196122 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.111046025 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.126087422 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.107967047 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.128146491 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.128607877 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.104659235 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.124687331 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.101732554 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.125348023 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.126378735 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103502291 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.126693604 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101380739 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.129566898 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.130022188 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109767142 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.13446002 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.108483513 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.134929737 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.131162594 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.11193137 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.132430808 seconds)
  done (took 3.550850577 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.115158836 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.18950081 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.136347462 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.19680868 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.127208931 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.124749465 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.113014558 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.128171821 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.144340425 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.123375016 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.101686743 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.1248281 seconds)
  done (took 2.538518509 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132392992 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.170820606 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.128792236 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102635886 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141587847 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132692162 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133824946 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109934098 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.147295291 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.150263308 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133283764 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.147171235 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145617375 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.149492965 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140993513 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11895518 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133657352 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.13362998 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105137484 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.183388084 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111206579 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.147241399 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134415565 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133816656 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111434998 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.148837029 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.146852854 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.152454963 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133714096 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.148403256 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142613608 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111048247 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.146840251 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.1506035 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128215938 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.147676919 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111159563 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.160177551 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142302946 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.149788727 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.128169358 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140730193 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122843736 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.142962884 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.148690635 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134474368 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.143999215 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134862047 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111905533 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.16755165 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142787448 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.149305939 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142637552 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.147891621 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.147598556 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.167243004 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.152163071 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.150395836 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142174194 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.153130236 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.149365921 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.141258707 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127707405 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.15251271 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.14190929 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.148887704 seconds)
  done (took 10.147034892 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.177557957 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104600052 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135158211 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.152149794 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.149476097 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136136893 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112401014 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134598308 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136139231 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105861159 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.212328019 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111726732 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.149914822 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.150119656 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135313038 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135595807 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110773237 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.148528155 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129825936 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.167791691 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135353575 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.14998515 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.151246729 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.150520602 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.153643098 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118473937 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134683069 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134904082 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134974581 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111314036 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.145209973 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136327127 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.151042346 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105679357 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.150902684 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13825318 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134555839 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.145715918 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110611603 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.141706217 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.151076939 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.161455581 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.136204942 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135635231 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.152258464 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111626773 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135905505 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131464532 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111039784 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129881497 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.154242383 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.152884449 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.153806594 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.1500527 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136864446 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11217797 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134880219 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135458569 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135111397 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118371145 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.149830033 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135292873 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.168422502 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136026776 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136477586 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.151489067 seconds)
  done (took 10.068315307 seconds)
done (took 186.845126675 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.172637552 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.194879738 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.170200305 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.162371385 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.121322335 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.161214385 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.13279133 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.169380795 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.121363454 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.098682696 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.12196875 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.126433157 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.165910044 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.121949557 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.097064803 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.12609783 seconds)
  done (took 3.182248761 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.224974647 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.321224733 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.144008452 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.127233893 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.106336872 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.124429901 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.125934352 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.10521482 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.123950063 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.113372145 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.124338822 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.126410721 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.114261497 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.125265224 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.126097411 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.101633451 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.139082411 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.125569086 seconds)
  done (took 3.42731713 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.126022467 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.182805379 seconds)
  done (took 1.239114075 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.138493807 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.235872014 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.311624578 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.184811516 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.157984293 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.151495211 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.187687609 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.144749653 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.220201916 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.15125734 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.151543155 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.106299859 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.156479142 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.137060801 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.142514331 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.105663206 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.160002594 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.139585275 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.138349084 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.108536175 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.153015309 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.130300149 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.113288975 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.141493878 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.208107802 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.147422352 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.132458954 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.130428694 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.107546441 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.139042414 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.136758672 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.14900659 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.14781214 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.200387507 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.136826391 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.198038822 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.139252539 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.129530335 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.115830432 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.129491712 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.135830206 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.135889193 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.123536322 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.13063092 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.13196539 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.114878648 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.132036689 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.132005513 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.141750254 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.116890917 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.140867084 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.138765873 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.218093802 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.116712214 seconds)
  done (took 8.955375016 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.948907062 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.172584081 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.103511258 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.0991155 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.137737879 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.145880349 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.962295241 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.126941298 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.299131162 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.199873593 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.147564634 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.143446438 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.283300113 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.287505994 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.23705369 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.396255253 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.800322993 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.142485186 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.13452851 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.179705735 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.136888656 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.160691836 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.161437072 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.448380655 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.129565985 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.126733799 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.109838155 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.141536687 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.217359914 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.104083458 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.131889374 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.241373601 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.3054104 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.248668463 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.128628422 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.102969037 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.127422987 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.202290773 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.344473257 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.27218671 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.198851982 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099154918 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.127567778 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.142635932 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.151058238 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.0992785 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.226527952 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.210399547 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.233978321 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.132491217 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.116527015 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.139438257 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.140798332 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.196888928 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.124599456 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.39410328 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.418921305 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.101769187 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138295028 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.147948973 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.322502216 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.125899696 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.280967895 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.158542274 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.265578251 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.102957165 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.874279128 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.228155832 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.101857554 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.139844771 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.135795841 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.134050528 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.139993495 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.197100243 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.406363971 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.145264853 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.108371115 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.127130718 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.292293176 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.104638823 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.127983302 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.198027014 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132080493 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.137273074 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.146576726 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.143851779 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.209236536 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.308965321 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.121686534 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.138055159 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.134139904 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.140632642 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.105085545 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.274510892 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.27470785 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.192423043 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.275138242 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.142952502 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.199722886 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.225257927 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.140756149 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.206997771 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.137917371 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.147235534 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.143571074 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.270209156 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.170834075 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.127265637 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.110438494 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.138206637 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.175216854 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.130605149 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.114471083 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.231327203 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.530527233 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.201554494 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.124218246 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.107293896 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137877338 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.219994811 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112085269 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.309860371 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.139982397 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.226967121 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.113701805 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.124063416 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.138437694 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.201792461 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.145018659 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.139288281 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.142961646 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.11378872 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.310325456 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.270289618 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.145350396 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.283467631 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.204954284 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.139778467 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.209308611 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.138101665 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.22800994 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.115563866 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.141472304 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.130635552 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.860220317 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.144391098 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.11303475 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.134479841 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.221215769 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.12834358 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103509291 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.128051054 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.122738389 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.85091095 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.106142792 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.12546875 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.104392026 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.139912729 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.138283106 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.136314113 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.11035308 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.223209446 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.28472746 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.142701619 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.136822141 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.102237734 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.222123137 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.106113867 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.130089832 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.102613015 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.128122308 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.140189355 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.133224403 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.10541188 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.231830223 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.198233837 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.275257614 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.579641601 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.129900249 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.102055525 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.311861385 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103091312 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.390420419 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115931846 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.306112193 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.209146828 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.125086455 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.393375158 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.20410875 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.24896552 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.107316954 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.234054999 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.10117298 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.13702362 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.221688741 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.103462937 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.13868794 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.195088906 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.148464137 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.145314228 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.214408266 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.128495742 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.264343766 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.128529711 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.204016576 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.132100956 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.141831304 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.369632635 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.128281516 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.1511204 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.200815037 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.135153749 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.10334128 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.67220542 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.131304951 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.140756275 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.116880434 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.303022763 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.2025743 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.138731471 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.13791046 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.117411781 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.227527473 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.248481191 seconds)
  done (took 51.918429209 seconds)
done (took 69.647576024 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.352232603 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.309244588 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.364580664 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.257890908 seconds)
  done (took 2.337997857 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.284400356 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.182060661 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.217019584 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.127563341 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.226007712 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.127257873 seconds)
  done (took 2.138663199 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.579343658 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.476298486 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.407857697 seconds)
  done (took 2.44051658 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.287136985 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.298165235 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.388956954 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.534411314 seconds)
  done (took 2.621350819 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.31194707 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.12783152 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.147886924 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.203675507 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.281454668 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.301175959 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.177090971 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.228022894 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.126410752 seconds)
  done (took 2.929681335 seconds)
done (took 13.443653509 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("map", identity, Bool, true)...
    done (took 0.331339806 seconds)
    (2/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.327007346 seconds)
    (3/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.320105579 seconds)
    (4/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.278780832 seconds)
    (5/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.176188843 seconds)
    (6/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.265322225 seconds)
    (7/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.135764549 seconds)
    (8/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.112202 seconds)
    (9/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.311658527 seconds)
    (10/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.321532148 seconds)
    (11/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.208415427 seconds)
    (12/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.139465405 seconds)
    (13/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.325407358 seconds)
    (14/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.138236739 seconds)
    (15/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.17021503 seconds)
    (16/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.172678307 seconds)
    (17/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.094241467 seconds)
    (18/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.139666097 seconds)
    (19/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.13627924 seconds)
    (20/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.355606655 seconds)
    (21/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.265929243 seconds)
    (22/224) benchmarking ("map", identity, BigInt, true)...
    done (took 0.233488856 seconds)
    (23/224) benchmarking ("map", abs, Bool, false)...
    done (took 0.243747844 seconds)
    (24/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.135635775 seconds)
    (25/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.221532609 seconds)
    (26/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.207000197 seconds)
    (27/224) benchmarking ("map", abs, Int8, false)...
    done (took 0.223904949 seconds)
    (28/224) benchmarking ("perf_sum", Bool, true)...
    done (took 0.121799538 seconds)
    (29/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.213716858 seconds)
    (30/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.138459541 seconds)
    (31/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.154728236 seconds)
    (32/224) benchmarking ("map", identity, Int8, false)...
    done (took 0.151161895 seconds)
    (33/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.185703935 seconds)
    (34/224) benchmarking ("map", abs, Int64, false)...
    done (took 0.235384016 seconds)
    (35/224) benchmarking ("map", identity, Bool, false)...
    done (took 0.119452625 seconds)
    (36/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.109757147 seconds)
    (37/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.291130511 seconds)
    (38/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.247255148 seconds)
    (39/224) benchmarking ("map", abs, Float32, false)...
    done (took 0.195901309 seconds)
    (40/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.108881628 seconds)
    (41/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.122447855 seconds)
    (42/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.108753592 seconds)
    (43/224) benchmarking ("map", abs, BigInt, true)...
    done (took 0.188456991 seconds)
    (44/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.107050095 seconds)
    (45/224) benchmarking ("perf_countequals", "Int8")...
    done (took 0.151601605 seconds)
    (46/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.174572782 seconds)
    (47/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.229832719 seconds)
    (48/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.155329258 seconds)
    (49/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.10170654 seconds)
    (50/224) benchmarking ("perf_sum", Bool, false)...
    done (took 0.13931016 seconds)
    (51/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.162125013 seconds)
    (52/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.228777467 seconds)
    (53/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.287706858 seconds)
    (54/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.11062126 seconds)
    (55/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.122554608 seconds)
    (56/224) benchmarking ("map", abs, Float64, false)...
    done (took 0.182040497 seconds)
    (57/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.295428727 seconds)
    (58/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.181688449 seconds)
    (59/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.094580039 seconds)
    (60/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.165705586 seconds)
    (61/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.233886767 seconds)
    (62/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.108859922 seconds)
    (63/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.215769118 seconds)
    (64/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.181095006 seconds)
    (65/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.248912336 seconds)
    (66/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.236671208 seconds)
    (67/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.12178555 seconds)
    (68/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.216907103 seconds)
    (69/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.206971176 seconds)
    (70/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.215718505 seconds)
    (71/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.137272257 seconds)
    (72/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.128574684 seconds)
    (73/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.094436815 seconds)
    (74/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.218216884 seconds)
    (75/224) benchmarking ("map", identity, Int8, true)...
    done (took 0.115243441 seconds)
    (76/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.253221335 seconds)
    (77/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.12613762 seconds)
    (78/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.097451026 seconds)
    (79/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.217084899 seconds)
    (80/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.144110875 seconds)
    (81/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.158221039 seconds)
    (82/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.230905045 seconds)
    (83/224) benchmarking ("map", identity, Float64, true)...
    done (took 0.1638984 seconds)
    (84/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.147437112 seconds)
    (85/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.094156947 seconds)
    (86/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.1216025 seconds)
    (87/224) benchmarking ("perf_countequals", "Float32")...
    done (took 0.151317526 seconds)
    (88/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.186668289 seconds)
    (89/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.170803026 seconds)
    (90/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.123189133 seconds)
    (91/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.151246889 seconds)
    (92/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.177507027 seconds)
    (93/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.138599649 seconds)
    (94/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.147193371 seconds)
    (95/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.095379646 seconds)
    (96/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.121724307 seconds)
    (97/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.215709805 seconds)
    (98/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.097159475 seconds)
    (99/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.151999517 seconds)
    (100/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.095475571 seconds)
    (101/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.214474209 seconds)
    (102/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.164404417 seconds)
    (103/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.193133008 seconds)
    (104/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.189240863 seconds)
    (105/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.139106333 seconds)
    (106/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.133165342 seconds)
    (107/224) benchmarking ("perf_countequals", "Int64")...
    done (took 0.125566141 seconds)
    (108/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.190229875 seconds)
    (109/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.122964012 seconds)
    (110/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.108910224 seconds)
    (111/224) benchmarking ("map", identity, Float64, false)...
    done (took 0.119965226 seconds)
    (112/224) benchmarking ("perf_countequals", "Bool")...
    done (took 0.126062067 seconds)
    (113/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.121654604 seconds)
    (114/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.097127021 seconds)
    (115/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.12261228 seconds)
    (116/224) benchmarking ("map", identity, BigInt, false)...
    done (took 0.093409812 seconds)
    (117/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.129588641 seconds)
    (118/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.111609343 seconds)
    (119/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.21454011 seconds)
    (120/224) benchmarking ("map", abs, Float64, true)...
    done (took 0.12863542 seconds)
    (121/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.120086708 seconds)
    (122/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.137758187 seconds)
    (123/224) benchmarking ("perf_sum", Int64, true)...
    done (took 0.148687576 seconds)
    (124/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.11079017 seconds)
    (125/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.182363025 seconds)
    (126/224) benchmarking ("map", abs, Int8, true)...
    done (took 0.126691025 seconds)
    (127/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.122502411 seconds)
    (128/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.132657995 seconds)
    (129/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.095397542 seconds)
    (130/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.143759132 seconds)
    (131/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.113728906 seconds)
    (132/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.155681291 seconds)
    (133/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.154056426 seconds)
    (134/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.095168225 seconds)
    (135/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.165551773 seconds)
    (136/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.137164224 seconds)
    (137/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.108199562 seconds)
    (138/224) benchmarking ("map", identity, Float32, true)...
    done (took 0.186949833 seconds)
    (139/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.171077764 seconds)
    (140/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.145118931 seconds)
    (141/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.113187385 seconds)
    (142/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.147685438 seconds)
    (143/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.096088507 seconds)
    (144/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.122483154 seconds)
    (145/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.111060305 seconds)
    (146/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.173172146 seconds)
    (147/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.130111928 seconds)
    (148/224) benchmarking ("map", abs, BigInt, false)...
    done (took 0.094250461 seconds)
    (149/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.121434321 seconds)
    (150/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.111611286 seconds)
    (151/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.214010999 seconds)
    (152/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.124307384 seconds)
    (153/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.122241318 seconds)
    (154/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.131578275 seconds)
    (155/224) benchmarking ("perf_sum", Float64, true)...
    done (took 0.15136089 seconds)
    (156/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.095951799 seconds)
    (157/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.121194471 seconds)
    (158/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.122235581 seconds)
    (159/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.122518161 seconds)
    (160/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.096432531 seconds)
    (161/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.13918884 seconds)
    (162/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.151451761 seconds)
    (163/224) benchmarking ("perf_countequals", "Float64")...
    done (took 0.126019899 seconds)
    (164/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.238051188 seconds)
    (165/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.123992119 seconds)
    (166/224) benchmarking ("map", abs, Int64, true)...
    done (took 0.102623389 seconds)
    (167/224) benchmarking ("perf_sum", Float32, false)...
    done (took 0.149289446 seconds)
    (168/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.094003867 seconds)
    (169/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.13902542 seconds)
    (170/224) benchmarking ("perf_sum", Int64, false)...
    done (took 0.139627448 seconds)
    (171/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.146142062 seconds)
    (172/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.137664004 seconds)
    (173/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.136831088 seconds)
    (174/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.096368965 seconds)
    (175/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.138707162 seconds)
    (176/224) benchmarking ("map", identity, Int64, false)...
    done (took 0.149941946 seconds)
    (177/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.132673016 seconds)
    (178/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.151528507 seconds)
    (179/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.110587974 seconds)
    (180/224) benchmarking ("map", identity, Float32, false)...
    done (took 0.121459694 seconds)
    (181/224) benchmarking ("perf_sum", Float32, true)...
    done (took 0.112220426 seconds)
    (182/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.13917676 seconds)
    (183/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.138967668 seconds)
    (184/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.100876138 seconds)
    (185/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.122392329 seconds)
    (186/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.125749569 seconds)
    (187/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.139336425 seconds)
    (188/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.137819345 seconds)
    (189/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.117414524 seconds)
    (190/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.15367087 seconds)
    (191/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.122787576 seconds)
    (192/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.129052534 seconds)
    (193/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.130920677 seconds)
    (194/224) benchmarking ("map", abs, Float32, true)...
    done (took 0.100787813 seconds)
    (195/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.123571747 seconds)
    (196/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.102599722 seconds)
    (197/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.1386423 seconds)
    (198/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.100858083 seconds)
    (199/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.15265084 seconds)
    (200/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.094269344 seconds)
    (201/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.122303027 seconds)
    (202/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.096415755 seconds)
    (203/224) benchmarking ("perf_sum", Int8, false)...
    done (took 0.228600735 seconds)
    (204/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.108818168 seconds)
    (205/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.147302498 seconds)
    (206/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.121578037 seconds)
    (207/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.12301836 seconds)
    (208/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.137502463 seconds)
    (209/224) benchmarking ("perf_sum", Float64, false)...
    done (took 0.115001789 seconds)
    (210/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.123183961 seconds)
    (211/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.123721044 seconds)
    (212/224) benchmarking ("map", abs, Bool, true)...
    done (took 0.128188469 seconds)
    (213/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.095865113 seconds)
    (214/224) benchmarking ("map", identity, Int64, true)...
    done (took 0.127821105 seconds)
    (215/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.096314316 seconds)
    (216/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.123644254 seconds)
    (217/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.114251955 seconds)
    (218/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.138897098 seconds)
    (219/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.095589852 seconds)
    (220/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.139939933 seconds)
    (221/224) benchmarking ("perf_sum", Int8, true)...
    done (took 0.140330257 seconds)
    (222/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.102254616 seconds)
    (223/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.139775736 seconds)
    (224/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.13552745 seconds)
  done (took 35.786506024 seconds)
done (took 36.771846274 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.54398439 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.14653779 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.113899142 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.14311492 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.203432671 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.145673826 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.122823879 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.147341777 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.147292782 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.110335903 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.132287544 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.146984204 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.113997464 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.230994256 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.117643675 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.13551186 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.133558135 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.12109285 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.150180577 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.152184844 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.206477077 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.107421674 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.148214085 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.133313442 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.204131729 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.106573247 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.143427658 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.142775113 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.119758727 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.140931711 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.141343039 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.106739067 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.15264817 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.149691405 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.10419691 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.140123539 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.104643317 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.132354862 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.112533306 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.140993254 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.148912144 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.113365526 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.14562935 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.136300518 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.113727496 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.138318427 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.133039937 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.118843586 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.133536708 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.142611343 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.107332952 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.151653395 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.13911995 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.105721989 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.133429785 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.10761464 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.146586305 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.132338167 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.120101211 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.133083901 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.135234728 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.106258101 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.142248485 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.105253371 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.139486066 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.134193332 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.111806095 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.14249048 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110669602 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.136565427 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.1332232 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.111259572 seconds)
done (took 11.145272351 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.111807386 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.201092941 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.207716257 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.240005837 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.167736557 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.125481912 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.156535588 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.164154263 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.151048303 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.131408852 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.171781505 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.165203343 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.216789371 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.148830876 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.153323017 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.114252671 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.149511066 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.144242984 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.214280709 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.160482568 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.173395627 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.121431885 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.17329831 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.155632807 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.141365564 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.173880867 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.115940081 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.142717642 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.141127869 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.12066047 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.159815764 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.142331049 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.115178289 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.156381712 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.152627374 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.119719141 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.155033353 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.142762063 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.139978532 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.112426255 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.156440154 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.151913049 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.111532326 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.153826124 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.143436539 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.150240937 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.122075172 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.149911271 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.143697473 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.117066585 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.14361139 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.173486311 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.14890874 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.125118579 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.14988808 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.146907657 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121740461 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.148257706 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.142913628 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.119718637 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.139962092 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.141428188 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.116711292 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.170823301 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.143882641 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.148251516 seconds)
  done (took 10.874192934 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.132767065 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.174805247 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.151546315 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.151549615 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.147463358 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.103249382 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.130229155 seconds)
  done (took 2.042106382 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.104801021 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.208319453 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.206202319 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.235077965 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.20139049 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.217377035 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.156908676 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.103906517 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.173777656 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.144161246 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.208892241 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.239831237 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.142412525 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.153094839 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.211529844 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.132922434 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.210704722 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.104767396 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.147359461 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.206555749 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.1507776 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.165980822 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.121144837 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.135139088 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.199578297 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.135041274 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.26341067 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.151508596 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.137955443 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.115815798 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.147155911 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.219570929 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.20094963 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.150827934 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.108683086 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.236314679 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.201314451 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116069614 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.244841934 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.109642635 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.202392824 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.14526324 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.147371522 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.1182435 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.146157552 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.188527739 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.153526007 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.146268133 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.134054489 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.208316521 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.146929039 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.203894453 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.141626119 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.118342163 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.146337226 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.149438082 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.124514387 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.146452785 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.208686172 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.150196926 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.20228749 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.203591324 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.2020303 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.202762609 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.158702722 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.203830309 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.2005087 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.145570956 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.143170772 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.118506305 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.205774726 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.146898388 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.148632994 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.192156964 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.1483195 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.206529477 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.204766299 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.113699873 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.149744878 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.138613481 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.114087263 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.134161554 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.193238234 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.146050832 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.114868124 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.15610106 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.146311592 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.118185395 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.138789584 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.160057006 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.116047326 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.148510024 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.151713719 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.145246856 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.123787718 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.234330589 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.118578086 seconds)
  done (took 16.898656941 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.108141193 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.135715236 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.112842417 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.137838183 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.13655206 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.108227272 seconds)
  done (took 1.821723193 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.141177208 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.150387586 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.160007321 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.149234051 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.206731224 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.214045723 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.218839105 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.148277473 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.165530534 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.150329175 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.212763467 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.248144263 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.213703819 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.151125141 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.215972392 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.122108157 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.246765108 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.116862246 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.158614701 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.143963692 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.128574173 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.151377023 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.144797975 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.205768939 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.153667636 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.121753854 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.1474094 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.159103808 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.156641537 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.118743613 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.153054243 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.151497663 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.144912425 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.118904432 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.244557875 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.118074934 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.144521503 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.155207878 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.12323695 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.152749193 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.217705724 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.146429221 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.158127264 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.155910925 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.119850415 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.144424134 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.155914956 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.148111145 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.218474255 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.15394232 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.128894724 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.150494959 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.152852609 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.154699631 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.116545112 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.148754428 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.157737129 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.219321458 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.152262337 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.115774327 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.152139329 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.155004547 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.146884721 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.125618649 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.152000102 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.156067601 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.144948374 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.122913029 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.146146924 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.149620443 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.126959278 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.151341355 seconds)
  done (took 12.459194476 seconds)
done (took 45.142208751 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.192940559 seconds)
  done (took 2.270862147 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.089285276 seconds)
  done (took 2.171952081 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 19.552727879 seconds)
  done (took 20.672706663 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.61439441 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.692533564 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.029217448 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.188414669 seconds)
  done (took 3.60003845 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.057699176 seconds)
  done (took 2.15331993 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.375594661 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.276830889 seconds)
  done (took 1.73657452 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 1.005616303 seconds)
  done (took 2.098678351 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.249628165 seconds)
  done (took 3.340481267 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.411401325 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.216744428 seconds)
  done (took 1.730253206 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.701184726 seconds)
  done (took 1.796335904 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 33.236698094 seconds)
  done (took 34.329810135 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.26362255 seconds)
  done (took 1.366153913 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.33591595 seconds)
  done (took 1.432260684 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.044012453 seconds)
  done (took 5.145847524 seconds)
done (took 84.933680844 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.118141016 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.150762861 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.119391013 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.146624217 seconds)
  done (took 1.630859136 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.128409946 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.150464405 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.151978107 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.119593429 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.158964538 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.148861799 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.11712239 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.156568697 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.146197403 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.121655743 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.149143294 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.148075418 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.123062903 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.147475748 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.143988825 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.12190904 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.152170607 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.148893768 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.120460986 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.151044607 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.14740893 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.12211655 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.151734154 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.120138796 seconds)
  done (took 4.451903768 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.119205665 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.140183784 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.114646861 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.140878172 seconds)
  done (took 1.623969367 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.128114048 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.164688447 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.164138292 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.125421539 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.165889406 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.163678826 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.113999662 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.144851442 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.146364551 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.127088737 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.146431739 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.168776747 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.163674008 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.120418098 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.159003655 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.112071985 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.151468406 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.164650983 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.154509233 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.130765416 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.144593264 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.125295662 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.145694077 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.161234733 seconds)
  done (took 4.602083489 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.232088418 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.131273987 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.173725789 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.201234962 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.175624982 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.147235934 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.146135926 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.154546369 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.156228263 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.151497809 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.125250431 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.210129341 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.152061865 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.151619804 seconds)
    (15/22) benchmarking ("StatsBase.var", "Float64")...
    done (took 0.163455198 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.120372798 seconds)
    (17/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.156324187 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.153082647 seconds)
    (19/22) benchmarking ("StatsBase.var", "Int64")...
    done (took 0.199071789 seconds)
    (20/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.121275002 seconds)
    (21/22) benchmarking ("sum", "Float64")...
    done (took 0.155258431 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.163374098 seconds)
  done (took 4.64993133 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.120888281 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.141009472 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.107175857 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.141888031 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.149366895 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.115326251 seconds)
  done (took 1.894029928 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.108411705 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.134403205 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.106899093 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.135057518 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.111084972 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.136432715 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.105173629 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.136925656 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.105953189 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.136700452 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.134103337 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.106172596 seconds)
  done (took 2.575480255 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.334668564 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.111146294 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.145860644 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.140452996 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.146119814 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.111135592 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.158040214 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.110119718 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.288604486 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.142419147 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.127346694 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.248841054 seconds)
  done (took 3.188688407 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250779517 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151253526 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.314117702 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.396194343 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19241335 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.202425455 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.342844515 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.203101621 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.228663104 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17110311 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235356547 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191926434 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187428247 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216355942 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172553151 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.200936871 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215188947 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239959627 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180656643 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.276575596 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202013606 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.203590153 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.217593153 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.185488625 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168884588 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194521487 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.119458626 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158580376 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210735335 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237480909 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213561651 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181638112 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.174274148 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242442672 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.290131511 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217959645 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.357199527 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164137977 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.233202576 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.246315947 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.276923307 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171366606 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.267585518 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189452266 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1321038 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24556088 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19085893 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.220008615 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.164300819 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14237951 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256789616 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213056471 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.225077945 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170354139 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.363181102 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180197703 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.151196382 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24112032 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229369741 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230537363 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204206585 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.151670413 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.22008451 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24825044 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218057482 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.18127253 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.209917181 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155711308 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213970211 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.235236113 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219100496 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202446578 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.254605631 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165162067 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199556646 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.207246076 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187230886 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214765737 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195355133 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.148422251 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183703907 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136533755 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156312137 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.21822783 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149744819 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245993977 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165661573 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.222394235 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243405446 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192114688 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.196269201 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199215265 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23442325 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148306112 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.153481727 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178868419 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.195172327 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192117849 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161015809 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.192587986 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178470584 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.129602723 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185967267 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.152283442 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192509349 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.16593527 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203837209 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200776292 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.159354993 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.202334394 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.183123316 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.190237905 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209037191 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225066183 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162073717 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130989947 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262992356 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191911317 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.138631916 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.245066056 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.226483903 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.203213264 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168838908 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208838 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235690847 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.174892465 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227352901 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17324015 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163802263 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.18784362 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19421527 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.192383113 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.189131572 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157750702 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.186692978 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235188946 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.157191088 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136985547 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.240504093 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128923139 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158766888 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177640976 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167851448 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.141399856 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.184559446 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.174717303 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190320121 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194451535 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.188523443 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195432117 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174703258 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266455331 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132568417 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.194586475 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178899965 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.148789923 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.225251081 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223210399 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158887776 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224067916 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.208381487 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.263372186 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199134132 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160785854 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.21944255 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159351662 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.120305107 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203198348 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.197068733 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.197220855 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.255127529 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229071938 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.240265791 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.157854015 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181880134 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235686222 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.21269207 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194966898 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.178342499 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.19759487 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206673868 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.119255374 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.156937374 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.159338756 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17191255 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130783395 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164551191 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2190532 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230994378 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.224139873 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1973499 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17237231 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.220841457 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.194366802 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202376864 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.212141735 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169487291 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.226972184 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219026558 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202926311 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174661899 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239631114 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.121616449 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154971931 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.167661301 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.207149307 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131935148 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165644717 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177178507 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.221963694 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215086908 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181447179 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.270794516 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207148635 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.231145045 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.153186101 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.196040572 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208771744 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192137272 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.22384462 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165363374 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.197566385 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.219350805 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1779568 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233761835 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198104387 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20408173 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.272822878 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.191434855 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160220601 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152055122 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23666907 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14175096 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.199276968 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177668532 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166986261 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188649462 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.170404851 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159068089 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222378866 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175719629 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221087982 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.191619735 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241812671 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125174903 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17674473 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.195782206 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179463334 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.11869032 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.239145549 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230074375 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178955057 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194635647 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211968017 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161072141 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.349904347 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229200472 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.256266269 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168266786 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144817414 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.195755969 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.194520921 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230882652 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.220108829 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176834247 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220580603 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.194221447 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.174578191 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136262229 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179490324 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185345691 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.188820616 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.167987921 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.191432121 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.173134933 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226285043 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176533137 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192814696 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199602769 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.179744543 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.191175416 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141334484 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.27448604 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192256429 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218113024 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.189978964 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.207051775 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227245702 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15543188 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157805054 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.128157742 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.220600814 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165121336 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194483149 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.217461814 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.265167571 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196789469 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206356397 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170661982 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.123571313 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.195939076 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18115614 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.266333538 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176248699 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.170934889 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232175372 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.185104431 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129958181 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.200662218 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.353121212 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17854337 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211989373 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.119949583 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.34383932 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126146422 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16277106 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.193920289 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209040044 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.183140168 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.221857476 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203148433 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177311661 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.194332792 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137912792 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.254435997 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246238605 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208372591 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.249110935 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.176295968 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.19448984 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200897561 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21666137 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1762275 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.179199766 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165096328 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2528212 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.229780245 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.167850747 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199973132 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199359667 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.195939052 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213887306 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16532358 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225589946 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162455614 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205529918 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173405424 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15706219 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193508569 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.216972883 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165090145 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214629267 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193325374 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162938269 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128848717 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186068624 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194915827 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178057323 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.160877116 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220736247 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.158703158 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198140124 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219922823 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129531357 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.191162388 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179414009 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165868895 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179038876 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179458214 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166874718 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.176241398 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219858146 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.166850492 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213694022 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24357129 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204721083 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196301504 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177906809 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.696152195 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.130642269 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220748509 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.179248174 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.262354976 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151272504 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20300635 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.195059784 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182751462 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207298512 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18452923 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.258134621 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234612618 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.198144744 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13157992 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177473664 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17853466 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.166268972 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187329485 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199866532 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141535379 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.172681386 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.195678587 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178188037 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.179164674 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170465781 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225297621 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181927842 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224389857 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.224019816 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171728989 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203817324 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247760116 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128143057 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.199954532 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243424539 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143883128 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188477154 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.166815098 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.170172031 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217549019 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.122797703 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197569582 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197421329 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.198651887 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198925366 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.169870197 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195875029 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176556704 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196374798 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161227484 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.195075268 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.193137355 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166080036 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.130259707 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.191004156 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196075134 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.193800437 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160159178 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.207577455 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222499456 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.122011919 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165647945 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.349145578 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163728479 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.267471519 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.191380415 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134768147 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177889386 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192241924 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.191552933 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19572833 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.163960145 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16350792 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.134500389 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.223621101 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.19220703 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.192700887 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216820989 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199588414 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.260235239 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.146625865 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.302637179 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171416439 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.190325037 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.164682889 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.131083957 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173088703 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168031079 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17934762 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.227487984 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215944164 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.187269962 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.178988376 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162692131 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.121527883 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162714558 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.197976688 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190793459 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193804099 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180045974 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.151777785 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147123987 seconds)
  done (took 95.323413731 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.184342392 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.237924151 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.200851528 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.250984786 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.211017819 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.306424723 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.315317444 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.271302323 seconds)
  done (took 3.201151615 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.155288628 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.13497796 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.17281674 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.15278241 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.154210213 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.482245377 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.164131339 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.121579871 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.218427469 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.194632234 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.150737457 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.724455028 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.150126104 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.152132354 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.144968784 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.15049079 seconds)
  done (took 4.638354493 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.851847944 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.614216431 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.631897665 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.295396358 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.271644438 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.190965864 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.846760178 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.224657403 seconds)
  done (took 14.140984524 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.152617249 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.170573379 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.385237581 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.249050338 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.191752825 seconds)
  done (took 2.375819327 seconds)
done (took 145.395905674 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.125041797 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.173640047 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.155040882 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.14340092 seconds)
  done (took 1.808073217 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.176570955 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.140694513 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.110261366 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.138671912 seconds)
  done (took 1.792433134 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.573955324 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.105868689 seconds)
  done (took 1.937518495 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.14801187 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.171879208 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.173812964 seconds)
  done (took 1.728576003 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.131430906 seconds)
  done (took 1.355608756 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.120500035 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.162547449 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.219328069 seconds)
  done (took 1.733387884 seconds)
done (took 11.582110021 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.146090776 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.459732687 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.441668015 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.132558332 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.748204782 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.433178351 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.06643546 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.184693234 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.220476888 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.112571992 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.165685459 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.725072408 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.057251617 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.393820829 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.072491572 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.462178626 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.729381893 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.146963844 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120785539 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.147547315 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.040301199 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.113182936 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.147575583 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.114976738 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.72567871 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.459513794 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.113030252 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.509920118 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.144467184 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.117526688 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.434807445 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.113182879 seconds)
  done (took 18.211477668 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.159912292 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.213019373 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.154636542 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.14631242 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.119201768 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.146863843 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.12526071 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.161138507 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.221412071 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.145824514 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.168227837 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.113064707 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.151913331 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.113846163 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.170754854 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.144973852 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.116784745 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.148477504 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.152904087 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.117559668 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.167359318 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.112168242 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.148416025 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.149379368 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.114072581 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.173348296 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.145806188 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.129757836 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.145844271 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.150682121 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.119911339 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.146523538 seconds)
  done (took 5.932570682 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.166506505 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.222856923 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.156722806 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.182121876 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.202103952 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.116247368 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.238056228 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.189823528 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.256204991 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.114843435 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.168784501 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.113247616 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.187856072 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.147010405 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.169652714 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.114473499 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.15075242 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.116884759 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.154322482 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.148309349 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.136020202 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.146302152 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.147855778 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.116537492 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.146372202 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.175429046 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.114555772 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.161365572 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.113161961 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.152072849 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.151572906 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.114851176 seconds)
  done (took 6.227674688 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.128927054 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.161712921 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.137067529 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.170243275 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.154290535 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.127367927 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.1590643 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.153133695 seconds)
  done (took 2.434168562 seconds)
done (took 34.032162404 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.14108133 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.167332255 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.133282063 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.161079084 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.22819457 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.149658342 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.131063517 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.15127511 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.127957358 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.168663053 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.145254398 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.120030945 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.167891869 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.124516858 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.210538068 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.163243507 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.218481415 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.213759026 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.152360249 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.12836055 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.154041112 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.221348579 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.157824292 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.11964713 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.222816827 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.151056251 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.207726516 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.124923196 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.158075481 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.116352058 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.210611336 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.159803659 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.152902091 seconds)
  done (took 6.594784369 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.233500583 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.240580293 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.12011489 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.152997366 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.240570034 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.153705988 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.23356752 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.119655475 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.153858392 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.119204109 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.151651011 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.235374722 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.242608937 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.252970261 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.27011199 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.243815 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.231835683 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.272822477 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.228578368 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.24697441 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.22961807 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.118905196 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.24233138 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.244013065 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.154511671 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.152395676 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.268048079 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.241056339 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.266853126 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.22742995 seconds)
  done (took 7.540366756 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.12878818 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.166926795 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.139616985 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.221666309 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.192618073 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.163366134 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.128916152 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.173764706 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.174936626 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.116381823 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.15947491 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.18836579 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.132898918 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.159222749 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.154966331 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.136406765 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.175377597 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.150938254 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.123382567 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.16994788 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.134837113 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.168733857 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.16518691 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.126627704 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.148415388 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.160793396 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.12092295 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.162207266 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.155784797 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.126585967 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.154637524 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.11988356 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.152475956 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.158165678 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.120192836 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.163058132 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.176902805 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.125111538 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.162911694 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.185108101 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.124693495 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.155868256 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.171175752 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.16324878 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.151640494 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.161857119 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.128763654 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.160106114 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.11465967 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.170695515 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.164841791 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.117266472 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.173465525 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.150227596 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.114819505 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.157538753 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.149827916 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.120138222 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.159588093 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.120133283 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.175793784 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.158855613 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.123494932 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.152703626 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.122326481 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.150182296 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.149727227 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.122783568 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.173409939 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.155086525 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.149260178 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.151398239 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.16038577 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.125552875 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.156631106 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.126803351 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.149895697 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.155948501 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.12585085 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.156518262 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.125542185 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.153051365 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.154384963 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.136438175 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.172269133 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.163756277 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.127170042 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.159934566 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.154026146 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.117276454 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.163879593 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.118838872 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.155154331 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.161365991 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.117242339 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.153385907 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.12880519 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.161307767 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.149077115 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136045394 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.157263543 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.150578012 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.133836144 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.152130428 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.121727088 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.160863419 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.162465619 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.117430699 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.159981917 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.129021513 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.150431521 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.155952937 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.120828767 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.149907637 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.167797574 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.129189398 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.154819637 seconds)
  done (took 18.663921772 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.338142282 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.350275335 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.265972419 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.411261874 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.177526276 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.230432128 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.307301873 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.294777745 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.116195594 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.19481795 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.215686038 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.303571796 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.116748689 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.183718448 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.347658079 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.412382081 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.185389616 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.19938183 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.196270624 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.176883971 seconds)
  done (took 6.293974016 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.141172748 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.195043853 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.184264746 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.186610778 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.15771349 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.132840435 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.150696422 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.17724485 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.124174089 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.158326331 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.115607817 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.164401862 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.162022399 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.127944748 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.171038129 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.200795295 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.121713412 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.159079381 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.175267772 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.157320763 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.128944964 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.180934502 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.16361205 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.180288487 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.131984641 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.165804087 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.149240179 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.126965786 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.154003799 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.123297272 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.157300347 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.174178204 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.157388537 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.125011526 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.161433645 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.128903898 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.152515177 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.117860581 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.152314253 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.154909076 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.13524506 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.161192188 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.121212765 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.147988764 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.164388805 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.12025507 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.163779636 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.128162034 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.164365316 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.167319831 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.127804034 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.163408715 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.157348967 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.137529749 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.155819652 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.167500275 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.132254635 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.164777283 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.157060894 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.116592561 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.148503659 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.123434539 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.158038269 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.128599988 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.160751937 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.175607798 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.168047199 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.117145173 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.158834709 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.154137755 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.122319577 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.171854684 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.177103 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.121840338 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.155269075 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.134968973 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.156283584 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.109732624 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.161935029 seconds)
  done (took 13.193346218 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.148723734 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.157957865 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.172426815 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.156324299 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.166500832 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.123081761 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.155900576 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.173055004 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.13155956 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.167085487 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.16480859 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.130773924 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.178421399 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.164165945 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.122125802 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.16920323 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.160424571 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.164106715 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.172655017 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.188011406 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.163543181 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.123025213 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.167075532 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.130924353 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.18881066 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.165764896 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.186066726 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.128597768 seconds)
  done (took 5.714528877 seconds)
done (took 59.240291259 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.417790507 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.600599675 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.362147882 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.357572004 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.400437231 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.405697777 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.361131437 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.549614165 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.179404712 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.350206588 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.358988476 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.357428525 seconds)
done (took 29.984539527 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.58513892 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.996595075 seconds)
    (2/2) benchmarking "String"...
    done (took 1.688908242 seconds)
  done (took 4.97973401 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.352829708 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.351908562 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.599291257 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.349457922 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.370864119 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.37563232 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.351790976 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.374329866 seconds)
  done (took 17.043872171 seconds)
done (took 28.243736484 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.396874023 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.717652554 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.651663967 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.36961495 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.357825196 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.363166414 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.345423466 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.352108803 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.37640258 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.36139316 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.364878893 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.682636757 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.361297745 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.825013699 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.345076789 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.360902863 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.371681207 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.712512277 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.354418772 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.353225121 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.359835265 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.347906937 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.379543345 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.380805555 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.370653715 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.356115062 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.413701223 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.34395307 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.745468907 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.36552907 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.35667236 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.373786991 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.416357219 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.360111934 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.478332609 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.389270901 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.679276163 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.366891436 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.34930006 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.371857297 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.74735415 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.799218465 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.350931723 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.365486099 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.351980161 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.434159029 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.342533896 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 2.126299126 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.35659542 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.361466497 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.384948938 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.771621653 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.356841706 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.360824649 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.367653453 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.725229485 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.369184676 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.449351901 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.395983341 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.354818685 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.352564274 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.36461673 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.400333075 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.364957206 seconds)
  done (took 154.762266092 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.351339776 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.361412602 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.35782797 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.361251157 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.360633582 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.35610279 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.352938065 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.35236414 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.358236677 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.38199054 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.352314673 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.358770555 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.358083364 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.34466411 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.357288413 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.3729943 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.357230699 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.374558635 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.387357806 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.353986118 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.360379235 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.35742713 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.37912581 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.357521236 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.376395637 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.448663432 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.391140422 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.405938002 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.365734743 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.354044259 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.377968493 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.404555007 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.063976569 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.213837739 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.366125438 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.365539896 seconds)
  done (took 86.080210081 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.354092825 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.353884065 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.354661554 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.354677958 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.394115304 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.354444498 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.015424712 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.0214555 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.155184895 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.569006707 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 8.056356612 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.768809948 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.358861465 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.452593847 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.367421949 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.35500062 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.370762115 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.399469067 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.360761317 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.35661375 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.020319814 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.370759173 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.464822937 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.553809727 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.375065412 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.391137997 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.763044505 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.356574344 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.39542806 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.703401866 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.413756939 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.35431878 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.844022102 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.955427875 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.478177215 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.358335218 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.392998415 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.357405299 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.648848501 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.356291943 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.35512781 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.358124804 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.143325138 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.361114111 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.020985454 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.359466549 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.412709875 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.357722795 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.358705414 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.75957238 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.229040517 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.37679231 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.35506548 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.360022519 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.35749702 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.357184126 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.39441609 seconds)
    (58/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.357591362 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.837762341 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.479793289 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.37656931 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.361008328 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.394374845 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.356824733 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.492773273 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.357531258 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.041382451 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.422241672 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.470193685 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.025234816 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.362466987 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.459817507 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.484617777 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.357961724 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.358465886 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.359501866 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.358351856 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.474690432 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.359448351 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.851088871 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.551566374 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.381001374 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 8.073766162 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.363327071 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.462072408 seconds)
    (86/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.35833162 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.359381823 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.844917917 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.36838994 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.358770975 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.213738843 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.460426552 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.358812096 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.359123053 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.359068698 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.846647472 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.026034487 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.734470187 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.365314418 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.06070725 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.363123983 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.85279276 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 2.00242596 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.144057894 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.365791224 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.477956925 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.55373098 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.382602771 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.360934727 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 8.09143665 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.36503918 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.41739061 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.358797336 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.761682469 seconds)
  done (took 388.337031962 seconds)
done (took 630.457636801 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.129305822 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.072331544 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.220435027 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.115659174 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.063286763 seconds)
  done (took 11.884132194 seconds)
done (took 13.168988245 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.57459438 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.581438701 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.440190452 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.579535855 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.405573327 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.595326499 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.564896489 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.384303843 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.475414348 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.455995555 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.479927812 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.423025983 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.398749709 seconds)
  done (took 20.644177229 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.65824392 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.372969096 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.435779741 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.66013958 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.410492014 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.683696473 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.695909205 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.37404563 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.517119693 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.380377192 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.382416786 seconds)
  done (took 19.858168169 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.674902179 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.37848031 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.437556919 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.654595009 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.414811518 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.689507962 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.706899886 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.372813986 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.528146562 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.381708584 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.381191181 seconds)
  done (took 19.906679795 seconds)
done (took 61.695010519 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.408660609 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.543140635 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.405131112 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.382217064 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.374799542 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.376298167 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.381549457 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.378163982 seconds)
  done (took 12.541841261 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.375672836 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.373093549 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.375599126 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.3755412 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.375596268 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.37494422 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.378643539 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.376333984 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.375904823 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.377319453 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.376051335 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.375629739 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.375960839 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.376644996 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.376315712 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.376226375 seconds)
  done (took 23.306160859 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.379765934 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.376082185 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.375117984 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.374651457 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.373919964 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.37552554 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.377191414 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.376408631 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.374778612 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.375255113 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.374987775 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.375368298 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.374409816 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.376035173 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.378711005 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.377968235 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.376235643 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.3777345 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.380203033 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.376773878 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.378030412 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.377311288 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.377670483 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.375971314 seconds)
  done (took 34.322545139 seconds)
done (took 71.464017174 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.365536661 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.392706762 seconds)
  done (took 6.049593244 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.437315561 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.439289734 seconds)
  done (took 4.169758447 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.380665709 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.376272818 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.376961256 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.376533711 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.37838458 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.376283695 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.378272124 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.376603234 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.377548538 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.376478951 seconds)
  done (took 15.063341159 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.377521429 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.377913321 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.380126739 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.377995221 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.379432336 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.376936129 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.378732512 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.377455155 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.37801892 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.377584524 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.380039033 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.378338429 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.378954438 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.380097158 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.377949741 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.378278797 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.38039935 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.378490275 seconds)
  done (took 26.102799978 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.392021108 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.399758342 seconds)
  done (took 4.084492554 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.520264153 seconds)
    (2/7) benchmarking "second"...
    done (took 1.422931864 seconds)
    (3/7) benchmarking "month"...
    done (took 1.496318744 seconds)
    (4/7) benchmarking "year"...
    done (took 1.484808472 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.424244943 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.40003628 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.423411575 seconds)
  done (took 11.46613041 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.381701185 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.593601553 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.709031769 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.96208435 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.380157162 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.406096887 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.229393881 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.407448456 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.402905738 seconds)
  done (took 15.767198665 seconds)
done (took 83.995977357 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.373359723 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.402469156 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.398831817 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.396170471 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.679955099 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.379087272 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.380925535 seconds)
done (took 17.305193108 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.366248875 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.375697823 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.373446678 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.383697803 seconds)
  done (took 10.795355491 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.382656221 seconds)
    (2/2) benchmarking "read"...
    done (took 1.733661567 seconds)
  done (took 5.414757436 seconds)
done (took 17.503928711 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.38309641 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.381679605 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.383291721 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.382262289 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.382075076 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.381237615 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.38270643 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.381250318 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.382770502 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.380075354 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.381357208 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.38213734 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.380840185 seconds)
    (14/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.382623687 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.382087737 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.381849099 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.382745237 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.382050222 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.382259176 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.381994109 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.383037015 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.38231858 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.382304968 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.384895888 seconds)
  done (took 34.472912338 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.381870605 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.382214601 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.383645366 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.381714472 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.382606973 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.38261694 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.383520559 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.38252555 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.382991624 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.384304435 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.384081935 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.384262499 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.382803754 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.383792803 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.385974151 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.384147768 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.385092047 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.38346198 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.386320133 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.383376274 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.384936516 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.384812944 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.382969731 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.383852964 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.386561425 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.384719185 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.384382344 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.38510207 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.3854518 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.384542363 seconds)
  done (took 42.816459454 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.390116625 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.390968152 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.385378838 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.38307911 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.384516958 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.38566417 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.386043083 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.386712443 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.383381715 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.3857819 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.385340501 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.384264983 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.385850567 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.383882868 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.385830629 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.385333038 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.38512012 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.384884183 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.385071566 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.385383623 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.38488725 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.383846304 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.386315033 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.385649243 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.386207726 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.383600941 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.385646889 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.38470116 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.38525745 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.385181754 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.385939465 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.385035185 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.385469231 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.385369973 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.38615114 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.385169587 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.389981347 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.39369149 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.387433472 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.388009991 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.387746106 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.38696756 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.386535396 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.386002685 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.387751557 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.384568211 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.385753518 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.387638431 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.386309838 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.38672373 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.385919127 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.386474822 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.386539362 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.385231031 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.385062838 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.386993058 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.386946791 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.386098014 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.386028625 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.386042077 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.386928372 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.38660695 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.386562279 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.386925863 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.38687447 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.386428638 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.38703216 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.387246703 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.386763751 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.387056313 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.388210352 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.389231128 seconds)
  done (took 101.111579521 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.388505969 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.386843661 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.387903316 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.388049555 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.387758183 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.38954974 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.387388419 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.387330972 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.390164228 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.387854912 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.387850228 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.388612125 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.389800344 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.388575201 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.390159675 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.38729851 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.391027031 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.388290832 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.390734993 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.390255583 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.387949574 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.390396587 seconds)
  done (took 31.851585752 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.388154432 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.391003826 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.38948375 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.392369516 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.392887754 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.392510242 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.388533599 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.39142201 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.389644979 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.388505652 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.38914826 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.38947079 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.391825483 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.390907544 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.390408549 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.392158339 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.389589476 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.392272197 seconds)
  done (took 26.334339456 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.391743729 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.392225376 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.390067114 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.388228393 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.391288969 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.391386051 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.390981029 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.388994306 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.390458381 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.391758245 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.390507255 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.393123626 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.39042787 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.389434003 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.390149227 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.391275574 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.391198167 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.390655992 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.389334732 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.390987178 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.389717706 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.389336847 seconds)
  done (took 31.893071274 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.39218774 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.392219291 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.392338004 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.389801344 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.391391543 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.395614697 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.393568478 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.390742658 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.393709182 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.391878964 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.39292511 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.39164413 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.395605998 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.393361203 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.392346339 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.393290144 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.390260219 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.394134476 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.393357008 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.390857304 seconds)
  done (took 29.15423517 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.394594677 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.393945461 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.393797641 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.393639098 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.39364476 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.393222542 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.394978815 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.394254012 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.395548094 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.396339982 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.395438661 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.394281401 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.395015952 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.395509186 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.397072789 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.39614207 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.395972724 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.395620523 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.395365945 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.396678764 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.394532659 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.395205344 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.396497667 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.39515354 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.395414559 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.398144217 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.397962438 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.397401369 seconds)
  done (took 40.373864797 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.398415253 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.394814071 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.393861413 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.397277376 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.395895334 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.394570509 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.394495949 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.394993673 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.395959984 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.39557293 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.397241772 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.394583572 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.393989309 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.39469614 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.395996016 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.397537029 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.395749587 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.396932 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.393560137 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.397257659 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.395646292 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.396588819 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.395342394 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.395702155 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.396566362 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.394166749 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.395426114 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.400264596 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.396351762 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.396678186 seconds)
  done (took 43.180078887 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.444850389 seconds)
    (2/2) benchmarking "in"...
    done (took 1.445790508 seconds)
  done (took 4.197275323 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.398628312 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.397770757 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.396885675 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.396551875 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.398489056 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.398723766 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.399054161 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.399000511 seconds)
  done (took 12.490815378 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.394261367 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.401488257 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.397474017 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.397844102 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.400223255 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.393657388 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.405710482 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.405004105 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.395568847 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.397322923 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.401995407 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.401030301 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.399388007 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.396834134 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.396875182 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.399409495 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.401943085 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.39810427 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.399511942 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.399408337 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.399521954 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.401295152 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.400770576 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.404844623 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.398681697 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.408112164 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.407156886 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.405097355 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.396313422 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.40160985 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.401402949 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.402618695 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.398504108 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.401908047 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.400042844 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.398702841 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.409173144 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.42339519 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.405024784 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.405390845 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.402152952 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.400035175 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.397565824 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.400356333 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.400225034 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.402419194 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.401318079 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.401332197 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.396420642 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.399085843 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.407768845 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.397878277 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.402532619 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.401257445 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.403668432 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.408955075 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.427882954 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.399554421 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.403836717 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.408937691 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.41543702 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.414638132 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.401472471 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.403392859 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.405468113 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.411163115 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.408827831 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.406797824 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.40408232 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.404034514 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.405394694 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.415668758 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.415233921 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.402931216 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.402556431 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.40327013 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.400103387 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.404211481 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.406483941 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.409366382 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.404135229 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.402540117 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.404252039 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.411557665 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.399202079 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.401990406 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.405142061 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.402446984 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.401770066 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.413065154 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.432389728 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.405025418 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.397723127 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.399678526 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.402672455 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.403394954 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.400022861 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.400993345 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.404951395 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.405549927 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.401674795 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.401957881 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.407361414 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.406013305 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.402671898 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.40715732 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.408315741 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.39948854 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.40889641 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.407610889 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.405369674 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.402479944 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.405517255 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.40443894 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.402612134 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.408379244 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.403861602 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.401165042 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.403545194 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.407314519 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.407944038 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.417688652 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.407722027 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.403582997 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.404858438 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.412863443 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.404133973 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.404299897 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.409092246 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.403191481 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.404068708 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.402698709 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.408199508 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.40164337 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.406256803 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.402146109 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.40674056 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.404495076 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.405197746 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.402418014 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.404827841 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.404182992 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.405729667 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.406538319 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.405440348 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.404680335 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.414238787 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.406571477 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.405804745 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.404683154 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.409844437 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.407387108 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.404536441 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.407215307 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.402073473 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.409419028 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.404409435 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.406815304 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.405179826 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.406613429 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.407985133 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.402849683 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.41032395 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.408402081 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.409248554 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.403014614 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.409101161 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.407668978 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.406287953 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.402003004 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.40850899 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.401478393 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.406147765 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.411215649 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.408047624 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.407667666 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.407408355 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.405775572 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.409243598 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.406441876 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.406675486 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.410200508 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.408579949 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.411457581 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.409954099 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.4071272 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.406439635 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.403538882 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.405326607 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.408201018 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.406009117 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.417196414 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.417357356 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.419520934 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.405630662 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.411081503 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.404402944 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.411368732 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.408810693 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.410105101 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.406886768 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.406116158 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.405407627 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.409481277 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.407064579 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.40820706 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.404831822 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.410752499 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.410278114 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.40827494 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.410836433 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.407425106 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.406876134 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.412245386 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.409877633 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.409095336 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.405918992 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.413331771 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.406763908 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.407444903 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.413511663 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.409210494 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.414713139 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.413596462 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.408072766 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.411282102 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.410678239 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.406482948 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.412135796 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.410311924 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.409740154 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.416347075 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.412582319 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.408566281 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.415433388 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.432480289 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.407826263 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.411191989 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.413942549 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.410188367 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.407752522 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.417748789 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.411638922 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.411625558 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.40982412 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.409163985 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.412606513 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.41616074 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.416768398 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.407492964 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.412453476 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.409914905 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.412475732 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.407894766 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.411506819 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.4106613 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.412704809 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.414280732 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.411364426 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.408023338 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.413885431 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.410183157 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.41281298 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.411015297 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.417136405 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.414993324 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.414480751 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.41430571 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.410170032 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.414673465 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.411192471 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.413017272 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.409834165 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.423309442 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.427943823 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.41596718 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.4151771 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.413180215 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.41546496 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.413921312 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.412108503 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.411399251 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.411054183 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.410780578 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.410818472 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.41635382 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.410990392 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.415003044 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.41481244 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.413938253 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.416544629 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.415630673 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.41137845 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.414547971 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.41498008 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.41626914 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.411302174 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.416294373 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.41254391 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.41482335 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.414893421 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.412334833 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.420339298 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.416611211 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.416109311 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.41368276 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.411915025 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.412780726 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.416180914 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.416618453 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.414930603 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.421400636 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.415115139 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.419276078 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.414181284 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.42343903 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.419359957 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.417615158 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.422981484 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.415942678 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.411106269 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.412956896 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.41559918 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.421236196 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.422868139 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.413352522 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.419975581 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.416983711 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.416190448 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.415250575 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.418433667 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.416898174 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.415428021 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.42278218 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.441079182 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.417341266 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.416251404 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.420105682 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.415466541 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.417385881 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.41114437 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.416596778 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.418119123 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.413374431 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.414065725 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.414465056 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.418106017 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.41447991 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.417290866 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.4189612 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.416069147 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.423785021 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.42069762 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.420470604 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.417166143 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.422790451 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.422859357 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.422448197 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.422442676 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.415635862 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.41941632 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.418734427 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.416621102 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.416099693 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.415884414 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.420105103 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.414015807 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.423527233 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.41727745 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.417692493 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.418039477 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.421634977 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.413902086 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.421824499 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.432228476 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.415877449 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.422996712 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.417734134 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.414614839 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.420429483 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.418794463 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.413863969 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.41796148 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.423007113 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.424801552 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.415365985 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.419192708 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.416814395 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.421040604 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.420391643 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.418875551 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.420721535 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.420214122 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.416651428 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.418357433 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.419572252 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.423738308 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.417008167 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.418137249 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.415580016 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.426966421 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.424797244 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.417076981 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.421032877 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.421222327 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.415339841 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.41839917 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.421635102 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.418437585 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.422759583 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.417160168 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.422207141 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.422996422 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.420572462 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.419221894 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.42148851 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.417643803 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.418500847 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.421313898 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.419746395 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.420758147 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.416993977 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.421938963 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.417175813 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.415859367 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.422438305 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.41758691 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.423377973 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.418502397 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.424148563 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.419081535 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.422105946 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.420442987 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.422032907 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.417268108 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.417248519 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.427359245 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.423745626 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.427209514 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.424000682 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.423824871 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.418321739 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.421138808 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.426569779 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.418754109 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.42029953 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.423632591 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.4199002 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.420944709 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.422061951 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.425001687 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.429298169 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.425062804 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.419521859 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.434016946 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.455694017 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.426676877 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.420939368 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.424113071 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.421767196 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.428419781 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.425055709 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.419523837 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.431943667 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.429459529 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.426364647 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.42268741 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.423207474 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.421683491 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.427953503 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.424971526 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.422215136 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.427318641 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.422617041 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.427157375 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.423584678 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.424209231 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.418844311 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.422774529 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.424041304 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.427894399 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.424956684 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.424663022 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.423689181 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.422704575 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.427363149 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.424228009 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.426612586 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.426550113 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.420164243 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.42624847 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.422470016 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.428013384 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.425579008 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.423472135 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.428307084 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.425619626 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.426578337 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.430250053 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.43289776 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.426936008 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.424014477 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.424324951 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.429012589 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.429320895 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.425952271 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.423782743 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.425828708 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.428736716 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.425850776 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.426602546 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.42510624 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.440141519 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.455714602 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.425522959 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.424763897 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.430630185 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.429806007 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.427753646 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.428676285 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.426990081 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.429326724 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.4345521 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.426264947 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.448852858 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.45160297 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.425560294 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.43149199 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.426170636 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.429107027 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.428688742 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.431893772 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.428619139 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.428960412 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.440937449 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.432625447 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.431830771 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.449462807 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.432759037 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.427681568 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.431901145 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.424463964 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.429887147 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.427879396 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.429303177 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.428262519 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.427791329 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.42730906 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.426112272 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.43087552 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.429167886 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.433065158 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.42779119 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.424565992 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.425641935 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.430421313 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.429270251 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.430815027 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.429402731 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.428865137 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.427758369 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.424152946 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.440917896 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.442427322 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.431116804 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.427902137 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.428884656 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.430674028 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.431455716 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.433949773 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.43716429 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.429097572 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.429917257 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.428729403 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.433069891 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.432670793 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.426870219 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.426324967 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.427631355 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.431604599 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.440934023 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.443636167 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.4337899 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.430203433 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.433393372 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.432879804 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.42840502 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.431955513 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.429971407 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.428225279 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.430487383 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.434270508 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.432984581 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.430091145 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.429117686 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.438684927 seconds)
  done (took 845.099578944 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.431543401 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.431574993 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.431201054 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.433581053 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.431514097 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.43103654 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.430753868 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.431596426 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.432049904 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.431539978 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.433286046 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.43074202 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.43199033 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.431656294 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.431962483 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.432020984 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.43420805 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.433729293 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.431288358 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.431193668 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.433219652 seconds)
  done (took 31.407055686 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.432935184 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.431669491 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.432066433 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.43305135 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.432712636 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.431971321 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.433790321 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.433366361 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.432862443 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.431529991 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.433437059 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.433115185 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.433001966 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.433434622 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.434300134 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.433705315 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.434831394 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.434682569 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.434607835 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.433744017 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.433063152 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.435137797 seconds)
  done (took 32.86968594 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.433267419 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.432893215 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.431372166 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.438535988 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.434607864 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.435220317 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.433725427 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.433094766 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.436164217 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.431551726 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.431588893 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.433387887 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.437763882 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.442412706 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.435367511 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.437261701 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.435602355 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.433535114 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.435316112 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.434278424 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.440046595 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.440441328 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.435018809 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.430383127 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.436103457 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.435947374 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.434486753 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.437828921 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.431597982 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.440206706 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.436216739 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.430948678 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.437284551 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.433494903 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.433001403 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.439633048 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.435075331 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.436455357 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.437029658 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.440586263 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.452927177 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.435773833 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.440772365 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.441218063 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.439149033 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.435888517 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.442619153 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.438229008 seconds)
  done (took 70.283830149 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 2.067646691 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 2.097499109 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 2.085794821 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 2.104524833 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 2.091955294 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 2.09741566 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 2.086487881 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 2.086607329 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 2.081885831 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 2.077498666 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 2.087307088 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 2.078625596 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 2.080049755 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 2.083101967 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 2.097431869 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 2.081668552 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 2.086159671 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 2.078477826 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 2.076565302 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 2.079147754 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 2.081351994 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 2.088168705 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 2.08710989 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 2.083860917 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 2.090732945 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 2.09878681 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 2.090589799 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 2.093131474 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 2.085874596 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 2.083473989 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 2.095428944 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 2.088451721 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 2.090023664 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 2.083012668 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 2.079603192 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 2.089056495 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 2.104818836 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 2.093628863 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 2.098234106 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 2.079875897 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 2.086381346 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 2.098412935 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 2.08649118 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 2.08946493 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 2.083738782 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 2.078002508 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 2.082325443 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 2.09034533 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 2.081304735 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 2.093981343 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 2.097370465 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 2.084524591 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 2.097347907 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 2.079363968 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 2.089204883 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 2.086796261 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 2.08472444 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 2.092673452 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 2.106981011 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 2.08845134 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 2.092857989 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 2.090866961 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 2.083407397 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 2.092886662 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 2.105495235 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 2.088755979 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 2.090666064 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 2.095896596 seconds)
  done (took 143.352727144 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.440931106 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.441986406 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.441888192 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.441262568 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.440810914 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.440142629 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.441343789 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.440297539 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.441389552 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.441661403 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.442381876 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.443022365 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.440700534 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.442590433 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.443290865 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.441776304 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.443511341 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.442429335 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.443663828 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.442458358 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.440984568 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.442326286 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.442812849 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.442027475 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.442461468 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.442058605 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.442599951 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.440510327 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.442310899 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.440733171 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.442005621 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.442127039 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.442772144 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.441310728 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.443159606 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.442589516 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.442651973 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.442691544 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.442522059 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.442240892 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.44235522 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.443138872 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.442808206 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.443319222 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.444396991 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.443181265 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.442510107 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.443000056 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.445285703 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.969513312 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.443208045 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.442613126 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.442783461 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.442584674 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.442901751 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.444634228 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.4441767 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.444112198 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.445082837 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.443835784 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.44499722 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.44588494 seconds)
  done (took 91.314225534 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.445553978 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.444255613 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.446082861 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.445879192 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.445510177 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.44586588 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.446555837 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.444378408 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.44629771 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.445564456 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.447207381 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.445534178 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.446602889 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.447129716 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.445965797 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.447520024 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.448300453 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.446651872 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.445890144 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.447717768 seconds)
  done (took 30.270714286 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.447353176 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.446773402 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.446051055 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.44627855 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.445895715 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.446181284 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.446654625 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.447277782 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.445688026 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.44846629 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.446415786 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.447274991 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.448111779 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.446543207 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.446126219 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.446917566 seconds)
  done (took 24.496561189 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.447730766 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.448033103 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.447425577 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.446816022 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.446655948 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.44768299 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.448110885 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.447837726 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.447846666 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.448383173 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.447939215 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.448254978 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.447130196 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.4471523 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.448557198 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.4487131 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.448324666 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.448548684 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.448017686 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.449138494 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.448668381 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.449014819 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.449341952 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.447823157 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.449832039 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.448377781 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.448291281 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.44958216 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.450032455 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.448895859 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.450381761 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.450927671 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.448769426 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.448248375 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.449080078 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.449508769 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.449840534 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.448264005 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.450783441 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.448796534 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.452197442 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.451976615 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.448326572 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.451075651 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.449952937 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.450139954 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.45040031 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.449112288 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.450512088 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.450948209 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.450088293 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.448790315 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.450649496 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.450845747 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.450196888 seconds)
  done (took 81.049759106 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.451854399 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.451092814 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.448288113 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.449692057 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.450163979 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.450925281 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.450999735 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.45425254 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.450250206 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.451792506 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.450773928 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.451386739 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.450272202 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.451826842 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.451646548 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.451690891 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.451122926 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.450909268 seconds)
  done (took 27.470454185 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.451677385 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.451229769 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.451012127 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.450905873 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.451861807 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.45205281 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.451105242 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.450704021 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.451773312 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.452680146 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.451580404 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.451824189 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.452314422 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.452912664 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.453783109 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.453553013 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.453292168 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.452696768 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.452856176 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.452755342 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.452845094 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.452663676 seconds)
  done (took 33.300738146 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.445588067 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.445413866 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.448557908 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.462292159 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.464084538 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.449413565 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.447152937 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.447436727 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.465038342 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.48411334 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.481512385 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.463974226 seconds)
  done (took 18.857444584 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.452983357 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.453780562 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.454402643 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.454243068 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.454373842 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.453487598 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.456536552 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.453992971 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.454755077 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.453012249 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.455517277 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.45281675 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.455585785 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.454213819 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.453667441 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.453119968 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.45407789 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.454497573 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.454673118 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.454650881 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.453639387 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.45437769 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.453719117 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.454612221 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.455560625 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.456408093 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.454968003 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.456079317 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.456802218 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.455444063 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.456446859 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.454593534 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.456214093 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.45644653 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.455513237 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.455957292 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.455263641 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.456266517 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.454858628 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.456218546 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.455755535 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.455543007 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.455585219 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.455788826 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.455271489 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.454952319 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.456292817 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.455540791 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.457003557 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.455798378 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.455344166 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.455966205 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.456157038 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.456844347 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.455606679 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.457833953 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.456934235 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.458265884 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.456807025 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.455449109 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.457490086 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.456543737 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.455915768 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.458025505 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.457637275 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.458195051 seconds)
  done (took 97.416860482 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.458530816 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.457361932 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.458776207 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.458041428 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.457360078 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.456845124 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.458784108 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.457244634 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.456783284 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.459842032 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.458268537 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.457288627 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.457932287 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.457232355 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.458161382 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.457718081 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.45736569 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.45737991 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.457925699 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.45703943 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.459170618 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.457758062 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.458558054 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.457153423 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.459082703 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.456583755 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.458954966 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.457486179 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.460597506 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.459096515 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.459178431 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.459119004 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.459770436 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.458728206 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.459040577 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.457806097 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.459010519 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.459565989 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.457674226 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.460245658 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.460182337 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.4592341 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.458926851 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.458954169 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.461621462 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.458289697 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.458299559 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.458957784 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.46131219 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.460650345 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.460306053 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.460383026 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.460342287 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.459258448 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.458814572 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.460078199 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.459170026 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.459633923 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.458728713 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.459184266 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.459653157 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.461344458 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.462292744 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.46120991 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.46109762 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.461546984 seconds)
  done (took 97.650897573 seconds)
done (took 2024.012031408 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.629408755 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.577509852 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.455519517 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.468186172 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.456454669 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.480198347 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.468974869 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.4564821 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.4551348 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.454631751 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.455858698 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.682554433 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.452108713 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.455446524 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.45577229 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.553742871 seconds)
  done (took 29.318517297 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.490740638 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.46537136 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.597608926 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.485701972 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.490537691 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.697016706 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.526790566 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.462798469 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.673758883 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.489158693 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.466200437 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.487306954 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.462471791 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.460129534 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.482710783 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.696785146 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.761391404 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.470014016 seconds)
  done (took 32.029742203 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.022071949 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.471151819 seconds)
  done (took 5.855359116 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.48462989 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.460217256 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.462139511 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.460407942 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.453868426 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.452933184 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.458252169 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.461862741 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.470160585 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.614806454 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.46813851 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.4760962 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.483548067 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.462429754 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.467183462 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.510323693 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.626837901 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.466323991 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.464992312 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.467192735 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.463636558 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.575121039 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.514579639 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.465381049 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.611924225 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.469888325 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.468430074 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.470700008 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.602913598 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.467353762 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.460526148 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.462052193 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.463564579 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.470198623 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.966509699 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.476113123 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.471050457 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.491774523 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.466556649 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.625318061 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.463093263 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.467506139 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.459879654 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.952343778 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.613448613 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.598128512 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.486105691 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.465813075 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.46476632 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.534562746 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.464222997 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.465542356 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.527541401 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.324537704 seconds)
  done (took 92.798303172 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.502923261 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.455127071 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.639074896 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.478852378 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.45882364 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.455478145 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.456255694 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.80370669 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.482640241 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.456061487 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.812602096 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.100399328 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.474740591 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.512443786 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.326026203 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.535690704 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.456307084 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.475539449 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.457105003 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.456863368 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.069393404 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.460855661 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.482442404 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.564589139 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.500275328 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.036763304 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.45612459 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.476227815 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.477285566 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.457431711 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.050308231 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.477677088 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.545519139 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.459810757 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.758542572 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.902177097 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.861325121 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.461360522 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.506722789 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.463046843 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.482233795 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.034663762 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.883885075 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.459054265 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.457568663 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.028739882 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.456957464 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.458963592 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.462194355 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.714974253 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.458409782 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.460204639 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.477251716 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.464517649 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.457768378 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.549992377 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.547327157 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.038723336 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.459157242 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.458071 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.481927338 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.45911734 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.468581291 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.460140094 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.480539835 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.884511398 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.6819905 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.459432882 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.881304682 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.046605318 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.479106159 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.120116277 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.48157441 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.483176044 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.662661626 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.459342738 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.479511754 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.051128489 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.467582067 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.459853342 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.864097129 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.46379635 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.814975354 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.499197098 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.460928199 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.079038772 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.472051418 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.47634312 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.468942286 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.460121322 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.487693456 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.499265574 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.769873936 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.491131555 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.461369945 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.460709391 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.505564349 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.472458589 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.460471078 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.467260801 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.119188044 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.481523449 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.461208412 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.462902012 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.461697857 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.464368365 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.462309617 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.46336251 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.747468691 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.461554554 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.491425478 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.462636368 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.471491194 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.469178337 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.583826322 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.469468159 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.850727623 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.465713522 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.461009939 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.486785644 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.461688516 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.502578453 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.462320817 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.469285359 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.375300986 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.732668363 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.482893194 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.483788401 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.463747 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.463206818 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.462692188 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.465131987 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.508011836 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.468697166 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.331038966 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.491939909 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.47142473 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.463119449 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.46462003 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.462604543 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.489640129 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.465417163 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.772122405 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.772684118 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.687647327 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.475161722 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.475009604 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.298163067 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.488199939 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.649572982 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.483951461 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.465740847 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.720812559 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.673311936 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.466055961 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.468131964 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.465275188 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.7321605 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.463371256 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.790389211 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.082869808 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.484149919 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.469535626 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.331525176 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.227553788 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.465027961 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.466537037 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.822286965 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.48524789 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.464950984 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.464480055 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.464527587 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.485887187 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.486903807 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.476079849 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.465219224 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.464345121 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.789745421 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.660154396 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.487294699 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.475572412 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.039194301 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.484686485 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.464310121 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.47395306 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.477498135 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.466900801 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.539893462 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.469140008 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.488022289 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.468376748 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.469715933 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.061077719 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.466510419 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.467973307 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.662158085 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.250996179 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.492295114 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.467755882 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.487121716 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.371611885 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.069145216 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.511544205 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.841058434 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.474567863 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.512300086 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.467896387 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.472546691 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.065625225 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.46852072 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.486787133 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.203839984 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.488328342 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.893790598 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.467555886 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.466941608 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.155750835 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.48896977 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.466191898 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.469768952 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.479535309 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.77628698 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.469592956 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.49041036 seconds)
  done (took 530.903174929 seconds)
done (took 692.268070137 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.47003375 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.473412177 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.466426365 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.475764333 seconds)
  done (took 11.262265167 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.485867231 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.477444711 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.482084608 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.477071857 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.484668174 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.478059447 seconds)
  done (took 10.263210812 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.469283954 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.477027735 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.476076419 seconds)
  done (took 8.803261691 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.71720911 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.494402332 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.864583339 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.504703104 seconds)
  done (took 9.960668739 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.481359157 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.48258773 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.482254197 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.484381926 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.4854216 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.487245654 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.485001941 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.485579032 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.485423619 seconds)
  done (took 14.737019234 seconds)
done (took 56.404514337 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("map", identity, Bool, true)...
    done (took 1.536879063 seconds)
    (2/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.582593959 seconds)
    (3/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.280499569 seconds)
    (4/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.608104442 seconds)
    (5/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.501305893 seconds)
    (6/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.661016614 seconds)
    (7/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.555126204 seconds)
    (8/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.504839602 seconds)
    (9/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.131538622 seconds)
    (10/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.468667271 seconds)
    (11/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.714249261 seconds)
    (12/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.511783111 seconds)
    (13/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.47756617 seconds)
    (14/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.512127604 seconds)
    (15/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.561067599 seconds)
    (16/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.47272554 seconds)
    (17/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.466537938 seconds)
    (18/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.518874621 seconds)
    (19/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.515801677 seconds)
    (20/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.466100727 seconds)
    (21/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.615825058 seconds)
    (22/224) benchmarking ("map", identity, BigInt, true)...
    done (took 1.677762019 seconds)
    (23/224) benchmarking ("map", abs, Bool, false)...
    done (took 1.513462074 seconds)
    (24/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.466462318 seconds)
    (25/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.471219266 seconds)
    (26/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.529210503 seconds)
    (27/224) benchmarking ("map", abs, Int8, false)...
    done (took 1.512817106 seconds)
    (28/224) benchmarking ("perf_sum", Bool, true)...
    done (took 1.513953021 seconds)
    (29/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.475500404 seconds)
    (30/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.507300603 seconds)
    (31/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.491412243 seconds)
    (32/224) benchmarking ("map", identity, Int8, false)...
    done (took 1.509219699 seconds)
    (33/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.590455735 seconds)
    (34/224) benchmarking ("map", abs, Int64, false)...
    done (took 1.572329466 seconds)
    (35/224) benchmarking ("map", identity, Bool, false)...
    done (took 1.511645531 seconds)
    (36/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.508167593 seconds)
    (37/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.465465468 seconds)
    (38/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.592166745 seconds)
    (39/224) benchmarking ("map", abs, Float32, false)...
    done (took 1.534117788 seconds)
    (40/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.575093901 seconds)
    (41/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.485748146 seconds)
    (42/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.503410018 seconds)
    (43/224) benchmarking ("map", abs, BigInt, true)...
    done (took 2.503554036 seconds)
    (44/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.488735305 seconds)
    (45/224) benchmarking ("perf_countequals", "Int8")...
    done (took 1.554141388 seconds)
    (46/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.47477061 seconds)
    (47/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.469995792 seconds)
    (48/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.499791726 seconds)
    (49/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.560053032 seconds)
    (50/224) benchmarking ("perf_sum", Bool, false)...
    done (took 1.511515429 seconds)
    (51/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.631261905 seconds)
    (52/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.639281389 seconds)
    (53/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.469298354 seconds)
    (54/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.589224683 seconds)
    (55/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.469484557 seconds)
    (56/224) benchmarking ("map", abs, Float64, false)...
    done (took 1.572722504 seconds)
    (57/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.609875791 seconds)
    (58/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.521951011 seconds)
    (59/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.673396313 seconds)
    (60/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.544186803 seconds)
    (61/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.677362303 seconds)
    (62/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.540144857 seconds)
    (63/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.653504726 seconds)
    (64/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.470359736 seconds)
    (65/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.651433628 seconds)
    (66/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.236261912 seconds)
    (67/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.470570229 seconds)
    (68/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.513889066 seconds)
    (69/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.716905577 seconds)
    (70/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.263138043 seconds)
    (71/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.616830317 seconds)
    (72/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.602233653 seconds)
    (73/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.467549918 seconds)
    (74/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.639817276 seconds)
    (75/224) benchmarking ("map", identity, Int8, true)...
    done (took 1.542242899 seconds)
    (76/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.170833498 seconds)
    (77/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.174833899 seconds)
    (78/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.253082982 seconds)
    (79/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.598330869 seconds)
    (80/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.500915513 seconds)
    (81/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.767733837 seconds)
    (82/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.470529869 seconds)
    (83/224) benchmarking ("map", identity, Float64, true)...
    done (took 1.667754399 seconds)
    (84/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.708624308 seconds)
    (85/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.469833637 seconds)
    (86/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.198451081 seconds)
    (87/224) benchmarking ("perf_countequals", "Float32")...
    done (took 1.557005163 seconds)
    (88/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.641017564 seconds)
    (89/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.649219 seconds)
    (90/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.648398 seconds)
    (91/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.71066768 seconds)
    (92/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.492822815 seconds)
    (93/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.673741615 seconds)
    (94/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.716609746 seconds)
    (95/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.469671322 seconds)
    (96/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.29509224 seconds)
    (97/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.22483917 seconds)
    (98/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.473628714 seconds)
    (99/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.530924018 seconds)
    (100/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.470035286 seconds)
    (101/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.339967261 seconds)
    (102/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.601501035 seconds)
    (103/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.700719833 seconds)
    (104/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.469924627 seconds)
    (105/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.504860541 seconds)
    (106/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.474811486 seconds)
    (107/224) benchmarking ("perf_countequals", "Int64")...
    done (took 1.587621995 seconds)
    (108/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.62803717 seconds)
    (109/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.470605126 seconds)
    (110/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.600203676 seconds)
    (111/224) benchmarking ("map", identity, Float64, false)...
    done (took 1.573103219 seconds)
    (112/224) benchmarking ("perf_countequals", "Bool")...
    done (took 1.573674595 seconds)
    (113/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.137184334 seconds)
    (114/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.42014182 seconds)
    (115/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.167086952 seconds)
    (116/224) benchmarking ("map", identity, BigInt, false)...
    done (took 1.588239594 seconds)
    (117/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.626457429 seconds)
    (118/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.509537861 seconds)
    (119/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.634055649 seconds)
    (120/224) benchmarking ("map", abs, Float64, true)...
    done (took 1.663135277 seconds)
    (121/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.522224141 seconds)
    (122/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.641638217 seconds)
    (123/224) benchmarking ("perf_sum", Int64, true)...
    done (took 1.517589382 seconds)
    (124/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.576336923 seconds)
    (125/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.528102903 seconds)
    (126/224) benchmarking ("map", abs, Int8, true)...
    done (took 1.546937243 seconds)
    (127/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.692123572 seconds)
    (128/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.428950207 seconds)
    (129/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.494787778 seconds)
    (130/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.567768573 seconds)
    (131/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.612093696 seconds)
    (132/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.858683039 seconds)
    (133/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.499869119 seconds)
    (134/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.621641914 seconds)
    (135/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.862746492 seconds)
    (136/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.57778392 seconds)
    (137/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.472770471 seconds)
    (138/224) benchmarking ("map", identity, Float32, true)...
    done (took 1.638878708 seconds)
    (139/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.533942913 seconds)
    (140/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.640077759 seconds)
    (141/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.510726437 seconds)
    (142/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.500192536 seconds)
    (143/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.4720809 seconds)
    (144/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.660369362 seconds)
    (145/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.538002468 seconds)
    (146/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.722753263 seconds)
    (147/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.586767192 seconds)
    (148/224) benchmarking ("map", abs, BigInt, false)...
    done (took 2.474908535 seconds)
    (149/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.61648543 seconds)
    (150/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.738753729 seconds)
    (151/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.58178704 seconds)
    (152/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.475181635 seconds)
    (153/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.570960791 seconds)
    (154/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.675572478 seconds)
    (155/224) benchmarking ("perf_sum", Float64, true)...
    done (took 1.52900715 seconds)
    (156/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.242017568 seconds)
    (157/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.645124277 seconds)
    (158/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.520360257 seconds)
    (159/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.294866144 seconds)
    (160/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.635009633 seconds)
    (161/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.513260587 seconds)
    (162/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.614039598 seconds)
    (163/224) benchmarking ("perf_countequals", "Float64")...
    done (took 1.559384975 seconds)
    (164/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.764801043 seconds)
    (165/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.472760252 seconds)
    (166/224) benchmarking ("map", abs, Int64, true)...
    done (took 1.674689624 seconds)
    (167/224) benchmarking ("perf_sum", Float32, false)...
    done (took 1.545575374 seconds)
    (168/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.267358522 seconds)
    (169/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.503442158 seconds)
    (170/224) benchmarking ("perf_sum", Int64, false)...
    done (took 1.551913227 seconds)
    (171/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.537631633 seconds)
    (172/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.642545422 seconds)
    (173/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.631495365 seconds)
    (174/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.659299943 seconds)
    (175/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.51888371 seconds)
    (176/224) benchmarking ("map", identity, Int64, false)...
    done (took 1.577018993 seconds)
    (177/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.562319821 seconds)
    (178/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.710783546 seconds)
    (179/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.583226733 seconds)
    (180/224) benchmarking ("map", identity, Float32, false)...
    done (took 1.542178298 seconds)
    (181/224) benchmarking ("perf_sum", Float32, true)...
    done (took 1.548944499 seconds)
    (182/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.510161523 seconds)
    (183/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.483978707 seconds)
    (184/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.812733225 seconds)
    (185/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.482275083 seconds)
    (186/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.486416723 seconds)
    (187/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.599672687 seconds)
    (188/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.662901632 seconds)
    (189/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.510547462 seconds)
    (190/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.506990118 seconds)
    (191/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.291379887 seconds)
    (192/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.525212551 seconds)
    (193/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.545845106 seconds)
    (194/224) benchmarking ("map", abs, Float32, true)...
    done (took 1.612727483 seconds)
    (195/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.463197513 seconds)
    (196/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.524744349 seconds)
    (197/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.522155691 seconds)
    (198/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.713654097 seconds)
    (199/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.613446038 seconds)
    (200/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.217763796 seconds)
    (201/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.283962818 seconds)
    (202/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.203371562 seconds)
    (203/224) benchmarking ("perf_sum", Int8, false)...
    done (took 1.519187158 seconds)
    (204/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.48695604 seconds)
    (205/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.73029454 seconds)
    (206/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.523776203 seconds)
    (207/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.162509038 seconds)
    (208/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.584674496 seconds)
    (209/224) benchmarking ("perf_sum", Float64, false)...
    done (took 1.523357184 seconds)
    (210/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.329803402 seconds)
    (211/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.694768389 seconds)
    (212/224) benchmarking ("map", abs, Bool, true)...
    done (took 1.552029938 seconds)
    (213/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.480011992 seconds)
    (214/224) benchmarking ("map", identity, Int64, true)...
    done (took 1.676621277 seconds)
    (215/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.482267303 seconds)
    (216/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.470400283 seconds)
    (217/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.552997064 seconds)
    (218/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.605052894 seconds)
    (219/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.478838423 seconds)
    (220/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.51835608 seconds)
    (221/224) benchmarking ("perf_sum", Int8, true)...
    done (took 1.52344063 seconds)
    (222/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.598000433 seconds)
    (223/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.748802135 seconds)
    (224/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.518974737 seconds)
  done (took 422.861019188 seconds)
done (took 424.242609691 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.551123197 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.681007462 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.500705036 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.501491404 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.544455515 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.492210046 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.561692216 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.507224516 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.5088598 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.507378933 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.489414094 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.53001584 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.509207818 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.53622562 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.612598361 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.505259245 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.497693665 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.504004134 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.546292498 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.565636499 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.541387007 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.541811216 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.517395376 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.497321774 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.546101001 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.547062618 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.504550762 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.489457471 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.508667362 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.548194117 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.499009604 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.505990091 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.55466384 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.555820881 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.542650513 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.505993125 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.540529648 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.681137695 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.542229889 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.539084158 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.509823069 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.556794026 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.512202538 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.512659537 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.555042112 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.519232271 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.546602741 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.622472255 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.506915437 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.504639719 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.547265899 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.566194045 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.510532941 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.502171047 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.506054567 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.625618668 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.507278721 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.547884651 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.5075201 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.54380675 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.614184581 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.548020008 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.567772574 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.548145145 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.507907769 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.513545536 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.506955197 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.568247536 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.506648522 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.544542431 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.546954346 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.512211397 seconds)
done (took 119.957947425 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.621687643 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.498105021 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.639126815 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.502484613 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.664925744 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.647223268 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.502667495 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.50316359 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.500304543 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.310777302 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.502930669 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.501507375 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.497780378 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.502550823 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.625327047 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.50408996 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.501659598 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.209454507 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.503935095 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.637661722 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.497287807 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.502030417 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.503071698 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.328321557 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.501836257 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.492609917 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.63621322 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.503392826 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.230778171 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.492291249 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.496778303 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.23045512 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.639275777 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.52500515 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.512925006 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.513016188 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.666424347 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.52674888 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.619923991 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.620665352 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.641003831 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.532129955 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.492927074 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.500022391 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.505843724 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.503835113 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.50335361 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.533185093 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.49849272 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.503887637 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.213913812 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.516877028 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.514591095 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.504872436 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.504672568 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.524293191 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.507347799 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.505128654 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.639452725 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.506064203 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.62469977 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.330740795 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.312095489 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.504141829 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.497558599 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.50542451 seconds)
  done (took 119.742221088 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.567094615 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.577453184 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.623660028 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.522703289 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.552197203 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.62718758 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.521831562 seconds)
  done (took 12.389702059 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.506163699 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.506265088 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.552238159 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.551038241 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.50600924 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.658170244 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.506488356 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.513709925 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.508054995 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.556603819 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.507974009 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.506431177 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.515086254 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.499995946 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.550043729 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.515001561 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.617782646 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.50346031 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.507942555 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.653552354 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.506745153 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.515070637 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.553215933 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.514338973 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.509718463 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.508937086 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.290979454 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.506159745 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.507981749 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.507615084 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.508126243 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.556473102 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.508126718 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.501511961 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.507581133 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.619679578 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.506412151 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.509780482 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.507711842 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.504498692 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.508970845 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.508440519 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.508396197 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.507680281 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.509825912 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.528006125 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.508065307 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.509452394 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.508395312 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.509370545 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.554479578 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.508750332 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.509049537 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.508855367 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.560245111 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.51847231 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.508665029 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.510576583 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.509279714 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.509796943 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.656516415 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.55451268 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.515782165 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.554298355 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.509386305 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.510424328 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.512261864 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.510845135 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.598059276 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.51128575 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.555367125 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.510095369 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.688756813 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.531167537 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.512107486 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.510137518 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.510509082 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.510453185 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.503274737 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.511513563 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.510858861 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.507114713 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.512654835 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.511670802 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.511928058 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.670975498 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.616892847 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.51173906 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.518737403 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.513955896 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.511109093 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.561347929 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.512646745 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.512624329 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.559043538 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.622013356 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.56175564 seconds)
  done (took 154.604308754 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.518931917 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.519365543 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.514363185 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.536111873 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.509951267 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.507541301 seconds)
  done (took 10.510453297 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.508184849 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.515605131 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.512650764 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.511875723 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.513358732 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.513064704 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.512230492 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.509499401 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.515386993 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.513601846 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.51321223 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.514972854 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.514777934 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.512443537 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.514437958 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.514047241 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.513637749 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.513802329 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.513290986 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.513193339 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.507760643 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.515459839 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.513356003 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.512793632 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.52026439 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.514391292 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.530226554 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.515142471 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.513951251 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.517815779 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.538822191 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.514948932 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.510905827 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.514952512 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.51965422 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.510660195 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.519350525 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.515482334 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.51656897 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.515305259 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.516885471 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.515821177 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.514344545 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.517300828 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.512906764 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.514614022 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.520372498 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.530588359 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.515656669 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.518431245 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.517877952 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.516148829 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.517403088 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.517158635 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.513573101 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.536717047 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.521281491 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.516251494 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.515554755 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.515060004 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.51999264 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.51802884 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.512106904 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.519228929 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.516817336 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.51776049 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.513270775 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.521019158 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.517496807 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.516556156 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.519385502 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.517173349 seconds)
  done (took 111.581485412 seconds)
done (took 410.224864375 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.419270667 seconds)
  done (took 4.828548807 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.751510833 seconds)
  done (took 4.163378092 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 25.669812927 seconds)
  done (took 27.087738749 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.592350336 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.622534067 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.524171821 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.509549222 seconds)
  done (took 11.65800645 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.978842334 seconds)
  done (took 4.388016801 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.511918327 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.529849281 seconds)
  done (took 6.454081687 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.907356333 seconds)
  done (took 4.315877896 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.778407397 seconds)
  done (took 4.197277174 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.537389938 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.512977256 seconds)
  done (took 6.468249225 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.497248468 seconds)
  done (took 3.907314524 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 35.508078376 seconds)
  done (took 36.921059312 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.522385189 seconds)
  done (took 3.935226603 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.532206828 seconds)
  done (took 3.942280333 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.872122913 seconds)
  done (took 7.282340709 seconds)
done (took 130.960616247 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.507168547 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.509379299 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.508552388 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.508125302 seconds)
  done (took 11.445260736 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.570595325 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.571137003 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.572070428 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.573156883 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.570860553 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.571392996 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.544298319 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.543530449 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.570813725 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.569825107 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.569987646 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.571156181 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.570860384 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.543172577 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.569929477 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.578321288 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.57059487 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.571765746 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.545302531 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.572941855 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.520202476 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.571671284 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.57274073 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.521264774 seconds)
  done (took 38.919920149 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.033153624 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.592317559 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.669996837 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.566370812 seconds)
  done (took 8.273073652 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.595305241 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.599752711 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.610734061 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.649636923 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.66202002 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.610043699 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.546623093 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.541600488 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.527739157 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.598040004 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.64836074 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.58957572 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.677770856 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.520787645 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.72792947 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.52199279 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.521050945 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.598734473 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.650642534 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.664404037 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.521546839 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.597600504 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.598658556 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.593119277 seconds)
  done (took 39.786893351 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.53135661 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.536618549 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.523284189 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.538867397 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.52342602 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.524049529 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.524995284 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.529473631 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.522369617 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.523393467 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.524018779 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.535948867 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.526145191 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.5232175 seconds)
    (15/22) benchmarking ("StatsBase.var", "Float64")...
    done (took 1.526185212 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.531230608 seconds)
    (17/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.524429035 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.528877214 seconds)
    (19/22) benchmarking ("StatsBase.var", "Int64")...
    done (took 1.530954349 seconds)
    (20/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.528126244 seconds)
    (21/22) benchmarking ("sum", "Float64")...
    done (took 1.524242124 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.531072314 seconds)
  done (took 35.028055162 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.512771118 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.510779329 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.863156916 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.770635276 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.513570387 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.511059972 seconds)
  done (took 15.096108443 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.607372981 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.790913887 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.518607309 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.974713895 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.07412373 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.522826014 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.520001167 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.817874277 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.233231631 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.213500619 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.593593871 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.604002777 seconds)
  done (took 22.886983189 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.52347097 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.513166781 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.529171823 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.530918863 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.587052997 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.544555689 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.526700261 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.513848383 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.591639366 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.611238898 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.546247458 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.590017277 seconds)
  done (took 24.0266431 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.614572448 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.52002746 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.519285605 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.546240125 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.522890118 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.364668558 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.554771517 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.314294083 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.548287752 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.795724733 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.518097405 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.617195694 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.774905459 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.53396618 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.523500968 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.518806771 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.750582759 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.107592551 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.523964748 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.530171384 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.55481121 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.525033828 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.530369235 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.781480979 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.5245925 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.520427531 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.784617937 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.519498508 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.86255835 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.536337286 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.532515016 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.521883476 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.797917895 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.255216766 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.643511727 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.779432932 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.527368311 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.522406787 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.535606487 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.531030438 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.540381887 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.522607918 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.533053631 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.524520391 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.520940845 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.524892543 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.311337742 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.554703555 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.521349989 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.524181525 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.840727335 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.619312245 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.526841552 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.522361891 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.560351707 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.525945385 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.528780071 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.658685234 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.130029977 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.529191984 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.530629741 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.528147784 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.535948011 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.536542702 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.23409754 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.532720714 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.52909369 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.529649343 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.521533337 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.532722063 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.542810119 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.523648628 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.549247348 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.52415775 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.33248379 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.525334515 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.525549759 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.173558506 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.544126553 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.527954399 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.755209771 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.522147682 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.522782305 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.522393663 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.524119933 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.375513505 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.532604187 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.510615749 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.570838378 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.344412318 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.811696346 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.548402809 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.557602584 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.74621106 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.51031655 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.52358563 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.525264369 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.525033586 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.544966175 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.309526627 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.54789918 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.531028636 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.783301321 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.735630839 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.528527277 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.530442864 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.074377278 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.564601466 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.547192976 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.532293051 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.788790817 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.2125134 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.543603479 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.525766258 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.543514872 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.526777424 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.40973769 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.545854968 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.633406831 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.527114934 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.841580369 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.476366765 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.528262597 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.592117286 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.530293657 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.527264788 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.540390523 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.52854373 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.525846116 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.78049524 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.560549302 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.541321013 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.528564714 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.526959102 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.527648761 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.536297168 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.530418075 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.756199488 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.54453472 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.809801075 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.527871764 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.529319463 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.52921496 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.751623254 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.538740691 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.871301874 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.790888897 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.534071971 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.540899926 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.542726226 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.546571156 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.633151205 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.549639397 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.537562951 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.788881183 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.53482482 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.535857703 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.544652078 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.529849724 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.53321843 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.53719827 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.530852311 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.217335106 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.506864018 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.536297649 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.418841131 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.545820091 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.599349545 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.538922033 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.793383025 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.540926137 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.52974244 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.536678671 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.531674451 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.760299544 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.539549277 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.5476555 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.612480865 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.099521091 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.24033779 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.546986663 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.53043645 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.531031903 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.530904895 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.529389684 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.53077432 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.530184579 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.795341094 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.54899177 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.541648306 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.219636768 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.533800535 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.547174826 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.539342824 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.543685475 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.539116355 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.531362612 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.528826167 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.533781399 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.545099881 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.545389452 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.676538064 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.546216071 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.529851128 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.051189679 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.538309443 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.532860375 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.532041787 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.565805918 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.546922195 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410394206 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.816447669 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.527265969 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.853368266 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.550476159 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.550574472 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.532021696 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.533816941 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.5486488 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.545860599 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.544795746 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.545180253 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.547240214 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.534557065 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.112225735 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363501532 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.172613426 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.539426886 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.552743078 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.537350026 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.331623812 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.555054014 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.533981428 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.812113815 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.365083654 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.559835605 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.103140891 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.575324413 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.459038322 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.857438901 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.770922808 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.552603957 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.541792526 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.857946509 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.7521889 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.568404639 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.548897066 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.537772605 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.521597571 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.161562699 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.557122325 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.61467913 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.326485894 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.562372187 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.538875736 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.553009145 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.562749071 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.064895423 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.562527496 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.53495244 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.554347157 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.544192466 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.42154377 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.564564392 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.53455401 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.251273404 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.553314387 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.103096853 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.563909461 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.800959997 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.552007184 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.541561402 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.533775463 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.553373958 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.79396786 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.860046986 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.542760658 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.55244441 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.177536172 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.409235388 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.546470204 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.536255366 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.43074624 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.538161625 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.893473107 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.559701652 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.557432284 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.54491848 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.537335188 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.537297609 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.537368491 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.542949236 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.51188705 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.130331996 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.539122467 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.536845697 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.562802928 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.541555336 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.795341073 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.554428016 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.225807792 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.769907503 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.535156025 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.56555597 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.545697451 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.549184546 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.527979381 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.538058012 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.53925011 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.587200492 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.76619503 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.548125284 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.525550811 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.576685995 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.756304889 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.539187823 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.544770628 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.83593993 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.54469353 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.557146247 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373773772 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.574513201 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.545064723 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.54287637 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.559098918 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.584238167 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.610645676 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.806416899 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.556938301 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.551830304 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.041580369 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.573137424 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.542074978 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.555692442 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.637563426 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.555807814 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.543109973 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.33922528 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.231561375 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383114912 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.232528928 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.864157725 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.543035631 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.549190311 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.541467026 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.703867457 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.541204836 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.816949514 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.541484697 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.544642418 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.565168381 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.555606115 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.555825636 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.754056524 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.822006386 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.54390245 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.554837058 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.544226328 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.545282358 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.55420258 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.754176916 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.137825661 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.199555918 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.545250815 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.554234092 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.335939406 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.843643057 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.541652154 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.543974953 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.542554174 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.562389931 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.557108946 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.551414564 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.556006551 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.688048119 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.864287311 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.286729077 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.576556013 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.574489944 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.062803695 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.544124857 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.820288839 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.550264807 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.812498422 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.23929856 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.369564816 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.810564983 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.614285728 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.81036681 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.546636681 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.705616768 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.546155553 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.546393789 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.54489933 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.5427676 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.544200418 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.555157711 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.249860081 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.816999647 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.551902925 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.546075066 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.575328464 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.555318314 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.767674965 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.407111513 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.77015483 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.557491679 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.553051916 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.546437053 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.253036644 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.879103759 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.551923756 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.553078873 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.841692804 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.552503707 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.57080084 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.23662999 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.545798265 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.199488196 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.520578745 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.568409335 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.548133281 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.39905843 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.255384054 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.556499773 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.141728111 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.549441943 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.549283396 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.826084912 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.555467667 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.547235251 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.852740917 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.553003174 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.547299452 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.821040295 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.253332808 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.482441777 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.565402964 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.552760159 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.5751436 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.548333046 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.626615736 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.552368224 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.550435681 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.065652734 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.576307656 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.548714946 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.56374897 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.551853323 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.547150417 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.552428719 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.548723364 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.555813044 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.557263751 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.585796123 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.554568608 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.712146483 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.181427468 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.575750645 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.227387949 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.874486127 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.802722191 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.54737949 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.538801893 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.554995255 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.548792268 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.548846562 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.549721121 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.557569276 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.208956308 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.55587463 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.56128168 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.556042745 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.549562285 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.760948002 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.565805572 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.823638132 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.553764731 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.570878842 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.535014141 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.549140904 seconds)
  done (took 1062.439352858 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.550901263 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.617230736 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.567198438 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.635799171 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.585113866 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.590049406 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.557192768 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.678413046 seconds)
  done (took 22.226190697 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.554216182 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.554483658 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.550754109 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.553589861 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.562682508 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.125199984 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.571233798 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.556217062 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.571830395 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.566787171 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.550021815 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.539705937 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.55675804 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.566558246 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.557744528 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.558704499 seconds)
  done (took 35.951852104 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.015286919 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.897554059 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.417520459 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.609260092 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.625207911 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.553545873 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 3.038421746 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.567935666 seconds)
  done (took 30.171302865 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.558848569 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.55785916 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.559964469 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.558695832 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.559819749 seconds)
  done (took 9.241698817 seconds)
done (took 1356.906046076 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.556564402 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.558824263 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.559554434 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.559417324 seconds)
  done (took 7.681720517 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.538781011 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.543303895 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.543762425 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.556832587 seconds)
  done (took 10.628885526 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.43951335 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.355114415 seconds)
  done (took 6.241573114 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.080522222 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.078535302 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.080471042 seconds)
  done (took 7.687148636 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.879591743 seconds)
  done (took 3.3269219 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.483566716 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.553715129 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.250013136 seconds)
  done (took 8.735095728 seconds)
done (took 45.748150422 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.555621524 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.801168697 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.707432368 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.566313522 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.710011321 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.707821425 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.308602175 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.547805284 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.561669948 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.557008327 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.5604112 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.710018605 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.361309959 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.802270319 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.360457317 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.896901216 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.710824349 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.568036612 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.561592238 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.56205463 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.309268214 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.548511581 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.548906717 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.549773892 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.711885558 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.697036083 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.550236498 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.897974092 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.565932903 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.552881415 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.697499678 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.550462054 seconds)
  done (took 88.74656672 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.54987513 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.551189687 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.550642017 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.57127739 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.550177123 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.550601031 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.583748911 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.566737026 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.552180315 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.550558145 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.550322953 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.550781767 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.571221654 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.57000733 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.549235212 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.570646893 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.549257111 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.571458088 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.551176096 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.555359686 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.567441622 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.555944822 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.550005288 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.581139597 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.563896645 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.551904614 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.571420914 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.550142835 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.570740285 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.551921147 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.552521264 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.570786191 seconds)
  done (took 83.354477386 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.550627233 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.568765141 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.562107811 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.559143725 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.557603432 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.56184166 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.554419004 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.553163927 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.559349072 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.558163443 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.557625616 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.558718095 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.554979427 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.562704808 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.555317219 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.551428483 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.572501363 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.555585128 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.553774339 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.575155232 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.558842979 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.551990722 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.551952096 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.552272706 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.568510359 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.551548106 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.583495595 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.554917137 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.553719844 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.564334094 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.554129395 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.579344542 seconds)
  done (took 83.359034425 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.837706322 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.565466424 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.567562503 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.560211006 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.567585494 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.565242444 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.560937672 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.843622604 seconds)
  done (took 16.519948482 seconds)
done (took 273.42997562 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.557525145 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.15467128 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.608604848 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.559072777 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.610245024 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.587394438 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.82074383 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.609978221 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.822911717 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.58597959 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.58239385 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.560298915 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.560507161 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.727040607 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.503283314 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.574252809 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.55589243 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.576644706 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.231799771 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.87620527 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.586945456 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.556675469 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.490021057 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.583693843 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.54717005 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.659820654 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.67896588 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.805755565 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.740458886 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.653502394 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.166962281 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.55954776 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.585249252 seconds)
  done (took 71.733331792 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.560910415 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.693744331 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.565950273 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.567918851 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.698444861 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.590524806 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.562226392 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.56696205 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.567423545 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.567513704 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.567891803 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.569460442 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.570612777 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.618916931 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.698468181 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.588447072 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.562362811 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.689441549 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.564494961 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.563239918 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.617866298 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.56699351 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.569850616 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.619948532 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.570262622 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.570561377 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.690168839 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.593686689 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.572300986 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.692161074 seconds)
  done (took 49.453988511 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.567674149 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.263294236 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.431682126 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.570812128 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.566374456 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.571116793 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.923849262 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.568820609 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.567347154 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.568038785 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.144496827 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.573350734 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.606518154 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.461916626 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.570288323 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.571476947 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.571176724 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.567008725 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.274251064 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.575763907 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.947916871 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.571509472 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.926435916 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.575296868 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.593269969 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.568224955 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.571441441 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.483724403 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.595055497 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.144186703 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.563521831 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.926818583 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.41036535 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.46642239 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.561498945 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.577758498 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.571442366 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.151742486 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.571702329 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.567778883 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.92720738 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.568442772 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.437893248 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.294036516 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.592124884 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.571825059 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.508026981 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.172082326 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.880600523 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.578853792 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.489089011 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.574282829 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.574179308 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.57098022 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.8800345 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.576714667 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.56861147 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.528059942 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.60018183 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.937137049 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.579289262 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.570950366 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.285631707 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.574421001 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.27945713 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.571552851 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.578988042 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.594664827 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.445688789 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.572226778 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.314368736 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.592563459 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.57448195 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.151782233 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.26378618 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.574955749 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.572020256 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.278556089 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.440159485 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.952431119 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.575337729 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.452863543 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.952550689 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.574240055 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.577180246 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.578266368 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.576818623 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.654516686 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.928438806 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.242035692 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.313809949 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.550302681 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.956127806 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.579012619 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.57216385 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.529505125 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.601231931 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.576180447 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.440126128 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.313596342 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.594377963 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.578668104 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.326358466 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.596500455 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.933543235 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.577360966 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.453077834 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.573679762 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.6535739 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.576760989 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.579877434 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.600007427 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.935654995 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.57720043 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.577632334 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.302064812 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.184147523 seconds)
  done (took 221.085582906 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.568280885 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.589213244 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.583794153 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.567421453 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.56661236 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.573743572 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.566821465 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.56744232 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.572604677 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.567528455 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.568315281 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.575484175 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.572910362 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.570185207 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.567342928 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.568051645 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.567163129 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.590339542 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.567734823 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.567631323 seconds)
  done (took 48.901927341 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.578218335 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.269964577 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.24125616 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.578969757 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.579593955 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.575901076 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.643151837 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.58084531 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.5791769 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.945482599 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.792015205 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.599913985 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.580751546 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.578280738 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.252160963 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.574223915 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.9459333 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.268906306 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.580058809 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.288134119 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.572541548 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.579283536 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.574509904 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.27095664 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.952832963 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.94236171 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.650280506 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.280883469 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.583303666 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.581257614 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.271392152 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.578573936 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.577968976 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.269236466 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.600225789 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.594550716 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.581630724 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.649125115 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.647987964 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.951508711 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.277579271 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.946738688 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.595097869 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.775369254 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.586135175 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.569793371 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.278605039 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.60083193 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.571004244 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.582232637 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.587333658 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.254648592 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.599339645 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.253001047 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.603717987 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.583261468 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.275114654 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.263477702 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.283029449 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.795831465 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.597141787 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.946437962 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.586888477 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.279121609 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.603463025 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.581338344 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.582065008 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.796785775 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.296189875 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.946429558 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.955294012 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.951649858 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.583213281 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.655433635 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.604811376 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.955111618 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.654021266 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.045309579 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.95587913 seconds)
  done (took 145.068951377 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.899315175 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.71090097 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.059447379 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.259552606 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.577520322 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.759634827 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.709695428 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.87307511 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.58375685 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.656238731 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.355525736 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.708495563 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.434654026 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.691202939 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.695210106 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.739320777 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.043362344 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.574904544 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.358091499 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.335118294 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.590679823 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.696464753 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.157449779 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.814729228 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.587571049 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.227599941 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.603888704 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.383736754 seconds)
  done (took 60.555701705 seconds)
done (took 598.25361161 seconds)
SAVING RESULT...
DONE!
