cset: moving following pidspec: 7724
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.612756114 seconds)
loading group "shootout"... done (took 1.2170403 seconds)
loading group "string"... done (took 0.427612876 seconds)
loading group "linalg"... done (took 7.920548947 seconds)
loading group "parallel"... done (took 0.150805262 seconds)
loading group "find"... done (took 1.249406116 seconds)
loading group "tuple"... done (took 1.944302171 seconds)
loading group "union"... done (took 12.611608052 seconds)
loading group "dates"... done (took 1.308010655 seconds)
loading group "micro"... done (took 0.204621562 seconds)
loading group "simd"... done (took 4.289826184 seconds)
loading group "io"... done (took 0.973790801 seconds)
loading group "random"... done (took 8.760521844 seconds)
loading group "problem"... done (took 1.564321056 seconds)
loading group "array"... done (took 18.818276134 seconds)
loading group "misc"... done (took 1.577338043 seconds)
loading group "scalar"... done (took 39.657056236 seconds)
loading group "sort"... done (took 2.981906422 seconds)
loading group "sparse"... done (took 11.646229871 seconds)
loading group "collection"... done (took 16.921248842 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.547409534 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.12916219 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.140661588 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.123286289 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.160193623 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.119298395 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.129053842 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086125064 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 12.725067289 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.154856721 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.117868849 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.465569548 seconds)
done (took 16.314024708 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.177004127 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.091572879 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081153069 seconds)
  done (took 1.263498491 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067091093 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.131450721 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.069501547 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.069386224 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.069118525 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.069952102 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.069329123 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.068962583 seconds)
  done (took 1.638396727 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075752406 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.071375818 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068712681 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.073020474 seconds)
  done (took 1.379951209 seconds)
done (took 5.634333173 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.251835883 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.113012577 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.311889986 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.333527435 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.436042129 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.094566489 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.075833483 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.072742021 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.130396127 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.348271662 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.122145713 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.198631868 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.102311768 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.184936438 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 2.021944813 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.13484833 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.087640748 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.126742468 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.094867948 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.13303321 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.376959262 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.078806516 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.087001858 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.07341031 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.070231908 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.635059935 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.659224465 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.148012564 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.08559459 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.084432408 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.118812781 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.643712363 seconds)
  done (took 10.561649636 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.105266188 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.10534329 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.071257136 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.127744443 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.100742463 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.071784572 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.077518874 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.07008788 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.09263762 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.131694347 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.093657183 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.111361413 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.068262244 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.071535955 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.08725539 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.201263742 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.082651063 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.084405814 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.071080288 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.081034479 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.110357526 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.080632192 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.08250459 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.082613059 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.132266853 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.170517386 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.098928584 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.100079269 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.069061662 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.083922806 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.117407252 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.129902964 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.068370159 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.068494836 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.128509775 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.099514247 seconds)
  done (took 4.673752414 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.155776081 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.094483791 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.108234275 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.637962529 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.068898578 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.156128466 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.244007511 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.075193193 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.401446889 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.161099939 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.155234963 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.147795451 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.125967937 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.072270665 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.323936423 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.125505691 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.360109478 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.069720146 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.068539064 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.066970302 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078358292 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.070482745 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.06594697 seconds)
    (23/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.066357117 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.079549557 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.093228258 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.090483187 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.210740627 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.034743291 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.305622158 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.070209802 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.177335046 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.090271778 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.412883112 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.071904299 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.094242184 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.399462101 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.128849506 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068130937 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.169777171 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.135238903 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.067406121 seconds)
    (42/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.096832693 seconds)
    (43/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.121391874 seconds)
    (44/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.082112623 seconds)
    (45/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.072056804 seconds)
    (46/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.074584544 seconds)
    (47/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.07157313 seconds)
    (48/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.082157104 seconds)
    (49/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.081954507 seconds)
    (50/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.104765492 seconds)
    (51/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.070791176 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.068531302 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.174131948 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067685204 seconds)
    (55/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.069335811 seconds)
    (56/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.071383377 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.152064326 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.067263073 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.1561036 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.06776127 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.071731714 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.097632124 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.074077667 seconds)
    (64/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.067329664 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.092571009 seconds)
    (66/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.126397051 seconds)
    (67/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.067285556 seconds)
    (68/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.335802932 seconds)
    (69/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.060233958 seconds)
    (70/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.070858508 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.224274039 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.079418836 seconds)
    (73/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.069346983 seconds)
    (74/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.087365253 seconds)
    (75/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.069560348 seconds)
    (76/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.071217368 seconds)
    (77/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.069544094 seconds)
    (78/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.07906652 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.07258906 seconds)
    (80/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.071257062 seconds)
    (81/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.112112783 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.069503383 seconds)
    (83/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.072954666 seconds)
    (84/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.068539313 seconds)
    (85/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.074333863 seconds)
    (86/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.101339405 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.068069771 seconds)
    (88/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.466379691 seconds)
    (89/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.100854382 seconds)
    (90/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.069161718 seconds)
    (91/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.081506981 seconds)
    (92/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.108482264 seconds)
    (93/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.069838094 seconds)
    (94/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.077109522 seconds)
    (95/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.070359608 seconds)
    (96/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.074240086 seconds)
    (97/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.06800521 seconds)
    (98/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.069318542 seconds)
    (99/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.075521945 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.096008203 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.072168046 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.11477602 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.140201601 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.074640616 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.07010299 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.075180724 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.073688908 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.072863999 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.069397527 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.073160289 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.071093718 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.067899625 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.124525162 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.06897091 seconds)
  done (took 22.640148164 seconds)
done (took 40.122886622 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.255444593 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.088796089 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.089367045 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.089344737 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.089380567 seconds)
  done (took 1.81270619 seconds)
done (took 3.001953868 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.133363959 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.105197402 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.066888698 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.103384819 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.067264974 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.107344313 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.105831247 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.087052373 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105984566 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.067517066 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.103509966 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.067148305 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067410298 seconds)
  done (took 2.386941535 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084978503 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.088635752 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.072203355 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083968255 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065142022 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084149769 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083127307 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.091464962 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083611683 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074766611 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065177609 seconds)
  done (took 2.060753105 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084921844 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.087041931 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.072342337 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084865896 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065334639 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084333303 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.084177164 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088820933 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.084436017 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07602416 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065539863 seconds)
  done (took 2.054052239 seconds)
done (took 7.679507179 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.080033071 seconds)
  done (took 1.243740767 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.588979226 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.826475113 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.083086181 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.108498328 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.201416105 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.118630725 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.267887579 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.087893349 seconds)
  done (took 8.633184624 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.099138667 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.08584003 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.072787805 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.072381747 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.073312488 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.074175632 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.07208453 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.072863071 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.073320158 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.073006116 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.073020352 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.072441644 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.072681152 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.072092611 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.073630833 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.07201447 seconds)
  done (took 2.468270918 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.101407154 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.100398097 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.077316214 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.079245396 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.075730708 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.075656785 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.078959154 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.077476752 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.075042615 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.076172528 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.079507175 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.077286506 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.076636268 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.067714773 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.078544187 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.080284386 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.074865302 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.077975959 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.078787175 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.079676405 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.079389977 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.067568613 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.077131576 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.077790805 seconds)
  done (took 3.17968132 seconds)
done (took 16.703344673 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.122747204 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082009911 seconds)
  done (took 1.377571138 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082920186 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.084002769 seconds)
  done (took 1.353857626 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.084739994 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065547701 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.092476929 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.078969591 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065998599 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065639921 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.089577352 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065810592 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.06581344 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065734309 seconds)
  done (took 1.929530603 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068345512 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.0781536 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.073967084 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.083424369 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074422734 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.067618147 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.071265466 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.068255841 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077811222 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.066406312 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.072348141 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.088527846 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071416312 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.090110022 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071324673 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.072418883 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.07519379 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.071589453 seconds)
  done (took 2.532634075 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065748417 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066838959 seconds)
  done (took 1.325909553 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.070433125 seconds)
    (2/7) benchmarking "second"...
    done (took 0.067828928 seconds)
    (3/7) benchmarking "month"...
    done (took 0.070424514 seconds)
    (4/7) benchmarking "year"...
    done (took 0.070317117 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.066742927 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.06562164 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.066845942 seconds)
  done (took 1.664355081 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.385361459 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.135851578 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.349454773 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.074033562 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.084126298 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.261507614 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.067633805 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.073816125 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.07367147 seconds)
  done (took 2.736150669 seconds)
done (took 14.119975718 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.083639619 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.089948696 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.102470171 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.435091177 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.09667768 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.070594056 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.116803831 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.192474705 seconds)
done (took 2.392211713 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.215760025 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.152399185 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.947284635 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.070562626 seconds)
  done (took 3.365020606 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.346798448 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.094852034 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.080155321 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.070263098 seconds)
  done (took 1.797797376 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.070141988 seconds)
    (2/2) benchmarking "read"...
    done (took 0.073437047 seconds)
  done (took 1.347295919 seconds)
done (took 7.934178014 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067839026 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.093727026 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.067829399 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067351873 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.067968409 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.067362666 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.0677017 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.067616589 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.06732791 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.067481391 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.067484583 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.067751061 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067410316 seconds)
    (14/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.067610362 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068160801 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067937063 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067542569 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.068287647 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.067558528 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067657584 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067605444 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068170698 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.067838172 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.06809637 seconds)
  done (took 2.883313409 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.087598632 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.070061343 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072641928 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.072177496 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.072841378 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071977678 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071978896 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.07026474 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.072116057 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.06985488 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072305825 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.072761707 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.069632841 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.072714379 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069800304 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.073026234 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.072083717 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070200479 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070221756 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.072513683 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.072344247 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070029575 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.072394141 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072275886 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.072625234 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07244133 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.069754071 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.070192645 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072050407 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.072610902 seconds)
  done (took 3.377531724 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.068261321 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063648567 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.065301618 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.073595026 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064947154 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064978424 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063623886 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.064989104 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.065162531 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063642745 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.065107021 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.064237384 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063853159 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.06490886 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.065068502 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.06840368 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.082613726 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063959981 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063745616 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.06461624 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.068219392 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.06375024 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.064653145 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063767949 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.064431506 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063493701 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.067446085 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063645154 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065557423 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063943874 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.067759164 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068943301 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.0640306 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.073245887 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.068509663 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063945513 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.068497004 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.063938593 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064814583 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063952375 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063581267 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063761895 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063885966 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.073546654 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.064130474 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.065397234 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.064376925 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.06540309 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.06514262 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.066628799 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.063386073 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063817278 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.06638562 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.065845315 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.069421899 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.063927538 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.064881998 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063479055 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064738067 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063690476 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063288733 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.063685358 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066748886 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.065205774 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.081511245 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.073393084 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.064026556 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.065798124 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.065008156 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.066966458 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.066073883 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.079558544 seconds)
  done (took 5.980988814 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.094911201 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.094430981 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069211518 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.069583871 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065045988 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064773421 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073755194 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064595 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06961135 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085102981 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065082675 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069437394 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069470209 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068821039 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065129277 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06984894 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07477726 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064937497 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065287205 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06905305 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065034243 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.07355043 seconds)
  done (took 2.797288549 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.161690248 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071860833 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.111457754 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.077298731 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.074684594 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.077075828 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071187345 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071236376 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071406776 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071891243 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072233444 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071615743 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.074325924 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072305949 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07199427 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071815541 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071610771 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072077508 seconds)
  done (took 2.656355553 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.083027888 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.071047769 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.090833884 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.070718249 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.071116556 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070230461 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075802671 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.07706652 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.070100551 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.070978552 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.076720701 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070563813 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.070914223 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070600972 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07031004 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070845028 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.070307084 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070685285 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07683181 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075542117 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.076166955 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.076569587 seconds)
  done (took 2.847157008 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083721684 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069844033 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.086535733 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.072488903 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.065115271 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064961087 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.071316381 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.069484491 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.071472328 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.069254551 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069714783 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.065090979 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.072163643 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069773548 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.072467303 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069832182 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068906947 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070226205 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069457783 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064827745 seconds)
  done (took 2.636309317 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.097365104 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068222903 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068341192 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076304448 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068820148 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067782732 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075925853 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067929241 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067823764 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.089653753 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068106193 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06831597 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07606976 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072848074 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067883161 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076391127 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075633905 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075870551 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070737588 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068350712 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.089522771 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.068154451 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075939302 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067790501 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068018789 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.068167807 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068239769 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073558219 seconds)
  done (took 3.270302472 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067643411 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066969603 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.067721256 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.067215984 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.067607915 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.067476625 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.067692082 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.06761924 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067012605 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067757618 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.067134675 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.067080729 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067406055 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.067084146 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067561223 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067225023 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067254052 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.067542112 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067674835 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067596931 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.067510251 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066990381 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.067141158 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067607287 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067395487 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.067164228 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06746991 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067519085 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067054753 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067593562 seconds)
  done (took 3.249725497 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.079728642 seconds)
    (2/2) benchmarking "in"...
    done (took 0.077785589 seconds)
  done (took 1.385307709 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.067260828 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083634857 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.064020187 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.075469707 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.075428844 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06826486 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075991314 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074862938 seconds)
  done (took 1.808855602 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.089752985 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078841551 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.068669177 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.083771824 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.079370197 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.088236146 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.133646294 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.067086483 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.077784725 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.067313218 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.087214231 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.06839564 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.07717696 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071851664 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.077389521 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.081285274 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064766236 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.073120043 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.06817815 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064775803 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067482736 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081219347 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.076255589 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.065140599 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.072098794 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.096474734 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.083581648 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.066554866 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073976864 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.079202037 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.077290437 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.063847045 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.066467494 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.067527153 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.065253776 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.078410329 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.086330422 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073940126 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.080625337 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067722832 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.077392441 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.064497924 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.076722548 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.07776461 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08389321 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066912445 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.067020007 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.064733562 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.067109235 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.073150172 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.064573322 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070629634 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.06394362 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07940123 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.074459738 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.082471149 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.065345224 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.072853218 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.07396198 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.073858229 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.079410444 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.073832486 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.076937459 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.066449038 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.083650912 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.076427105 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079465794 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.064535646 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.063853993 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.064829318 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.080887937 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09806958 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.077441009 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.067194089 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067263197 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.06424165 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074030219 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067419891 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076114813 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.078115437 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.066294216 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072698435 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.080174714 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070847321 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.072985249 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.074823873 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.065161687 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.070941478 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.067216976 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.087053091 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065781931 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064929791 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.067410197 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.08304276 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.073856002 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.069122839 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.067369061 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.078634405 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.06344715 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066654333 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067251034 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072134957 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.079799419 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070426461 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070792956 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.078945373 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074217152 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070207469 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.072203234 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.06272298 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066135057 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.067587242 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.077026292 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.062493126 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072805662 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.06975214 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065976296 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.077002211 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064074979 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.065466029 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.078870481 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.076916329 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.063743971 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.06249669 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.072575265 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.065367752 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068309833 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.079160689 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.064018051 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063662471 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.063541984 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.073415496 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.06522555 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.077877995 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069960919 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073650347 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.193148235 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.066439106 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.074416313 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.080982589 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.072198105 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.073834091 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.078465678 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.073235399 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.066661732 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.079761637 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.074153061 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.069271448 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.076601005 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.071365607 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.065409783 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069697262 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.073966152 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.066154915 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.074203733 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070522527 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.074021379 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067484741 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065875889 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074526324 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067967695 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.068999342 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071958026 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065611584 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.082830739 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.07369517 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.064810222 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.064015718 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.076374809 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.06835682 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066881797 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.068971541 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.074065004 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.06777442 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065267167 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.066601077 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.073292304 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.077324887 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070314925 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067517504 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.078588531 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.08473153 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.066340444 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.073597084 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066665771 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068246368 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067707039 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.081352127 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.077094848 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.07197614 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.074077716 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.064079281 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076902764 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079565172 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.069658525 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.06492902 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.069433228 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.071500326 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.078956293 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.071721034 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.067659506 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065109161 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072630415 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070146403 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.074059504 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.066370267 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.069037785 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.073505828 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.065449845 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.07430895 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067875616 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.081833919 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07504879 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.064999914 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069482239 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065114419 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.078470536 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.065402964 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.067661591 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.069235407 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.06822228 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.065459243 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.07320967 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.063999125 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.079590997 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.080034106 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.072090318 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.069287799 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.066965685 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079187048 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.072245499 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074980091 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.073717319 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.076666495 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.082540227 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.069192035 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.073868169 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.081759695 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.066212803 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.063597747 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.079032692 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.064879799 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.065504684 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065446856 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.065129275 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074050104 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.074588452 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.076932767 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062915359 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.072791003 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.064008017 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.068246924 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.063959755 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.074525549 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.072561729 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069946701 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078338373 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066362374 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.065813033 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073577439 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.065712142 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.066240194 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067467496 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073223855 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.06615189 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.071927723 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.068153304 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.071861569 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.068207239 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064030858 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.071490201 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.065825868 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.071125106 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075154323 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.065060564 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07137503 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.07229958 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.065871756 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.2075082 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.072724992 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.071153835 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076259048 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074400201 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.073157248 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.074844086 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.066363798 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.080330699 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.067035134 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.080260006 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.072403289 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.064328168 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074563067 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.073606609 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072898043 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067301524 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067978169 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.072484087 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066254376 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.074010051 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.080057727 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.068340226 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.084136705 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.079278679 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073537694 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.074501484 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.072211525 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.072382736 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.069155163 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.071269513 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067437056 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.07233153 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066541537 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.076562988 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.073932971 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.071544401 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.073172801 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.067759001 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.072599523 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.068819976 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.064449691 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.069325968 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.069125929 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066875135 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079862032 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.067794977 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.070278975 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065876325 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068198545 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.066086212 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.064342993 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.075068014 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.076562328 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.067223434 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078411898 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.069616436 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.073084949 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083087755 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.064348796 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.065255545 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.065055235 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.067892668 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.08036568 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.067811744 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.080758766 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.071635178 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.069525672 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.06414228 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.067943306 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.06533822 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.064440194 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.065084118 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075491988 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.069618846 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065780805 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.067015746 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.073575676 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068136448 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.079612361 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.066159255 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.070920951 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.067118643 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.064403781 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.069562841 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.068847255 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.073879245 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067649617 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.067946244 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.064688669 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066302379 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.071633487 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.072781921 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067009984 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.072366085 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.079763261 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066386807 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.074277729 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069316072 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.064256275 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.073636684 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066358727 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066489419 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.068832408 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.074875802 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074705225 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067668825 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.081414895 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.069378622 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073262367 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066893802 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064460803 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066610503 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.06651219 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066844295 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.068573436 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.067475014 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079664514 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064181799 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.071484939 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.07094266 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.069368937 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.076450166 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.066187246 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.07113422 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070595383 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067321395 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.071568518 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.078707546 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070446243 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072941703 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066235719 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.071022349 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075932244 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.067625172 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.077406911 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.070596739 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.065752462 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.071527127 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.06645093 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065205061 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.065307666 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064354194 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.075423858 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.066116116 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.208233096 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.070445142 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.066198954 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.072297709 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07068984 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.081498578 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.074722278 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07522069 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.065401055 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.065175746 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067853519 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.068149903 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.073328478 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.074464918 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077936045 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.074403454 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.070707824 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.066632412 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.082194209 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077339659 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.075032481 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.06770623 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.074818123 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067994917 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.074050146 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.071747454 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.072221324 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068088039 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.075575903 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.07257148 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.069287818 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077914033 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.075030043 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068064373 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.072704496 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.072546654 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.071649699 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.06533614 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.068215225 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.074098212 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076359778 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.074364613 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067140951 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08280584 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.068015242 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.072399788 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070475227 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066218529 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.075652607 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.064955467 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.072984013 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067661248 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068074246 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.065557484 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.069365862 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.068381851 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.074066422 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.069593349 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.065005537 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082418231 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.082252872 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.073091536 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066080982 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065745084 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.065342814 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.065262775 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.069638111 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068406101 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.072642691 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.082184971 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.069263554 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.069314871 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.065054797 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066747396 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074624181 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.074723528 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.064438478 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.064912947 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.068936206 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.072785128 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.07947679 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065641198 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.06693179 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074649735 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.073858499 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.065217447 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070426196 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064178461 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.075248568 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08406791 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067136812 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073820753 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.077115142 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.080467678 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067012231 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.06536438 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067704834 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.073213686 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.072077344 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068054637 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.068090504 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.086570402 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074121405 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.069176688 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.0656851 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.074181398 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.069347633 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.080853992 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070426846 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067689528 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.0763127 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.073114891 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075358362 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.077069652 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078321581 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.07219326 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.072161248 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.064933754 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070651295 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064924491 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.068113976 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.066544435 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.066358363 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071213187 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.073935788 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.06816274 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080869348 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.079549371 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.067952717 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.062959339 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.068183311 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.067956663 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.063461202 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.066508761 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.063941209 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064260261 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064134076 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.06452179 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.071560123 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075484693 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.070128061 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066202053 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065471376 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062829182 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.075138456 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.211199973 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074426211 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.065840976 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.06779396 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.068802867 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.076101165 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070616654 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.068889541 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.073248748 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.073377379 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072589937 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.064977261 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.079056242 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065956437 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.073331832 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.069440948 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067259235 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.068229036 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075171407 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072566282 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068873548 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.074102485 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.074887529 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069041536 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.065028767 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.064330244 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.077406138 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.065324607 seconds)
  done (took 44.32478597 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.105338291 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067231555 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06496062 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.065335661 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078101048 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066654106 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065336455 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066673239 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067128029 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068976698 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.065513684 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065658239 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.074632982 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.083088884 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.077929904 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070632984 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065183831 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066563147 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.065535702 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066868512 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.0748672 seconds)
  done (took 2.836084298 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.07578167 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.083114098 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.080236172 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.085098397 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07532141 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.071814959 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.08022681 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071246514 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.080601633 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07746099 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.080418764 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071342614 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.07683537 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.076732017 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076823355 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072008581 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.080661279 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075438874 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.07137688 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079742081 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071695656 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.079861947 seconds)
  done (took 3.02392058 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067528074 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066884245 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.073938999 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.064646425 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065593793 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.064672131 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.070581433 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.064877973 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068845692 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.068782072 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.06885362 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.068736826 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.073091554 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.065151214 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.069555475 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.064273665 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.116579136 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068844202 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.06596473 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.067209782 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.064883627 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.073566483 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.06479107 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.064916452 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.068410556 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069823293 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066750013 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064690238 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065932165 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.068557299 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.066332702 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.064355938 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.072862368 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.07254148 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.068066874 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.068354049 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065986284 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.06595225 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.067241597 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.064944793 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.072113378 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.065115755 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.066747663 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.072958941 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.064756016 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.064379275 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.072810384 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.066344836 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.064211722 seconds)
  done (took 4.696159877 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.080283851 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.117760211 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.071484694 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.096507623 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.081981206 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.074250893 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.071498393 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.097392478 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.066929605 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.067779263 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.083221402 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.083768738 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.069104396 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.071244904 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.073848005 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068974038 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.070758414 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067890376 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.073085324 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068398535 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.073827539 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.073294261 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.081778864 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.082383167 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071082637 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068079927 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.068590561 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.070965457 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.08192683 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.0742211 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.071562664 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072406029 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.083084057 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.071481029 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068375034 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.068609764 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.083571273 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.070463304 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.06907243 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.066952168 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.068609002 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.070984213 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.0733308 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.084013934 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069629578 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.073837787 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06905796 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.066363827 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.082587662 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.069167206 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.075246983 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.084158077 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.07064316 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.069609771 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071339355 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.082566043 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.069314651 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.067736607 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.070008448 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.082173244 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.067428199 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070694977 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.083321289 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.068807412 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.074062344 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.083621967 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.073845169 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070858091 seconds)
  done (took 6.570667481 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077161952 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.099859867 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086351517 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.085744821 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.077589931 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.078194827 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.078102839 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.07819789 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.077570971 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.082986207 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077985442 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.12056647 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.072958988 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.080577323 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.077750035 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.077919908 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.078085594 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.077969639 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.078004762 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077479583 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.077938756 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.085470435 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.078011982 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.08574139 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.081700982 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.072944249 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.077992407 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.077967503 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085751074 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.07796912 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.082124013 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.07811042 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.077957623 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.086439005 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.081968948 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.078105134 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066382966 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078177582 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.078377752 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.078190098 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.072673561 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.085950523 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.077675315 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.072731444 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.078497831 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.078044574 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.085755304 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.081817843 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.08070481 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.082791688 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.078745056 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086259574 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077764125 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.078332531 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.08623207 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.089575847 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.085912869 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.086010514 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078337851 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.085964481 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.086190363 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.089268404 seconds)
  done (took 6.400620734 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087897183 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075905155 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.087926218 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.065216432 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.068149473 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.077183187 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065489772 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064905976 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.075152589 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.075247426 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078082714 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.076816741 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080044313 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077885531 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.076617804 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08023646 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07726714 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.076448295 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074977071 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.076583486 seconds)
  done (took 2.881427347 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.080760228 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087587151 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.071341325 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.078395915 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.071633911 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.077002443 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.070839716 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071795319 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07286596 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07158601 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.0790772 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079904558 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072275738 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.077312305 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.078685454 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.076993042 seconds)
  done (took 2.569557115 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.089990933 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.075817852 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.08233336 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.067151083 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.070859849 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.065912769 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.06659375 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.064570911 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.065562806 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.080527999 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.066958563 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.078934422 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.066735119 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.065594664 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.066258435 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.073210463 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.065919625 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.066579901 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.066512254 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.080236987 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.075408086 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.068246463 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.070711885 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.066566496 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.072658149 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.075210858 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.06904813 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.070212967 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.067164951 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.067417072 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.072848283 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.074403875 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.066538947 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.067953957 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.065734211 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.066704746 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.066570046 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.067782839 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.073005998 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.067218443 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.064798358 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.072098187 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.067419073 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.067929917 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.065938738 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.067125945 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.065686412 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.072774697 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.067462152 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.072477392 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.066907208 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.070240998 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.067298399 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.075861214 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.070328165 seconds)
  done (took 5.204314905 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084286984 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071669686 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.065549482 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064887807 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088767869 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.071778141 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071230471 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.07091461 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071750599 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.065277686 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071810618 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.070466287 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071636671 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07154753 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071900053 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071712282 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.065254193 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.07108054 seconds)
  done (took 2.657158323 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.076726039 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.070613915 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.075819808 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.070252625 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.070282347 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.069860875 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065887017 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.065505849 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065791515 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.070294222 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070404371 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.069664887 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065577415 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.069936302 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.070177054 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070176498 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.069868627 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065502582 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.070044282 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065302594 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069725672 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065369596 seconds)
  done (took 2.882443858 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.099163048 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.087098563 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.148529051 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.082617893 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.091521259 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.07560327 seconds)
  done (took 1.944228212 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096137765 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10408727 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070258829 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070969739 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078467828 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074967289 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074608686 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074716633 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079717075 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080866271 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075171529 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083154086 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080162611 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082743668 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077152962 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077893188 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075117989 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074721384 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070363805 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086284128 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074930343 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080210179 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075078184 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074645517 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075088838 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083245062 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080042988 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081221039 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074504826 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080177011 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077975245 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075175469 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080695101 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080763247 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070710097 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080361451 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075563271 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086777913 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077549272 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083327424 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070425389 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078114708 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080062016 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07976012 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080467609 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074759425 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079399363 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074689278 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075239199 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092287878 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077698755 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.082529718 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077343495 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08042745 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080030406 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088633377 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080514111 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082778371 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07786707 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080556285 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083081481 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077522398 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082418319 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080854926 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077468273 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082794388 seconds)
  done (took 6.598499054 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111998919 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071366131 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075437257 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081437809 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083092106 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075053092 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075286491 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075055135 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075067851 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071048325 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112906946 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07524124 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082991653 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083661479 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075272435 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07526485 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075508087 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.082914101 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071223463 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088586696 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075356421 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082867427 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082823157 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082876664 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080568309 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077614859 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074683714 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074713691 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074663399 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074692821 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080050803 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075373586 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.082873974 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070940597 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082632284 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074874545 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074724014 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079904968 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074963294 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077746306 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083450062 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087072931 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075047842 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074788039 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081104443 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074940631 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074743877 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071075311 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075390363 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071232293 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080919728 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080711196 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080898355 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083380261 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075552408 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075674344 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075577277 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075211739 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07542901 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078042649 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083367388 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074949335 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08921962 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075840496 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075194542 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083349021 seconds)
  done (took 6.588315732 seconds)
done (took 133.276030733 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.212681846 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.186976925 seconds)
  done (took 1.748737116 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.07797083 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.109808542 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.086141194 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.137906138 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.07405341 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.109668711 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.108733032 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.086100882 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.07393756 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.073795321 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.073556004 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.07747988 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.140129262 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.075898073 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.073867837 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.077462655 seconds)
  done (took 2.826049608 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.10966248 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.225503918 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.113266504 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.072052201 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.109700189 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.081371528 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.07478741 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.087024232 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.079821886 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.074111256 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.08109682 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.079013689 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.073701191 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.078784099 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.079314781 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.081339918 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.073502905 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.08144972 seconds)
  done (took 3.02746756 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.108531287 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.098833532 seconds)
  done (took 1.584092842 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.179912271 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.13728654 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.207569293 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.358470416 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.159141352 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.426624625 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.143893678 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.143687874 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.117884776 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.140114693 seconds)
  done (took 3.38316811 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.10830931 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.209829756 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.308447179 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.126990725 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.079650511 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.117322285 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.128449679 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.084946603 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.08543094 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.085646847 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.085127209 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.081786601 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.106068753 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.080536705 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.079362136 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.081999581 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.108775581 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.078227025 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.079832676 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.079931237 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.108198697 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.072686536 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.080835334 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.077942826 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.082690809 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.082708854 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.073811778 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.072363884 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.079791611 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.079138718 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.083457362 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.114401811 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.082562711 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.113717955 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.077503622 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.115019371 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.081749606 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.077847461 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.079626532 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.077991585 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.08230827 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.081775455 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.081607368 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.081942749 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.07419959 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.081699763 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.073786014 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.072164783 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.084027692 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.073879787 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.083675929 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.082644499 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.114046486 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.074151271 seconds)
  done (took 6.453018877 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.113559381 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.112272678 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074852826 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.118963423 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108802522 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074648607 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.110626736 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.103501122 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.112405111 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073825173 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072591558 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074180004 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083420716 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.085456317 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.120834865 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.113240831 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.076679511 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.074570807 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.112800244 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.11256672 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072905751 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106499264 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.101870909 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.11244611 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.071843007 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07465564 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.072714306 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.074101044 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.080449979 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.082178842 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073542392 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.083403919 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.087745527 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081761704 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071791367 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073175166 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072461458 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.082960404 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083181554 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.083070408 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.081312163 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071487601 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072346291 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.073512538 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.073846389 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071651587 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.081732406 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.082876677 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.081856232 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.07322125 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.07407249 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.072868702 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.073794772 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.082727676 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.080657803 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.083004836 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.082604552 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072283337 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072179846 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.07535527 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083506986 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.082308638 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.08300004 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073962072 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.083509379 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.074856381 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083653081 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.086622176 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072010518 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.073969965 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.072066356 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072807594 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.073220863 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.080682753 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.0812323 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.074279012 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.072688364 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072334924 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082956741 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081089425 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072363526 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.080394895 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071240959 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071966336 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073493175 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073102437 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.080018359 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.082747822 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.073262279 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.072292344 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.07290443 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072131834 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.071269894 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.080176844 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.082195615 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.082486127 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.08130323 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.0729779 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.081192335 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080553411 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072868827 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.080624714 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.071287468 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072737986 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072470823 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079682209 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.078911765 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080575764 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.07133122 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.070563861 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.079377851 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081414377 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.071179219 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.079257207 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081543885 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.08028266 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.070729439 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082393722 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071073188 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080803916 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071525898 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.215322832 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074058004 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.083555853 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.073758181 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.07266322 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.073567068 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.08278056 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074583626 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07339676 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.074036978 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073668304 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.082667722 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.085414847 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074780561 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082316017 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.082446455 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.073979932 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081517701 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073180035 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.083083365 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074024763 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073949545 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072079256 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.085116217 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.073490982 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.072922801 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073166007 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.083581879 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073165692 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083663913 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.081599222 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072080306 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.085350273 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.083880329 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.081595092 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.084241171 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073917495 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.072757118 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072549762 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.07324501 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.080712939 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.083063725 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074179048 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.072774727 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.080814814 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.083700629 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.071915904 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.082209594 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.081437353 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.08176358 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.07298609 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.073345587 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.084027146 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.083687661 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.081725764 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.081308077 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.082154073 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072755791 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080860851 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081514728 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07278194 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.088031125 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072242625 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.08575585 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.082027985 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080353401 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081786801 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.083760912 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.083469974 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.084240762 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.085935871 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072451865 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.072128377 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.081864642 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072573127 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072998787 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.081216156 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.073888451 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.074287494 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.08589515 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072671299 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.083753309 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.071961329 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.082374982 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.071751982 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073830869 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086597594 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072811145 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073508003 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.082490951 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.075387251 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.080847705 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083701085 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.08142122 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072243521 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073785323 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.082627803 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.082320631 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.072257815 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072352337 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074424803 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.080637598 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.079898965 seconds)
  done (took 19.396340486 seconds)
done (took 39.806274143 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.228942935 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.171129004 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.202567096 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.129046825 seconds)
  done (took 2.216343355 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.12053947 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.109186968 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.095903182 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.068671259 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.103029042 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.068727023 seconds)
  done (took 1.986099432 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.340763794 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.233901852 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.205199367 seconds)
  done (took 2.190905922 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.229040485 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.219050763 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.477086977 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.300920354 seconds)
  done (took 2.743522341 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.15582415 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.092770371 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.068826398 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.087324391 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.14099954 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.167377001 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.105157344 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.131445802 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.081023616 seconds)
  done (took 2.505986811 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.164678457 seconds)
done (took 13.241615247 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.125748679 seconds)
    (2/309) benchmarking ("sort", Int8, false)...
    done (took 0.449460618 seconds)
    (3/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.251466141 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.077158277 seconds)
    (5/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.072409102 seconds)
    (6/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.257462132 seconds)
    (7/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.210778101 seconds)
    (8/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.181557132 seconds)
    (9/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.214301346 seconds)
    (10/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.113250579 seconds)
    (11/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.081914684 seconds)
    (12/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.080903182 seconds)
    (13/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.088918248 seconds)
    (14/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.080406897 seconds)
    (15/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.181842297 seconds)
    (16/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.085823037 seconds)
    (17/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.259109027 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.108989753 seconds)
    (19/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.176294669 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.096713801 seconds)
    (21/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.079182635 seconds)
    (22/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.185281184 seconds)
    (23/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.19773362 seconds)
    (24/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.081477375 seconds)
    (25/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.11481445 seconds)
    (26/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.078746966 seconds)
    (27/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.089643953 seconds)
    (28/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.101124181 seconds)
    (29/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.18339362 seconds)
    (30/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.246484354 seconds)
    (31/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.124842369 seconds)
    (32/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.089920922 seconds)
    (33/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.097363769 seconds)
    (34/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.076906139 seconds)
    (35/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.076918973 seconds)
    (36/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.146131201 seconds)
    (37/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.190638161 seconds)
    (38/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.185898867 seconds)
    (39/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.146953725 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.097270797 seconds)
    (41/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.077895635 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.069940177 seconds)
    (43/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.147025205 seconds)
    (44/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.069468397 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.158639956 seconds)
    (46/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.189337744 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.069569509 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.095790922 seconds)
    (49/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.078437068 seconds)
    (50/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.242345076 seconds)
    (51/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.181764132 seconds)
    (52/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.144925442 seconds)
    (53/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.185681072 seconds)
    (54/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.068716797 seconds)
    (55/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.253079446 seconds)
    (56/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.143495943 seconds)
    (57/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.080817832 seconds)
    (58/309) benchmarking ("sort", Bool, false)...
    done (took 0.171779675 seconds)
    (59/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.073756911 seconds)
    (60/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.175803419 seconds)
    (61/309) benchmarking ("sort", Int64, false)...
    done (took 0.071287288 seconds)
    (62/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.069697566 seconds)
    (63/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.078782571 seconds)
    (64/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.184001319 seconds)
    (65/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.168176951 seconds)
    (66/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.069577954 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.099993328 seconds)
    (68/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.079040415 seconds)
    (69/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.068663539 seconds)
    (70/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.151801556 seconds)
    (71/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.108999579 seconds)
    (72/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.068678869 seconds)
    (73/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.138981701 seconds)
    (74/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.069130127 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.095151216 seconds)
    (76/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.173221028 seconds)
    (77/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.092928124 seconds)
    (78/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.069014031 seconds)
    (79/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.068493704 seconds)
    (80/309) benchmarking ("sort", BigInt, false)...
    done (took 0.256449714 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.069156686 seconds)
    (82/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.077129342 seconds)
    (83/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.080138493 seconds)
    (84/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.191847846 seconds)
    (85/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.14218451 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.095620885 seconds)
    (87/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.069392974 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.144593116 seconds)
    (89/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.07059215 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.108351541 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.133730331 seconds)
    (92/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.23044794 seconds)
    (93/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.071658438 seconds)
    (94/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.103185906 seconds)
    (95/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.08273796 seconds)
    (96/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.239416817 seconds)
    (97/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.205309366 seconds)
    (98/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.220278963 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.096645303 seconds)
    (100/309) benchmarking ("sort", Float32, false)...
    done (took 0.141015039 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.100348823 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.070466149 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.070365782 seconds)
    (104/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.097217006 seconds)
    (105/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.076937284 seconds)
    (106/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.080338303 seconds)
    (107/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.077254321 seconds)
    (108/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.071831431 seconds)
    (109/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.081249438 seconds)
    (110/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.085495452 seconds)
    (111/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.076936504 seconds)
    (112/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.081437616 seconds)
    (113/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.191891166 seconds)
    (114/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.219620282 seconds)
    (115/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.070708452 seconds)
    (116/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.071297376 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.097298836 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.132659374 seconds)
    (119/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.150015672 seconds)
    (120/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.192521978 seconds)
    (121/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.070320551 seconds)
    (122/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.082728532 seconds)
    (123/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.078869184 seconds)
    (124/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.072469309 seconds)
    (125/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.079512818 seconds)
    (126/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.070122477 seconds)
    (127/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.231117425 seconds)
    (128/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.074756468 seconds)
    (129/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.069319514 seconds)
    (130/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.081228094 seconds)
    (131/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.210816878 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.124893118 seconds)
    (133/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.101714089 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.079432132 seconds)
    (135/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.149536024 seconds)
    (136/309) benchmarking ("sort", Float64, false)...
    done (took 0.140222272 seconds)
    (137/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.078426111 seconds)
    (138/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.069565857 seconds)
    (139/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.070511511 seconds)
    (140/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.16760227 seconds)
    (141/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.078932438 seconds)
    (142/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.069703787 seconds)
    (143/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.214221143 seconds)
    (144/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.07123387 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.129007016 seconds)
    (146/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.078656185 seconds)
    (147/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.070973118 seconds)
    (148/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.070953959 seconds)
    (149/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.069491037 seconds)
    (150/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.070562089 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.137286507 seconds)
    (152/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.070101236 seconds)
    (153/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.078895953 seconds)
    (154/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.069739015 seconds)
    (155/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.069153127 seconds)
    (156/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.077057918 seconds)
    (157/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.144704335 seconds)
    (158/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.070939257 seconds)
    (159/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.209142979 seconds)
    (160/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.07913515 seconds)
    (161/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.07915582 seconds)
    (162/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.089542745 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.070673693 seconds)
    (164/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.0758068 seconds)
    (165/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.070466055 seconds)
    (166/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.148464172 seconds)
    (167/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.095160701 seconds)
    (168/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.06942626 seconds)
    (169/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.085106377 seconds)
    (170/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.070996058 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.115041318 seconds)
    (172/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.071349861 seconds)
    (173/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.070110473 seconds)
    (174/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.080223425 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.138309681 seconds)
    (176/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.069874704 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.136712729 seconds)
    (178/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.069765163 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.095235246 seconds)
    (180/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.171617996 seconds)
    (181/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.074491874 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.097238649 seconds)
    (183/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.166799217 seconds)
    (184/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.086375445 seconds)
    (185/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.072596992 seconds)
    (186/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.143446295 seconds)
    (187/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.082513841 seconds)
    (188/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.192008049 seconds)
    (189/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.077805338 seconds)
    (190/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.06924335 seconds)
    (191/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.069234241 seconds)
    (192/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.178632324 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.069962121 seconds)
    (194/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.069067351 seconds)
    (195/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.076962977 seconds)
    (196/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.076811025 seconds)
    (197/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.079124826 seconds)
    (198/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.078002513 seconds)
    (199/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.070979812 seconds)
    (200/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.078112652 seconds)
    (201/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.070225532 seconds)
    (202/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.172195638 seconds)
    (203/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.070245781 seconds)
    (204/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.068650806 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.096709822 seconds)
    (206/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.070172911 seconds)
    (207/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.071388588 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.124230604 seconds)
    (209/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.080214889 seconds)
    (210/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.077202608 seconds)
    (211/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.077633382 seconds)
    (212/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.07061334 seconds)
    (213/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.144825612 seconds)
    (214/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.178344561 seconds)
    (215/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.317447978 seconds)
    (216/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.207075982 seconds)
    (217/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.077551975 seconds)
    (218/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.072548604 seconds)
    (219/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.080569643 seconds)
    (220/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.080622233 seconds)
    (221/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.090443384 seconds)
    (222/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.072883895 seconds)
    (223/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.072307712 seconds)
    (224/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.072538799 seconds)
    (225/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.072098347 seconds)
    (226/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.181742788 seconds)
    (227/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.080955994 seconds)
    (228/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.082425632 seconds)
    (229/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.080383783 seconds)
    (230/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.071971835 seconds)
    (231/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.070907411 seconds)
    (232/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.072460663 seconds)
    (233/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.072210506 seconds)
    (234/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.071433503 seconds)
    (235/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.073384133 seconds)
    (236/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.071808522 seconds)
    (237/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.071709273 seconds)
    (238/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.074371581 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.13339095 seconds)
    (240/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.07055349 seconds)
    (241/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.07018689 seconds)
    (242/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.071362718 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.070754336 seconds)
    (244/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.071964323 seconds)
    (245/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.077654642 seconds)
    (246/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.072093081 seconds)
    (247/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.07042616 seconds)
    (248/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.070297304 seconds)
    (249/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.070294055 seconds)
    (250/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.146711552 seconds)
    (251/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.071319522 seconds)
    (252/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.084748079 seconds)
    (253/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.070855254 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.096728939 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.126095069 seconds)
    (256/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.079679553 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.137394164 seconds)
    (258/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.100104623 seconds)
    (259/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.071387877 seconds)
    (260/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.07004016 seconds)
    (261/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.1017026 seconds)
    (262/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.079092487 seconds)
    (263/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.173582561 seconds)
    (264/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.071013013 seconds)
    (265/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.098188762 seconds)
    (266/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.083801229 seconds)
    (267/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.075380394 seconds)
    (268/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.070135167 seconds)
    (269/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.098247778 seconds)
    (270/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.099674037 seconds)
    (271/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.071626535 seconds)
    (272/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.071644893 seconds)
    (273/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.080726035 seconds)
    (274/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.072821425 seconds)
    (275/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.070515356 seconds)
    (276/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.070394384 seconds)
    (277/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.077524098 seconds)
    (278/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.071784536 seconds)
    (279/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.079411733 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.120101868 seconds)
    (281/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.071566681 seconds)
    (282/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.071190749 seconds)
    (283/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.07033441 seconds)
    (284/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.072133347 seconds)
    (285/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.072204865 seconds)
    (286/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.073250298 seconds)
    (287/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.072114918 seconds)
    (288/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.071297626 seconds)
    (289/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.070120067 seconds)
    (290/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.074493535 seconds)
    (291/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.070183767 seconds)
    (292/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.15163915 seconds)
    (293/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.077236265 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.079879742 seconds)
    (295/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.145443936 seconds)
    (296/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.151053662 seconds)
    (297/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.140120622 seconds)
    (298/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.076767858 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.077399305 seconds)
    (300/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.07135915 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.097401788 seconds)
    (302/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.073545066 seconds)
    (303/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.071076716 seconds)
    (304/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.069674865 seconds)
    (305/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.070951247 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070328192 seconds)
    (307/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.06981902 seconds)
    (308/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.070271704 seconds)
    (309/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.072914339 seconds)
  done (took 34.771849882 seconds)
done (took 36.208038571 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.091148453 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.107585186 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.079180158 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.101058381 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.088233368 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.1033089 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.079720414 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.085070522 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.087538331 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.086403084 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.086112372 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.077392314 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.081027915 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.081198504 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.078786425 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.106243348 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.085868593 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.079718947 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.079974251 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.070472372 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.079902377 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.071457642 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.070595785 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.076938013 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.082540919 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.078617443 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.080961835 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.080938111 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.070267847 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.071345671 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.075315232 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.079902328 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.070918459 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.083656244 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.080105056 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.079918598 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.081549664 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.084064419 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.070505467 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.071119341 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.081410495 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.070617861 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.079273254 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.077598866 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.07575364 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.076967836 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.079866386 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.084719904 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.105569753 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.076097199 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.081224461 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.082026283 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.084360659 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.076294001 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.075969097 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.079682167 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.077120832 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.10522184 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.08004014 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.075775263 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.0804349 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.080315159 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.076890338 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.079708166 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.079511101 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.081940777 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.083531688 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.077312492 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.081612199 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.078325429 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.070556997 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.07921433 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.075359629 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.073154416 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.082251117 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.083672365 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.069846559 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.075343862 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.079289363 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.079707589 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.070652479 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.074981341 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.070251148 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.075152958 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.075257979 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.07628191 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.075703086 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.077698582 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.070623487 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.079987495 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.078190383 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.078367874 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.07015323 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.083939389 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.070981547 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.076688071 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.070518601 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.070820481 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.070172037 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.075570289 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.070557858 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.075020867 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.079485129 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.070214608 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.075300273 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.086116465 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.070650849 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.078583321 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.070127376 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.070509582 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.084405865 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.081541109 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.070699929 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.076506891 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.070432324 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.076424806 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.070568622 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.070883631 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.070685074 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.070548048 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.075281002 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.070777964 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.074784922 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.075995789 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.083745384 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.070408862 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.075669239 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.075130682 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.070653826 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.077611277 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.070731642 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.070440583 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.070235234 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.084496347 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.074702756 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.070767268 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.075305448 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.074551688 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.07874836 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.069638109 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.079469903 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.075990466 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.074487657 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.075899787 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.068837553 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.080642623 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.074632322 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.07366863 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.069285346 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.069868757 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.068580941 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.068805379 seconds)
done (took 13.387909463 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.074562468 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.131793966 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.101901739 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.101834778 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.091334409 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.072028658 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.07978857 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.099148752 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.073221966 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.103860338 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.095490152 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.093616973 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.119366936 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.070224852 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.070941032 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.072722527 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.072938141 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.083517928 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.101022987 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.094492159 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.114359238 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.071368099 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.092459178 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.092967456 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.089258719 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.098408427 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.072164953 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.072375704 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.07386812 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.094026315 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.097294523 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.074217855 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.072407588 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.096997104 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.091925967 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.086998818 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.072167486 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.080996599 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.072191572 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.071103185 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.073198859 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.094998394 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.081040149 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.083263499 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.072874805 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.079503873 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.073008027 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.088602175 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.090946156 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.080604488 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.087969116 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.099684054 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.075375106 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.088754692 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.070331876 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.088262013 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.082156158 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.072060039 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.071835438 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.076354363 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.071637 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.074559751 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.083040184 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.082686723 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.076131542 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.087693968 seconds)
  done (took 7.099026214 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.094168941 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.100866169 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.09053063 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.091113099 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.071344323 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.072464569 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.072222681 seconds)
  done (took 2.136999402 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.072319757 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.09604524 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.099196753 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.099586955 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.091436881 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.098065663 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.08089855 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.072296845 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.106894842 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.071353204 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.094539436 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113103219 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.076335003 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.084269965 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.101160272 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.072670604 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.099343833 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.07224881 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.073313078 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.100189889 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.077872565 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.100365858 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.083496147 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.072554822 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.086366826 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.072334257 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.129746201 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.080805486 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.073162786 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.073160792 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.072826359 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.11823089 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.085978029 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.086322522 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.072886027 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.087816707 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.08649439 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.074925236 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.083748393 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.083045909 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.086056834 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.073025029 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.070760547 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.073318998 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.075836807 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.084111693 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.070821079 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.073365202 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.072833861 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.093987796 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.07057395 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.085958214 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.077237136 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.078315307 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.077968866 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.077351028 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.081753706 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.073642136 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.094117024 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.073233735 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.092015001 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.091611451 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.086409446 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.091328266 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072715196 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.086306074 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.086507857 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.072994144 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074049912 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.073675368 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.091223768 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.075417055 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.073849404 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.084566646 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072112727 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.100875702 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.100240537 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071583313 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.0875166 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.072926259 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.073544639 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.084869966 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.100269513 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07771545 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.073321061 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.078003722 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074319932 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.075038244 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.071113882 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.075907364 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.073312836 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.078001379 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.073657728 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.076387729 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075139202 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.091840346 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.071752215 seconds)
  done (took 9.552302196 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.075382362 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.073551084 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.075579647 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.073739946 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.073846378 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.073653382 seconds)
  done (took 2.023588664 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.101766686 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.073939766 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.086832986 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.073571417 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.118044934 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.089316393 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.089671887 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.0854522 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.086783817 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.085935206 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.089317439 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.09298384 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.094172301 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.075995914 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.08894757 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.074838543 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.089492578 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.078125054 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.085949865 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07640306 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.087944984 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.075979589 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07623769 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.095295915 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.076501368 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.074715294 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.082002886 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.085673765 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.085488088 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.08560539 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.075104646 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.076438823 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.082323874 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.085104324 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.090107946 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.084846845 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073658961 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.080197553 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.076205828 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.076725754 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.092846107 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076300019 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.076915153 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.07988607 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.085252715 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.082191903 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.079784309 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.082794735 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.089055854 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.080108236 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.080194095 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.074747195 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.076533565 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.079676388 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.081723559 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.08523261 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.079984789 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.089426208 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.075643296 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.081755764 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.073258343 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.076463766 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.08483856 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075758505 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.081413323 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.079427321 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.082129321 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.075732351 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.075830474 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.073172946 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.07964259 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.073076715 seconds)
  done (took 7.467644608 seconds)
done (took 29.852047107 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.531922432 seconds)
  done (took 2.059227222 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.672463019 seconds)
  done (took 2.238060546 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.558373695 seconds)
  done (took 8.121259645 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.474466443 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.536581303 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.823252274 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.147560675 seconds)
  done (took 3.574560773 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.724578365 seconds)
  done (took 2.298652136 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.266363855 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.252194823 seconds)
  done (took 2.100767647 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.369442417 seconds)
  done (took 1.935379809 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.106116617 seconds)
  done (took 2.667654372 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.295337814 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.175881931 seconds)
  done (took 2.040041783 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.485078165 seconds)
  done (took 2.050744241 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.333854512 seconds)
  done (took 5.901462472 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.262375949 seconds)
  done (took 1.866586376 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.254770474 seconds)
  done (took 1.826059792 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.769486674 seconds)
  done (took 3.333973734 seconds)
done (took 43.587560628 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.090893667 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.092545878 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.09258248 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.088819895 seconds)
  done (took 1.910582103 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.082322729 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.077099863 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.082008279 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.076736938 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.081673802 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.076919771 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.079380133 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.08091221 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.077098163 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.077370513 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.076752494 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.076784204 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.08006641 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.079313106 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.075364436 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.080521512 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.081414469 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.077008941 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.081084495 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.076766993 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.074741157 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.080213915 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.080111654 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.075584948 seconds)
  done (took 3.455292613 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.085978849 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.080265615 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.082780347 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.078613602 seconds)
  done (took 1.902014966 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.083909867 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.099754437 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.097314095 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.084015661 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.100076122 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.094084034 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.072973619 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.07291482 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.075126749 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.08289192 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.072122281 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.103349589 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.095496848 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.082866888 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.085693313 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.070482683 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.07157064 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.094524776 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.084033021 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.083587413 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.074155879 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.083342928 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.071779392 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.095006872 seconds)
  done (took 3.607505613 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.094153327 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.072239323 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.095025477 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.101864995 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.101576976 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.072674664 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.093946248 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.10179186 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.151000751 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.072163641 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.078399498 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.072194283 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.114169822 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.072010802 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.09219814 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.116691611 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.120847536 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.075754505 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.107365228 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.072135021 seconds)
  done (took 3.460123156 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.091604584 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.075695914 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.076609836 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.071575359 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.082847089 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.079280911 seconds)
  done (took 2.064020575 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.074796861 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.07447017 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.073787063 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.073596551 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.07874751 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.076260961 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.072223834 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.074058254 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.074285801 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.073969959 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.073614342 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.07246369 seconds)
  done (took 2.472642239 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.182608211 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.075958942 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.078221182 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.072196453 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.07884105 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.073242084 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.089115746 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.075832299 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.093531606 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.072983963 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.073122522 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.075999095 seconds)
  done (took 2.622336724 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22547958 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081235902 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260895616 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163712687 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114983388 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125573994 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123540873 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125309414 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.155988617 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111299865 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183600665 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181919178 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11749885 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143980449 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095903343 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.134841993 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164746267 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1752326 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111023498 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173464684 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155080871 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134125407 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156036602 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109744362 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11376199 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128772236 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.078419484 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083802526 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186085014 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14400315 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158893443 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117170949 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099157358 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195108492 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178033509 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152548779 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15844556 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08845668 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.130972539 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.141237081 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218626161 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094518474 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174198246 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114349568 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084495076 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136112563 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127788272 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.126720713 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.113174549 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093939331 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.298637509 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201049496 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.149885694 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.091947666 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132128813 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118199537 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.124622829 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128147085 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196495883 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168845081 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135954704 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.075731718 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.119271429 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162121207 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138970112 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.118685372 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.135857114 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101879719 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144798698 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163958655 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140805117 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154757193 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.12768389 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093088602 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126858117 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148375038 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139403559 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18280573 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130415343 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.07725033 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132245882 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106126583 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086459798 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.153220679 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080517597 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183936229 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105775237 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.13237649 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139032353 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12026301 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11946735 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174100007 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156081712 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113218611 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.08990423 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111677182 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.126971816 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158661156 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092415304 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.119644571 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124403365 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.085238454 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144591018 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.078772751 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126783397 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.100187498 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132385522 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132594365 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.083379563 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126497426 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.263874122 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.107899514 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146179917 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168086891 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095043294 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086526591 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173967893 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130068702 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.111945175 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153996501 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166275836 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.130046061 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107885796 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157633509 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190951621 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096709117 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169953867 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110222057 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.088013835 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.114020093 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130188299 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121422563 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.133396736 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087034358 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.127262682 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182536967 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.078623235 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104037219 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140644618 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087386572 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086388109 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113184646 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110763969 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.103102391 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.111790003 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.114316963 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146486645 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130463602 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111912149 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136081969 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102880684 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176810758 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093705706 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.108105489 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113016308 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.07667553 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.14735398 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163542198 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083302181 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177109654 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.134542445 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124895666 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125009711 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088115626 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148756126 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083042354 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.077204504 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150345482 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117169865 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117362235 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.156051842 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120583879 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.293422138 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.128761665 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142860811 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144976921 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.134598988 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114714412 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.095174316 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121924514 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140016006 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.077917343 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.100564379 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.089146472 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111469736 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101779083 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.089413434 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153680267 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137995875 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118784079 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121076084 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104749488 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155526384 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.084395303 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138564484 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.127523544 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10270622 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.160594933 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159831583 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138590076 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109683342 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148316922 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.078123509 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078846559 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.094798092 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135927967 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088977135 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.088217646 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121470465 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156108951 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140555783 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145000467 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132584236 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131468804 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165410903 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.076892005 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.126746548 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158334237 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128086454 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.111276834 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096225091 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.106596176 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148749307 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111330952 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19642096 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119835806 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129912722 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164242169 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.105910533 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082835437 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112663931 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143627673 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107132979 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.310692988 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108614002 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09316206 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119950348 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.082972233 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109494258 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140459586 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127005409 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146721348 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.119877566 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140727625 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083418305 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120355292 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129164991 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132267422 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.087793964 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131127813 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179282167 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103914959 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129548714 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164172794 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083576349 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.148375991 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190585191 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160060838 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089164737 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113019431 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126534553 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135616843 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131356232 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150625413 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11139279 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142779857 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117599563 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.092758442 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092047631 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104955499 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114136333 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.121874542 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.115240176 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.120605661 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.101955123 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142833804 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111664529 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117808957 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124352617 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.105907829 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.103953454 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10385823 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181726102 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125538518 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187328864 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.104959534 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.155356324 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175920434 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079445321 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083473784 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.086021027 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148511615 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089854655 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136616108 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.118001726 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.278892855 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131789678 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153896493 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104382148 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.075784469 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116384903 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14374157 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131639467 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103695978 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.111776026 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1747279 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.125339834 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083850137 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124233842 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125946791 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111559898 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194134579 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.085025379 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117989744 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081215804 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085088546 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136881255 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169708565 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.093272587 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.11119563 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126396709 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119946883 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136829396 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105134983 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119298164 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138722473 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159522128 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140705944 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.096983389 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122503359 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143573608 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169067374 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112357064 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.10653986 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188260465 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159916722 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.173289472 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.09332867 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121554174 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12160621 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115344513 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146320927 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089313018 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177871798 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08778757 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146419017 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108757714 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09865355 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141025887 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.120058666 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09432211 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158497863 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122877709 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086579837 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085210676 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116175859 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.282475406 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112116519 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.079299077 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15692574 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.078041256 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144510484 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182755323 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087151183 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112221197 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104561044 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088898272 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112096082 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110967739 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092304695 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.106726611 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188831847 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.097876255 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164376942 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146474003 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12460325 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156155194 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112488709 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.654565133 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.086022728 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16000865 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125279081 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194039928 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108052636 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124816036 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116527105 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131266141 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153889262 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113824359 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.186852626 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142376286 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.123877055 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083801472 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109801847 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113538806 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.09553419 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11705607 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12079804 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123974881 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.103299929 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.124603921 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133042056 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.087926417 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10303334 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163320586 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125927058 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158597507 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151132574 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088833687 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123884272 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144592324 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084469766 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.132367413 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165516698 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11217284 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.26122149 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.090611563 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.109662218 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185806554 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.078338855 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174445752 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127065704 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116882365 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121068593 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.124782601 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140461137 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111620953 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129579609 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100820616 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.120575664 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119329635 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090857383 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.085289877 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111441148 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122874446 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.102978959 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107229757 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.10567902 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158473538 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.076091842 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106104179 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124180027 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15778697 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187248587 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.113384869 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089197792 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130280305 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12640011 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.121878852 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128723607 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.123508484 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086926529 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.088832028 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.104895938 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.133199334 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119422297 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128282064 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122736841 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178690198 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.089700605 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.237173928 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103447129 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111875338 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.092427998 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.087862954 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104284922 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103992474 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112195027 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120771016 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185635533 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.101421167 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.097528595 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101033619 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.078975117 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08975631 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135999716 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120374567 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124415106 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110265839 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.086371412 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110517725 seconds)
  done (took 63.396563469 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.115989474 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.083873749 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.105691962 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.155386317 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.135025302 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.214300676 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.160273671 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.201194755 seconds)
  done (took 2.912659679 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.074444431 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.105550911 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.110517957 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.089917604 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.073294578 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.075122701 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.263807922 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.087629711 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.07330374 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.102863216 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.086931571 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.075714105 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.478093227 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.072463892 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.073672613 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.083767263 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.07361159 seconds)
  done (took 3.696196544 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.416538634 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.602548619 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.402157401 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.081730688 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.987820189 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.095804519 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.159532582 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.144507318 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.088296847 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.526437666 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.377002857 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.139532962 seconds)
  done (took 18.729658859 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.088064655 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.085164001 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.09872876 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.098500448 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.085489642 seconds)
  done (took 2.162874063 seconds)
done (took 113.998717598 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.088581027 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.225509927 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.074907144 seconds)
  done (took 2.029794588 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.100125608 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.098784642 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.098460902 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.095998216 seconds)
  done (took 2.104477498 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.082752232 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.084640421 seconds)
  done (took 1.87123427 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.265391383 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.189810901 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.108433249 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.09097635 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.086909737 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.087011358 seconds)
  done (took 1.979251168 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.080656116 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.081670333 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.080994823 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.085542329 seconds)
  done (took 2.032277407 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.077498965 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.073909156 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.075826857 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.080933509 seconds)
  done (took 2.011605259 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.092910364 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.092654396 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.087830227 seconds)
  done (took 1.976493572 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.115842104 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.102275014 seconds)
  done (took 1.922339897 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.0897981 seconds)
  done (took 1.797244567 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.105185597 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.114456348 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.150985124 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.130805915 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.159740699 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.135559246 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.094429755 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.100194009 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.088396001 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.096057772 seconds)
  done (took 2.878717531 seconds)
done (took 22.962537489 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.088314337 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.387575239 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.369082584 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.100791068 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.681676187 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.363790145 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.999479152 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.101404953 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.119783865 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.076109785 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.095840539 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.654902834 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.991501558 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.339248281 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.977087232 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.328047542 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.658303966 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.075702681 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.074652454 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.076105392 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.980923559 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.074888895 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.076265732 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.075537 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.657757012 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.382742643 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.076694142 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.328303093 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.075842226 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.080787823 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.365783759 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.07766609 seconds)
  done (took 16.495838711 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079546961 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.135564998 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.08201354 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.09431047 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.077931168 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.077183872 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.079138047 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.076992926 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.131805942 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.076616666 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.096262724 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.075103642 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.080751544 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.077248511 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.098084336 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.075493791 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.079588833 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.077122938 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.076067373 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.077583414 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.096782738 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.076032484 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.078032715 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.076705096 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.076971423 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.090861753 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.078184933 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.076257444 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.076415073 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.082165318 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.081979578 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.078451545 seconds)
  done (took 4.415848927 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.128264471 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.142467835 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.082722446 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.116494621 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.131569936 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.077675345 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.159853412 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.102232632 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.133697139 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.076086803 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.096101499 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.075034066 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.113389678 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.078051455 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.098937844 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.076421889 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.080122286 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.076640635 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.076345297 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.077831514 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.097440898 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.07576895 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.077704717 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.076534853 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.077534822 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.092898131 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.077860656 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.076613139 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.076299096 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.081112061 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.082800749 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.078390877 seconds)
  done (took 4.700807262 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.077533936 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.080514968 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.089377305 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.090347123 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.074871148 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.076586177 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.078190701 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.075473915 seconds)
  done (took 2.374619902 seconds)
done (took 29.707793032 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.087403431 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.075852078 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.079811066 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.095061159 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.08158762 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.087587575 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.072977078 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.082342334 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.080192696 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.079807163 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.083601119 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.073773619 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.077821155 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.072655673 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.080415261 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.074076706 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.089567677 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.078521592 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.08903829 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.088961705 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.077377294 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.08124669 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.083206656 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.089557431 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.089553696 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.089184562 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.085967356 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.080462518 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.075656474 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.077499638 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.077083845 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.086890904 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.091208012 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.092385729 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.074757416 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.074751425 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.078857455 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.07693034 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.090113721 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.08512692 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.076828158 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.086041201 seconds)
  done (took 5.148468985 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.092949973 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.097839387 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.09078206 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.086208623 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.106413462 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.089758521 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.095905133 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.084118967 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.084198497 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.094859284 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.08039091 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.087318851 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.085180863 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.07971767 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.083675625 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.081458914 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.086284046 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.0804587 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.083233268 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.084319748 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.095595634 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.079441799 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.09601258 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.085730826 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.080784527 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.087786991 seconds)
  done (took 4.00862059 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.080918148 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.093757087 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.100889563 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.155440956 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.122832334 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.092497394 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.089107403 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.100377345 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.103171798 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.075080636 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.080948731 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.101209041 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.10042139 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.081447706 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.120088915 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.09067153 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.090326325 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.076949795 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.083371273 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.104236999 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.095483083 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.091910427 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.101091951 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.092017404 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.074197009 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077186632 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.080320177 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.091241203 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.077409635 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.08719463 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.07992143 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.079526103 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.075789074 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.085494833 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.079670843 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.073997831 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.098996864 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.087195814 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.087003936 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.115794196 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.084474073 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.075815535 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.101474889 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.135999479 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.07386241 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.079467794 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.07854559 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.087432014 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.07380749 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.102085777 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.087192243 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.074229698 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.075639237 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.073910843 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.074409859 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077434699 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.076346621 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.077015962 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.086049177 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.081554982 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.09611664 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.079821806 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.095295897 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.074223998 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.085731357 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.073978174 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.076265856 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.073259074 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.103900892 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076134636 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.121532032 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.075864408 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.073184399 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.087068924 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.085653766 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.080428105 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.07437969 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.095158022 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.085979669 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.079505238 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.083558889 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.078732261 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.07883595 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.104984977 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.075032442 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.074354382 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.07333678 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.081452145 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.078948083 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.075580721 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.0877802 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.074261692 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.078501731 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.096305727 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.074604815 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.075500381 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.078862529 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.077473088 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.074680482 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086427315 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.080695442 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.076047654 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.086302576 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.075953879 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.078571438 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.088575183 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.082300367 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.073426177 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.077027407 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.078936082 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.076484332 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.076083576 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.078699187 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.076545532 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.081354068 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.081855787 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.081623089 seconds)
  done (took 11.733837919 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.18639203 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.175256337 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.077083814 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.167293587 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.085203491 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.089936277 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.168042441 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.108034424 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.076785197 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.076431557 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.074982378 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.122023207 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.117742515 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.127833602 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.089421054 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.075617816 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.102415767 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.127834302 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.170711305 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.16518716 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.09932444 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.084005871 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.077555175 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.07689414 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.076555946 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.08582516 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.092647236 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.085278946 seconds)
  done (took 4.829220577 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.090627817 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.114195815 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.079806993 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.100388459 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.101214922 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.075392532 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.077876688 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.077091354 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.091533904 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.089973972 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.075258071 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.082717461 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.080048926 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.080516441 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.076230823 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.083424243 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.084720501 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.074730857 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.078996718 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.080880306 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.086715534 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.106633686 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.0828108 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.075183218 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.078477922 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.075563367 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.089222846 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.093757779 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.075387057 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.116577456 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.073348267 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.080686917 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.090849532 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.075942846 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.074973784 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.075661285 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.075282713 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.075782273 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.076043687 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.073962494 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.07373648 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.080110561 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.074129731 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.088838597 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.088115956 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.082728696 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.079138343 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.079255982 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.078202043 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.07304013 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.078318295 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.078213064 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.078521637 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.082719106 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.0800816 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.078157141 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.076457488 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.103275367 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.081616243 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.074914345 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.074820735 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.073901605 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.077712028 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.090887942 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.090469001 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.077753429 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.074315133 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.075350736 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.089767748 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.088453114 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.074607376 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.080013186 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.073119055 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.07659991 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.078038722 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.07815424 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.076753544 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.074128878 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.074928991 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.075531894 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.0759722 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.075100568 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074890245 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.078382222 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.073425519 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.074151633 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.075888939 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.080736258 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.089949622 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.075056096 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.08012099 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.076681235 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.073895907 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.078849538 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.081843949 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.078722561 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.087958804 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.091798905 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.076160082 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.073962721 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.092548806 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.082073272 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.074569071 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.081512064 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.080070411 seconds)
  done (took 10.281874711 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.0998419 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.076065199 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.092939963 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.099877592 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.086706644 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.176252869 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.086790867 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.075177331 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.092754295 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.080149105 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.082769704 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.074075951 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.087243811 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.085999145 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.076171585 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.085760585 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.078577517 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.096336199 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.091097717 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.131020739 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.084005164 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.089301759 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.087562077 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.090306591 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.089278865 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.090555572 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.088163343 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.085163041 seconds)
  done (took 4.343058637 seconds)
done (took 42.069735491 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.827636739 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.058519605 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.810075918 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.01643206 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.867843096 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.031489362 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.900050767 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.803254529 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 53.386046704 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.847859626 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.107614343 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.265538835 seconds)
done (took 112.794105776 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.830886907 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.958334328 seconds)
    (2/2) benchmarking "String"...
    done (took 2.060908378 seconds)
  done (took 5.756585298 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.003853262 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.502330478 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.071477138 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.805180401 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.810315808 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.258255554 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.581581263 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.252732362 seconds)
  done (took 31.020074873 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.981658064 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.020183651 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.509239056 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.545544839 seconds)
  done (took 15.838333038 seconds)
done (took 64.280257355 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.849709383 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.805324402 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.834598822 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.832651202 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.805131807 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.806327952 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.805036711 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.807599559 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.839490352 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 8.049471703 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.805446571 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.81944963 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.806215833 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.827835595 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.268684314 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.854522517 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.820288378 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.821741971 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.827846947 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.837362015 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.806191143 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.806148882 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.231092055 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.960843785 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.421565525 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 6.988740556 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.139310049 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.197310471 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.810099646 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.804786927 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.840617211 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 6.904114977 seconds)
  done (took 205.773846162 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.806987156 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.905291169 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.95176218 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.80916018 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.297962968 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.981195375 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.907730966 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.43120887 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.8074416 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.822165808 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.062836399 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.806660597 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.104116197 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.747509716 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.843237761 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.810881448 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.04737125 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.085202522 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.845623761 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.970640347 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.820200276 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.919202876 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.886595271 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.021540916 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.826029759 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.818223081 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.953481123 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.826729862 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.989732893 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.018260134 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.810458538 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.830278875 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.018051631 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.678117 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.829513039 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.826131316 seconds)
  done (took 171.858120326 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.991999679 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.820285555 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.807762783 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.860499812 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.933007816 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.808962627 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.492751232 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.816922407 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.24711843 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.810717493 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.808558131 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.807096833 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.808688119 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.821545164 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.919179421 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.810454318 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.821419118 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.808900139 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.833865541 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.807671751 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.80780266 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.807592426 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.807882126 seconds)
    (23/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.807316173 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.808945292 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.808215289 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.808479814 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.09962001 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.066631024 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.810198551 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.809027375 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.833744628 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.819280053 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.858246453 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.809897369 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.898899446 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.863382688 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.921817492 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.809351787 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.026498923 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.900101194 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.809471023 seconds)
    (42/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.810601332 seconds)
    (43/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.809752422 seconds)
    (44/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.873399762 seconds)
    (45/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.821004503 seconds)
    (46/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.810047096 seconds)
    (47/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.810451142 seconds)
    (48/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.816014964 seconds)
    (49/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.876128003 seconds)
    (50/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.056851656 seconds)
    (51/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.81091738 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.937552492 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.293393714 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.81040299 seconds)
    (55/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.809164033 seconds)
    (56/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.810772654 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.393427495 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.810735753 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.810681377 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.817037177 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.815989546 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.811277049 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.810516852 seconds)
    (64/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.810274635 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.196830208 seconds)
    (66/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.881339755 seconds)
    (67/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.811314701 seconds)
    (68/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.816354128 seconds)
    (69/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.024339134 seconds)
    (70/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.812011706 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.088030355 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.938007376 seconds)
    (73/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.810312163 seconds)
    (74/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.811006334 seconds)
    (75/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.811640115 seconds)
    (76/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.813344208 seconds)
    (77/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.811146168 seconds)
    (78/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.814491487 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.932279327 seconds)
    (80/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.818557869 seconds)
    (81/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.925432752 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.891860968 seconds)
    (83/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.935310512 seconds)
    (84/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.81276115 seconds)
    (85/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.820694788 seconds)
    (86/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.633426968 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.882388052 seconds)
    (88/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.846368904 seconds)
    (89/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.634210773 seconds)
    (90/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.811578224 seconds)
    (91/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.18852709 seconds)
    (92/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.57788652 seconds)
    (93/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.811866751 seconds)
    (94/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.810483746 seconds)
    (95/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.824820575 seconds)
    (96/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.811573642 seconds)
    (97/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.812309771 seconds)
    (98/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.812758059 seconds)
    (99/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.892182984 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.812537321 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.935247725 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.521502032 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.011454037 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.813418817 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.81202887 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.819211079 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.89347081 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.933910837 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.813997674 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.877979511 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.818710691 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.815786308 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.904661332 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.814168979 seconds)
  done (took 404.359022351 seconds)
done (took 785.776082842 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 3.763796355 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 3.738278045 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 3.839435344 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 3.757095616 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 3.725275593 seconds)
  done (took 20.568683935 seconds)
done (took 22.315127306 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.891865139 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.898382997 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.832636203 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.892984927 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.828882671 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.893458881 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.878754349 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.838375371 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.863410892 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.836103218 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.864354293 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.837185832 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.820151602 seconds)
  done (took 25.922627699 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.051737083 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.047605895 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.880410246 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.042746495 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.853245872 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.047766526 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.969057163 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.96174862 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.957370469 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.824779681 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.821960972 seconds)
  done (took 23.206174161 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.044826642 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.053783493 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.88390379 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.049546915 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.857287371 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.049498826 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.977822546 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.964802458 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.958817506 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.825169823 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.822085885 seconds)
  done (took 23.234946496 seconds)
done (took 74.109864702 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.818066102 seconds)
  done (took 3.565554936 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.846280408 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.990496738 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.818493954 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.818641809 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.817244296 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.818544805 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.818085771 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.814933174 seconds)
  done (took 16.492773048 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.814161747 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.815005277 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.814921265 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.814933745 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.815150033 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.81476498 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.815478944 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.814833129 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.815850472 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.816175683 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.815943661 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.814651551 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.815689128 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.814900205 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.815396826 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.81429608 seconds)
  done (took 30.788425013 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.81698854 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.814927747 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.815484002 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.814496857 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.815265264 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.81554459 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.817242493 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.816185477 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.81496285 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.816762602 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.815660335 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.815102365 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.814841885 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.81571099 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.81548442 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.816095318 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.815048919 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.815124663 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.820402577 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.815374273 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.816574414 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.815947642 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.815753414 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.815541893 seconds)
  done (took 45.330023045 seconds)
done (took 97.925337176 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.588531024 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.407267253 seconds)
  done (took 9.742402592 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.819997109 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.816752802 seconds)
  done (took 5.453236104 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.817700923 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.817627593 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.818171543 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.816696516 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.816714966 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.816774465 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.816711312 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.816441368 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.816984484 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.817577176 seconds)
  done (took 19.919235793 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.81711696 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.81781778 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.817582862 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.817228956 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.817983279 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.81803547 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.816747284 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.817158018 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.818022676 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.817499846 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.818506147 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.818375412 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.818684776 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.818019731 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.818136979 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.817545084 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.8176791 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.817125436 seconds)
  done (took 34.467617014 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.818176123 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.818328239 seconds)
  done (took 5.385398343 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.818590599 seconds)
    (2/7) benchmarking "second"...
    done (took 1.817854 seconds)
    (3/7) benchmarking "month"...
    done (took 1.818715777 seconds)
    (4/7) benchmarking "year"...
    done (took 1.81801728 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.818438364 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.819134684 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.81745614 seconds)
  done (took 14.477845603 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.819495281 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 4.563720296 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 6.829023474 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.49099979 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.819900809 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.821135319 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.734039704 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.820820984 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.823194981 seconds)
  done (took 27.471224338 seconds)
done (took 118.664053573 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.634641404 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.822000728 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.131519601 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.929519835 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.840045603 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.158399922 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.862358861 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.085935953 seconds)
done (took 43.214378168 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.835823738 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 6.815958727 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 6.831654089 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.833069377 seconds)
  done (took 22.231382793 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.819535081 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.809059185 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.840695327 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.627735961 seconds)
  done (took 22.872436724 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.191096625 seconds)
    (2/2) benchmarking "read"...
    done (took 2.163017357 seconds)
  done (took 6.108262682 seconds)
done (took 59.798737417 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.819802256 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.819459771 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.819464101 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.821242399 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.820562962 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.820445493 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.819622161 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.820264686 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.8198449 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.820339489 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.820161183 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.820379423 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.820527858 seconds)
    (14/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.819776265 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.821275212 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.820681368 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.821199826 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.820678385 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.820644737 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.821288709 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.820855513 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.820818685 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.820363163 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.822124456 seconds)
  done (took 45.444403938 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.820741767 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.822186852 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.822633975 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.821323759 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.821652188 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.821300548 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.822458796 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.821705145 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.82203009 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.821892007 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.820828373 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.821811627 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.822302653 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.822113771 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.820775426 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.822070749 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.821688348 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.822319528 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.821583061 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.822317737 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.822314058 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.822407268 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.822951786 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.822222818 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.822894883 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.821518221 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.822573468 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.822335092 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.8226495 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.823348467 seconds)
  done (took 56.414144948 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.823820125 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.82347781 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.822898897 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.823929146 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.82405103 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.82390331 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.82336409 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.824186248 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.823945863 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.824024257 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.824697299 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.823629524 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.823538405 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.824839642 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.823745711 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.823928056 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.823898878 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.824607356 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.824478967 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.824512952 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.823828856 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.823540447 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.824052969 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.823769251 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.824392376 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.823690875 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.824851965 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.824887822 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.823780084 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.824503178 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.824926354 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.824373481 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.825280571 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.824011533 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.824516925 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.824655596 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.824119859 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.825300422 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.824705228 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.824905801 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.824845122 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.824577292 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.825414616 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.826066058 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.825091496 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.825195874 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.824836445 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.825212916 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.825452028 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.825186563 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.825686259 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.825647945 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.826407741 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.825779151 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.826655273 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.824870548 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.826527475 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.826420805 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.826716308 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.826365329 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.826154481 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.82573243 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.826302645 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.826722827 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.827042941 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.826226006 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.827283224 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.82600132 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.826879098 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.827605642 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.827265636 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.828023591 seconds)
  done (took 133.157329008 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.826569891 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.827178936 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.826745125 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.826732822 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.827602388 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.826921507 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.827064146 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.827272429 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.827419962 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.826893295 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.82658684 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.827046291 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.82733218 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.827600407 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.827790582 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.827235395 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.827856363 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.827347214 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.827201283 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.827201237 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.826226568 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.827140918 seconds)
  done (took 41.954921326 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.828850187 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.827814985 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.82764644 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.828096048 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.828203689 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.827673646 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.827671927 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.828681931 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.82812911 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.828774861 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.828960237 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.828887755 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.828410645 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.830005239 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.827706536 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.828829398 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.82842077 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.829071824 seconds)
  done (took 34.670478805 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.829920048 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.82900714 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.828704382 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.829856091 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.828793153 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.829201291 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.828926708 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.829574477 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.828100032 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.830246599 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.829602058 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.829818246 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.829815697 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.829986202 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.829671935 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.829989674 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.829316092 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.829521024 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.829302366 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.82937148 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.828722185 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.830521049 seconds)
  done (took 42.007497477 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.829226506 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.829749617 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.829640499 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.830034155 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.829915879 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.829408257 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.830201905 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.829660879 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.830027561 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.829782373 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.829667799 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.830110564 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.830066154 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.830600137 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.830324948 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.830390978 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.829599801 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.830762007 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.830458192 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.830077244 seconds)
  done (took 38.36017476 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.831407511 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.830606814 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.831503059 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.831540051 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.833325062 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.830915949 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.832253782 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.831481301 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.831820617 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.831959199 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.832407488 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.831950143 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.832221061 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.832432858 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.831303541 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.832170416 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.832186813 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.831633115 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.833588593 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.831839979 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.832699949 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.832093709 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.831858717 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.832333873 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.833144471 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.832087242 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.832000819 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.832416213 seconds)
  done (took 53.059601687 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.831829912 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.83309879 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.832476744 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.831696256 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.832534937 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.831658543 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.833002576 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.833043319 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.832581625 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.832291053 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.832321582 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.832944949 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.832409416 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.833146997 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.832516857 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.833050664 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.832858911 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.832898812 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.83325703 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.832986922 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.833549502 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.833171484 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.833265113 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.833719822 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.832707886 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.833857243 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.833697695 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.833936071 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.833330424 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.834043179 seconds)
  done (took 56.751734629 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.855164973 seconds)
    (2/2) benchmarking "in"...
    done (took 1.855685444 seconds)
  done (took 5.474986854 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.83500388 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.833956844 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.832904979 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.833952435 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.834001386 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.834000092 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.834274744 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.834159934 seconds)
  done (took 16.436913252 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.835704881 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.834122216 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.833678641 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.832959658 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.834639548 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.836064505 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.843114858 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.835383967 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.836482211 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.83538892 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.842491451 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.843167242 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.838892545 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.836723742 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.836568216 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.837662697 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.834814116 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.835712602 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.834889552 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.834881231 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.835010353 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.837927301 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.8369574 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.835175426 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.837684731 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.845516273 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.839820821 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.83465167 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.83698816 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.840483879 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.836626164 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.833861608 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.835308911 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.834348139 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.834246314 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.835228537 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.845005827 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.837765457 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.841941212 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.835907007 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.835271515 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.835575452 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.837969857 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.838778625 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.838505904 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.836710197 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.835570222 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.836044899 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.836778502 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.840731751 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.843751303 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.837816915 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.83618923 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.841236634 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.839794393 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.843996995 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.837842814 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.840087693 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.846882206 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.848298861 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.850198163 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.846645613 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.840369483 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.837162146 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.846615075 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.862028927 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.845477444 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.837156091 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.837055987 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.837129651 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.844717185 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.849999127 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.848041782 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.837460273 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.83723597 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.836451131 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.838765903 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.836793404 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.845657152 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.841997425 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.837459202 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.837928176 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.848141302 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.861751856 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.838641083 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.838712061 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.837832913 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.838512149 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.839805119 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.84972263 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.838288096 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.838874025 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.838148889 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.84050576 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.84018621 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.838536272 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.84020112 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.841184334 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.83797253 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.839721159 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.839134934 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.843434031 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.849832525 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.839987438 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.839468544 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.847877367 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.839944568 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.841015962 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.847351624 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.839665732 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.839398564 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.840867615 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.847895258 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.839154076 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.843394854 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.848588655 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.839496319 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.84271678 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.839422682 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.840206013 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.849597196 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.868468046 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.839979718 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.839314805 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.844996637 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.852282369 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.840567808 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.844651035 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.840032063 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.839811685 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.839996621 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.842568842 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.841570364 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.843163446 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.841813089 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.843270316 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.840434244 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.840216286 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.840470363 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.842877253 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.842229604 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.842789566 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.842438778 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.844746225 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.842032212 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.845511743 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.848560378 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.843088861 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.844334997 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.843803112 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.840536618 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.842271631 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.844841692 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.842745719 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.843393693 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.841896613 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.843152518 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.842298428 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.84233538 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.842414 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.841495647 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.842878097 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.848152835 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.84317539 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.847015614 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.842735973 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.842093353 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.842915708 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.842163944 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.843985034 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.8428217 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.843032563 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.846825116 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.849565726 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.842932447 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.843360842 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.847088886 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.843368693 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.843523376 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.843138449 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.84745872 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.852322844 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.843466283 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.850345846 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.843451076 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.843643789 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.843917976 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.846200142 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.844811094 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.84319415 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.848290759 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.851012527 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.855520777 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.85426648 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.845202767 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.848013668 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.845446117 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.847938269 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.848693412 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.844079475 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.844815973 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.844580951 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.84603678 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.844441522 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.84668037 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.844753406 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.844606667 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.844260665 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.844111075 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.845172611 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.845863327 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.846923109 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.846819832 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.843951008 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.844055491 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.845903208 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.847272839 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.844653674 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.845051227 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.845516725 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.844873403 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.845892696 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.854085786 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.845793179 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.849270217 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.848373235 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.846649471 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.845180547 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.844944939 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.848955 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.847252062 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.852790601 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.84776758 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.848514492 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.854088539 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.84725262 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.845713353 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.849900462 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.845981327 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.845789062 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.850260074 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.854545213 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.845938309 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.846060382 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.845321717 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.84804168 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.846888804 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.853780032 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.8462502 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.8478482 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.845846291 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.849305375 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.846591883 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.850077681 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.849150562 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.84948725 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.850988421 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.848263408 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.848256877 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.849632131 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.848173005 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.848065885 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.848513831 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.852348272 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.856316647 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.854150482 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.848766515 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.850661244 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.849273091 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.85161839 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.85067592 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.848318657 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.849523366 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.860609444 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.856201149 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.855304577 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.851541743 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.847711779 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.855010183 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.84986087 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.853765398 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.849962893 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.850628573 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.850636834 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.852050809 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.847819798 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.8505623 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.848840967 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.851797641 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.850845104 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.852944662 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.849177979 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.849420869 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.849138776 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.849162288 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.84914281 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.8503931 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.849135284 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.853168828 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.852010041 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.849411965 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.850918462 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.856865372 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.851981246 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.851790376 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.85248201 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.851371658 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.849659025 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.852183571 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.849087355 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.854673207 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.858378409 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.854585476 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.860957864 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.851750092 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.8618901 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.851610661 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.855506047 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.859306531 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.850611857 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.850734571 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.852703318 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.851839043 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.858677999 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.851701996 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.853501443 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.855271775 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.851342553 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.851327657 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.85177945 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.852555568 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.851166749 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.851504048 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.860152586 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.853096442 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.858585195 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.856017964 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.852281147 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.852003649 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.851060632 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.851456245 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.85655557 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.851767456 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.853806649 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.853107014 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.852571971 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.851341954 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.851011358 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.851518695 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.851425226 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.852380674 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.860076151 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.855045318 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.857078561 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.851924192 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.863379631 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.852941728 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.860642846 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.854313817 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.854198209 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.8524965 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.851389854 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.855256315 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.85371661 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.855349353 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.853080286 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.855092373 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.858078688 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.853538684 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.857499998 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.85552964 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.854561461 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.856301017 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.863892445 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.878311072 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.856403758 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.857946714 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.854769683 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.856246865 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.859977183 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.854765533 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.853144051 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.857370824 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.86500106 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.861915519 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.855287217 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.854592449 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.856452043 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.854649496 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.853515884 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.853560158 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.85414962 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.853979019 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.855578561 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.854498269 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.859383035 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.85453787 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.856390515 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.858055934 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.856965679 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.867174949 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.854973279 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.857352852 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.854143344 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.855561479 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.856865526 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.857800754 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.85571394 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.858690677 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.855486759 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.857911454 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.863466504 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.863241008 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.860193048 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.857253308 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.856762195 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.857814138 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.857019471 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.856505156 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.855167813 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.856529047 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.859424132 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.856623478 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.85841502 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.855984217 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.855184917 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.858274732 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.856201499 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.860519204 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.867721483 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.858452967 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.856738502 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.857349769 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.857102665 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.858744392 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.860227818 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.867025551 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.862623399 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.86921681 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.866713787 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.863334557 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.859967142 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.862302293 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.867885284 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.856844379 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.859180864 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.857070978 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.860210438 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.858558953 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.863232364 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.859447345 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.865280589 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.859960184 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.859230631 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.8684368 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.861891361 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.858612707 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.85970379 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.864038109 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.859665702 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.857939863 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.859575923 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.859248514 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.865199552 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.861896403 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.858606274 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.86202978 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.859197967 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.860564681 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.864010885 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.859688884 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.860719225 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.858469453 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.862121091 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.859495046 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.858907115 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.859063374 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.860506965 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.859838843 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.863918553 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.868512961 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.858940393 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.864223474 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.862460002 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.86164336 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.860847257 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.861352774 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.859977359 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.860860239 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.861720296 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.862184441 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.863062091 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.863671759 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.860588702 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.862013989 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.865175039 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.860592696 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.866222108 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.872015309 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.868552822 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.858910484 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.860548086 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.861716428 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.865354835 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.860976495 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.860393881 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.863169495 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.864000201 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.860749201 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.861752008 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.862132859 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.865831725 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.878087263 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.863799812 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.863137694 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.863369561 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.867507152 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.861249862 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.862081549 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.863220652 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.864838682 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.865027876 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.869957391 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.861556959 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.870609461 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.864536582 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.863877492 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.867710243 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.866147676 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.87153276 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.867484641 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.862491004 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.863279031 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.869556199 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.879870575 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.863473722 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.87380746 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.894758105 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.864260598 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.864676017 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.863944743 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.864289457 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.864131175 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.866365957 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.862525149 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.86521713 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.864571649 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.86379134 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.866089185 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.871552866 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.867611392 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.865399971 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.863441607 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.86491859 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.866551929 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.86342096 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.864300113 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.864979074 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.864615993 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.863954109 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.865318666 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.865740103 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.875825634 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.875881784 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.863894254 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.865028002 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.863660441 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.870100547 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.868500156 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.877095663 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.873189038 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.86617663 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.864460369 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.868792595 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.866911619 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.864586296 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.867709768 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.866849367 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.866322905 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.864305066 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.878328715 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.874149279 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.871646799 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.866332835 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.867936348 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.866770508 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.867677448 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.867741995 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.866652319 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.870286785 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.867097455 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.871915878 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.866767083 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.86588025 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.870211317 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.874393677 seconds)
  done (took 1105.801189583 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.867237897 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.865860222 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.867094993 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.866860696 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.866831059 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.867893633 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.868436467 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.870191312 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.867017344 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.869464961 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.866144642 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.867008359 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.867643675 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.86829524 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.869030532 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.866442025 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.8669615 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.867105887 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.868460938 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.868174344 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.866905695 seconds)
  done (took 41.015146394 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.866683292 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.867282687 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.868754083 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.86978756 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.8677028 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.868600012 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.866725876 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.867749372 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.868820744 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.867398351 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.868043023 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.868118458 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.868778998 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.868159823 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.869312947 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.869424197 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.87255463 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.869126425 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.867893458 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.869410804 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.867974175 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.869215904 seconds)
  done (took 42.905476759 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.869629345 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.870651228 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.87120772 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.869213247 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.869599516 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.870688477 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.870970499 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.869738512 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.869355803 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.871815677 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.870787275 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.871694296 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.879141133 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.877388615 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.872630207 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.870147859 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.017300533 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.871157111 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.869545263 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.868957302 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.869904994 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.87635631 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.870088215 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.868983483 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.869397504 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.87123905 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.871270909 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.87092504 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.869035292 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.87260305 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.875557474 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.869756588 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.871843993 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.875694006 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.871251805 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.872188441 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.876766988 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.871886435 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.869618354 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.871808868 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.882804264 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.896157515 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.873065404 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.878317124 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.872174391 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.871252934 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.876148708 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.880362589 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.871628391 seconds)
  done (took 93.709488049 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.870583056 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.872576315 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.87113447 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.871437199 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.872409037 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.871475798 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.872035777 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.874681896 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.872958768 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.87337136 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.874302528 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.871681447 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.873106671 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.872657064 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.872408419 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.873799392 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.873239296 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.873048453 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.871986811 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.873368906 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.873516064 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.875494708 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.873860082 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.874394643 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.874070989 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.874004985 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.872576701 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.873269236 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.874878395 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.874616508 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.874065273 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.873158565 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.874607698 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.87416509 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.874174356 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.873811399 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.873315693 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.874089139 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.874362747 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.873584133 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.874092156 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.872497464 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.873173347 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.872860206 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.871672851 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.873225404 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.873972643 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.873088661 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.875706718 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.873384094 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.87319027 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.873388627 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.872932428 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.872802893 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.872966646 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.874078305 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.875509218 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.873086297 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.8745955 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.873908285 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.873409055 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.876078105 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.874216071 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.87332065 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.875782266 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.87404762 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.874605549 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.874362221 seconds)
  done (took 129.20019534 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.881043079 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.874016712 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.873725885 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.873022827 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.873766609 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.873888721 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.875564376 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.873228146 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.873252193 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.873169993 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.872525823 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.874437683 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.873689077 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.872859708 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.874596029 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.873201953 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.874887843 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.874489573 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.872982466 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.875247004 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.875106064 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.875802723 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.877038689 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.875706767 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.876413812 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.876986849 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.877825958 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.876265389 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.877898859 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.877770966 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.878579442 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.87618793 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.876991906 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.876181456 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.877158904 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.877301347 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.877440265 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.877703177 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.878835535 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.879138823 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.877443017 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.876749567 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.877310931 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.877466318 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.876402502 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.876700169 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.877026771 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.877134329 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.878355825 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.875323768 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.876513956 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.877320917 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.876835238 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.876412258 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.872695645 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.868570287 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.87010342 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.870309335 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.870362739 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.870160295 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.869461283 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.869462969 seconds)
  done (took 118.07109236 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.868991364 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.870172629 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.863695299 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.864247437 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.86462523 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.865076531 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.86494956 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.864820046 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.864018447 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.863254811 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.864205555 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.864776742 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.866421584 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.864557823 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.864243714 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.866167127 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.864921465 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.865477003 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.86495688 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.865119774 seconds)
  done (took 39.103524064 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.863994719 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.865291152 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.865449538 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.864428584 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.864788084 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.864226022 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.864130587 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.866264234 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.864298213 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.863684417 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.863814735 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.864814637 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.865886223 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.865495179 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.863359551 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.863375319 seconds)
  done (took 31.627375483 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.864088755 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.863958966 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.863459085 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.863561617 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.861522824 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.862332875 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.863606182 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.862014539 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.862217178 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.862441257 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.861961872 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.862548952 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.862951453 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.861040854 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.861198272 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.8614123 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.861122964 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.862197981 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.861060273 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.86217915 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.861839121 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.861885672 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.862137897 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.861163331 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.862421463 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.861977031 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.86321616 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.861780832 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.862102843 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.862031242 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.860956156 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.861551271 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.861936515 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.861719556 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.862035385 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.862085936 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.861730508 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.861907484 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.862129872 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.862946045 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.862179638 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.862361372 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.862567652 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.862982848 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.865763232 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.862248695 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.862554215 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.862883122 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.862411589 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.863752607 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.863429353 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.863685615 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.863042233 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.862965965 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.863752043 seconds)
  done (took 104.227372099 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.862517727 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.862646393 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.861486896 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.861284816 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.863584176 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.863537333 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.862908224 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.863029677 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.863009677 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.863031208 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.863224034 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.862536599 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.863066635 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.862657366 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.863144946 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.864105641 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.862817641 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.862927063 seconds)
  done (took 35.324566982 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.863489663 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.865133315 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.863570638 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.862959987 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.8620055 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.863550416 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.863138746 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.863487802 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.862310859 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.863219369 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.862518671 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.86332211 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.862088138 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.859805106 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.859892817 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.859495019 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.859689407 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.861452793 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.856563721 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.856209196 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.856585351 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.856383174 seconds)
  done (took 42.739620817 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.857650476 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.856260807 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.871036878 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.876691741 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.877470499 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.891686418 seconds)
  done (took 13.016707165 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.856723403 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.857015918 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.856120474 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.856768095 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.858183696 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.856018425 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.855855565 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.855601769 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.856134687 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.856982906 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.855637868 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.854396526 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.854925082 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.855291487 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.857019414 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.854258718 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.85363663 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.853965623 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.853458504 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.853823789 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.854347287 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.852193636 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.853105131 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.851993029 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.851878559 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.852142156 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.851356394 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.854417012 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.852195753 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.852719848 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.853467272 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.851744193 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.85193957 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.852887997 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.851925415 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.852457407 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.852862882 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.852639822 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.852000798 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.85268838 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.851749182 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.853110477 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.851812241 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.852748341 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.852091631 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.852010084 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.852919758 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.85451874 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.852087747 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.852404352 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.852047982 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.852856113 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.853567151 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.852818503 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.853105123 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.852778348 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.853038793 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.853261777 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.851749262 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.852428338 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.85249147 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.853431732 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.851931483 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.853563824 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.851409464 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.850987041 seconds)
  done (took 124.115558531 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.851857504 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.853156815 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.850367123 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.852014575 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.85100386 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.851013017 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.850898877 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.851874586 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.850534179 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.851657253 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.851422425 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.852360452 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.852195436 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.851062208 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.851701071 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.851296955 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.851628079 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.851863727 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.851377248 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.85164796 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.851867712 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.851492282 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.852143046 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.852145735 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.851611427 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.852037519 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.851337373 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.851350064 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.852902889 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.85181717 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.85151591 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.851605629 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.8510178 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.851581687 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.85215182 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.851830915 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.851665505 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.85124298 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.851690279 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.853581674 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.851685381 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.850503874 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.85142406 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.851841335 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.852217241 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.853602004 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.851565594 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.851635966 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.851642816 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.851935959 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.852797533 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.851617654 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.852316486 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.852245768 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.852168137 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.85201222 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.85208208 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.851788479 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.852506044 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.851642684 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.851903407 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.852284889 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.852148293 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.851034913 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.851292989 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.851953857 seconds)
  done (took 124.000420296 seconds)
done (took 2570.345746071 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.908144774 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.858055372 seconds)
  done (took 15.54608736 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.013507906 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.96814908 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.852422115 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.879318865 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.85195579 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.874158181 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.859905246 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.852549236 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.851181253 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.853050777 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.851429756 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.035301965 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.864781571 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.852325115 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.85130659 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.944157785 seconds)
  done (took 52.039662239 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.854391797 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 3.212514398 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.862834082 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.857594817 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.854782037 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.866313946 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 3.253339652 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.857780006 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.887007544 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.865839323 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.920031323 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.863668463 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.853132556 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.90214791 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.867134152 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.867710838 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.947793972 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.92835169 seconds)
  done (took 38.303106423 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.929134549 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.857936532 seconds)
  done (took 10.572180677 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.856513767 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.859710688 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.849061095 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.864504285 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.882706636 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.884117229 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.872213765 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.863937037 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.84890472 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 7.053610515 seconds)
  done (took 70.616619512 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.867864662 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.865497579 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.862388139 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.861021352 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.858391114 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.869879746 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.86183465 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.866080044 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.538770582 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.911774378 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.86998226 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 3.230382309 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.864124177 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.863091249 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.860570263 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 3.2549624 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.972104152 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.860533581 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.858925875 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.868074647 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.863155654 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.922270079 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.877708501 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.863553223 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.894261107 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.529942313 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.871056828 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.869760434 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.972905164 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.860210484 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.863100876 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.053611837 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.8665647 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 3.781173067 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 3.677212117 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.869387469 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.873882431 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.869806597 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.861338015 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.979002124 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.863470572 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.868373728 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.781497026 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 3.658471277 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.959741557 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.908169444 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.178601344 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.882086041 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.864390686 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.891988389 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.869310397 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.863230334 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 3.23743512 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.362979106 seconds)
  done (took 141.065075715 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.860300236 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.207006501 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.027902814 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.862477696 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.144771778 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.068037547 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.863588341 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.90857403 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.863640423 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.09200211 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.120857615 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.966649434 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.863334226 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.862439778 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.863463918 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.861282636 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.015354354 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.932305713 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.865280259 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.861319454 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.888165717 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.102657736 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.983674198 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.865850715 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.888261621 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.071162598 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.983557831 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.966016113 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.639407093 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.860752104 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.923701568 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.865084467 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.862500011 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.864131896 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.017973151 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.956400678 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.950194425 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.864996471 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.863087723 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.863271872 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.607737143 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.060781599 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.957334665 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.993202229 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.113509558 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.066938913 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.642157483 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.862161315 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.602392747 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.024951599 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.091059126 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.090354911 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.982683199 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.865991621 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.13001745 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.863173851 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.861979339 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.112322643 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.083135847 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.959843853 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.866895921 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.863105241 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.863083062 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.15410341 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.865453208 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.957881999 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.868566902 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.863549948 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.958944012 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.961515681 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.093311546 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.078099775 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.893540305 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.203626017 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.371937964 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.108627818 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.930404921 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.113634126 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.865982775 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.864074256 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.941969612 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.704100494 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.117565472 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.147427215 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.107956071 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.898246288 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.583562865 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.863867069 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.088587119 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.085027809 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.567516459 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.107956523 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.103818571 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.168664293 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.864112801 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.864738871 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.130355106 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.989978412 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.86684663 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.211967291 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.09351753 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.395464007 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.891183496 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.166907366 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.99680951 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.867560815 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.50096186 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.866111989 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.092710752 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.903756051 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.86644206 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.86728936 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.083463919 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.852969436 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.866354344 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.743139692 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.926616017 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.871623026 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.0976757 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.870898649 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.132118351 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.870772851 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.096381243 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.90249706 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.896373182 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.039320506 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.110186081 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.868829493 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.105393033 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.108617477 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.981654341 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.138076503 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.766566662 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.866496289 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.151058929 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.869296948 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.866919858 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.036433502 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.868589464 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.008718725 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.868998806 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.160201316 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.889395011 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.097430809 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.872329049 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.119767547 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.89955838 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.916760701 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.870074706 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.997038756 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.870913677 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.775966319 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.022699731 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.871539003 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.868961432 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.414785279 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.870525428 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.015214042 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.093214883 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.889025995 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.939913493 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.532850913 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.867816492 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.94732119 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.891179568 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.2506668 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.868057289 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.121668383 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.871351526 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.868363033 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.86791699 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.153633395 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.104338527 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.871040569 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.869234372 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.771093643 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.868786609 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.868849011 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.048544758 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.203655024 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.869063586 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.069406202 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.872761078 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.99641241 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.871754816 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.95355081 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.200483314 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.868795865 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.870251902 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.870470162 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.869810953 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.870039776 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.075985199 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.894003024 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.359449777 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.006671456 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.139377088 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.178505485 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.109995438 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.911825955 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.873117209 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.130104212 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.871322841 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.93258008 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.872490427 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.889518169 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.096731692 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.874584083 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.077388503 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.139550274 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.717264256 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.917718101 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.87304149 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.873017616 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.871526142 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.015187327 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.956908404 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.873211991 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.873740668 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.984910797 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.993570098 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.078610252 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.872084134 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.949812878 seconds)
  done (took 903.469416706 seconds)
done (took 1233.395015861 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.872792279 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.873755515 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.872261057 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.873236062 seconds)
  done (took 29.29409723 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.874321395 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.872598771 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.874416868 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.873853061 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.873510855 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.872900807 seconds)
  done (took 13.042342194 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.940937154 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.874050885 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.87303249 seconds)
  done (took 21.48936751 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.945551599 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.258973297 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.007345839 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.289000047 seconds)
  done (took 10.30185737 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.876098169 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.872683477 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.872715624 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.875517323 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.874731554 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.876912738 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.873982648 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.875782176 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.874973342 seconds)
  done (took 18.676583527 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.875560304 seconds)
done (took 98.480045364 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.898375008 seconds)
    (2/309) benchmarking ("sort", Int8, false)...
    done (took 4.740765336 seconds)
    (3/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.175547227 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.943425989 seconds)
    (5/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.972283468 seconds)
    (6/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.126848019 seconds)
    (7/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.606953149 seconds)
    (8/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.876097347 seconds)
    (9/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.875114887 seconds)
    (10/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.512416633 seconds)
    (11/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.87636626 seconds)
    (12/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 3.493166361 seconds)
    (13/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.985573358 seconds)
    (14/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.958465176 seconds)
    (15/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.106057566 seconds)
    (16/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.88288825 seconds)
    (17/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.329309436 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.194498932 seconds)
    (19/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.02155896 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.20156817 seconds)
    (21/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.042194005 seconds)
    (22/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.956622812 seconds)
    (23/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.234908195 seconds)
    (24/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.883582057 seconds)
    (25/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.993915951 seconds)
    (26/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.998859862 seconds)
    (27/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.013077072 seconds)
    (28/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.905063786 seconds)
    (29/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.981124834 seconds)
    (30/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.098029118 seconds)
    (31/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.648973792 seconds)
    (32/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.087932464 seconds)
    (33/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.224473673 seconds)
    (34/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.968859676 seconds)
    (35/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.123816412 seconds)
    (36/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.88289335 seconds)
    (37/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.880903908 seconds)
    (38/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.979988332 seconds)
    (39/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.980036444 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.274803423 seconds)
    (41/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.012835149 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.189600078 seconds)
    (43/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.962815322 seconds)
    (44/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.617454813 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.881719176 seconds)
    (46/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.992341303 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.141151303 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.847497987 seconds)
    (49/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.061475449 seconds)
    (50/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.138347946 seconds)
    (51/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.958033855 seconds)
    (52/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.96931919 seconds)
    (53/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.882719771 seconds)
    (54/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.9834416 seconds)
    (55/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.658212012 seconds)
    (56/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.958490076 seconds)
    (57/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.030508508 seconds)
    (58/309) benchmarking ("sort", Bool, false)...
    done (took 2.094933118 seconds)
    (59/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.940358731 seconds)
    (60/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.088025083 seconds)
    (61/309) benchmarking ("sort", Int64, false)...
    done (took 5.604154874 seconds)
    (62/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.133014003 seconds)
    (63/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.130218596 seconds)
    (64/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.880066305 seconds)
    (65/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.979270746 seconds)
    (66/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.036560879 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.499235132 seconds)
    (68/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.90448791 seconds)
    (69/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.111548423 seconds)
    (70/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.411936709 seconds)
    (71/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.366787036 seconds)
    (72/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.975205337 seconds)
    (73/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.879932177 seconds)
    (74/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.984921608 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.768601527 seconds)
    (76/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.33729743 seconds)
    (77/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.889447704 seconds)
    (78/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.972999705 seconds)
    (79/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.227932022 seconds)
    (80/309) benchmarking ("sort", BigInt, false)...
    done (took 6.882573014 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.144036296 seconds)
    (82/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.964371356 seconds)
    (83/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.897424227 seconds)
    (84/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.064199014 seconds)
    (85/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.163071929 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.781495147 seconds)
    (87/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.180100342 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.018696679 seconds)
    (89/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.881009095 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 4.551996678 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.99133816 seconds)
    (92/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.958719727 seconds)
    (93/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.959644063 seconds)
    (94/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.881840556 seconds)
    (95/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 2.096007874 seconds)
    (96/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.879723037 seconds)
    (97/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.298137275 seconds)
    (98/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.886942785 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.786923159 seconds)
    (100/309) benchmarking ("sort", Float32, false)...
    done (took 5.574594348 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.50699626 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.573316283 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.164069695 seconds)
    (104/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.89789404 seconds)
    (105/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.144336304 seconds)
    (106/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.890507464 seconds)
    (107/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.898266036 seconds)
    (108/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.040763455 seconds)
    (109/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.889344675 seconds)
    (110/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.027832836 seconds)
    (111/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.891586741 seconds)
    (112/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.013102696 seconds)
    (113/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.885311405 seconds)
    (114/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.216523502 seconds)
    (115/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.237204013 seconds)
    (116/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.259592304 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.004723003 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.014283551 seconds)
    (119/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.965351935 seconds)
    (120/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.886431785 seconds)
    (121/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.414637257 seconds)
    (122/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.059598926 seconds)
    (123/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.173492443 seconds)
    (124/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.882819623 seconds)
    (125/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 2.015355985 seconds)
    (126/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.252308555 seconds)
    (127/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.889765296 seconds)
    (128/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 2.052139465 seconds)
    (129/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.320146243 seconds)
    (130/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.918278868 seconds)
    (131/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.189577987 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.017802889 seconds)
    (133/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.91857434 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.135040245 seconds)
    (135/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.128621388 seconds)
    (136/309) benchmarking ("sort", Float64, false)...
    done (took 5.665419473 seconds)
    (137/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.123335119 seconds)
    (138/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.06482656 seconds)
    (139/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.128617204 seconds)
    (140/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.988061 seconds)
    (141/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.91101228 seconds)
    (142/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.176853777 seconds)
    (143/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.888599583 seconds)
    (144/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.290875248 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.88712246 seconds)
    (146/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 3.3165062 seconds)
    (147/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.712393351 seconds)
    (148/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.198156131 seconds)
    (149/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.088170839 seconds)
    (150/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.012180654 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.924273622 seconds)
    (152/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.276248217 seconds)
    (153/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.013245213 seconds)
    (154/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.070854051 seconds)
    (155/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.90788433 seconds)
    (156/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.260470543 seconds)
    (157/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.141322514 seconds)
    (158/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.888449639 seconds)
    (159/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.738496678 seconds)
    (160/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.888564347 seconds)
    (161/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.323413729 seconds)
    (162/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.037979673 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.577345453 seconds)
    (164/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.981368964 seconds)
    (165/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.886663851 seconds)
    (166/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.985535649 seconds)
    (167/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.769431107 seconds)
    (168/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.101535768 seconds)
    (169/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.373961805 seconds)
    (170/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.215686843 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.021109042 seconds)
    (172/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.88434608 seconds)
    (173/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.054559072 seconds)
    (174/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.896301662 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 2.010463098 seconds)
    (176/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.114254453 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.988848348 seconds)
    (178/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.889133108 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.898298715 seconds)
    (180/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.149219372 seconds)
    (181/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.952093934 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.027366715 seconds)
    (183/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.004016028 seconds)
    (184/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.438974075 seconds)
    (185/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.895541936 seconds)
    (186/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.364887026 seconds)
    (187/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.890084016 seconds)
    (188/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.97862937 seconds)
    (189/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 2.525728583 seconds)
    (190/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.061938304 seconds)
    (191/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.982384978 seconds)
    (192/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.886885681 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.204873554 seconds)
    (194/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.132572892 seconds)
    (195/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.125535112 seconds)
    (196/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.902413968 seconds)
    (197/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.909655792 seconds)
    (198/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.901760662 seconds)
    (199/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.887009952 seconds)
    (200/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 3.499115906 seconds)
    (201/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.044693238 seconds)
    (202/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.997144541 seconds)
    (203/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.043289655 seconds)
    (204/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.043409504 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.678990344 seconds)
    (206/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.198835432 seconds)
    (207/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.899333363 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.973643362 seconds)
    (209/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.955134122 seconds)
    (210/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.93962956 seconds)
    (211/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.218649985 seconds)
    (212/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.887292315 seconds)
    (213/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.792958212 seconds)
    (214/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.032212554 seconds)
    (215/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.893119359 seconds)
    (216/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.206252273 seconds)
    (217/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.029710171 seconds)
    (218/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.275053003 seconds)
    (219/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.905063672 seconds)
    (220/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.911466534 seconds)
    (221/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.698471387 seconds)
    (222/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.047142376 seconds)
    (223/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.052903461 seconds)
    (224/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.997214407 seconds)
    (225/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.891363729 seconds)
    (226/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.180776858 seconds)
    (227/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.913803837 seconds)
    (228/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.905782275 seconds)
    (229/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.912211117 seconds)
    (230/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.095581229 seconds)
    (231/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.224816288 seconds)
    (232/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.895818537 seconds)
    (233/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.168020721 seconds)
    (234/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.03380578 seconds)
    (235/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.955910912 seconds)
    (236/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.373138725 seconds)
    (237/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.187038586 seconds)
    (238/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.89737373 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 3.631822255 seconds)
    (240/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.29610908 seconds)
    (241/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.986878594 seconds)
    (242/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.893671495 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.332975957 seconds)
    (244/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.269075508 seconds)
    (245/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.915224413 seconds)
    (246/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.891557478 seconds)
    (247/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.151619793 seconds)
    (248/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.059131086 seconds)
    (249/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.061947484 seconds)
    (250/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.158462746 seconds)
    (251/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.894308072 seconds)
    (252/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.128198791 seconds)
    (253/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.893023142 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 4.195804463 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.90352512 seconds)
    (256/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 2.013964461 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.989906169 seconds)
    (258/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.769016048 seconds)
    (259/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.002863726 seconds)
    (260/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.264128061 seconds)
    (261/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.868487918 seconds)
    (262/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.921831467 seconds)
    (263/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.790973704 seconds)
    (264/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.231993541 seconds)
    (265/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.514274296 seconds)
    (266/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.900056673 seconds)
    (267/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 2.033250982 seconds)
    (268/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.765942635 seconds)
    (269/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.897504005 seconds)
    (270/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 8.170168532 seconds)
    (271/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.300677466 seconds)
    (272/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.34025148 seconds)
    (273/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.311954452 seconds)
    (274/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.892279017 seconds)
    (275/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.840400051 seconds)
    (276/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.200016783 seconds)
    (277/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.915704122 seconds)
    (278/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.818958739 seconds)
    (279/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.921171617 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.021135086 seconds)
    (281/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.180683805 seconds)
    (282/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.238322852 seconds)
    (283/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 7.040860876 seconds)
    (284/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.89796656 seconds)
    (285/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.378140304 seconds)
    (286/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.897424258 seconds)
    (287/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.992994393 seconds)
    (288/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.954923365 seconds)
    (289/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.108277081 seconds)
    (290/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.959536189 seconds)
    (291/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.39297563 seconds)
    (292/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.895725417 seconds)
    (293/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.905874003 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.730384899 seconds)
    (295/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.893636699 seconds)
    (296/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.897063503 seconds)
    (297/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.922777031 seconds)
    (298/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.972107991 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.923271907 seconds)
    (300/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.045747577 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.567681637 seconds)
    (302/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.048238231 seconds)
    (303/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.893818255 seconds)
    (304/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 3.27103581 seconds)
    (305/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.08408942 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.109933959 seconds)
    (307/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.079813865 seconds)
    (308/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.234710369 seconds)
    (309/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.977735362 seconds)
  done (took 1011.396358493 seconds)
done (took 1013.259400393 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.922540013 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.916841926 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.899343979 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.920742434 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.012701022 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.946419388 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.912406507 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.904436861 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.950060999 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.950894992 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.898865496 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.943129248 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.902109753 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.901411133 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.899789875 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.916762247 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.194747327 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.927808117 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.918045928 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.911868814 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.916985027 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.897126626 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.950845406 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.943160679 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.90348068 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.906634324 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.904407029 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.920225289 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.013999041 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.904912753 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.905588134 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.913600828 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.19553671 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.926120329 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.89886022 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.920193364 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.913945046 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.913029777 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.907016699 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.93382299 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.286812941 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.93382992 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.902051285 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.902434812 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.902546628 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.908392715 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.90076063 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.910117266 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.918467159 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.918939563 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.281008833 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.952697644 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.90587389 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.904562495 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.915497871 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.902316505 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.906439484 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.918327453 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.923589736 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.919734308 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.182568811 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.936039489 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.906906545 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.921318629 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.911499935 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.316592706 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.934850998 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.910425675 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.288941252 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.945079578 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.318689684 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.947732018 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.906256539 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.920065924 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.937127607 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.196346931 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.927745462 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.902902079 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.914891621 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.902303737 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.91736692 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.919659566 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.907353281 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.904177376 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.92140454 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.95015715 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.916399871 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.904295886 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.915767449 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.924511396 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.91293957 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.916742924 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.907600984 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.902364254 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.918622135 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.908632687 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.907484594 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.908019866 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.909539837 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.918679227 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.286152369 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.955204622 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.901889801 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.901903314 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.905818611 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.920704352 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.286190314 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.938962602 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.928133581 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.956638702 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.906463667 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.185656341 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.934256696 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.922585986 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.918963346 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.908403511 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.904331161 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.186034145 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.311804987 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.956893659 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.906904971 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.905090952 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.922984977 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.907881851 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.904155296 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.199606038 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.934044542 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.922333828 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.029446269 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.919553293 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.93852073 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.904789279 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.909513429 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.954653622 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.923465473 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.940197378 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.908998713 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.92308376 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.923652639 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.904571368 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.919194703 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.920233782 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.906913342 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.915183125 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.904809558 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.955354005 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.922284085 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.922406413 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.929034403 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.030005579 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.906773895 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.188091696 seconds)
done (took 299.023454549 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.984538212 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.903307078 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.998838315 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.90412923 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.995502102 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.977363257 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.903170202 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.903106323 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.903775036 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.39301724 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.903996035 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.911142968 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.904401277 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.904960153 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.976001204 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.904533018 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.904485808 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.341526245 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.90500921 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.984301575 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.903244514 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.90389099 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.904755507 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.394580828 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.905027193 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.904413397 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.985263872 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.904595046 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.344626215 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.90559422 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.90448533 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.34361735 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.986034579 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.932786923 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.912770678 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.912545477 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.993877285 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.913569231 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.974201091 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.973816431 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.999282347 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.937820113 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.90570089 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.904692309 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.909380988 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.907855002 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.906845457 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.937949081 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.905313816 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.910625448 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.343047786 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.911668482 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.91370934 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.906230787 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.905427247 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.934088726 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.905993949 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.907498313 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.986890508 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.906803831 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.976702955 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.396418915 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.396260329 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.906801594 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.905358935 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.906541848 seconds)
  done (took 187.577985692 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.971999836 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.984006892 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.972274747 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.90984155 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.956108557 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.974067222 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.91065611 seconds)
  done (took 15.512957569 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.914588223 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.908005557 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.959775271 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.95953005 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.907936521 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.063439191 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.90741003 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.918960688 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.91241743 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.935062658 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.909178174 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.908365863 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.915173612 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.907439788 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.95919847 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.918958281 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.023176757 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.910756344 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.909546773 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.055887797 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.913195994 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.91633438 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.93440028 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.921750247 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.909610748 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.915266145 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.480313428 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.908739236 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.908672532 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.907655293 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.907603772 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.950038073 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.908742516 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.909743085 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.908108616 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.02185929 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.909625811 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.908795684 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.908279733 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.909252812 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.908791923 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.908256068 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.907590985 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.909197551 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.908834905 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.93188418 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.909500087 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.909525356 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.910207515 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.909567919 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.93476093 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.909178237 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.909409352 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.917136128 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.953150274 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.916813386 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.911335594 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.909476976 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.91000215 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.910931048 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.057864959 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.963767835 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.910064606 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.963445969 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.91099996 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.911070523 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.910484553 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.910408839 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.998791943 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.911388272 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.962808562 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.910437412 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.072185202 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.934172161 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.911737027 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.914785955 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.914592094 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.911458901 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.910983816 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.917843982 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.910101473 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.913053946 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.917970827 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.916356346 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.91003907 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.025614861 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.050827609 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.913113696 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.912189697 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.918652676 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.910452366 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.955112885 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.912229938 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.911792041 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.969292229 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.026732997 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.938783777 seconds)
  done (took 209.716561909 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.919757621 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.918298027 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.913161525 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.92801369 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.912412258 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.913549561 seconds)
  done (took 13.34305569 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.915070702 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.916013519 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.912328993 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.913076508 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.913945358 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.912966003 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.912908575 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.914455616 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.916680038 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.912657655 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.913241906 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.910899612 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.909309441 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.909464665 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.909559335 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.909087199 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.909224123 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.910056261 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.908614266 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.909706633 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.160353416 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.909188989 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.91044083 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.91459535 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.914249497 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.910728086 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.924978878 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.909123576 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.909910675 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.917884395 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.913909261 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.91097953 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.915924553 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.915362286 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.914345945 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.915181423 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.91375902 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.911563712 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.910697657 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.911540311 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.912682269 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.910629672 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.910671928 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.911838838 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.913494889 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.919110838 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.916131485 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.923474619 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.910533189 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.912308091 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.912564873 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.911212864 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.911357957 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.912697383 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.917899274 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.918928694 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.916884175 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.911114879 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.912337221 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.918067008 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.916096149 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.912676798 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.913683678 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.916336808 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.920025536 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.914242325 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.917200904 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.916001285 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.911981666 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.912248095 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.912868213 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.911951316 seconds)
  done (took 140.853597133 seconds)
done (took 568.847425945 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.921302264 seconds)
  done (took 8.759357203 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.951624519 seconds)
  done (took 8.831765288 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.173269702 seconds)
  done (took 10.014000976 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.942755111 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.930985689 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.92310805 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.914823086 seconds)
  done (took 29.565640942 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.230381092 seconds)
  done (took 9.069364836 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.936446378 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.911785858 seconds)
  done (took 15.756088121 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.952214053 seconds)
  done (took 8.797118314 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.182593349 seconds)
  done (took 9.027908161 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.928578638 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.935099497 seconds)
  done (took 15.721787058 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.912803307 seconds)
  done (took 8.751687874 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.056254077 seconds)
  done (took 10.006900743 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.936690903 seconds)
  done (took 8.842227107 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.956518057 seconds)
  done (took 8.795104448 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.792939226 seconds)
  done (took 9.631178937 seconds)
done (took 163.408913574 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.931139819 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.912406547 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.911790036 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.913087401 seconds)
  done (took 29.507254116 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.946672349 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.946607707 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.94691276 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.956360551 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.947895381 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.945651863 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.93867109 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.938030889 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.956522653 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.948150185 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.947549951 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.949784567 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.945041994 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.938927039 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.948131451 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.947463574 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.958091797 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.94816295 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.939055827 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.948368409 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.913945913 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.957554544 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.949059874 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.913785122 seconds)
  done (took 48.515764797 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.103467112 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.984844644 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.067811685 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.968203787 seconds)
  done (took 9.964313524 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.966086023 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.967493933 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.977978914 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.017879319 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.04072925 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.975876362 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.940604794 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.935244393 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.922128738 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.967688061 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.043623958 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.963293007 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.0579084 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.914990827 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.09844082 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.914894756 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.917728042 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.96731958 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.018421256 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.030328204 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.915933422 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.966443483 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.970204268 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.962464613 seconds)
  done (took 49.294785366 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.91612201 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.924547341 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.922755829 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.917142643 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.917679087 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.917914151 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.923777468 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.919411135 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.938843642 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.918716766 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.916701133 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.916809052 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.924377735 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.916709959 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.916716591 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.930645717 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.931138576 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.918804249 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.920176159 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.924200958 seconds)
  done (took 40.275710138 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.914692615 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.760766864 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.261106454 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.166578721 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.914578089 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.915728481 seconds)
  done (took 31.775639432 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.928305461 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.921649053 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.916418852 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.971105486 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.05446031 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.922881362 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.916801057 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.926301086 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.959396097 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.979603028 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.935049054 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.943667639 seconds)
  done (took 25.218769653 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.918441333 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.921123044 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.916685764 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.943948472 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.924772666 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.922642624 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.922375307 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.915452768 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.928445081 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.932242585 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.92110629 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.926909615 seconds)
  done (took 44.939565872 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.994556586 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.789315967 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.358896819 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.37713066 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.439312019 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.118328548 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.915249633 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.001178691 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.916600026 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.18747064 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.246062135 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.448069137 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.162969119 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.91900729 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.015309295 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.382321444 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.208871853 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.149622717 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.947285441 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.58978454 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.022614577 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.505305329 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.543044441 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.02527771 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.121507417 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.040900046 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.182017321 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.867187909 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.967933625 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.922573642 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.923920833 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.919264154 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.190757189 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.039612211 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.989177173 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924417375 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.33173587 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.623834096 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.926049952 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.545069186 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.406289932 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.036221456 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.923450194 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.919479396 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.845792147 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.512296153 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.006750043 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.922533781 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.620196939 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.921359818 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.924774717 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.9941467 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.923001344 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.728441165 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.60216615 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.188702711 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.921228545 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.923312462 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.482190882 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.929192947 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.610138455 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.849846217 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.006370578 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.552289685 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.369144585 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.074447993 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.923251477 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.923422731 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.848451613 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.546477634 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.032569129 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.058919757 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.939840517 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.561506598 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.214600809 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.33178584 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.973298829 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.211828974 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.651916034 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.98040497 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.138142888 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.8700335 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.849338215 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.753947815 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.849078563 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.13124154 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.956603308 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.521341407 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958528531 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.005106235 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.928091251 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.937365272 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.925003851 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.136770859 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.816880963 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.9252676 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.227879 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.175707807 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.940759339 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.008540741 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.849982167 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.924687713 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.170241338 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.125612694 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.108009577 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.515318375 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.010839201 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.79178902 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.050868683 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.785264266 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.043887978 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.199229011 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.982288097 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.920028557 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.037160678 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.876322035 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.171498121 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.839942267 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.136579127 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.293106463 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.161101134 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.271996073 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.172299881 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.986167206 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.93228522 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.924441151 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.609019696 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.531296569 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.142383945 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.936955575 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.343566209 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.044401974 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.925474968 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.860215775 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.810205564 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.281112996 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.999531887 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.139456928 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.808375745 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.314253386 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.851150983 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.062084497 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.924013369 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.139401206 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.55980687 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.004100384 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.176260665 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.107303245 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.226647829 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.049473416 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941286817 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.017767032 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94316855 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.301161598 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.284907204 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.927192442 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.928000136 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.607931972 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.975703252 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.934724891 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.930202106 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.478241466 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.193240064 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.945946712 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.933225747 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.800363509 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.938341667 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.988941223 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.930319134 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.929662588 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.481059418 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.434041986 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.934886239 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.617369854 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.144085215 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.93179009 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.535420822 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.096534802 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.940942736 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.189049275 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.99021433 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.855054801 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.628780293 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.629469475 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.928709326 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.854817686 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.928142475 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.932120415 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.93344442 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.116028809 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.20836891 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.975787063 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.589725768 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.028255032 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.933352704 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.931608954 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.929628655 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.422374057 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.927345516 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.480617039 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.049745926 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.058411985 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.939834646 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.85629658 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.930951633 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.933003773 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.929894055 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.88859454 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.976675416 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.594725259 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.128127366 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.178614476 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.333648064 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.93833093 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.596929443 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.043164718 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.94490572 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.22142476 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.508288812 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.036685472 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.000978896 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.935088804 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.595887324 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.658614462 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.493996721 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.236409996 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.235666697 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.272237312 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.364301044 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.258467525 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.015426675 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.156749349 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.451502935 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.986530155 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.019960922 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.869828995 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.946017976 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.566318682 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.337343912 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.940773073 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.150345249 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.215664137 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.273149454 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.059906864 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.13489846 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.961350706 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.803726145 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.964815947 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.465631572 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.94763876 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.302974855 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.12966281 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.013151268 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.22097655 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.003459216 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.931957251 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.264107302 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.97146464 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.636555872 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.284606367 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.380009467 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.394958076 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.15442528 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.939463587 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.369965345 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.277475938 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.166266858 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.059287953 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.859897232 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.938059525 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.939004461 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.944844949 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.905702729 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.79261591 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.182062355 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.938238203 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.159381756 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.104508869 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.315526843 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.832063427 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.936526262 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.933767171 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.176394611 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.667662534 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.096915978 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.302514204 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.518307912 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.940928826 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.862027369 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.863196908 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.638060158 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.942581464 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.901924938 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.142256847 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.03868194 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.61919908 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.373553932 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.253869847 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.181140717 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.949215276 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.200110354 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.207342999 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.427963118 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.957590984 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.034444231 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.22430155 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.634171083 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.152086981 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.163672514 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.468624613 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.155052614 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.384923545 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.909892188 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.937768161 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.143205182 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.152422374 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.290523727 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.105400499 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.648104415 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.95285397 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.302807927 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.99673915 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.292724977 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.118624769 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.022805401 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.945685835 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.01490891 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.940785639 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.943397251 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.943442216 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.948666564 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.294748661 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.04982004 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.950688146 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.013876113 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.938089995 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.506762144 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.947409279 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.201454989 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.278117147 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.266806716 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.997585794 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.939869995 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.942697663 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.866546438 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.068629332 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.378602418 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.210898968 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.056422532 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.073536751 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.960193589 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.232220459 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.246715625 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.254992467 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.212822942 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.82239085 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.690707071 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.067251864 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.156229058 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.94456662 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.14328212 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.153950003 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.238472058 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.507911368 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.137744566 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.138543076 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.212069361 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.308536666 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.941508476 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.517248163 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.948958322 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.341745468 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.973337742 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.292269042 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.190731722 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.94338072 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.061204069 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.944682075 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.145194582 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.391349917 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.62735397 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.281397449 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.803396464 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.944940739 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.206844443 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.26261548 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.242227538 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.017004721 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.947307224 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.63505449 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.076016591 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.835784966 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.175930969 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.944196019 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.146175086 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.651597084 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.946393335 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.22285848 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.243142656 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.942895751 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.858692862 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.973550881 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.946207094 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.156580868 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.155339565 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.186410997 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.947117663 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.948780452 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.750469156 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.222279699 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.0000939 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.870663454 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.945600533 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.988436175 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.171196667 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.962378416 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.458675445 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.643840512 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.220578148 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.847454386 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.960344455 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.394701697 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.332173214 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.274938504 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.466853165 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.167744623 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.495322965 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.844994004 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.326035951 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.946604716 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.400089085 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.330156963 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.947435919 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.500494252 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.062271938 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.206838782 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.26763294 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.964935735 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.682429251 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.969688289 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.159764793 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.301087813 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.877366318 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.949001128 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.991844361 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.945579371 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.929268963 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.95454353 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.891082292 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.430680923 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.795315859 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.503998485 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.948310781 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.981666269 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.282368357 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.521362297 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.059922787 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.963222007 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.949878339 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.639223657 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.23211158 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.189953991 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.505763501 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 7.045175401 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.948018516 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.946931703 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.865585937 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.130735561 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.134615289 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.224004689 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.352342296 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.062017117 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.948361728 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.153868489 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.150797223 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.304748677 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.070847024 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.127290091 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.067877532 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.886166667 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.652133148 seconds)
  done (took 1693.582686428 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.968084085 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.954165366 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.955404652 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.979914261 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.960726709 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.963095054 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.998484193 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.040855698 seconds)
  done (took 57.693083456 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.943069844 seconds)
    (2/17) benchmarking "4467"...
    done (took 6.946619207 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.949826916 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.946739084 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.948802442 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.945820088 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.105545767 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.956490382 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.947943763 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.949314888 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.943890894 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.943699534 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 3.047994699 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.965303091 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.943756012 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.945027751 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.948012181 seconds)
  done (took 81.253654314 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.947279351 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.123869588 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.987803254 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.944952687 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.640508859 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.944913496 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.879804774 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.9724336 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.952095092 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.41973233 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.242091418 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.988788122 seconds)
  done (took 90.911103043 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.955693519 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.946191115 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.94901173 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.948822321 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.948380796 seconds)
  done (took 11.623973666 seconds)
done (took 2216.479552672 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.177052426 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.004594506 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.046276621 seconds)
  done (took 5.918088259 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.094121812 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.139929769 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.250006331 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.259219636 seconds)
  done (took 10.620135329 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.266633719 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.324400436 seconds)
  done (took 6.45927371 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.268620729 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.970201846 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.359683497 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.948845751 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.951377887 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.953846995 seconds)
  done (took 22.728152162 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.947211075 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.948844628 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.947925961 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.947539554 seconds)
  done (took 9.659083449 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.942777792 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.672639855 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.943540542 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.955917581 seconds)
  done (took 21.382773508 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.096247363 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.088211539 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.090878739 seconds)
  done (took 8.142838699 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.090161027 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.795607158 seconds)
  done (took 6.756650241 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.084188898 seconds)
  done (took 3.952818677 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.975453506 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.215421156 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.447753507 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.952908024 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.573237293 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.204073242 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.289222852 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.178973891 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.390344594 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.43880614 seconds)
  done (took 26.535135089 seconds)
done (took 137.798136996 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.502971765 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.979889642 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.150748559 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.706217658 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.181323858 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.152799254 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.172903758 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.704906282 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.489020884 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.479639328 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.828549292 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.181018261 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.1199655 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.971102588 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.127984552 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.953872203 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.178126191 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.329212476 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.27331451 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.028726448 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.178771955 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.948960474 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.647085798 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.965618009 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.182900354 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.103904399 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.491153748 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.957490478 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.411076876 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.505440926 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.105243733 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.161280333 seconds)
  done (took 186.041100827 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.951199386 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.95047967 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.953324221 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.947937048 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.471141127 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.950765215 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.950801111 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.950351255 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.887146434 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.885737624 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.950944737 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.4666424 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.953706176 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.950534777 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.953570749 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.951220978 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.05479961 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.95237077 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.95117716 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.952895204 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.954197552 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.309774812 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.951875011 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.319412923 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.058627259 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.953249946 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.950133036 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.95278859 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.952092048 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.953253005 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.95522061 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.952021659 seconds)
  done (took 214.171974846 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.9512385 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.952808206 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.95331693 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.952196488 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.952778182 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.953233738 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.952049374 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.948949944 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.950332656 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.950342036 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.950221693 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.950349971 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.947397418 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.949614392 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.947540814 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.950333047 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.948738148 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.923232543 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.949999648 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.94797061 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.950905046 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.559449139 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.949534789 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.566886926 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.95128879 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.953697496 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.951688929 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.950266576 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.948613854 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.950581106 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.950119876 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.949859437 seconds)
  done (took 223.493490393 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.192239468 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.9516561 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.432219529 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 3.350085747 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.429836499 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.950085682 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.938026649 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.677271707 seconds)
  done (took 21.794848438 seconds)
done (took 647.38167066 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.342790999 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.186673674 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.131611884 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.976997667 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.249283386 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.021357596 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.972383673 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.042443292 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.85656892 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.049463811 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.608188046 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.000558387 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.7092125 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.005058546 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.096635973 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.029121481 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.517976407 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.617581761 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.111393906 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.042406587 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.15779339 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.923303297 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.054962389 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.874173111 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.63136715 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.972184661 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.035669016 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.526733176 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.984271243 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.131701214 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.679400177 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.26558763 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.98737198 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.971609858 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.024599191 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.00509328 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.198442279 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.986293904 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.099267531 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.716641341 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.061987892 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.746166162 seconds)
  done (took 106.475062573 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.963360931 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.959410589 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.958548321 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.960631009 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.967867836 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.959969535 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.959671657 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.959258197 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.960914962 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.959528336 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.961099282 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.968503832 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.958796979 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.968675744 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.958692663 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.958608694 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.961501461 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.968425948 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.959762717 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.95857384 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.960935514 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.959438749 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.957156954 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.960356429 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.961408267 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.960291348 seconds)
  done (took 52.883704081 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.954882214 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.112362404 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.203630533 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.975767695 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.956866456 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.959288432 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.975101137 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.963619582 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.958936127 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.958497156 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.060027867 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.965864668 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.975852033 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.199799695 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.972871189 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.955981416 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.957150322 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.956427964 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.120370808 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.976041146 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.977266017 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.962162018 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.976791154 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.974295057 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.959070309 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.956207076 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.960061812 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.407041273 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.968037467 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.060163484 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.02172452 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.984001111 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.351236814 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.207181659 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.013309327 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.970420063 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.958530049 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.063079678 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.96366809 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.958166599 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.977152743 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.963910059 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.197917819 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.485344557 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.973156493 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.958313256 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.414877766 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.07211943 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.998927728 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.967559739 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.202014194 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.975317115 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.95984437 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.959611278 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.994530789 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.963074263 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.958460079 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.282124527 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.969988441 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.977407946 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.962963956 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.960001657 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.125442065 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.967777135 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.114124647 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.96768115 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.964642275 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.95962755 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.201297568 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.975239444 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.493075298 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.972608159 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.958226725 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.059417127 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.119082 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.440340303 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.973555843 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.126737497 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.376012122 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.985963749 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.968361738 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.396180336 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.989487525 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.965731265 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.957984779 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.958663323 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.955705581 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.001287739 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.978085749 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.414855721 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.494543349 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.297435272 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.989899938 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.976471978 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.959409502 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.277401824 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.967491284 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.957941466 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.192619341 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.498091708 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.97172154 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.962926948 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.472127363 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.970403819 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.97456621 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.963919781 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.205068565 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.97007773 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.997713197 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.953275506 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.961151833 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.957727403 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.974648673 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.962079822 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.956523351 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.467810783 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.076970628 seconds)
  done (took 242.683805205 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.956873176 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.954851771 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.954791861 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.953948796 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.952136623 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.955218731 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.954195917 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.954380802 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.953667818 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.952392607 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.951324481 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.954433297 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.953701347 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.960804851 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.964258704 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.956853679 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.559373634 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.957604669 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.956443281 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.95307513 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.601264879 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.958089789 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.953406175 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.95241883 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.953933955 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.953030163 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.960613774 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.958574684 seconds)
  done (took 169.881532419 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.953539995 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.066379395 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.974288642 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.983643845 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.960131077 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.956031294 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.051726682 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.972987858 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.960817677 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.954812789 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.955439111 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.01499873 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.965054125 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.058895731 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.983161206 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.059940329 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.05777092 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.960115326 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.954450398 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.952781059 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.982150095 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.962049776 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.015056908 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.076614531 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.974673582 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.066849537 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.973295216 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.955332429 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.955323573 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.065876649 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.973312017 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.015676496 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.982048944 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.973042059 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.071828416 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.072028354 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.059591342 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.060587221 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.962679962 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.955935848 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.954865596 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.955655692 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.068556932 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.974455441 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.956102323 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.072126877 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.975460011 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.956635155 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.956157852 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.957454222 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.968785781 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.973203072 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.018078864 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.728408686 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.989609945 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.976154292 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.051748916 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.076310927 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.9556013 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.051107931 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.959431601 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.06723043 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.976364079 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.955178198 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.955241958 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.958452051 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.983841105 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.05962137 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.058555695 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.961319366 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.051789565 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.988588129 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.961336173 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.956417955 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.955439258 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.068884333 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.072865192 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.98944351 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.990657502 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.983700109 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.962195741 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.955338357 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.956214234 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.972965171 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.960742806 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.068388115 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.073587887 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.960471651 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.957153315 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.952086093 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.952892003 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.975565655 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.070788488 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.988568295 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.056557939 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.017115082 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.025308792 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.96517634 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.965271517 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.954472213 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.625515712 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.965761662 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.962470047 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.246804529 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.009999714 seconds)
  done (took 213.000248083 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.321652201 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.000662455 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.007376853 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.270548151 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.310314875 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 6.973950997 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.975985854 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.997935154 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.036080805 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.180335527 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.088702098 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.017872147 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.984675915 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.972910452 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.996169132 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.017670794 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.008527192 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.333495356 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.212297973 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 6.959960446 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.957613573 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.27551307 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.320410946 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.561369045 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.04677786 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.418482072 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.601496974 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.1240361 seconds)
  done (took 71.851315949 seconds)
done (took 858.649040028 seconds)
SAVING RESULT...
DONE!
